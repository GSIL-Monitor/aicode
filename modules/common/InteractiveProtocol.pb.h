// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InteractiveProtocol.proto

#ifndef PROTOBUF_InteractiveProtocol_2eproto__INCLUDED
#define PROTOBUF_InteractiveProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Interactive {
namespace Message {
class AddDevReq_USR;
class AddDevReq_USRDefaultTypeInternal;
extern AddDevReq_USRDefaultTypeInternal _AddDevReq_USR_default_instance_;
class AddDevRsp_USR;
class AddDevRsp_USRDefaultTypeInternal;
extern AddDevRsp_USRDefaultTypeInternal _AddDevRsp_USR_default_instance_;
class AddFileReq_DEV;
class AddFileReq_DEVDefaultTypeInternal;
extern AddFileReq_DEVDefaultTypeInternal _AddFileReq_DEV_default_instance_;
class AddFileRsp_DEV;
class AddFileRsp_DEVDefaultTypeInternal;
extern AddFileRsp_DEVDefaultTypeInternal _AddFileRsp_DEV_default_instance_;
class AddFriendsReq_USR;
class AddFriendsReq_USRDefaultTypeInternal;
extern AddFriendsReq_USRDefaultTypeInternal _AddFriendsReq_USR_default_instance_;
class AddFriendsRsp_USR;
class AddFriendsRsp_USRDefaultTypeInternal;
extern AddFriendsRsp_USRDefaultTypeInternal _AddFriendsRsp_USR_default_instance_;
class BroadcastOnlineDevInfo_INNER;
class BroadcastOnlineDevInfo_INNERDefaultTypeInternal;
extern BroadcastOnlineDevInfo_INNERDefaultTypeInternal _BroadcastOnlineDevInfo_INNER_default_instance_;
class BroadcastOnlineUserInfo_INNER;
class BroadcastOnlineUserInfo_INNERDefaultTypeInternal;
extern BroadcastOnlineUserInfo_INNERDefaultTypeInternal _BroadcastOnlineUserInfo_INNER_default_instance_;
class CancelSharedDevReq_USR;
class CancelSharedDevReq_USRDefaultTypeInternal;
extern CancelSharedDevReq_USRDefaultTypeInternal _CancelSharedDevReq_USR_default_instance_;
class CancelSharedDevRsp_USR;
class CancelSharedDevRsp_USRDefaultTypeInternal;
extern CancelSharedDevRsp_USRDefaultTypeInternal _CancelSharedDevRsp_USR_default_instance_;
class ConfigInfoReq_DEV;
class ConfigInfoReq_DEVDefaultTypeInternal;
extern ConfigInfoReq_DEVDefaultTypeInternal _ConfigInfoReq_DEV_default_instance_;
class ConfigInfoReq_USR;
class ConfigInfoReq_USRDefaultTypeInternal;
extern ConfigInfoReq_USRDefaultTypeInternal _ConfigInfoReq_USR_default_instance_;
class ConfigInfoRsp_DEV;
class ConfigInfoRsp_DEVDefaultTypeInternal;
extern ConfigInfoRsp_DEVDefaultTypeInternal _ConfigInfoRsp_DEV_default_instance_;
class ConfigInfoRsp_USR;
class ConfigInfoRsp_USRDefaultTypeInternal;
extern ConfigInfoRsp_USRDefaultTypeInternal _ConfigInfoRsp_USR_default_instance_;
class DelDevReq_USR;
class DelDevReq_USRDefaultTypeInternal;
extern DelDevReq_USRDefaultTypeInternal _DelDevReq_USR_default_instance_;
class DelDevRsp_USR;
class DelDevRsp_USRDefaultTypeInternal;
extern DelDevRsp_USRDefaultTypeInternal _DelDevRsp_USR_default_instance_;
class DelFriendsReq_USR;
class DelFriendsReq_USRDefaultTypeInternal;
extern DelFriendsReq_USRDefaultTypeInternal _DelFriendsReq_USR_default_instance_;
class DelFriendsRsp_USR;
class DelFriendsRsp_USRDefaultTypeInternal;
extern DelFriendsRsp_USRDefaultTypeInternal _DelFriendsRsp_USR_default_instance_;
class DeleteFileReq_USR;
class DeleteFileReq_USRDefaultTypeInternal;
extern DeleteFileReq_USRDefaultTypeInternal _DeleteFileReq_USR_default_instance_;
class DeleteFileRsp_USR;
class DeleteFileRsp_USRDefaultTypeInternal;
extern DeleteFileRsp_USRDefaultTypeInternal _DeleteFileRsp_USR_default_instance_;
class Device;
class DeviceDefaultTypeInternal;
extern DeviceDefaultTypeInternal _Device_default_instance_;
class DownloadFileReq_USR;
class DownloadFileReq_USRDefaultTypeInternal;
extern DownloadFileReq_USRDefaultTypeInternal _DownloadFileReq_USR_default_instance_;
class DownloadFileRsp_USR;
class DownloadFileRsp_USRDefaultTypeInternal;
extern DownloadFileRsp_USRDefaultTypeInternal _DownloadFileRsp_USR_default_instance_;
class File;
class FileDefaultTypeInternal;
extern FileDefaultTypeInternal _File_default_instance_;
class FileUrl;
class FileUrlDefaultTypeInternal;
extern FileUrlDefaultTypeInternal _FileUrl_default_instance_;
class GetAccessAddressReq_DEV;
class GetAccessAddressReq_DEVDefaultTypeInternal;
extern GetAccessAddressReq_DEVDefaultTypeInternal _GetAccessAddressReq_DEV_default_instance_;
class GetAccessAddressReq_USR;
class GetAccessAddressReq_USRDefaultTypeInternal;
extern GetAccessAddressReq_USRDefaultTypeInternal _GetAccessAddressReq_USR_default_instance_;
class GetAccessAddressRsp_DEV;
class GetAccessAddressRsp_DEVDefaultTypeInternal;
extern GetAccessAddressRsp_DEVDefaultTypeInternal _GetAccessAddressRsp_DEV_default_instance_;
class GetAccessAddressRsp_USR;
class GetAccessAddressRsp_USRDefaultTypeInternal;
extern GetAccessAddressRsp_USRDefaultTypeInternal _GetAccessAddressRsp_USR_default_instance_;
class GetOnlineDevInfoReq_INNER;
class GetOnlineDevInfoReq_INNERDefaultTypeInternal;
extern GetOnlineDevInfoReq_INNERDefaultTypeInternal _GetOnlineDevInfoReq_INNER_default_instance_;
class GetOnlineDevInfoRsp_INNER;
class GetOnlineDevInfoRsp_INNERDefaultTypeInternal;
extern GetOnlineDevInfoRsp_INNERDefaultTypeInternal _GetOnlineDevInfoRsp_INNER_default_instance_;
class GetOnlineUserInfoReq_INNER;
class GetOnlineUserInfoReq_INNERDefaultTypeInternal;
extern GetOnlineUserInfoReq_INNERDefaultTypeInternal _GetOnlineUserInfoReq_INNER_default_instance_;
class GetOnlineUserInfoRsp_INNER;
class GetOnlineUserInfoRsp_INNERDefaultTypeInternal;
extern GetOnlineUserInfoRsp_INNERDefaultTypeInternal _GetOnlineUserInfoRsp_INNER_default_instance_;
class InteractiveMessage;
class InteractiveMessageDefaultTypeInternal;
extern InteractiveMessageDefaultTypeInternal _InteractiveMessage_default_instance_;
class LoginReq_DEV;
class LoginReq_DEVDefaultTypeInternal;
extern LoginReq_DEVDefaultTypeInternal _LoginReq_DEV_default_instance_;
class LoginReq_USR;
class LoginReq_USRDefaultTypeInternal;
extern LoginReq_USRDefaultTypeInternal _LoginReq_USR_default_instance_;
class LoginRsp_DEV;
class LoginRsp_DEVDefaultTypeInternal;
extern LoginRsp_DEVDefaultTypeInternal _LoginRsp_DEV_default_instance_;
class LoginRsp_USR;
class LoginRsp_USRDefaultTypeInternal;
extern LoginRsp_USRDefaultTypeInternal _LoginRsp_USR_default_instance_;
class LogoutReq_DEV;
class LogoutReq_DEVDefaultTypeInternal;
extern LogoutReq_DEVDefaultTypeInternal _LogoutReq_DEV_default_instance_;
class LogoutReq_USR;
class LogoutReq_USRDefaultTypeInternal;
extern LogoutReq_USRDefaultTypeInternal _LogoutReq_USR_default_instance_;
class LogoutRsp_DEV;
class LogoutRsp_DEVDefaultTypeInternal;
extern LogoutRsp_DEVDefaultTypeInternal _LogoutRsp_DEV_default_instance_;
class LogoutRsp_USR;
class LogoutRsp_USRDefaultTypeInternal;
extern LogoutRsp_USRDefaultTypeInternal _LogoutRsp_USR_default_instance_;
class ModifyDevReq_USR;
class ModifyDevReq_USRDefaultTypeInternal;
extern ModifyDevReq_USRDefaultTypeInternal _ModifyDevReq_USR_default_instance_;
class ModifyDevRsp_USR;
class ModifyDevRsp_USRDefaultTypeInternal;
extern ModifyDevRsp_USRDefaultTypeInternal _ModifyDevRsp_USR_default_instance_;
class ModifyUserInfoReq_USR;
class ModifyUserInfoReq_USRDefaultTypeInternal;
extern ModifyUserInfoReq_USRDefaultTypeInternal _ModifyUserInfoReq_USR_default_instance_;
class ModifyUserInfoRsp_USR;
class ModifyUserInfoRsp_USRDefaultTypeInternal;
extern ModifyUserInfoRsp_USRDefaultTypeInternal _ModifyUserInfoRsp_USR_default_instance_;
class MsgPreHandlerReq_USR;
class MsgPreHandlerReq_USRDefaultTypeInternal;
extern MsgPreHandlerReq_USRDefaultTypeInternal _MsgPreHandlerReq_USR_default_instance_;
class MsgPreHandlerRsp_USR;
class MsgPreHandlerRsp_USRDefaultTypeInternal;
extern MsgPreHandlerRsp_USRDefaultTypeInternal _MsgPreHandlerRsp_USR_default_instance_;
class P2pInfoReq_DEV;
class P2pInfoReq_DEVDefaultTypeInternal;
extern P2pInfoReq_DEVDefaultTypeInternal _P2pInfoReq_DEV_default_instance_;
class P2pInfoReq_USR;
class P2pInfoReq_USRDefaultTypeInternal;
extern P2pInfoReq_USRDefaultTypeInternal _P2pInfoReq_USR_default_instance_;
class P2pInfoRsp_DEV;
class P2pInfoRsp_DEVDefaultTypeInternal;
extern P2pInfoRsp_DEVDefaultTypeInternal _P2pInfoRsp_DEV_default_instance_;
class P2pInfoRsp_USR;
class P2pInfoRsp_USRDefaultTypeInternal;
extern P2pInfoRsp_USRDefaultTypeInternal _P2pInfoRsp_USR_default_instance_;
class PermissionOfUser;
class PermissionOfUserDefaultTypeInternal;
extern PermissionOfUserDefaultTypeInternal _PermissionOfUser_default_instance_;
class QueryDevInfoReq_USR;
class QueryDevInfoReq_USRDefaultTypeInternal;
extern QueryDevInfoReq_USRDefaultTypeInternal _QueryDevInfoReq_USR_default_instance_;
class QueryDevInfoRsp_USR;
class QueryDevInfoRsp_USRDefaultTypeInternal;
extern QueryDevInfoRsp_USRDefaultTypeInternal _QueryDevInfoRsp_USR_default_instance_;
class QueryDevReq_USR;
class QueryDevReq_USRDefaultTypeInternal;
extern QueryDevReq_USRDefaultTypeInternal _QueryDevReq_USR_default_instance_;
class QueryDevRsp_USR;
class QueryDevRsp_USRDefaultTypeInternal;
extern QueryDevRsp_USRDefaultTypeInternal _QueryDevRsp_USR_default_instance_;
class QueryFileReq_USR;
class QueryFileReq_USRDefaultTypeInternal;
extern QueryFileReq_USRDefaultTypeInternal _QueryFileReq_USR_default_instance_;
class QueryFileRsp_USR;
class QueryFileRsp_USRDefaultTypeInternal;
extern QueryFileRsp_USRDefaultTypeInternal _QueryFileRsp_USR_default_instance_;
class QueryFriendsReq_USR;
class QueryFriendsReq_USRDefaultTypeInternal;
extern QueryFriendsReq_USRDefaultTypeInternal _QueryFriendsReq_USR_default_instance_;
class QueryFriendsRsp_USR;
class QueryFriendsRsp_USRDefaultTypeInternal;
extern QueryFriendsRsp_USRDefaultTypeInternal _QueryFriendsRsp_USR_default_instance_;
class QueryUserReq_USR;
class QueryUserReq_USRDefaultTypeInternal;
extern QueryUserReq_USRDefaultTypeInternal _QueryUserReq_USR_default_instance_;
class QueryUserRsp_USR;
class QueryUserRsp_USRDefaultTypeInternal;
extern QueryUserRsp_USRDefaultTypeInternal _QueryUserRsp_USR_default_instance_;
class QueryUsrInfoReq_USR;
class QueryUsrInfoReq_USRDefaultTypeInternal;
extern QueryUsrInfoReq_USRDefaultTypeInternal _QueryUsrInfoReq_USR_default_instance_;
class QueryUsrInfoRsp_USR;
class QueryUsrInfoRsp_USRDefaultTypeInternal;
extern QueryUsrInfoRsp_USRDefaultTypeInternal _QueryUsrInfoRsp_USR_default_instance_;
class RegisterUserReq_USR;
class RegisterUserReq_USRDefaultTypeInternal;
extern RegisterUserReq_USRDefaultTypeInternal _RegisterUserReq_USR_default_instance_;
class RegisterUserRsp_USR;
class RegisterUserRsp_USRDefaultTypeInternal;
extern RegisterUserRsp_USRDefaultTypeInternal _RegisterUserRsp_USR_default_instance_;
class Relation;
class RelationDefaultTypeInternal;
extern RelationDefaultTypeInternal _Relation_default_instance_;
class Req;
class ReqDefaultTypeInternal;
extern ReqDefaultTypeInternal _Req_default_instance_;
class Rsp;
class RspDefaultTypeInternal;
extern RspDefaultTypeInternal _Rsp_default_instance_;
class ShakehandReq_DEV;
class ShakehandReq_DEVDefaultTypeInternal;
extern ShakehandReq_DEVDefaultTypeInternal _ShakehandReq_DEV_default_instance_;
class ShakehandReq_USR;
class ShakehandReq_USRDefaultTypeInternal;
extern ShakehandReq_USRDefaultTypeInternal _ShakehandReq_USR_default_instance_;
class ShakehandRsp_DEV;
class ShakehandRsp_DEVDefaultTypeInternal;
extern ShakehandRsp_DEVDefaultTypeInternal _ShakehandRsp_DEV_default_instance_;
class ShakehandRsp_USR;
class ShakehandRsp_USRDefaultTypeInternal;
extern ShakehandRsp_USRDefaultTypeInternal _ShakehandRsp_USR_default_instance_;
class SharingDevReq_USR;
class SharingDevReq_USRDefaultTypeInternal;
extern SharingDevReq_USRDefaultTypeInternal _SharingDevReq_USR_default_instance_;
class SharingDevRsp_USR;
class SharingDevRsp_USRDefaultTypeInternal;
extern SharingDevRsp_USRDefaultTypeInternal _SharingDevRsp_USR_default_instance_;
class StorageAddressReq_DEV;
class StorageAddressReq_DEVDefaultTypeInternal;
extern StorageAddressReq_DEVDefaultTypeInternal _StorageAddressReq_DEV_default_instance_;
class StorageAddressReq_USR;
class StorageAddressReq_USRDefaultTypeInternal;
extern StorageAddressReq_USRDefaultTypeInternal _StorageAddressReq_USR_default_instance_;
class StorageAddressRsp_DEV;
class StorageAddressRsp_DEVDefaultTypeInternal;
extern StorageAddressRsp_DEVDefaultTypeInternal _StorageAddressRsp_DEV_default_instance_;
class StorageAddressRsp_USR;
class StorageAddressRsp_USRDefaultTypeInternal;
extern StorageAddressRsp_USRDefaultTypeInternal _StorageAddressRsp_USR_default_instance_;
class UnRegisterUserReq_USR;
class UnRegisterUserReq_USRDefaultTypeInternal;
extern UnRegisterUserReq_USRDefaultTypeInternal _UnRegisterUserReq_USR_default_instance_;
class UnRegisterUserRsp_USR;
class UnRegisterUserRsp_USRDefaultTypeInternal;
extern UnRegisterUserRsp_USRDefaultTypeInternal _UnRegisterUserRsp_USR_default_instance_;
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
}  // namespace Message
}  // namespace Interactive

namespace Interactive {
namespace Message {

namespace protobuf_InteractiveProtocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_InteractiveProtocol_2eproto

enum MsgType {
  Init_T = 0,
  GetAccessAddressReq_DEV_T = 10000,
  GetAccessAddressRsp_DEV_T = 10010,
  LoginReq_DEV_T = 10020,
  LoginRsp_DEV_T = 10030,
  LogoutReq_DEV_T = 10040,
  LogoutRsp_DEV_T = 10050,
  ShakehandReq_DEV_T = 10060,
  ShakehandRsp_DEV_T = 10070,
  ConfigInfoReq_DEV_T = 10080,
  ConfigInfoRsp_DEV_T = 10090,
  StorageAddressReq_DEV_T = 10100,
  StorageAddressRsp_DEV_T = 10110,
  P2pInfoReq_DEV_T = 10220,
  P2pInfoRsp_DEV_T = 10230,
  AddFileReq_DEV_T = 10300,
  AddFileRsp_DEV_T = 10310,
  MsgPreHandlerReq_USR_T = 19990,
  MsgPreHandlerRsp_USR_T = 19991,
  GetAccessAddressReq_USR_T = 20000,
  GetAccessAddressRsp_USR_T = 20010,
  RegisterUserReq_USR_T = 20020,
  RegisterUserRsp_USR_T = 20030,
  UnRegisterUserReq_USR_T = 20040,
  UnRegisterUserRsp_USR_T = 20050,
  QueryUsrInfoReq_USR_T = 20051,
  QueryUsrInfoRsp_USR_T = 20052,
  ModifyUserInfoReq_USR_T = 20055,
  ModifyUserInfoRsp_USR_T = 20056,
  LoginReq_USR_T = 20060,
  LoginRsp_USR_T = 20070,
  LogoutReq_USR_T = 20080,
  LogoutRsp_USR_T = 20090,
  ShakehandReq_USR_T = 20100,
  ShakehandRsp_USR_T = 20110,
  ConfigInfoReq_USR_T = 20120,
  ConfigInfoRsp_USR_T = 20130,
  AddDevReq_USR_T = 20140,
  AddDevRsp_USR_T = 20150,
  DelDevReq_USR_T = 20160,
  DelDevRsp_USR_T = 20170,
  ModifyDevReq_USR_T = 20180,
  ModifyDevRsp_USR_T = 20190,
  QueryDevInfoReq_USR_T = 20191,
  QueryDevInfoRsp_USR_T = 20192,
  QueryDevReq_USR_T = 20200,
  QueryDevRsp_USR_T = 20210,
  QueryUserReq_USR_T = 20211,
  QueryUserRsp_USR_T = 20212,
  SharingDevReq_USR_T = 20220,
  SharingDevRsp_USR_T = 20230,
  CancelSharedDevReq_USR_T = 20240,
  CancelSharedDevRsp_USR_T = 20250,
  AddFriendsReq_USR_T = 20260,
  AddFriendsRsp_USR_T = 20270,
  DelFriendsReq_USR_T = 20280,
  DelFriendsRsp_USR_T = 20290,
  ModifyFriendsReq_USR_T = 20300,
  ModifyFriendsRsp_USR_T = 20310,
  QueryFriendsReq_USR_T = 20320,
  QueryFriendsRsp_USR_T = 20330,
  StorageAddressReq_USR_T = 20340,
  StorageAddressRsp_USR_T = 20350,
  P2pInfoReq_USR_T = 20360,
  P2pInfoRsp_USR_T = 20370,
  DeleteFileReq_USR_T = 20500,
  DeleteFileRsp_USR_T = 20510,
  DownloadFileReq_USR_T = 20520,
  DownloadFileRsp_USR_T = 20530,
  QueryFileReq_USR_T = 20540,
  QueryFileRsp_USR_T = 20550,
  GetOnlineDevInfoReq_INNER_T = 30000,
  GetOnlineDevInfoRsp_INNER_T = 30010,
  BroadcastOnlineDevInfo_INNER_T = 30020,
  GetOnlineUserInfoReq_INNER_T = 30030,
  GetOnlineUserInfoRsp_INNER_T = 30040,
  BroadcastOnlineUserInfo_INNER_T = 30050,
  MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = Init_T;
const MsgType MsgType_MAX = BroadcastOnlineUserInfo_INNER_T;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class PermissionOfUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.PermissionOfUser) */ {
 public:
  PermissionOfUser();
  virtual ~PermissionOfUser();

  PermissionOfUser(const PermissionOfUser& from);

  inline PermissionOfUser& operator=(const PermissionOfUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PermissionOfUser& default_instance();

  static inline const PermissionOfUser* internal_default_instance() {
    return reinterpret_cast<const PermissionOfUser*>(
               &_PermissionOfUser_default_instance_);
  }

  void Swap(PermissionOfUser* other);

  // implements Message ----------------------------------------------

  inline PermissionOfUser* New() const PROTOBUF_FINAL { return New(NULL); }

  PermissionOfUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PermissionOfUser& from);
  void MergeFrom(const PermissionOfUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PermissionOfUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uiUnlimited = 1;
  void clear_uiunlimited();
  static const int kUiUnlimitedFieldNumber = 1;
  ::google::protobuf::uint32 uiunlimited() const;
  void set_uiunlimited(::google::protobuf::uint32 value);

  // uint32 uiWatch = 2;
  void clear_uiwatch();
  static const int kUiWatchFieldNumber = 2;
  ::google::protobuf::uint32 uiwatch() const;
  void set_uiwatch(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.PermissionOfUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uiunlimited_;
  ::google::protobuf::uint32 uiwatch_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.Device) */ {
 public:
  Device();
  virtual ~Device();

  Device(const Device& from);

  inline Device& operator=(const Device& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Device& default_instance();

  static inline const Device* internal_default_instance() {
    return reinterpret_cast<const Device*>(
               &_Device_default_instance_);
  }

  void Swap(Device* other);

  // implements Message ----------------------------------------------

  inline Device* New() const PROTOBUF_FINAL { return New(NULL); }

  Device* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Device& from);
  void MergeFrom(const Device& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strDevName = 2;
  void clear_strdevname();
  static const int kStrDevNameFieldNumber = 2;
  const ::std::string& strdevname() const;
  void set_strdevname(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevname(::std::string&& value);
  #endif
  void set_strdevname(const char* value);
  void set_strdevname(const char* value, size_t size);
  ::std::string* mutable_strdevname();
  ::std::string* release_strdevname();
  void set_allocated_strdevname(::std::string* strdevname);

  // string strDevPassword = 3;
  void clear_strdevpassword();
  static const int kStrDevPasswordFieldNumber = 3;
  const ::std::string& strdevpassword() const;
  void set_strdevpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevpassword(::std::string&& value);
  #endif
  void set_strdevpassword(const char* value);
  void set_strdevpassword(const char* value, size_t size);
  ::std::string* mutable_strdevpassword();
  ::std::string* release_strdevpassword();
  void set_allocated_strdevpassword(::std::string* strdevpassword);

  // string strCreatedate = 5;
  void clear_strcreatedate();
  static const int kStrCreatedateFieldNumber = 5;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 7;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 7;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // string strInnerinfo = 8;
  void clear_strinnerinfo();
  static const int kStrInnerinfoFieldNumber = 8;
  const ::std::string& strinnerinfo() const;
  void set_strinnerinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_strinnerinfo(::std::string&& value);
  #endif
  void set_strinnerinfo(const char* value);
  void set_strinnerinfo(const char* value, size_t size);
  ::std::string* mutable_strinnerinfo();
  ::std::string* release_strinnerinfo();
  void set_allocated_strinnerinfo(::std::string* strinnerinfo);

  // uint32 uiTypeInfo = 4;
  void clear_uitypeinfo();
  static const int kUiTypeInfoFieldNumber = 4;
  ::google::protobuf::uint32 uitypeinfo() const;
  void set_uitypeinfo(::google::protobuf::uint32 value);

  // uint32 uiStatus = 6;
  void clear_uistatus();
  static const int kUiStatusFieldNumber = 6;
  ::google::protobuf::uint32 uistatus() const;
  void set_uistatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.Device)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strdevname_;
  ::google::protobuf::internal::ArenaStringPtr strdevpassword_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::internal::ArenaStringPtr strinnerinfo_;
  ::google::protobuf::uint32 uitypeinfo_;
  ::google::protobuf::uint32 uistatus_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const PROTOBUF_FINAL { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strUserName = 2;
  void clear_strusername();
  static const int kStrUserNameFieldNumber = 2;
  const ::std::string& strusername() const;
  void set_strusername(const ::std::string& value);
  #if LANG_CXX11
  void set_strusername(::std::string&& value);
  #endif
  void set_strusername(const char* value);
  void set_strusername(const char* value, size_t size);
  ::std::string* mutable_strusername();
  ::std::string* release_strusername();
  void set_allocated_strusername(::std::string* strusername);

  // string strUserPassword = 3;
  void clear_struserpassword();
  static const int kStrUserPasswordFieldNumber = 3;
  const ::std::string& struserpassword() const;
  void set_struserpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_struserpassword(::std::string&& value);
  #endif
  void set_struserpassword(const char* value);
  void set_struserpassword(const char* value, size_t size);
  ::std::string* mutable_struserpassword();
  ::std::string* release_struserpassword();
  void set_allocated_struserpassword(::std::string* struserpassword);

  // string strCreatedate = 5;
  void clear_strcreatedate();
  static const int kStrCreatedateFieldNumber = 5;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 7;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 7;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // uint32 uiTypeInfo = 4;
  void clear_uitypeinfo();
  static const int kUiTypeInfoFieldNumber = 4;
  ::google::protobuf::uint32 uitypeinfo() const;
  void set_uitypeinfo(::google::protobuf::uint32 value);

  // uint32 uiStatus = 6;
  void clear_uistatus();
  static const int kUiStatusFieldNumber = 6;
  ::google::protobuf::uint32 uistatus() const;
  void set_uistatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strusername_;
  ::google::protobuf::internal::ArenaStringPtr struserpassword_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::uint32 uitypeinfo_;
  ::google::protobuf::uint32 uistatus_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Relation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.Relation) */ {
 public:
  Relation();
  virtual ~Relation();

  Relation(const Relation& from);

  inline Relation& operator=(const Relation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Relation& default_instance();

  static inline const Relation* internal_default_instance() {
    return reinterpret_cast<const Relation*>(
               &_Relation_default_instance_);
  }

  void Swap(Relation* other);

  // implements Message ----------------------------------------------

  inline Relation* New() const PROTOBUF_FINAL { return New(NULL); }

  Relation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Relation& from);
  void MergeFrom(const Relation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Relation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDevID = 2;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 2;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strBeginDate = 4;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 4;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 5;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 5;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // string strValue = 6;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 6;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiRelation = 3;
  void clear_uirelation();
  static const int kUiRelationFieldNumber = 3;
  ::google::protobuf::uint32 uirelation() const;
  void set_uirelation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.Relation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uirelation_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class File : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.File) */ {
 public:
  File();
  virtual ~File();

  File(const File& from);

  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File& default_instance();

  static inline const File* internal_default_instance() {
    return reinterpret_cast<const File*>(
               &_File_default_instance_);
  }

  void Swap(File* other);

  // implements Message ----------------------------------------------

  inline File* New() const PROTOBUF_FINAL { return New(NULL); }

  File* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File& from);
  void MergeFrom(const File& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strFileID = 1;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 1;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfileid(::std::string&& value);
  #endif
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // string strUserID = 2;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 2;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDevID = 3;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 3;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strRemoteFileID = 4;
  void clear_strremotefileid();
  static const int kStrRemoteFileIDFieldNumber = 4;
  const ::std::string& strremotefileid() const;
  void set_strremotefileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strremotefileid(::std::string&& value);
  #endif
  void set_strremotefileid(const char* value);
  void set_strremotefileid(const char* value, size_t size);
  ::std::string* mutable_strremotefileid();
  ::std::string* release_strremotefileid();
  void set_allocated_strremotefileid(::std::string* strremotefileid);

  // string strDownloadUrl = 5;
  void clear_strdownloadurl();
  static const int kStrDownloadUrlFieldNumber = 5;
  const ::std::string& strdownloadurl() const;
  void set_strdownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strdownloadurl(::std::string&& value);
  #endif
  void set_strdownloadurl(const char* value);
  void set_strdownloadurl(const char* value, size_t size);
  ::std::string* mutable_strdownloadurl();
  ::std::string* release_strdownloadurl();
  void set_allocated_strdownloadurl(::std::string* strdownloadurl);

  // string strFileName = 6;
  void clear_strfilename();
  static const int kStrFileNameFieldNumber = 6;
  const ::std::string& strfilename() const;
  void set_strfilename(const ::std::string& value);
  #if LANG_CXX11
  void set_strfilename(::std::string&& value);
  #endif
  void set_strfilename(const char* value);
  void set_strfilename(const char* value, size_t size);
  ::std::string* mutable_strfilename();
  ::std::string* release_strfilename();
  void set_allocated_strfilename(::std::string* strfilename);

  // string strSuffixName = 7;
  void clear_strsuffixname();
  static const int kStrSuffixNameFieldNumber = 7;
  const ::std::string& strsuffixname() const;
  void set_strsuffixname(const ::std::string& value);
  #if LANG_CXX11
  void set_strsuffixname(::std::string&& value);
  #endif
  void set_strsuffixname(const char* value);
  void set_strsuffixname(const char* value, size_t size);
  ::std::string* mutable_strsuffixname();
  ::std::string* release_strsuffixname();
  void set_allocated_strsuffixname(::std::string* strsuffixname);

  // string strFileCreatedate = 10;
  void clear_strfilecreatedate();
  static const int kStrFileCreatedateFieldNumber = 10;
  const ::std::string& strfilecreatedate() const;
  void set_strfilecreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strfilecreatedate(::std::string&& value);
  #endif
  void set_strfilecreatedate(const char* value);
  void set_strfilecreatedate(const char* value, size_t size);
  ::std::string* mutable_strfilecreatedate();
  ::std::string* release_strfilecreatedate();
  void set_allocated_strfilecreatedate(::std::string* strfilecreatedate);

  // string strCreatedate = 11;
  void clear_strcreatedate();
  static const int kStrCreatedateFieldNumber = 11;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_strcreatedate(::std::string&& value);
  #endif
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // string strExtend = 13;
  void clear_strextend();
  static const int kStrExtendFieldNumber = 13;
  const ::std::string& strextend() const;
  void set_strextend(const ::std::string& value);
  #if LANG_CXX11
  void set_strextend(::std::string&& value);
  #endif
  void set_strextend(const char* value);
  void set_strextend(const char* value, size_t size);
  ::std::string* mutable_strextend();
  ::std::string* release_strextend();
  void set_allocated_strextend(::std::string* strextend);

  // uint64 uiFileSize = 8;
  void clear_uifilesize();
  static const int kUiFileSizeFieldNumber = 8;
  ::google::protobuf::uint64 uifilesize() const;
  void set_uifilesize(::google::protobuf::uint64 value);

  // uint32 uiBusinessType = 9;
  void clear_uibusinesstype();
  static const int kUiBusinessTypeFieldNumber = 9;
  ::google::protobuf::uint32 uibusinesstype() const;
  void set_uibusinesstype(::google::protobuf::uint32 value);

  // uint32 uiStatus = 12;
  void clear_uistatus();
  static const int kUiStatusFieldNumber = 12;
  ::google::protobuf::uint32 uistatus() const;
  void set_uistatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.File)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strremotefileid_;
  ::google::protobuf::internal::ArenaStringPtr strdownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr strfilename_;
  ::google::protobuf::internal::ArenaStringPtr strsuffixname_;
  ::google::protobuf::internal::ArenaStringPtr strfilecreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::internal::ArenaStringPtr strextend_;
  ::google::protobuf::uint64 uifilesize_;
  ::google::protobuf::uint32 uibusinesstype_;
  ::google::protobuf::uint32 uistatus_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileUrl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.FileUrl) */ {
 public:
  FileUrl();
  virtual ~FileUrl();

  FileUrl(const FileUrl& from);

  inline FileUrl& operator=(const FileUrl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileUrl& default_instance();

  static inline const FileUrl* internal_default_instance() {
    return reinterpret_cast<const FileUrl*>(
               &_FileUrl_default_instance_);
  }

  void Swap(FileUrl* other);

  // implements Message ----------------------------------------------

  inline FileUrl* New() const PROTOBUF_FINAL { return New(NULL); }

  FileUrl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileUrl& from);
  void MergeFrom(const FileUrl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strFileID = 1;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 1;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfileid(::std::string&& value);
  #endif
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // string strDownloadUrl = 2;
  void clear_strdownloadurl();
  static const int kStrDownloadUrlFieldNumber = 2;
  const ::std::string& strdownloadurl() const;
  void set_strdownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strdownloadurl(::std::string&& value);
  #endif
  void set_strdownloadurl(const char* value);
  void set_strdownloadurl(const char* value, size_t size);
  ::std::string* mutable_strdownloadurl();
  ::std::string* release_strdownloadurl();
  void set_allocated_strdownloadurl(::std::string* strdownloadurl);

  // @@protoc_insertion_point(class_scope:Interactive.Message.FileUrl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::google::protobuf::internal::ArenaStringPtr strdownloadurl_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAccessAddressReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetAccessAddressReq_DEV) */ {
 public:
  GetAccessAddressReq_DEV();
  virtual ~GetAccessAddressReq_DEV();

  GetAccessAddressReq_DEV(const GetAccessAddressReq_DEV& from);

  inline GetAccessAddressReq_DEV& operator=(const GetAccessAddressReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAccessAddressReq_DEV& default_instance();

  static inline const GetAccessAddressReq_DEV* internal_default_instance() {
    return reinterpret_cast<const GetAccessAddressReq_DEV*>(
               &_GetAccessAddressReq_DEV_default_instance_);
  }

  void Swap(GetAccessAddressReq_DEV* other);

  // implements Message ----------------------------------------------

  inline GetAccessAddressReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAccessAddressReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAccessAddressReq_DEV& from);
  void MergeFrom(const GetAccessAddressReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAccessAddressReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetAccessAddressReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAccessAddressRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetAccessAddressRsp_DEV) */ {
 public:
  GetAccessAddressRsp_DEV();
  virtual ~GetAccessAddressRsp_DEV();

  GetAccessAddressRsp_DEV(const GetAccessAddressRsp_DEV& from);

  inline GetAccessAddressRsp_DEV& operator=(const GetAccessAddressRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAccessAddressRsp_DEV& default_instance();

  static inline const GetAccessAddressRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const GetAccessAddressRsp_DEV*>(
               &_GetAccessAddressRsp_DEV_default_instance_);
  }

  void Swap(GetAccessAddressRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline GetAccessAddressRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAccessAddressRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAccessAddressRsp_DEV& from);
  void MergeFrom(const GetAccessAddressRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAccessAddressRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAccessAddress = 1;
  void clear_straccessaddress();
  static const int kStrAccessAddressFieldNumber = 1;
  const ::std::string& straccessaddress() const;
  void set_straccessaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_straccessaddress(::std::string&& value);
  #endif
  void set_straccessaddress(const char* value);
  void set_straccessaddress(const char* value, size_t size);
  ::std::string* mutable_straccessaddress();
  ::std::string* release_straccessaddress();
  void set_allocated_straccessaddress(::std::string* straccessaddress);

  // string strAccessPort = 2;
  void clear_straccessport();
  static const int kStrAccessPortFieldNumber = 2;
  const ::std::string& straccessport() const;
  void set_straccessport(const ::std::string& value);
  #if LANG_CXX11
  void set_straccessport(::std::string&& value);
  #endif
  void set_straccessport(const char* value);
  void set_straccessport(const char* value, size_t size);
  ::std::string* mutable_straccessport();
  ::std::string* release_straccessport();
  void set_allocated_straccessport(::std::string* straccessport);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetAccessAddressRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr straccessaddress_;
  ::google::protobuf::internal::ArenaStringPtr straccessport_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LoginReq_DEV) */ {
 public:
  LoginReq_DEV();
  virtual ~LoginReq_DEV();

  LoginReq_DEV(const LoginReq_DEV& from);

  inline LoginReq_DEV& operator=(const LoginReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq_DEV& default_instance();

  static inline const LoginReq_DEV* internal_default_instance() {
    return reinterpret_cast<const LoginReq_DEV*>(
               &_LoginReq_DEV_default_instance_);
  }

  void Swap(LoginReq_DEV* other);

  // implements Message ----------------------------------------------

  inline LoginReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq_DEV& from);
  void MergeFrom(const LoginReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strPassword = 2;
  void clear_strpassword();
  static const int kStrPasswordFieldNumber = 2;
  const ::std::string& strpassword() const;
  void set_strpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_strpassword(::std::string&& value);
  #endif
  void set_strpassword(const char* value);
  void set_strpassword(const char* value, size_t size);
  ::std::string* mutable_strpassword();
  ::std::string* release_strpassword();
  void set_allocated_strpassword(::std::string* strpassword);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LoginReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strpassword_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LoginRsp_DEV) */ {
 public:
  LoginRsp_DEV();
  virtual ~LoginRsp_DEV();

  LoginRsp_DEV(const LoginRsp_DEV& from);

  inline LoginRsp_DEV& operator=(const LoginRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp_DEV& default_instance();

  static inline const LoginRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const LoginRsp_DEV*>(
               &_LoginRsp_DEV_default_instance_);
  }

  void Swap(LoginRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline LoginRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRsp_DEV& from);
  void MergeFrom(const LoginRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LoginRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LogoutReq_DEV) */ {
 public:
  LogoutReq_DEV();
  virtual ~LogoutReq_DEV();

  LogoutReq_DEV(const LogoutReq_DEV& from);

  inline LogoutReq_DEV& operator=(const LogoutReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq_DEV& default_instance();

  static inline const LogoutReq_DEV* internal_default_instance() {
    return reinterpret_cast<const LogoutReq_DEV*>(
               &_LogoutReq_DEV_default_instance_);
  }

  void Swap(LogoutReq_DEV* other);

  // implements Message ----------------------------------------------

  inline LogoutReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  LogoutReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutReq_DEV& from);
  void MergeFrom(const LogoutReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LogoutReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LogoutRsp_DEV) */ {
 public:
  LogoutRsp_DEV();
  virtual ~LogoutRsp_DEV();

  LogoutRsp_DEV(const LogoutRsp_DEV& from);

  inline LogoutRsp_DEV& operator=(const LogoutRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRsp_DEV& default_instance();

  static inline const LogoutRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const LogoutRsp_DEV*>(
               &_LogoutRsp_DEV_default_instance_);
  }

  void Swap(LogoutRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline LogoutRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  LogoutRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutRsp_DEV& from);
  void MergeFrom(const LogoutRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LogoutRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakehandReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ShakehandReq_DEV) */ {
 public:
  ShakehandReq_DEV();
  virtual ~ShakehandReq_DEV();

  ShakehandReq_DEV(const ShakehandReq_DEV& from);

  inline ShakehandReq_DEV& operator=(const ShakehandReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandReq_DEV& default_instance();

  static inline const ShakehandReq_DEV* internal_default_instance() {
    return reinterpret_cast<const ShakehandReq_DEV*>(
               &_ShakehandReq_DEV_default_instance_);
  }

  void Swap(ShakehandReq_DEV* other);

  // implements Message ----------------------------------------------

  inline ShakehandReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakehandReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakehandReq_DEV& from);
  void MergeFrom(const ShakehandReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakehandReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ShakehandReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakehandRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ShakehandRsp_DEV) */ {
 public:
  ShakehandRsp_DEV();
  virtual ~ShakehandRsp_DEV();

  ShakehandRsp_DEV(const ShakehandRsp_DEV& from);

  inline ShakehandRsp_DEV& operator=(const ShakehandRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandRsp_DEV& default_instance();

  static inline const ShakehandRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const ShakehandRsp_DEV*>(
               &_ShakehandRsp_DEV_default_instance_);
  }

  void Swap(ShakehandRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline ShakehandRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakehandRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakehandRsp_DEV& from);
  void MergeFrom(const ShakehandRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakehandRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ShakehandRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigInfoReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ConfigInfoReq_DEV) */ {
 public:
  ConfigInfoReq_DEV();
  virtual ~ConfigInfoReq_DEV();

  ConfigInfoReq_DEV(const ConfigInfoReq_DEV& from);

  inline ConfigInfoReq_DEV& operator=(const ConfigInfoReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoReq_DEV& default_instance();

  static inline const ConfigInfoReq_DEV* internal_default_instance() {
    return reinterpret_cast<const ConfigInfoReq_DEV*>(
               &_ConfigInfoReq_DEV_default_instance_);
  }

  void Swap(ConfigInfoReq_DEV* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigInfoReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigInfoReq_DEV& from);
  void MergeFrom(const ConfigInfoReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigInfoReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ConfigInfoReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigInfoRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ConfigInfoRsp_DEV) */ {
 public:
  ConfigInfoRsp_DEV();
  virtual ~ConfigInfoRsp_DEV();

  ConfigInfoRsp_DEV(const ConfigInfoRsp_DEV& from);

  inline ConfigInfoRsp_DEV& operator=(const ConfigInfoRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoRsp_DEV& default_instance();

  static inline const ConfigInfoRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const ConfigInfoRsp_DEV*>(
               &_ConfigInfoRsp_DEV_default_instance_);
  }

  void Swap(ConfigInfoRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigInfoRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigInfoRsp_DEV& from);
  void MergeFrom(const ConfigInfoRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigInfoRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strConfigInfo = 1;
  void clear_strconfiginfo();
  static const int kStrConfigInfoFieldNumber = 1;
  const ::std::string& strconfiginfo() const;
  void set_strconfiginfo(const ::std::string& value);
  #if LANG_CXX11
  void set_strconfiginfo(::std::string&& value);
  #endif
  void set_strconfiginfo(const char* value);
  void set_strconfiginfo(const char* value, size_t size);
  ::std::string* mutable_strconfiginfo();
  ::std::string* release_strconfiginfo();
  void set_allocated_strconfiginfo(::std::string* strconfiginfo);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ConfigInfoRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strconfiginfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageAddressReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.StorageAddressReq_DEV) */ {
 public:
  StorageAddressReq_DEV();
  virtual ~StorageAddressReq_DEV();

  StorageAddressReq_DEV(const StorageAddressReq_DEV& from);

  inline StorageAddressReq_DEV& operator=(const StorageAddressReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageAddressReq_DEV& default_instance();

  static inline const StorageAddressReq_DEV* internal_default_instance() {
    return reinterpret_cast<const StorageAddressReq_DEV*>(
               &_StorageAddressReq_DEV_default_instance_);
  }

  void Swap(StorageAddressReq_DEV* other);

  // implements Message ----------------------------------------------

  inline StorageAddressReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageAddressReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageAddressReq_DEV& from);
  void MergeFrom(const StorageAddressReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageAddressReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strFileID = 4;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 4;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfileid(::std::string&& value);
  #endif
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // uint32 uiStorageType = 2;
  void clear_uistoragetype();
  static const int kUiStorageTypeFieldNumber = 2;
  ::google::protobuf::uint32 uistoragetype() const;
  void set_uistoragetype(::google::protobuf::uint32 value);

  // uint32 uiStorageAction = 3;
  void clear_uistorageaction();
  static const int kUiStorageActionFieldNumber = 3;
  ::google::protobuf::uint32 uistorageaction() const;
  void set_uistorageaction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.StorageAddressReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::google::protobuf::uint32 uistoragetype_;
  ::google::protobuf::uint32 uistorageaction_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageAddressRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.StorageAddressRsp_DEV) */ {
 public:
  StorageAddressRsp_DEV();
  virtual ~StorageAddressRsp_DEV();

  StorageAddressRsp_DEV(const StorageAddressRsp_DEV& from);

  inline StorageAddressRsp_DEV& operator=(const StorageAddressRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageAddressRsp_DEV& default_instance();

  static inline const StorageAddressRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const StorageAddressRsp_DEV*>(
               &_StorageAddressRsp_DEV_default_instance_);
  }

  void Swap(StorageAddressRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline StorageAddressRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageAddressRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageAddressRsp_DEV& from);
  void MergeFrom(const StorageAddressRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageAddressRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAddress = 1;
  void clear_straddress();
  static const int kStrAddressFieldNumber = 1;
  const ::std::string& straddress() const;
  void set_straddress(const ::std::string& value);
  #if LANG_CXX11
  void set_straddress(::std::string&& value);
  #endif
  void set_straddress(const char* value);
  void set_straddress(const char* value, size_t size);
  ::std::string* mutable_straddress();
  ::std::string* release_straddress();
  void set_allocated_straddress(::std::string* straddress);

  // uint32 uiPort = 2;
  void clear_uiport();
  static const int kUiPortFieldNumber = 2;
  ::google::protobuf::uint32 uiport() const;
  void set_uiport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.StorageAddressRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr straddress_;
  ::google::protobuf::uint32 uiport_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P2pInfoReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.P2pInfoReq_DEV) */ {
 public:
  P2pInfoReq_DEV();
  virtual ~P2pInfoReq_DEV();

  P2pInfoReq_DEV(const P2pInfoReq_DEV& from);

  inline P2pInfoReq_DEV& operator=(const P2pInfoReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P2pInfoReq_DEV& default_instance();

  static inline const P2pInfoReq_DEV* internal_default_instance() {
    return reinterpret_cast<const P2pInfoReq_DEV*>(
               &_P2pInfoReq_DEV_default_instance_);
  }

  void Swap(P2pInfoReq_DEV* other);

  // implements Message ----------------------------------------------

  inline P2pInfoReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  P2pInfoReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P2pInfoReq_DEV& from);
  void MergeFrom(const P2pInfoReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P2pInfoReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strDevIpAddress = 2;
  void clear_strdevipaddress();
  static const int kStrDevIpAddressFieldNumber = 2;
  const ::std::string& strdevipaddress() const;
  void set_strdevipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevipaddress(::std::string&& value);
  #endif
  void set_strdevipaddress(const char* value);
  void set_strdevipaddress(const char* value, size_t size);
  ::std::string* mutable_strdevipaddress();
  ::std::string* release_strdevipaddress();
  void set_allocated_strdevipaddress(::std::string* strdevipaddress);

  // @@protoc_insertion_point(class_scope:Interactive.Message.P2pInfoReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strdevipaddress_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P2pInfoRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.P2pInfoRsp_DEV) */ {
 public:
  P2pInfoRsp_DEV();
  virtual ~P2pInfoRsp_DEV();

  P2pInfoRsp_DEV(const P2pInfoRsp_DEV& from);

  inline P2pInfoRsp_DEV& operator=(const P2pInfoRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P2pInfoRsp_DEV& default_instance();

  static inline const P2pInfoRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const P2pInfoRsp_DEV*>(
               &_P2pInfoRsp_DEV_default_instance_);
  }

  void Swap(P2pInfoRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline P2pInfoRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  P2pInfoRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P2pInfoRsp_DEV& from);
  void MergeFrom(const P2pInfoRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P2pInfoRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strP2pServer = 1;
  void clear_strp2pserver();
  static const int kStrP2PServerFieldNumber = 1;
  const ::std::string& strp2pserver() const;
  void set_strp2pserver(const ::std::string& value);
  #if LANG_CXX11
  void set_strp2pserver(::std::string&& value);
  #endif
  void set_strp2pserver(const char* value);
  void set_strp2pserver(const char* value, size_t size);
  ::std::string* mutable_strp2pserver();
  ::std::string* release_strp2pserver();
  void set_allocated_strp2pserver(::std::string* strp2pserver);

  // string strP2pID = 2;
  void clear_strp2pid();
  static const int kStrP2PIDFieldNumber = 2;
  const ::std::string& strp2pid() const;
  void set_strp2pid(const ::std::string& value);
  #if LANG_CXX11
  void set_strp2pid(::std::string&& value);
  #endif
  void set_strp2pid(const char* value);
  void set_strp2pid(const char* value, size_t size);
  ::std::string* mutable_strp2pid();
  ::std::string* release_strp2pid();
  void set_allocated_strp2pid(::std::string* strp2pid);

  // uint32 uiLease = 3;
  void clear_uilease();
  static const int kUiLeaseFieldNumber = 3;
  ::google::protobuf::uint32 uilease() const;
  void set_uilease(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.P2pInfoRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strp2pserver_;
  ::google::protobuf::internal::ArenaStringPtr strp2pid_;
  ::google::protobuf::uint32 uilease_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFileReq_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.AddFileReq_DEV) */ {
 public:
  AddFileReq_DEV();
  virtual ~AddFileReq_DEV();

  AddFileReq_DEV(const AddFileReq_DEV& from);

  inline AddFileReq_DEV& operator=(const AddFileReq_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFileReq_DEV& default_instance();

  static inline const AddFileReq_DEV* internal_default_instance() {
    return reinterpret_cast<const AddFileReq_DEV*>(
               &_AddFileReq_DEV_default_instance_);
  }

  void Swap(AddFileReq_DEV* other);

  // implements Message ----------------------------------------------

  inline AddFileReq_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFileReq_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFileReq_DEV& from);
  void MergeFrom(const AddFileReq_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFileReq_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.File fileInfo = 2;
  int fileinfo_size() const;
  void clear_fileinfo();
  static const int kFileInfoFieldNumber = 2;
  const ::Interactive::Message::File& fileinfo(int index) const;
  ::Interactive::Message::File* mutable_fileinfo(int index);
  ::Interactive::Message::File* add_fileinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
      mutable_fileinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
      fileinfo() const;

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.AddFileReq_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File > fileinfo_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFileRsp_DEV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.AddFileRsp_DEV) */ {
 public:
  AddFileRsp_DEV();
  virtual ~AddFileRsp_DEV();

  AddFileRsp_DEV(const AddFileRsp_DEV& from);

  inline AddFileRsp_DEV& operator=(const AddFileRsp_DEV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFileRsp_DEV& default_instance();

  static inline const AddFileRsp_DEV* internal_default_instance() {
    return reinterpret_cast<const AddFileRsp_DEV*>(
               &_AddFileRsp_DEV_default_instance_);
  }

  void Swap(AddFileRsp_DEV* other);

  // implements Message ----------------------------------------------

  inline AddFileRsp_DEV* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFileRsp_DEV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFileRsp_DEV& from);
  void MergeFrom(const AddFileRsp_DEV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFileRsp_DEV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strFileIDFailed = 2;
  int strfileidfailed_size() const;
  void clear_strfileidfailed();
  static const int kStrFileIDFailedFieldNumber = 2;
  const ::std::string& strfileidfailed(int index) const;
  ::std::string* mutable_strfileidfailed(int index);
  void set_strfileidfailed(int index, const ::std::string& value);
  void set_strfileidfailed(int index, const char* value);
  void set_strfileidfailed(int index, const char* value, size_t size);
  ::std::string* add_strfileidfailed();
  void add_strfileidfailed(const ::std::string& value);
  void add_strfileidfailed(const char* value);
  void add_strfileidfailed(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strfileidfailed() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strfileidfailed();

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.AddFileRsp_DEV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strfileidfailed_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgPreHandlerReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.MsgPreHandlerReq_USR) */ {
 public:
  MsgPreHandlerReq_USR();
  virtual ~MsgPreHandlerReq_USR();

  MsgPreHandlerReq_USR(const MsgPreHandlerReq_USR& from);

  inline MsgPreHandlerReq_USR& operator=(const MsgPreHandlerReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPreHandlerReq_USR& default_instance();

  static inline const MsgPreHandlerReq_USR* internal_default_instance() {
    return reinterpret_cast<const MsgPreHandlerReq_USR*>(
               &_MsgPreHandlerReq_USR_default_instance_);
  }

  void Swap(MsgPreHandlerReq_USR* other);

  // implements Message ----------------------------------------------

  inline MsgPreHandlerReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgPreHandlerReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgPreHandlerReq_USR& from);
  void MergeFrom(const MsgPreHandlerReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgPreHandlerReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.MsgPreHandlerReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgPreHandlerRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.MsgPreHandlerRsp_USR) */ {
 public:
  MsgPreHandlerRsp_USR();
  virtual ~MsgPreHandlerRsp_USR();

  MsgPreHandlerRsp_USR(const MsgPreHandlerRsp_USR& from);

  inline MsgPreHandlerRsp_USR& operator=(const MsgPreHandlerRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPreHandlerRsp_USR& default_instance();

  static inline const MsgPreHandlerRsp_USR* internal_default_instance() {
    return reinterpret_cast<const MsgPreHandlerRsp_USR*>(
               &_MsgPreHandlerRsp_USR_default_instance_);
  }

  void Swap(MsgPreHandlerRsp_USR* other);

  // implements Message ----------------------------------------------

  inline MsgPreHandlerRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgPreHandlerRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgPreHandlerRsp_USR& from);
  void MergeFrom(const MsgPreHandlerRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgPreHandlerRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.MsgPreHandlerRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAccessAddressReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetAccessAddressReq_USR) */ {
 public:
  GetAccessAddressReq_USR();
  virtual ~GetAccessAddressReq_USR();

  GetAccessAddressReq_USR(const GetAccessAddressReq_USR& from);

  inline GetAccessAddressReq_USR& operator=(const GetAccessAddressReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAccessAddressReq_USR& default_instance();

  static inline const GetAccessAddressReq_USR* internal_default_instance() {
    return reinterpret_cast<const GetAccessAddressReq_USR*>(
               &_GetAccessAddressReq_USR_default_instance_);
  }

  void Swap(GetAccessAddressReq_USR* other);

  // implements Message ----------------------------------------------

  inline GetAccessAddressReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAccessAddressReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAccessAddressReq_USR& from);
  void MergeFrom(const GetAccessAddressReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAccessAddressReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strSerializeID = 1;
  void clear_strserializeid();
  static const int kStrSerializeIDFieldNumber = 1;
  const ::std::string& strserializeid() const;
  void set_strserializeid(const ::std::string& value);
  #if LANG_CXX11
  void set_strserializeid(::std::string&& value);
  #endif
  void set_strserializeid(const char* value);
  void set_strserializeid(const char* value, size_t size);
  ::std::string* mutable_strserializeid();
  ::std::string* release_strserializeid();
  void set_allocated_strserializeid(::std::string* strserializeid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetAccessAddressReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strserializeid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAccessAddressRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetAccessAddressRsp_USR) */ {
 public:
  GetAccessAddressRsp_USR();
  virtual ~GetAccessAddressRsp_USR();

  GetAccessAddressRsp_USR(const GetAccessAddressRsp_USR& from);

  inline GetAccessAddressRsp_USR& operator=(const GetAccessAddressRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAccessAddressRsp_USR& default_instance();

  static inline const GetAccessAddressRsp_USR* internal_default_instance() {
    return reinterpret_cast<const GetAccessAddressRsp_USR*>(
               &_GetAccessAddressRsp_USR_default_instance_);
  }

  void Swap(GetAccessAddressRsp_USR* other);

  // implements Message ----------------------------------------------

  inline GetAccessAddressRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAccessAddressRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAccessAddressRsp_USR& from);
  void MergeFrom(const GetAccessAddressRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAccessAddressRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAccessAddress = 1;
  void clear_straccessaddress();
  static const int kStrAccessAddressFieldNumber = 1;
  const ::std::string& straccessaddress() const;
  void set_straccessaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_straccessaddress(::std::string&& value);
  #endif
  void set_straccessaddress(const char* value);
  void set_straccessaddress(const char* value, size_t size);
  ::std::string* mutable_straccessaddress();
  ::std::string* release_straccessaddress();
  void set_allocated_straccessaddress(::std::string* straccessaddress);

  // string strAccessPort = 2;
  void clear_straccessport();
  static const int kStrAccessPortFieldNumber = 2;
  const ::std::string& straccessport() const;
  void set_straccessport(const ::std::string& value);
  #if LANG_CXX11
  void set_straccessport(::std::string&& value);
  #endif
  void set_straccessport(const char* value);
  void set_straccessport(const char* value, size_t size);
  ::std::string* mutable_straccessport();
  ::std::string* release_straccessport();
  void set_allocated_straccessport(::std::string* straccessport);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetAccessAddressRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr straccessaddress_;
  ::google::protobuf::internal::ArenaStringPtr straccessport_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterUserReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.RegisterUserReq_USR) */ {
 public:
  RegisterUserReq_USR();
  virtual ~RegisterUserReq_USR();

  RegisterUserReq_USR(const RegisterUserReq_USR& from);

  inline RegisterUserReq_USR& operator=(const RegisterUserReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterUserReq_USR& default_instance();

  static inline const RegisterUserReq_USR* internal_default_instance() {
    return reinterpret_cast<const RegisterUserReq_USR*>(
               &_RegisterUserReq_USR_default_instance_);
  }

  void Swap(RegisterUserReq_USR* other);

  // implements Message ----------------------------------------------

  inline RegisterUserReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterUserReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterUserReq_USR& from);
  void MergeFrom(const RegisterUserReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterUserReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.User userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo() const;
  ::Interactive::Message::User* mutable_userinfo();
  ::Interactive::Message::User* release_userinfo();
  void set_allocated_userinfo(::Interactive::Message::User* userinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.RegisterUserReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::User* userinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterUserRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.RegisterUserRsp_USR) */ {
 public:
  RegisterUserRsp_USR();
  virtual ~RegisterUserRsp_USR();

  RegisterUserRsp_USR(const RegisterUserRsp_USR& from);

  inline RegisterUserRsp_USR& operator=(const RegisterUserRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterUserRsp_USR& default_instance();

  static inline const RegisterUserRsp_USR* internal_default_instance() {
    return reinterpret_cast<const RegisterUserRsp_USR*>(
               &_RegisterUserRsp_USR_default_instance_);
  }

  void Swap(RegisterUserRsp_USR* other);

  // implements Message ----------------------------------------------

  inline RegisterUserRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterUserRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterUserRsp_USR& from);
  void MergeFrom(const RegisterUserRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterUserRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.RegisterUserRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnRegisterUserReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.UnRegisterUserReq_USR) */ {
 public:
  UnRegisterUserReq_USR();
  virtual ~UnRegisterUserReq_USR();

  UnRegisterUserReq_USR(const UnRegisterUserReq_USR& from);

  inline UnRegisterUserReq_USR& operator=(const UnRegisterUserReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnRegisterUserReq_USR& default_instance();

  static inline const UnRegisterUserReq_USR* internal_default_instance() {
    return reinterpret_cast<const UnRegisterUserReq_USR*>(
               &_UnRegisterUserReq_USR_default_instance_);
  }

  void Swap(UnRegisterUserReq_USR* other);

  // implements Message ----------------------------------------------

  inline UnRegisterUserReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  UnRegisterUserReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnRegisterUserReq_USR& from);
  void MergeFrom(const UnRegisterUserReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnRegisterUserReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.User userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo() const;
  ::Interactive::Message::User* mutable_userinfo();
  ::Interactive::Message::User* release_userinfo();
  void set_allocated_userinfo(::Interactive::Message::User* userinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.UnRegisterUserReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::User* userinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnRegisterUserRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.UnRegisterUserRsp_USR) */ {
 public:
  UnRegisterUserRsp_USR();
  virtual ~UnRegisterUserRsp_USR();

  UnRegisterUserRsp_USR(const UnRegisterUserRsp_USR& from);

  inline UnRegisterUserRsp_USR& operator=(const UnRegisterUserRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnRegisterUserRsp_USR& default_instance();

  static inline const UnRegisterUserRsp_USR* internal_default_instance() {
    return reinterpret_cast<const UnRegisterUserRsp_USR*>(
               &_UnRegisterUserRsp_USR_default_instance_);
  }

  void Swap(UnRegisterUserRsp_USR* other);

  // implements Message ----------------------------------------------

  inline UnRegisterUserRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  UnRegisterUserRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnRegisterUserRsp_USR& from);
  void MergeFrom(const UnRegisterUserRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnRegisterUserRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.UnRegisterUserRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryUsrInfoReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryUsrInfoReq_USR) */ {
 public:
  QueryUsrInfoReq_USR();
  virtual ~QueryUsrInfoReq_USR();

  QueryUsrInfoReq_USR(const QueryUsrInfoReq_USR& from);

  inline QueryUsrInfoReq_USR& operator=(const QueryUsrInfoReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUsrInfoReq_USR& default_instance();

  static inline const QueryUsrInfoReq_USR* internal_default_instance() {
    return reinterpret_cast<const QueryUsrInfoReq_USR*>(
               &_QueryUsrInfoReq_USR_default_instance_);
  }

  void Swap(QueryUsrInfoReq_USR* other);

  // implements Message ----------------------------------------------

  inline QueryUsrInfoReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryUsrInfoReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryUsrInfoReq_USR& from);
  void MergeFrom(const QueryUsrInfoReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryUsrInfoReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryUsrInfoReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryUsrInfoRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryUsrInfoRsp_USR) */ {
 public:
  QueryUsrInfoRsp_USR();
  virtual ~QueryUsrInfoRsp_USR();

  QueryUsrInfoRsp_USR(const QueryUsrInfoRsp_USR& from);

  inline QueryUsrInfoRsp_USR& operator=(const QueryUsrInfoRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUsrInfoRsp_USR& default_instance();

  static inline const QueryUsrInfoRsp_USR* internal_default_instance() {
    return reinterpret_cast<const QueryUsrInfoRsp_USR*>(
               &_QueryUsrInfoRsp_USR_default_instance_);
  }

  void Swap(QueryUsrInfoRsp_USR* other);

  // implements Message ----------------------------------------------

  inline QueryUsrInfoRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryUsrInfoRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryUsrInfoRsp_USR& from);
  void MergeFrom(const QueryUsrInfoRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryUsrInfoRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.User userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo() const;
  ::Interactive::Message::User* mutable_userinfo();
  ::Interactive::Message::User* release_userinfo();
  void set_allocated_userinfo(::Interactive::Message::User* userinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryUsrInfoRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::User* userinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyUserInfoReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ModifyUserInfoReq_USR) */ {
 public:
  ModifyUserInfoReq_USR();
  virtual ~ModifyUserInfoReq_USR();

  ModifyUserInfoReq_USR(const ModifyUserInfoReq_USR& from);

  inline ModifyUserInfoReq_USR& operator=(const ModifyUserInfoReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyUserInfoReq_USR& default_instance();

  static inline const ModifyUserInfoReq_USR* internal_default_instance() {
    return reinterpret_cast<const ModifyUserInfoReq_USR*>(
               &_ModifyUserInfoReq_USR_default_instance_);
  }

  void Swap(ModifyUserInfoReq_USR* other);

  // implements Message ----------------------------------------------

  inline ModifyUserInfoReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyUserInfoReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyUserInfoReq_USR& from);
  void MergeFrom(const ModifyUserInfoReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyUserInfoReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Interactive.Message.User userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo() const;
  ::Interactive::Message::User* mutable_userinfo();
  ::Interactive::Message::User* release_userinfo();
  void set_allocated_userinfo(::Interactive::Message::User* userinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ModifyUserInfoReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Interactive::Message::User* userinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyUserInfoRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ModifyUserInfoRsp_USR) */ {
 public:
  ModifyUserInfoRsp_USR();
  virtual ~ModifyUserInfoRsp_USR();

  ModifyUserInfoRsp_USR(const ModifyUserInfoRsp_USR& from);

  inline ModifyUserInfoRsp_USR& operator=(const ModifyUserInfoRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyUserInfoRsp_USR& default_instance();

  static inline const ModifyUserInfoRsp_USR* internal_default_instance() {
    return reinterpret_cast<const ModifyUserInfoRsp_USR*>(
               &_ModifyUserInfoRsp_USR_default_instance_);
  }

  void Swap(ModifyUserInfoRsp_USR* other);

  // implements Message ----------------------------------------------

  inline ModifyUserInfoRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyUserInfoRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyUserInfoRsp_USR& from);
  void MergeFrom(const ModifyUserInfoRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyUserInfoRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ModifyUserInfoRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LoginReq_USR) */ {
 public:
  LoginReq_USR();
  virtual ~LoginReq_USR();

  LoginReq_USR(const LoginReq_USR& from);

  inline LoginReq_USR& operator=(const LoginReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq_USR& default_instance();

  static inline const LoginReq_USR* internal_default_instance() {
    return reinterpret_cast<const LoginReq_USR*>(
               &_LoginReq_USR_default_instance_);
  }

  void Swap(LoginReq_USR* other);

  // implements Message ----------------------------------------------

  inline LoginReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq_USR& from);
  void MergeFrom(const LoginReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.User userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo() const;
  ::Interactive::Message::User* mutable_userinfo();
  ::Interactive::Message::User* release_userinfo();
  void set_allocated_userinfo(::Interactive::Message::User* userinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LoginReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::User* userinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LoginRsp_USR) */ {
 public:
  LoginRsp_USR();
  virtual ~LoginRsp_USR();

  LoginRsp_USR(const LoginRsp_USR& from);

  inline LoginRsp_USR& operator=(const LoginRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp_USR& default_instance();

  static inline const LoginRsp_USR* internal_default_instance() {
    return reinterpret_cast<const LoginRsp_USR*>(
               &_LoginRsp_USR_default_instance_);
  }

  void Swap(LoginRsp_USR* other);

  // implements Message ----------------------------------------------

  inline LoginRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRsp_USR& from);
  void MergeFrom(const LoginRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.Relation relationInfo = 2;
  int relationinfo_size() const;
  void clear_relationinfo();
  static const int kRelationInfoFieldNumber = 2;
  const ::Interactive::Message::Relation& relationinfo(int index) const;
  ::Interactive::Message::Relation* mutable_relationinfo(int index);
  ::Interactive::Message::Relation* add_relationinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
      mutable_relationinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
      relationinfo() const;

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LoginRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation > relationinfo_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LogoutReq_USR) */ {
 public:
  LogoutReq_USR();
  virtual ~LogoutReq_USR();

  LogoutReq_USR(const LogoutReq_USR& from);

  inline LogoutReq_USR& operator=(const LogoutReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq_USR& default_instance();

  static inline const LogoutReq_USR* internal_default_instance() {
    return reinterpret_cast<const LogoutReq_USR*>(
               &_LogoutReq_USR_default_instance_);
  }

  void Swap(LogoutReq_USR* other);

  // implements Message ----------------------------------------------

  inline LogoutReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  LogoutReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutReq_USR& from);
  void MergeFrom(const LogoutReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.User userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo() const;
  ::Interactive::Message::User* mutable_userinfo();
  ::Interactive::Message::User* release_userinfo();
  void set_allocated_userinfo(::Interactive::Message::User* userinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LogoutReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::User* userinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.LogoutRsp_USR) */ {
 public:
  LogoutRsp_USR();
  virtual ~LogoutRsp_USR();

  LogoutRsp_USR(const LogoutRsp_USR& from);

  inline LogoutRsp_USR& operator=(const LogoutRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRsp_USR& default_instance();

  static inline const LogoutRsp_USR* internal_default_instance() {
    return reinterpret_cast<const LogoutRsp_USR*>(
               &_LogoutRsp_USR_default_instance_);
  }

  void Swap(LogoutRsp_USR* other);

  // implements Message ----------------------------------------------

  inline LogoutRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  LogoutRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutRsp_USR& from);
  void MergeFrom(const LogoutRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.LogoutRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakehandReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ShakehandReq_USR) */ {
 public:
  ShakehandReq_USR();
  virtual ~ShakehandReq_USR();

  ShakehandReq_USR(const ShakehandReq_USR& from);

  inline ShakehandReq_USR& operator=(const ShakehandReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandReq_USR& default_instance();

  static inline const ShakehandReq_USR* internal_default_instance() {
    return reinterpret_cast<const ShakehandReq_USR*>(
               &_ShakehandReq_USR_default_instance_);
  }

  void Swap(ShakehandReq_USR* other);

  // implements Message ----------------------------------------------

  inline ShakehandReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakehandReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakehandReq_USR& from);
  void MergeFrom(const ShakehandReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakehandReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ShakehandReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakehandRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ShakehandRsp_USR) */ {
 public:
  ShakehandRsp_USR();
  virtual ~ShakehandRsp_USR();

  ShakehandRsp_USR(const ShakehandRsp_USR& from);

  inline ShakehandRsp_USR& operator=(const ShakehandRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandRsp_USR& default_instance();

  static inline const ShakehandRsp_USR* internal_default_instance() {
    return reinterpret_cast<const ShakehandRsp_USR*>(
               &_ShakehandRsp_USR_default_instance_);
  }

  void Swap(ShakehandRsp_USR* other);

  // implements Message ----------------------------------------------

  inline ShakehandRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakehandRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakehandRsp_USR& from);
  void MergeFrom(const ShakehandRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakehandRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ShakehandRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigInfoReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ConfigInfoReq_USR) */ {
 public:
  ConfigInfoReq_USR();
  virtual ~ConfigInfoReq_USR();

  ConfigInfoReq_USR(const ConfigInfoReq_USR& from);

  inline ConfigInfoReq_USR& operator=(const ConfigInfoReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoReq_USR& default_instance();

  static inline const ConfigInfoReq_USR* internal_default_instance() {
    return reinterpret_cast<const ConfigInfoReq_USR*>(
               &_ConfigInfoReq_USR_default_instance_);
  }

  void Swap(ConfigInfoReq_USR* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigInfoReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigInfoReq_USR& from);
  void MergeFrom(const ConfigInfoReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigInfoReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ConfigInfoReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigInfoRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ConfigInfoRsp_USR) */ {
 public:
  ConfigInfoRsp_USR();
  virtual ~ConfigInfoRsp_USR();

  ConfigInfoRsp_USR(const ConfigInfoRsp_USR& from);

  inline ConfigInfoRsp_USR& operator=(const ConfigInfoRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoRsp_USR& default_instance();

  static inline const ConfigInfoRsp_USR* internal_default_instance() {
    return reinterpret_cast<const ConfigInfoRsp_USR*>(
               &_ConfigInfoRsp_USR_default_instance_);
  }

  void Swap(ConfigInfoRsp_USR* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigInfoRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigInfoRsp_USR& from);
  void MergeFrom(const ConfigInfoRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigInfoRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strItems = 2;
  int stritems_size() const;
  void clear_stritems();
  static const int kStrItemsFieldNumber = 2;
  const ::std::string& stritems(int index) const;
  ::std::string* mutable_stritems(int index);
  void set_stritems(int index, const ::std::string& value);
  void set_stritems(int index, const char* value);
  void set_stritems(int index, const char* value, size_t size);
  ::std::string* add_stritems();
  void add_stritems(const ::std::string& value);
  void add_stritems(const char* value);
  void add_stritems(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& stritems() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stritems();

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ConfigInfoRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stritems_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddDevReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.AddDevReq_USR) */ {
 public:
  AddDevReq_USR();
  virtual ~AddDevReq_USR();

  AddDevReq_USR(const AddDevReq_USR& from);

  inline AddDevReq_USR& operator=(const AddDevReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddDevReq_USR& default_instance();

  static inline const AddDevReq_USR* internal_default_instance() {
    return reinterpret_cast<const AddDevReq_USR*>(
               &_AddDevReq_USR_default_instance_);
  }

  void Swap(AddDevReq_USR* other);

  // implements Message ----------------------------------------------

  inline AddDevReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  AddDevReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddDevReq_USR& from);
  void MergeFrom(const AddDevReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddDevReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .Interactive.Message.Device devInfo = 2;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 2;
  const ::Interactive::Message::Device& devinfo() const;
  ::Interactive::Message::Device* mutable_devinfo();
  ::Interactive::Message::Device* release_devinfo();
  void set_allocated_devinfo(::Interactive::Message::Device* devinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.AddDevReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::Interactive::Message::Device* devinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddDevRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.AddDevRsp_USR) */ {
 public:
  AddDevRsp_USR();
  virtual ~AddDevRsp_USR();

  AddDevRsp_USR(const AddDevRsp_USR& from);

  inline AddDevRsp_USR& operator=(const AddDevRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddDevRsp_USR& default_instance();

  static inline const AddDevRsp_USR* internal_default_instance() {
    return reinterpret_cast<const AddDevRsp_USR*>(
               &_AddDevRsp_USR_default_instance_);
  }

  void Swap(AddDevRsp_USR* other);

  // implements Message ----------------------------------------------

  inline AddDevRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  AddDevRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddDevRsp_USR& from);
  void MergeFrom(const AddDevRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddDevRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.AddDevRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelDevReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DelDevReq_USR) */ {
 public:
  DelDevReq_USR();
  virtual ~DelDevReq_USR();

  DelDevReq_USR(const DelDevReq_USR& from);

  inline DelDevReq_USR& operator=(const DelDevReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelDevReq_USR& default_instance();

  static inline const DelDevReq_USR* internal_default_instance() {
    return reinterpret_cast<const DelDevReq_USR*>(
               &_DelDevReq_USR_default_instance_);
  }

  void Swap(DelDevReq_USR* other);

  // implements Message ----------------------------------------------

  inline DelDevReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DelDevReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelDevReq_USR& from);
  void MergeFrom(const DelDevReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelDevReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strDevID = 2;
  int strdevid_size() const;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 2;
  const ::std::string& strdevid(int index) const;
  ::std::string* mutable_strdevid(int index);
  void set_strdevid(int index, const ::std::string& value);
  void set_strdevid(int index, const char* value);
  void set_strdevid(int index, const char* value, size_t size);
  ::std::string* add_strdevid();
  void add_strdevid(const ::std::string& value);
  void add_strdevid(const char* value);
  void add_strdevid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strdevid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strdevid();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DelDevReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strdevid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelDevRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DelDevRsp_USR) */ {
 public:
  DelDevRsp_USR();
  virtual ~DelDevRsp_USR();

  DelDevRsp_USR(const DelDevRsp_USR& from);

  inline DelDevRsp_USR& operator=(const DelDevRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelDevRsp_USR& default_instance();

  static inline const DelDevRsp_USR* internal_default_instance() {
    return reinterpret_cast<const DelDevRsp_USR*>(
               &_DelDevRsp_USR_default_instance_);
  }

  void Swap(DelDevRsp_USR* other);

  // implements Message ----------------------------------------------

  inline DelDevRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DelDevRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelDevRsp_USR& from);
  void MergeFrom(const DelDevRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelDevRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strDevIDFailed = 2;
  int strdevidfailed_size() const;
  void clear_strdevidfailed();
  static const int kStrDevIDFailedFieldNumber = 2;
  const ::std::string& strdevidfailed(int index) const;
  ::std::string* mutable_strdevidfailed(int index);
  void set_strdevidfailed(int index, const ::std::string& value);
  void set_strdevidfailed(int index, const char* value);
  void set_strdevidfailed(int index, const char* value, size_t size);
  ::std::string* add_strdevidfailed();
  void add_strdevidfailed(const ::std::string& value);
  void add_strdevidfailed(const char* value);
  void add_strdevidfailed(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strdevidfailed() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strdevidfailed();

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DelDevRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strdevidfailed_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyDevReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ModifyDevReq_USR) */ {
 public:
  ModifyDevReq_USR();
  virtual ~ModifyDevReq_USR();

  ModifyDevReq_USR(const ModifyDevReq_USR& from);

  inline ModifyDevReq_USR& operator=(const ModifyDevReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyDevReq_USR& default_instance();

  static inline const ModifyDevReq_USR* internal_default_instance() {
    return reinterpret_cast<const ModifyDevReq_USR*>(
               &_ModifyDevReq_USR_default_instance_);
  }

  void Swap(ModifyDevReq_USR* other);

  // implements Message ----------------------------------------------

  inline ModifyDevReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyDevReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyDevReq_USR& from);
  void MergeFrom(const ModifyDevReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyDevReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // .Interactive.Message.Device devInfo = 2;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 2;
  const ::Interactive::Message::Device& devinfo() const;
  ::Interactive::Message::Device* mutable_devinfo();
  ::Interactive::Message::Device* release_devinfo();
  void set_allocated_devinfo(::Interactive::Message::Device* devinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ModifyDevReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::Interactive::Message::Device* devinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyDevRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.ModifyDevRsp_USR) */ {
 public:
  ModifyDevRsp_USR();
  virtual ~ModifyDevRsp_USR();

  ModifyDevRsp_USR(const ModifyDevRsp_USR& from);

  inline ModifyDevRsp_USR& operator=(const ModifyDevRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyDevRsp_USR& default_instance();

  static inline const ModifyDevRsp_USR* internal_default_instance() {
    return reinterpret_cast<const ModifyDevRsp_USR*>(
               &_ModifyDevRsp_USR_default_instance_);
  }

  void Swap(ModifyDevRsp_USR* other);

  // implements Message ----------------------------------------------

  inline ModifyDevRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyDevRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyDevRsp_USR& from);
  void MergeFrom(const ModifyDevRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyDevRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.ModifyDevRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryDevInfoReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryDevInfoReq_USR) */ {
 public:
  QueryDevInfoReq_USR();
  virtual ~QueryDevInfoReq_USR();

  QueryDevInfoReq_USR(const QueryDevInfoReq_USR& from);

  inline QueryDevInfoReq_USR& operator=(const QueryDevInfoReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDevInfoReq_USR& default_instance();

  static inline const QueryDevInfoReq_USR* internal_default_instance() {
    return reinterpret_cast<const QueryDevInfoReq_USR*>(
               &_QueryDevInfoReq_USR_default_instance_);
  }

  void Swap(QueryDevInfoReq_USR* other);

  // implements Message ----------------------------------------------

  inline QueryDevInfoReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryDevInfoReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryDevInfoReq_USR& from);
  void MergeFrom(const QueryDevInfoReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryDevInfoReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryDevInfoReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryDevInfoRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryDevInfoRsp_USR) */ {
 public:
  QueryDevInfoRsp_USR();
  virtual ~QueryDevInfoRsp_USR();

  QueryDevInfoRsp_USR(const QueryDevInfoRsp_USR& from);

  inline QueryDevInfoRsp_USR& operator=(const QueryDevInfoRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDevInfoRsp_USR& default_instance();

  static inline const QueryDevInfoRsp_USR* internal_default_instance() {
    return reinterpret_cast<const QueryDevInfoRsp_USR*>(
               &_QueryDevInfoRsp_USR_default_instance_);
  }

  void Swap(QueryDevInfoRsp_USR* other);

  // implements Message ----------------------------------------------

  inline QueryDevInfoRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryDevInfoRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryDevInfoRsp_USR& from);
  void MergeFrom(const QueryDevInfoRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryDevInfoRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.Device devInfo = 1;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 1;
  const ::Interactive::Message::Device& devinfo() const;
  ::Interactive::Message::Device* mutable_devinfo();
  ::Interactive::Message::Device* release_devinfo();
  void set_allocated_devinfo(::Interactive::Message::Device* devinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryDevInfoRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::Device* devinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryDevReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryDevReq_USR) */ {
 public:
  QueryDevReq_USR();
  virtual ~QueryDevReq_USR();

  QueryDevReq_USR(const QueryDevReq_USR& from);

  inline QueryDevReq_USR& operator=(const QueryDevReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDevReq_USR& default_instance();

  static inline const QueryDevReq_USR* internal_default_instance() {
    return reinterpret_cast<const QueryDevReq_USR*>(
               &_QueryDevReq_USR_default_instance_);
  }

  void Swap(QueryDevReq_USR* other);

  // implements Message ----------------------------------------------

  inline QueryDevReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryDevReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryDevReq_USR& from);
  void MergeFrom(const QueryDevReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryDevReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiBeginIndex = 2;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 2;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryDevReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryDevRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryDevRsp_USR) */ {
 public:
  QueryDevRsp_USR();
  virtual ~QueryDevRsp_USR();

  QueryDevRsp_USR(const QueryDevRsp_USR& from);

  inline QueryDevRsp_USR& operator=(const QueryDevRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDevRsp_USR& default_instance();

  static inline const QueryDevRsp_USR* internal_default_instance() {
    return reinterpret_cast<const QueryDevRsp_USR*>(
               &_QueryDevRsp_USR_default_instance_);
  }

  void Swap(QueryDevRsp_USR* other);

  // implements Message ----------------------------------------------

  inline QueryDevRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryDevRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryDevRsp_USR& from);
  void MergeFrom(const QueryDevRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryDevRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  int allrelationinfo_size() const;
  void clear_allrelationinfo();
  static const int kAllRelationInfoFieldNumber = 1;
  const ::Interactive::Message::Relation& allrelationinfo(int index) const;
  ::Interactive::Message::Relation* mutable_allrelationinfo(int index);
  ::Interactive::Message::Relation* add_allrelationinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
      mutable_allrelationinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
      allrelationinfo() const;

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryDevRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation > allrelationinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryUserReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryUserReq_USR) */ {
 public:
  QueryUserReq_USR();
  virtual ~QueryUserReq_USR();

  QueryUserReq_USR(const QueryUserReq_USR& from);

  inline QueryUserReq_USR& operator=(const QueryUserReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserReq_USR& default_instance();

  static inline const QueryUserReq_USR* internal_default_instance() {
    return reinterpret_cast<const QueryUserReq_USR*>(
               &_QueryUserReq_USR_default_instance_);
  }

  void Swap(QueryUserReq_USR* other);

  // implements Message ----------------------------------------------

  inline QueryUserReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryUserReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryUserReq_USR& from);
  void MergeFrom(const QueryUserReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryUserReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevID = 1;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 1;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiBeginIndex = 2;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 2;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryUserReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryUserRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryUserRsp_USR) */ {
 public:
  QueryUserRsp_USR();
  virtual ~QueryUserRsp_USR();

  QueryUserRsp_USR(const QueryUserRsp_USR& from);

  inline QueryUserRsp_USR& operator=(const QueryUserRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserRsp_USR& default_instance();

  static inline const QueryUserRsp_USR* internal_default_instance() {
    return reinterpret_cast<const QueryUserRsp_USR*>(
               &_QueryUserRsp_USR_default_instance_);
  }

  void Swap(QueryUserRsp_USR* other);

  // implements Message ----------------------------------------------

  inline QueryUserRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryUserRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryUserRsp_USR& from);
  void MergeFrom(const QueryUserRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryUserRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  int allrelationinfo_size() const;
  void clear_allrelationinfo();
  static const int kAllRelationInfoFieldNumber = 1;
  const ::Interactive::Message::Relation& allrelationinfo(int index) const;
  ::Interactive::Message::Relation* mutable_allrelationinfo(int index);
  ::Interactive::Message::Relation* add_allrelationinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
      mutable_allrelationinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
      allrelationinfo() const;

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryUserRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation > allrelationinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SharingDevReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.SharingDevReq_USR) */ {
 public:
  SharingDevReq_USR();
  virtual ~SharingDevReq_USR();

  SharingDevReq_USR(const SharingDevReq_USR& from);

  inline SharingDevReq_USR& operator=(const SharingDevReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SharingDevReq_USR& default_instance();

  static inline const SharingDevReq_USR* internal_default_instance() {
    return reinterpret_cast<const SharingDevReq_USR*>(
               &_SharingDevReq_USR_default_instance_);
  }

  void Swap(SharingDevReq_USR* other);

  // implements Message ----------------------------------------------

  inline SharingDevReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  SharingDevReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SharingDevReq_USR& from);
  void MergeFrom(const SharingDevReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SharingDevReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.Relation relationInfo = 1;
  bool has_relationinfo() const;
  void clear_relationinfo();
  static const int kRelationInfoFieldNumber = 1;
  const ::Interactive::Message::Relation& relationinfo() const;
  ::Interactive::Message::Relation* mutable_relationinfo();
  ::Interactive::Message::Relation* release_relationinfo();
  void set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.SharingDevReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::Relation* relationinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SharingDevRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.SharingDevRsp_USR) */ {
 public:
  SharingDevRsp_USR();
  virtual ~SharingDevRsp_USR();

  SharingDevRsp_USR(const SharingDevRsp_USR& from);

  inline SharingDevRsp_USR& operator=(const SharingDevRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SharingDevRsp_USR& default_instance();

  static inline const SharingDevRsp_USR* internal_default_instance() {
    return reinterpret_cast<const SharingDevRsp_USR*>(
               &_SharingDevRsp_USR_default_instance_);
  }

  void Swap(SharingDevRsp_USR* other);

  // implements Message ----------------------------------------------

  inline SharingDevRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  SharingDevRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SharingDevRsp_USR& from);
  void MergeFrom(const SharingDevRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SharingDevRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.SharingDevRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelSharedDevReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.CancelSharedDevReq_USR) */ {
 public:
  CancelSharedDevReq_USR();
  virtual ~CancelSharedDevReq_USR();

  CancelSharedDevReq_USR(const CancelSharedDevReq_USR& from);

  inline CancelSharedDevReq_USR& operator=(const CancelSharedDevReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelSharedDevReq_USR& default_instance();

  static inline const CancelSharedDevReq_USR* internal_default_instance() {
    return reinterpret_cast<const CancelSharedDevReq_USR*>(
               &_CancelSharedDevReq_USR_default_instance_);
  }

  void Swap(CancelSharedDevReq_USR* other);

  // implements Message ----------------------------------------------

  inline CancelSharedDevReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelSharedDevReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelSharedDevReq_USR& from);
  void MergeFrom(const CancelSharedDevReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelSharedDevReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // .Interactive.Message.Relation relationInfo = 1;
  bool has_relationinfo() const;
  void clear_relationinfo();
  static const int kRelationInfoFieldNumber = 1;
  const ::Interactive::Message::Relation& relationinfo() const;
  ::Interactive::Message::Relation* mutable_relationinfo();
  ::Interactive::Message::Relation* release_relationinfo();
  void set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo);

  // @@protoc_insertion_point(class_scope:Interactive.Message.CancelSharedDevReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::Interactive::Message::Relation* relationinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelSharedDevRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.CancelSharedDevRsp_USR) */ {
 public:
  CancelSharedDevRsp_USR();
  virtual ~CancelSharedDevRsp_USR();

  CancelSharedDevRsp_USR(const CancelSharedDevRsp_USR& from);

  inline CancelSharedDevRsp_USR& operator=(const CancelSharedDevRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelSharedDevRsp_USR& default_instance();

  static inline const CancelSharedDevRsp_USR* internal_default_instance() {
    return reinterpret_cast<const CancelSharedDevRsp_USR*>(
               &_CancelSharedDevRsp_USR_default_instance_);
  }

  void Swap(CancelSharedDevRsp_USR* other);

  // implements Message ----------------------------------------------

  inline CancelSharedDevRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelSharedDevRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelSharedDevRsp_USR& from);
  void MergeFrom(const CancelSharedDevRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelSharedDevRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.CancelSharedDevRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendsReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.AddFriendsReq_USR) */ {
 public:
  AddFriendsReq_USR();
  virtual ~AddFriendsReq_USR();

  AddFriendsReq_USR(const AddFriendsReq_USR& from);

  inline AddFriendsReq_USR& operator=(const AddFriendsReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendsReq_USR& default_instance();

  static inline const AddFriendsReq_USR* internal_default_instance() {
    return reinterpret_cast<const AddFriendsReq_USR*>(
               &_AddFriendsReq_USR_default_instance_);
  }

  void Swap(AddFriendsReq_USR* other);

  // implements Message ----------------------------------------------

  inline AddFriendsReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFriendsReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFriendsReq_USR& from);
  void MergeFrom(const AddFriendsReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFriendsReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strFriendUserID = 2;
  void clear_strfrienduserid();
  static const int kStrFriendUserIDFieldNumber = 2;
  const ::std::string& strfrienduserid() const;
  void set_strfrienduserid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfrienduserid(::std::string&& value);
  #endif
  void set_strfrienduserid(const char* value);
  void set_strfrienduserid(const char* value, size_t size);
  ::std::string* mutable_strfrienduserid();
  ::std::string* release_strfrienduserid();
  void set_allocated_strfrienduserid(::std::string* strfrienduserid);

  // @@protoc_insertion_point(class_scope:Interactive.Message.AddFriendsReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strfrienduserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendsRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.AddFriendsRsp_USR) */ {
 public:
  AddFriendsRsp_USR();
  virtual ~AddFriendsRsp_USR();

  AddFriendsRsp_USR(const AddFriendsRsp_USR& from);

  inline AddFriendsRsp_USR& operator=(const AddFriendsRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendsRsp_USR& default_instance();

  static inline const AddFriendsRsp_USR* internal_default_instance() {
    return reinterpret_cast<const AddFriendsRsp_USR*>(
               &_AddFriendsRsp_USR_default_instance_);
  }

  void Swap(AddFriendsRsp_USR* other);

  // implements Message ----------------------------------------------

  inline AddFriendsRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFriendsRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFriendsRsp_USR& from);
  void MergeFrom(const AddFriendsRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFriendsRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.AddFriendsRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelFriendsReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DelFriendsReq_USR) */ {
 public:
  DelFriendsReq_USR();
  virtual ~DelFriendsReq_USR();

  DelFriendsReq_USR(const DelFriendsReq_USR& from);

  inline DelFriendsReq_USR& operator=(const DelFriendsReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendsReq_USR& default_instance();

  static inline const DelFriendsReq_USR* internal_default_instance() {
    return reinterpret_cast<const DelFriendsReq_USR*>(
               &_DelFriendsReq_USR_default_instance_);
  }

  void Swap(DelFriendsReq_USR* other);

  // implements Message ----------------------------------------------

  inline DelFriendsReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DelFriendsReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelFriendsReq_USR& from);
  void MergeFrom(const DelFriendsReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelFriendsReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strFriendUserID = 2;
  int strfrienduserid_size() const;
  void clear_strfrienduserid();
  static const int kStrFriendUserIDFieldNumber = 2;
  const ::std::string& strfrienduserid(int index) const;
  ::std::string* mutable_strfrienduserid(int index);
  void set_strfrienduserid(int index, const ::std::string& value);
  void set_strfrienduserid(int index, const char* value);
  void set_strfrienduserid(int index, const char* value, size_t size);
  ::std::string* add_strfrienduserid();
  void add_strfrienduserid(const ::std::string& value);
  void add_strfrienduserid(const char* value);
  void add_strfrienduserid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strfrienduserid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strfrienduserid();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DelFriendsReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strfrienduserid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelFriendsRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DelFriendsRsp_USR) */ {
 public:
  DelFriendsRsp_USR();
  virtual ~DelFriendsRsp_USR();

  DelFriendsRsp_USR(const DelFriendsRsp_USR& from);

  inline DelFriendsRsp_USR& operator=(const DelFriendsRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendsRsp_USR& default_instance();

  static inline const DelFriendsRsp_USR* internal_default_instance() {
    return reinterpret_cast<const DelFriendsRsp_USR*>(
               &_DelFriendsRsp_USR_default_instance_);
  }

  void Swap(DelFriendsRsp_USR* other);

  // implements Message ----------------------------------------------

  inline DelFriendsRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DelFriendsRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelFriendsRsp_USR& from);
  void MergeFrom(const DelFriendsRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelFriendsRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strFriendUserIDFailed = 2;
  int strfrienduseridfailed_size() const;
  void clear_strfrienduseridfailed();
  static const int kStrFriendUserIDFailedFieldNumber = 2;
  const ::std::string& strfrienduseridfailed(int index) const;
  ::std::string* mutable_strfrienduseridfailed(int index);
  void set_strfrienduseridfailed(int index, const ::std::string& value);
  void set_strfrienduseridfailed(int index, const char* value);
  void set_strfrienduseridfailed(int index, const char* value, size_t size);
  ::std::string* add_strfrienduseridfailed();
  void add_strfrienduseridfailed(const ::std::string& value);
  void add_strfrienduseridfailed(const char* value);
  void add_strfrienduseridfailed(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strfrienduseridfailed() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strfrienduseridfailed();

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DelFriendsRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strfrienduseridfailed_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryFriendsReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryFriendsReq_USR) */ {
 public:
  QueryFriendsReq_USR();
  virtual ~QueryFriendsReq_USR();

  QueryFriendsReq_USR(const QueryFriendsReq_USR& from);

  inline QueryFriendsReq_USR& operator=(const QueryFriendsReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryFriendsReq_USR& default_instance();

  static inline const QueryFriendsReq_USR* internal_default_instance() {
    return reinterpret_cast<const QueryFriendsReq_USR*>(
               &_QueryFriendsReq_USR_default_instance_);
  }

  void Swap(QueryFriendsReq_USR* other);

  // implements Message ----------------------------------------------

  inline QueryFriendsReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryFriendsReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryFriendsReq_USR& from);
  void MergeFrom(const QueryFriendsReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryFriendsReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strValue = 3;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiBeginIndex = 2;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 2;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryFriendsReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uibeginindex_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryFriendsRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryFriendsRsp_USR) */ {
 public:
  QueryFriendsRsp_USR();
  virtual ~QueryFriendsRsp_USR();

  QueryFriendsRsp_USR(const QueryFriendsRsp_USR& from);

  inline QueryFriendsRsp_USR& operator=(const QueryFriendsRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryFriendsRsp_USR& default_instance();

  static inline const QueryFriendsRsp_USR* internal_default_instance() {
    return reinterpret_cast<const QueryFriendsRsp_USR*>(
               &_QueryFriendsRsp_USR_default_instance_);
  }

  void Swap(QueryFriendsRsp_USR* other);

  // implements Message ----------------------------------------------

  inline QueryFriendsRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryFriendsRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryFriendsRsp_USR& from);
  void MergeFrom(const QueryFriendsRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryFriendsRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strAllFriendUserID = 1;
  int strallfrienduserid_size() const;
  void clear_strallfrienduserid();
  static const int kStrAllFriendUserIDFieldNumber = 1;
  const ::std::string& strallfrienduserid(int index) const;
  ::std::string* mutable_strallfrienduserid(int index);
  void set_strallfrienduserid(int index, const ::std::string& value);
  void set_strallfrienduserid(int index, const char* value);
  void set_strallfrienduserid(int index, const char* value, size_t size);
  ::std::string* add_strallfrienduserid();
  void add_strallfrienduserid(const ::std::string& value);
  void add_strallfrienduserid(const char* value);
  void add_strallfrienduserid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strallfrienduserid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strallfrienduserid();

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryFriendsRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strallfrienduserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageAddressReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.StorageAddressReq_USR) */ {
 public:
  StorageAddressReq_USR();
  virtual ~StorageAddressReq_USR();

  StorageAddressReq_USR(const StorageAddressReq_USR& from);

  inline StorageAddressReq_USR& operator=(const StorageAddressReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageAddressReq_USR& default_instance();

  static inline const StorageAddressReq_USR* internal_default_instance() {
    return reinterpret_cast<const StorageAddressReq_USR*>(
               &_StorageAddressReq_USR_default_instance_);
  }

  void Swap(StorageAddressReq_USR* other);

  // implements Message ----------------------------------------------

  inline StorageAddressReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageAddressReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageAddressReq_USR& from);
  void MergeFrom(const StorageAddressReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageAddressReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strFileID = 4;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 4;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  #if LANG_CXX11
  void set_strfileid(::std::string&& value);
  #endif
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // uint32 uiStorageType = 2;
  void clear_uistoragetype();
  static const int kUiStorageTypeFieldNumber = 2;
  ::google::protobuf::uint32 uistoragetype() const;
  void set_uistoragetype(::google::protobuf::uint32 value);

  // uint32 uiStorageAction = 3;
  void clear_uistorageaction();
  static const int kUiStorageActionFieldNumber = 3;
  ::google::protobuf::uint32 uistorageaction() const;
  void set_uistorageaction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.StorageAddressReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::google::protobuf::uint32 uistoragetype_;
  ::google::protobuf::uint32 uistorageaction_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageAddressRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.StorageAddressRsp_USR) */ {
 public:
  StorageAddressRsp_USR();
  virtual ~StorageAddressRsp_USR();

  StorageAddressRsp_USR(const StorageAddressRsp_USR& from);

  inline StorageAddressRsp_USR& operator=(const StorageAddressRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageAddressRsp_USR& default_instance();

  static inline const StorageAddressRsp_USR* internal_default_instance() {
    return reinterpret_cast<const StorageAddressRsp_USR*>(
               &_StorageAddressRsp_USR_default_instance_);
  }

  void Swap(StorageAddressRsp_USR* other);

  // implements Message ----------------------------------------------

  inline StorageAddressRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageAddressRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageAddressRsp_USR& from);
  void MergeFrom(const StorageAddressRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageAddressRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAddress = 1;
  void clear_straddress();
  static const int kStrAddressFieldNumber = 1;
  const ::std::string& straddress() const;
  void set_straddress(const ::std::string& value);
  #if LANG_CXX11
  void set_straddress(::std::string&& value);
  #endif
  void set_straddress(const char* value);
  void set_straddress(const char* value, size_t size);
  ::std::string* mutable_straddress();
  ::std::string* release_straddress();
  void set_allocated_straddress(::std::string* straddress);

  // uint32 uiPort = 2;
  void clear_uiport();
  static const int kUiPortFieldNumber = 2;
  ::google::protobuf::uint32 uiport() const;
  void set_uiport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.StorageAddressRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr straddress_;
  ::google::protobuf::uint32 uiport_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P2pInfoReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.P2pInfoReq_USR) */ {
 public:
  P2pInfoReq_USR();
  virtual ~P2pInfoReq_USR();

  P2pInfoReq_USR(const P2pInfoReq_USR& from);

  inline P2pInfoReq_USR& operator=(const P2pInfoReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P2pInfoReq_USR& default_instance();

  static inline const P2pInfoReq_USR* internal_default_instance() {
    return reinterpret_cast<const P2pInfoReq_USR*>(
               &_P2pInfoReq_USR_default_instance_);
  }

  void Swap(P2pInfoReq_USR* other);

  // implements Message ----------------------------------------------

  inline P2pInfoReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  P2pInfoReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P2pInfoReq_USR& from);
  void MergeFrom(const P2pInfoReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P2pInfoReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strUserIpAddress = 2;
  void clear_struseripaddress();
  static const int kStrUserIpAddressFieldNumber = 2;
  const ::std::string& struseripaddress() const;
  void set_struseripaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_struseripaddress(::std::string&& value);
  #endif
  void set_struseripaddress(const char* value);
  void set_struseripaddress(const char* value, size_t size);
  ::std::string* mutable_struseripaddress();
  ::std::string* release_struseripaddress();
  void set_allocated_struseripaddress(::std::string* struseripaddress);

  // string strDevID = 3;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 3;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // @@protoc_insertion_point(class_scope:Interactive.Message.P2pInfoReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr struseripaddress_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P2pInfoRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.P2pInfoRsp_USR) */ {
 public:
  P2pInfoRsp_USR();
  virtual ~P2pInfoRsp_USR();

  P2pInfoRsp_USR(const P2pInfoRsp_USR& from);

  inline P2pInfoRsp_USR& operator=(const P2pInfoRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P2pInfoRsp_USR& default_instance();

  static inline const P2pInfoRsp_USR* internal_default_instance() {
    return reinterpret_cast<const P2pInfoRsp_USR*>(
               &_P2pInfoRsp_USR_default_instance_);
  }

  void Swap(P2pInfoRsp_USR* other);

  // implements Message ----------------------------------------------

  inline P2pInfoRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  P2pInfoRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P2pInfoRsp_USR& from);
  void MergeFrom(const P2pInfoRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P2pInfoRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strP2pServer = 1;
  void clear_strp2pserver();
  static const int kStrP2PServerFieldNumber = 1;
  const ::std::string& strp2pserver() const;
  void set_strp2pserver(const ::std::string& value);
  #if LANG_CXX11
  void set_strp2pserver(::std::string&& value);
  #endif
  void set_strp2pserver(const char* value);
  void set_strp2pserver(const char* value, size_t size);
  ::std::string* mutable_strp2pserver();
  ::std::string* release_strp2pserver();
  void set_allocated_strp2pserver(::std::string* strp2pserver);

  // string strP2pID = 2;
  void clear_strp2pid();
  static const int kStrP2PIDFieldNumber = 2;
  const ::std::string& strp2pid() const;
  void set_strp2pid(const ::std::string& value);
  #if LANG_CXX11
  void set_strp2pid(::std::string&& value);
  #endif
  void set_strp2pid(const char* value);
  void set_strp2pid(const char* value, size_t size);
  ::std::string* mutable_strp2pid();
  ::std::string* release_strp2pid();
  void set_allocated_strp2pid(::std::string* strp2pid);

  // uint32 uiLease = 3;
  void clear_uilease();
  static const int kUiLeaseFieldNumber = 3;
  ::google::protobuf::uint32 uilease() const;
  void set_uilease(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.P2pInfoRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strp2pserver_;
  ::google::protobuf::internal::ArenaStringPtr strp2pid_;
  ::google::protobuf::uint32 uilease_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFileReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DeleteFileReq_USR) */ {
 public:
  DeleteFileReq_USR();
  virtual ~DeleteFileReq_USR();

  DeleteFileReq_USR(const DeleteFileReq_USR& from);

  inline DeleteFileReq_USR& operator=(const DeleteFileReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFileReq_USR& default_instance();

  static inline const DeleteFileReq_USR* internal_default_instance() {
    return reinterpret_cast<const DeleteFileReq_USR*>(
               &_DeleteFileReq_USR_default_instance_);
  }

  void Swap(DeleteFileReq_USR* other);

  // implements Message ----------------------------------------------

  inline DeleteFileReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFileReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFileReq_USR& from);
  void MergeFrom(const DeleteFileReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFileReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strFileID = 2;
  int strfileid_size() const;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 2;
  const ::std::string& strfileid(int index) const;
  ::std::string* mutable_strfileid(int index);
  void set_strfileid(int index, const ::std::string& value);
  void set_strfileid(int index, const char* value);
  void set_strfileid(int index, const char* value, size_t size);
  ::std::string* add_strfileid();
  void add_strfileid(const ::std::string& value);
  void add_strfileid(const char* value);
  void add_strfileid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strfileid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strfileid();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DeleteFileReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strfileid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFileRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DeleteFileRsp_USR) */ {
 public:
  DeleteFileRsp_USR();
  virtual ~DeleteFileRsp_USR();

  DeleteFileRsp_USR(const DeleteFileRsp_USR& from);

  inline DeleteFileRsp_USR& operator=(const DeleteFileRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFileRsp_USR& default_instance();

  static inline const DeleteFileRsp_USR* internal_default_instance() {
    return reinterpret_cast<const DeleteFileRsp_USR*>(
               &_DeleteFileRsp_USR_default_instance_);
  }

  void Swap(DeleteFileRsp_USR* other);

  // implements Message ----------------------------------------------

  inline DeleteFileRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFileRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFileRsp_USR& from);
  void MergeFrom(const DeleteFileRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFileRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strFileIDFailed = 2;
  int strfileidfailed_size() const;
  void clear_strfileidfailed();
  static const int kStrFileIDFailedFieldNumber = 2;
  const ::std::string& strfileidfailed(int index) const;
  ::std::string* mutable_strfileidfailed(int index);
  void set_strfileidfailed(int index, const ::std::string& value);
  void set_strfileidfailed(int index, const char* value);
  void set_strfileidfailed(int index, const char* value, size_t size);
  ::std::string* add_strfileidfailed();
  void add_strfileidfailed(const ::std::string& value);
  void add_strfileidfailed(const char* value);
  void add_strfileidfailed(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strfileidfailed() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strfileidfailed();

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DeleteFileRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strfileidfailed_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadFileReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DownloadFileReq_USR) */ {
 public:
  DownloadFileReq_USR();
  virtual ~DownloadFileReq_USR();

  DownloadFileReq_USR(const DownloadFileReq_USR& from);

  inline DownloadFileReq_USR& operator=(const DownloadFileReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadFileReq_USR& default_instance();

  static inline const DownloadFileReq_USR* internal_default_instance() {
    return reinterpret_cast<const DownloadFileReq_USR*>(
               &_DownloadFileReq_USR_default_instance_);
  }

  void Swap(DownloadFileReq_USR* other);

  // implements Message ----------------------------------------------

  inline DownloadFileReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadFileReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadFileReq_USR& from);
  void MergeFrom(const DownloadFileReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadFileReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string strFileID = 2;
  int strfileid_size() const;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 2;
  const ::std::string& strfileid(int index) const;
  ::std::string* mutable_strfileid(int index);
  void set_strfileid(int index, const ::std::string& value);
  void set_strfileid(int index, const char* value);
  void set_strfileid(int index, const char* value, size_t size);
  ::std::string* add_strfileid();
  void add_strfileid(const ::std::string& value);
  void add_strfileid(const char* value);
  void add_strfileid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strfileid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strfileid();

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DownloadFileReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strfileid_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadFileRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.DownloadFileRsp_USR) */ {
 public:
  DownloadFileRsp_USR();
  virtual ~DownloadFileRsp_USR();

  DownloadFileRsp_USR(const DownloadFileRsp_USR& from);

  inline DownloadFileRsp_USR& operator=(const DownloadFileRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadFileRsp_USR& default_instance();

  static inline const DownloadFileRsp_USR* internal_default_instance() {
    return reinterpret_cast<const DownloadFileRsp_USR*>(
               &_DownloadFileRsp_USR_default_instance_);
  }

  void Swap(DownloadFileRsp_USR* other);

  // implements Message ----------------------------------------------

  inline DownloadFileRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadFileRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadFileRsp_USR& from);
  void MergeFrom(const DownloadFileRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadFileRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  int fileurl_size() const;
  void clear_fileurl();
  static const int kFileUrlFieldNumber = 2;
  const ::Interactive::Message::FileUrl& fileurl(int index) const;
  ::Interactive::Message::FileUrl* mutable_fileurl(int index);
  ::Interactive::Message::FileUrl* add_fileurl();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >*
      mutable_fileurl();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >&
      fileurl() const;

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.DownloadFileRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl > fileurl_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryFileReq_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryFileReq_USR) */ {
 public:
  QueryFileReq_USR();
  virtual ~QueryFileReq_USR();

  QueryFileReq_USR(const QueryFileReq_USR& from);

  inline QueryFileReq_USR& operator=(const QueryFileReq_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryFileReq_USR& default_instance();

  static inline const QueryFileReq_USR* internal_default_instance() {
    return reinterpret_cast<const QueryFileReq_USR*>(
               &_QueryFileReq_USR_default_instance_);
  }

  void Swap(QueryFileReq_USR* other);

  // implements Message ----------------------------------------------

  inline QueryFileReq_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryFileReq_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryFileReq_USR& from);
  void MergeFrom(const QueryFileReq_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryFileReq_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserID = 1;
  void clear_struserid();
  static const int kStrUserIDFieldNumber = 1;
  const ::std::string& struserid() const;
  void set_struserid(const ::std::string& value);
  #if LANG_CXX11
  void set_struserid(::std::string&& value);
  #endif
  void set_struserid(const char* value);
  void set_struserid(const char* value, size_t size);
  ::std::string* mutable_struserid();
  ::std::string* release_struserid();
  void set_allocated_struserid(::std::string* struserid);

  // string strDevID = 2;
  void clear_strdevid();
  static const int kStrDevIDFieldNumber = 2;
  const ::std::string& strdevid() const;
  void set_strdevid(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevid(::std::string&& value);
  #endif
  void set_strdevid(const char* value);
  void set_strdevid(const char* value, size_t size);
  ::std::string* mutable_strdevid();
  ::std::string* release_strdevid();
  void set_allocated_strdevid(::std::string* strdevid);

  // string strBeginDate = 4;
  void clear_strbegindate();
  static const int kStrBeginDateFieldNumber = 4;
  const ::std::string& strbegindate() const;
  void set_strbegindate(const ::std::string& value);
  #if LANG_CXX11
  void set_strbegindate(::std::string&& value);
  #endif
  void set_strbegindate(const char* value);
  void set_strbegindate(const char* value, size_t size);
  ::std::string* mutable_strbegindate();
  ::std::string* release_strbegindate();
  void set_allocated_strbegindate(::std::string* strbegindate);

  // string strEndDate = 5;
  void clear_strenddate();
  static const int kStrEndDateFieldNumber = 5;
  const ::std::string& strenddate() const;
  void set_strenddate(const ::std::string& value);
  #if LANG_CXX11
  void set_strenddate(::std::string&& value);
  #endif
  void set_strenddate(const char* value);
  void set_strenddate(const char* value, size_t size);
  ::std::string* mutable_strenddate();
  ::std::string* release_strenddate();
  void set_allocated_strenddate(::std::string* strenddate);

  // string strValue = 7;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 7;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // uint32 uiBeginIndex = 3;
  void clear_uibeginindex();
  static const int kUiBeginIndexFieldNumber = 3;
  ::google::protobuf::uint32 uibeginindex() const;
  void set_uibeginindex(::google::protobuf::uint32 value);

  // uint32 uiBusinessType = 6;
  void clear_uibusinesstype();
  static const int kUiBusinessTypeFieldNumber = 6;
  ::google::protobuf::uint32 uibusinesstype() const;
  void set_uibusinesstype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryFileReq_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr struserid_;
  ::google::protobuf::internal::ArenaStringPtr strdevid_;
  ::google::protobuf::internal::ArenaStringPtr strbegindate_;
  ::google::protobuf::internal::ArenaStringPtr strenddate_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  ::google::protobuf::uint32 uibeginindex_;
  ::google::protobuf::uint32 uibusinesstype_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryFileRsp_USR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.QueryFileRsp_USR) */ {
 public:
  QueryFileRsp_USR();
  virtual ~QueryFileRsp_USR();

  QueryFileRsp_USR(const QueryFileRsp_USR& from);

  inline QueryFileRsp_USR& operator=(const QueryFileRsp_USR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryFileRsp_USR& default_instance();

  static inline const QueryFileRsp_USR* internal_default_instance() {
    return reinterpret_cast<const QueryFileRsp_USR*>(
               &_QueryFileRsp_USR_default_instance_);
  }

  void Swap(QueryFileRsp_USR* other);

  // implements Message ----------------------------------------------

  inline QueryFileRsp_USR* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryFileRsp_USR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryFileRsp_USR& from);
  void MergeFrom(const QueryFileRsp_USR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryFileRsp_USR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.File fileInfo = 2;
  int fileinfo_size() const;
  void clear_fileinfo();
  static const int kFileInfoFieldNumber = 2;
  const ::Interactive::Message::File& fileinfo(int index) const;
  ::Interactive::Message::File* mutable_fileinfo(int index);
  ::Interactive::Message::File* add_fileinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
      mutable_fileinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
      fileinfo() const;

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.QueryFileRsp_USR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File > fileinfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOnlineDevInfoReq_INNER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetOnlineDevInfoReq_INNER) */ {
 public:
  GetOnlineDevInfoReq_INNER();
  virtual ~GetOnlineDevInfoReq_INNER();

  GetOnlineDevInfoReq_INNER(const GetOnlineDevInfoReq_INNER& from);

  inline GetOnlineDevInfoReq_INNER& operator=(const GetOnlineDevInfoReq_INNER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOnlineDevInfoReq_INNER& default_instance();

  static inline const GetOnlineDevInfoReq_INNER* internal_default_instance() {
    return reinterpret_cast<const GetOnlineDevInfoReq_INNER*>(
               &_GetOnlineDevInfoReq_INNER_default_instance_);
  }

  void Swap(GetOnlineDevInfoReq_INNER* other);

  // implements Message ----------------------------------------------

  inline GetOnlineDevInfoReq_INNER* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOnlineDevInfoReq_INNER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOnlineDevInfoReq_INNER& from);
  void MergeFrom(const GetOnlineDevInfoReq_INNER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOnlineDevInfoReq_INNER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetOnlineDevInfoReq_INNER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOnlineDevInfoRsp_INNER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetOnlineDevInfoRsp_INNER) */ {
 public:
  GetOnlineDevInfoRsp_INNER();
  virtual ~GetOnlineDevInfoRsp_INNER();

  GetOnlineDevInfoRsp_INNER(const GetOnlineDevInfoRsp_INNER& from);

  inline GetOnlineDevInfoRsp_INNER& operator=(const GetOnlineDevInfoRsp_INNER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOnlineDevInfoRsp_INNER& default_instance();

  static inline const GetOnlineDevInfoRsp_INNER* internal_default_instance() {
    return reinterpret_cast<const GetOnlineDevInfoRsp_INNER*>(
               &_GetOnlineDevInfoRsp_INNER_default_instance_);
  }

  void Swap(GetOnlineDevInfoRsp_INNER* other);

  // implements Message ----------------------------------------------

  inline GetOnlineDevInfoRsp_INNER* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOnlineDevInfoRsp_INNER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOnlineDevInfoRsp_INNER& from);
  void MergeFrom(const GetOnlineDevInfoRsp_INNER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOnlineDevInfoRsp_INNER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.Device devInfo = 1;
  int devinfo_size() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 1;
  const ::Interactive::Message::Device& devinfo(int index) const;
  ::Interactive::Message::Device* mutable_devinfo(int index);
  ::Interactive::Message::Device* add_devinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
      mutable_devinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
      devinfo() const;

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetOnlineDevInfoRsp_INNER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device > devinfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BroadcastOnlineDevInfo_INNER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.BroadcastOnlineDevInfo_INNER) */ {
 public:
  BroadcastOnlineDevInfo_INNER();
  virtual ~BroadcastOnlineDevInfo_INNER();

  BroadcastOnlineDevInfo_INNER(const BroadcastOnlineDevInfo_INNER& from);

  inline BroadcastOnlineDevInfo_INNER& operator=(const BroadcastOnlineDevInfo_INNER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastOnlineDevInfo_INNER& default_instance();

  static inline const BroadcastOnlineDevInfo_INNER* internal_default_instance() {
    return reinterpret_cast<const BroadcastOnlineDevInfo_INNER*>(
               &_BroadcastOnlineDevInfo_INNER_default_instance_);
  }

  void Swap(BroadcastOnlineDevInfo_INNER* other);

  // implements Message ----------------------------------------------

  inline BroadcastOnlineDevInfo_INNER* New() const PROTOBUF_FINAL { return New(NULL); }

  BroadcastOnlineDevInfo_INNER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BroadcastOnlineDevInfo_INNER& from);
  void MergeFrom(const BroadcastOnlineDevInfo_INNER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BroadcastOnlineDevInfo_INNER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.Device devInfo = 1;
  int devinfo_size() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 1;
  const ::Interactive::Message::Device& devinfo(int index) const;
  ::Interactive::Message::Device* mutable_devinfo(int index);
  ::Interactive::Message::Device* add_devinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
      mutable_devinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
      devinfo() const;

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.BroadcastOnlineDevInfo_INNER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device > devinfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOnlineUserInfoReq_INNER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetOnlineUserInfoReq_INNER) */ {
 public:
  GetOnlineUserInfoReq_INNER();
  virtual ~GetOnlineUserInfoReq_INNER();

  GetOnlineUserInfoReq_INNER(const GetOnlineUserInfoReq_INNER& from);

  inline GetOnlineUserInfoReq_INNER& operator=(const GetOnlineUserInfoReq_INNER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOnlineUserInfoReq_INNER& default_instance();

  static inline const GetOnlineUserInfoReq_INNER* internal_default_instance() {
    return reinterpret_cast<const GetOnlineUserInfoReq_INNER*>(
               &_GetOnlineUserInfoReq_INNER_default_instance_);
  }

  void Swap(GetOnlineUserInfoReq_INNER* other);

  // implements Message ----------------------------------------------

  inline GetOnlineUserInfoReq_INNER* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOnlineUserInfoReq_INNER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOnlineUserInfoReq_INNER& from);
  void MergeFrom(const GetOnlineUserInfoReq_INNER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOnlineUserInfoReq_INNER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetOnlineUserInfoReq_INNER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOnlineUserInfoRsp_INNER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.GetOnlineUserInfoRsp_INNER) */ {
 public:
  GetOnlineUserInfoRsp_INNER();
  virtual ~GetOnlineUserInfoRsp_INNER();

  GetOnlineUserInfoRsp_INNER(const GetOnlineUserInfoRsp_INNER& from);

  inline GetOnlineUserInfoRsp_INNER& operator=(const GetOnlineUserInfoRsp_INNER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOnlineUserInfoRsp_INNER& default_instance();

  static inline const GetOnlineUserInfoRsp_INNER* internal_default_instance() {
    return reinterpret_cast<const GetOnlineUserInfoRsp_INNER*>(
               &_GetOnlineUserInfoRsp_INNER_default_instance_);
  }

  void Swap(GetOnlineUserInfoRsp_INNER* other);

  // implements Message ----------------------------------------------

  inline GetOnlineUserInfoRsp_INNER* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOnlineUserInfoRsp_INNER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOnlineUserInfoRsp_INNER& from);
  void MergeFrom(const GetOnlineUserInfoRsp_INNER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOnlineUserInfoRsp_INNER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.User userInfo = 1;
  int userinfo_size() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo(int index) const;
  ::Interactive::Message::User* mutable_userinfo(int index);
  ::Interactive::Message::User* add_userinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
      mutable_userinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
      userinfo() const;

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.GetOnlineUserInfoRsp_INNER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User > userinfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BroadcastOnlineUserInfo_INNER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.BroadcastOnlineUserInfo_INNER) */ {
 public:
  BroadcastOnlineUserInfo_INNER();
  virtual ~BroadcastOnlineUserInfo_INNER();

  BroadcastOnlineUserInfo_INNER(const BroadcastOnlineUserInfo_INNER& from);

  inline BroadcastOnlineUserInfo_INNER& operator=(const BroadcastOnlineUserInfo_INNER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastOnlineUserInfo_INNER& default_instance();

  static inline const BroadcastOnlineUserInfo_INNER* internal_default_instance() {
    return reinterpret_cast<const BroadcastOnlineUserInfo_INNER*>(
               &_BroadcastOnlineUserInfo_INNER_default_instance_);
  }

  void Swap(BroadcastOnlineUserInfo_INNER* other);

  // implements Message ----------------------------------------------

  inline BroadcastOnlineUserInfo_INNER* New() const PROTOBUF_FINAL { return New(NULL); }

  BroadcastOnlineUserInfo_INNER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BroadcastOnlineUserInfo_INNER& from);
  void MergeFrom(const BroadcastOnlineUserInfo_INNER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BroadcastOnlineUserInfo_INNER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interactive.Message.User userInfo = 1;
  int userinfo_size() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::Interactive::Message::User& userinfo(int index) const;
  ::Interactive::Message::User* mutable_userinfo(int index);
  ::Interactive::Message::User* add_userinfo();
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
      mutable_userinfo();
  const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
      userinfo() const;

  // string strValue = 2;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_strvalue(::std::string&& value);
  #endif
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:Interactive.Message.BroadcastOnlineUserInfo_INNER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User > userinfo_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.Req) */ {
 public:
  Req();
  virtual ~Req();

  Req(const Req& from);

  inline Req& operator=(const Req& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Req& default_instance();

  static inline const Req* internal_default_instance() {
    return reinterpret_cast<const Req*>(
               &_Req_default_instance_);
  }

  void Swap(Req* other);

  // implements Message ----------------------------------------------

  inline Req* New() const PROTOBUF_FINAL { return New(NULL); }

  Req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Req& from);
  void MergeFrom(const Req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  bool has_getaccessaddressreq_dev_value() const;
  void clear_getaccessaddressreq_dev_value();
  static const int kGetAccessAddressReqDEVValueFieldNumber = 10;
  const ::Interactive::Message::GetAccessAddressReq_DEV& getaccessaddressreq_dev_value() const;
  ::Interactive::Message::GetAccessAddressReq_DEV* mutable_getaccessaddressreq_dev_value();
  ::Interactive::Message::GetAccessAddressReq_DEV* release_getaccessaddressreq_dev_value();
  void set_allocated_getaccessaddressreq_dev_value(::Interactive::Message::GetAccessAddressReq_DEV* getaccessaddressreq_dev_value);

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  bool has_loginreq_dev_value() const;
  void clear_loginreq_dev_value();
  static const int kLoginReqDEVValueFieldNumber = 20;
  const ::Interactive::Message::LoginReq_DEV& loginreq_dev_value() const;
  ::Interactive::Message::LoginReq_DEV* mutable_loginreq_dev_value();
  ::Interactive::Message::LoginReq_DEV* release_loginreq_dev_value();
  void set_allocated_loginreq_dev_value(::Interactive::Message::LoginReq_DEV* loginreq_dev_value);

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  bool has_logoutreq_dev_value() const;
  void clear_logoutreq_dev_value();
  static const int kLogoutReqDEVValueFieldNumber = 30;
  const ::Interactive::Message::LogoutReq_DEV& logoutreq_dev_value() const;
  ::Interactive::Message::LogoutReq_DEV* mutable_logoutreq_dev_value();
  ::Interactive::Message::LogoutReq_DEV* release_logoutreq_dev_value();
  void set_allocated_logoutreq_dev_value(::Interactive::Message::LogoutReq_DEV* logoutreq_dev_value);

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  bool has_shakehandreq_dev_value() const;
  void clear_shakehandreq_dev_value();
  static const int kShakehandReqDEVValueFieldNumber = 40;
  const ::Interactive::Message::ShakehandReq_DEV& shakehandreq_dev_value() const;
  ::Interactive::Message::ShakehandReq_DEV* mutable_shakehandreq_dev_value();
  ::Interactive::Message::ShakehandReq_DEV* release_shakehandreq_dev_value();
  void set_allocated_shakehandreq_dev_value(::Interactive::Message::ShakehandReq_DEV* shakehandreq_dev_value);

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  bool has_configinforeq_dev_value() const;
  void clear_configinforeq_dev_value();
  static const int kConfigInfoReqDEVValueFieldNumber = 50;
  const ::Interactive::Message::ConfigInfoReq_DEV& configinforeq_dev_value() const;
  ::Interactive::Message::ConfigInfoReq_DEV* mutable_configinforeq_dev_value();
  ::Interactive::Message::ConfigInfoReq_DEV* release_configinforeq_dev_value();
  void set_allocated_configinforeq_dev_value(::Interactive::Message::ConfigInfoReq_DEV* configinforeq_dev_value);

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  bool has_storageaddressreq_dev_value() const;
  void clear_storageaddressreq_dev_value();
  static const int kStorageAddressReqDEVValueFieldNumber = 52;
  const ::Interactive::Message::StorageAddressReq_DEV& storageaddressreq_dev_value() const;
  ::Interactive::Message::StorageAddressReq_DEV* mutable_storageaddressreq_dev_value();
  ::Interactive::Message::StorageAddressReq_DEV* release_storageaddressreq_dev_value();
  void set_allocated_storageaddressreq_dev_value(::Interactive::Message::StorageAddressReq_DEV* storageaddressreq_dev_value);

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  bool has_p2pinforeq_dev_value() const;
  void clear_p2pinforeq_dev_value();
  static const int kP2PInfoReqDEVValueFieldNumber = 54;
  const ::Interactive::Message::P2pInfoReq_DEV& p2pinforeq_dev_value() const;
  ::Interactive::Message::P2pInfoReq_DEV* mutable_p2pinforeq_dev_value();
  ::Interactive::Message::P2pInfoReq_DEV* release_p2pinforeq_dev_value();
  void set_allocated_p2pinforeq_dev_value(::Interactive::Message::P2pInfoReq_DEV* p2pinforeq_dev_value);

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  bool has_addfilereq_dev_value() const;
  void clear_addfilereq_dev_value();
  static const int kAddFileReqDEVValueFieldNumber = 60;
  const ::Interactive::Message::AddFileReq_DEV& addfilereq_dev_value() const;
  ::Interactive::Message::AddFileReq_DEV* mutable_addfilereq_dev_value();
  ::Interactive::Message::AddFileReq_DEV* release_addfilereq_dev_value();
  void set_allocated_addfilereq_dev_value(::Interactive::Message::AddFileReq_DEV* addfilereq_dev_value);

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  bool has_msgprehandlerreq_usr_value() const;
  void clear_msgprehandlerreq_usr_value();
  static const int kMsgPreHandlerReqUSRValueFieldNumber = 65;
  const ::Interactive::Message::MsgPreHandlerReq_USR& msgprehandlerreq_usr_value() const;
  ::Interactive::Message::MsgPreHandlerReq_USR* mutable_msgprehandlerreq_usr_value();
  ::Interactive::Message::MsgPreHandlerReq_USR* release_msgprehandlerreq_usr_value();
  void set_allocated_msgprehandlerreq_usr_value(::Interactive::Message::MsgPreHandlerReq_USR* msgprehandlerreq_usr_value);

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  bool has_getaccessaddressreq_usr_value() const;
  void clear_getaccessaddressreq_usr_value();
  static const int kGetAccessAddressReqUSRValueFieldNumber = 70;
  const ::Interactive::Message::GetAccessAddressReq_USR& getaccessaddressreq_usr_value() const;
  ::Interactive::Message::GetAccessAddressReq_USR* mutable_getaccessaddressreq_usr_value();
  ::Interactive::Message::GetAccessAddressReq_USR* release_getaccessaddressreq_usr_value();
  void set_allocated_getaccessaddressreq_usr_value(::Interactive::Message::GetAccessAddressReq_USR* getaccessaddressreq_usr_value);

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  bool has_registeruserreq_usr_value() const;
  void clear_registeruserreq_usr_value();
  static const int kRegisterUserReqUSRValueFieldNumber = 80;
  const ::Interactive::Message::RegisterUserReq_USR& registeruserreq_usr_value() const;
  ::Interactive::Message::RegisterUserReq_USR* mutable_registeruserreq_usr_value();
  ::Interactive::Message::RegisterUserReq_USR* release_registeruserreq_usr_value();
  void set_allocated_registeruserreq_usr_value(::Interactive::Message::RegisterUserReq_USR* registeruserreq_usr_value);

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  bool has_unregisteruserreq_usr_value() const;
  void clear_unregisteruserreq_usr_value();
  static const int kUnRegisterUserReqUSRValueFieldNumber = 90;
  const ::Interactive::Message::UnRegisterUserReq_USR& unregisteruserreq_usr_value() const;
  ::Interactive::Message::UnRegisterUserReq_USR* mutable_unregisteruserreq_usr_value();
  ::Interactive::Message::UnRegisterUserReq_USR* release_unregisteruserreq_usr_value();
  void set_allocated_unregisteruserreq_usr_value(::Interactive::Message::UnRegisterUserReq_USR* unregisteruserreq_usr_value);

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  bool has_queryusrinforeq_usr_value() const;
  void clear_queryusrinforeq_usr_value();
  static const int kQueryUsrInfoReqUSRValueFieldNumber = 100;
  const ::Interactive::Message::QueryUsrInfoReq_USR& queryusrinforeq_usr_value() const;
  ::Interactive::Message::QueryUsrInfoReq_USR* mutable_queryusrinforeq_usr_value();
  ::Interactive::Message::QueryUsrInfoReq_USR* release_queryusrinforeq_usr_value();
  void set_allocated_queryusrinforeq_usr_value(::Interactive::Message::QueryUsrInfoReq_USR* queryusrinforeq_usr_value);

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  bool has_modifyuserinforeq_usr_value() const;
  void clear_modifyuserinforeq_usr_value();
  static const int kModifyUserInfoReqUSRValueFieldNumber = 102;
  const ::Interactive::Message::ModifyUserInfoReq_USR& modifyuserinforeq_usr_value() const;
  ::Interactive::Message::ModifyUserInfoReq_USR* mutable_modifyuserinforeq_usr_value();
  ::Interactive::Message::ModifyUserInfoReq_USR* release_modifyuserinforeq_usr_value();
  void set_allocated_modifyuserinforeq_usr_value(::Interactive::Message::ModifyUserInfoReq_USR* modifyuserinforeq_usr_value);

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  bool has_loginreq_usr_value() const;
  void clear_loginreq_usr_value();
  static const int kLoginReqUSRValueFieldNumber = 110;
  const ::Interactive::Message::LoginReq_USR& loginreq_usr_value() const;
  ::Interactive::Message::LoginReq_USR* mutable_loginreq_usr_value();
  ::Interactive::Message::LoginReq_USR* release_loginreq_usr_value();
  void set_allocated_loginreq_usr_value(::Interactive::Message::LoginReq_USR* loginreq_usr_value);

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  bool has_logoutreq_usr_value() const;
  void clear_logoutreq_usr_value();
  static const int kLogoutReqUSRValueFieldNumber = 120;
  const ::Interactive::Message::LogoutReq_USR& logoutreq_usr_value() const;
  ::Interactive::Message::LogoutReq_USR* mutable_logoutreq_usr_value();
  ::Interactive::Message::LogoutReq_USR* release_logoutreq_usr_value();
  void set_allocated_logoutreq_usr_value(::Interactive::Message::LogoutReq_USR* logoutreq_usr_value);

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  bool has_shakehandreq_usr_value() const;
  void clear_shakehandreq_usr_value();
  static const int kShakehandReqUSRValueFieldNumber = 130;
  const ::Interactive::Message::ShakehandReq_USR& shakehandreq_usr_value() const;
  ::Interactive::Message::ShakehandReq_USR* mutable_shakehandreq_usr_value();
  ::Interactive::Message::ShakehandReq_USR* release_shakehandreq_usr_value();
  void set_allocated_shakehandreq_usr_value(::Interactive::Message::ShakehandReq_USR* shakehandreq_usr_value);

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  bool has_configinforeq_usr_value() const;
  void clear_configinforeq_usr_value();
  static const int kConfigInfoReqUSRValueFieldNumber = 140;
  const ::Interactive::Message::ConfigInfoReq_USR& configinforeq_usr_value() const;
  ::Interactive::Message::ConfigInfoReq_USR* mutable_configinforeq_usr_value();
  ::Interactive::Message::ConfigInfoReq_USR* release_configinforeq_usr_value();
  void set_allocated_configinforeq_usr_value(::Interactive::Message::ConfigInfoReq_USR* configinforeq_usr_value);

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  bool has_adddevreq_usr_value() const;
  void clear_adddevreq_usr_value();
  static const int kAddDevReqUSRValueFieldNumber = 150;
  const ::Interactive::Message::AddDevReq_USR& adddevreq_usr_value() const;
  ::Interactive::Message::AddDevReq_USR* mutable_adddevreq_usr_value();
  ::Interactive::Message::AddDevReq_USR* release_adddevreq_usr_value();
  void set_allocated_adddevreq_usr_value(::Interactive::Message::AddDevReq_USR* adddevreq_usr_value);

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  bool has_deldevreq_usr_value() const;
  void clear_deldevreq_usr_value();
  static const int kDelDevReqUSRValueFieldNumber = 160;
  const ::Interactive::Message::DelDevReq_USR& deldevreq_usr_value() const;
  ::Interactive::Message::DelDevReq_USR* mutable_deldevreq_usr_value();
  ::Interactive::Message::DelDevReq_USR* release_deldevreq_usr_value();
  void set_allocated_deldevreq_usr_value(::Interactive::Message::DelDevReq_USR* deldevreq_usr_value);

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  bool has_modifydevreq_usr_value() const;
  void clear_modifydevreq_usr_value();
  static const int kModifyDevReqUSRValueFieldNumber = 170;
  const ::Interactive::Message::ModifyDevReq_USR& modifydevreq_usr_value() const;
  ::Interactive::Message::ModifyDevReq_USR* mutable_modifydevreq_usr_value();
  ::Interactive::Message::ModifyDevReq_USR* release_modifydevreq_usr_value();
  void set_allocated_modifydevreq_usr_value(::Interactive::Message::ModifyDevReq_USR* modifydevreq_usr_value);

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  bool has_querydevinforeq_usr_value() const;
  void clear_querydevinforeq_usr_value();
  static const int kQueryDevInfoReqUSRValueFieldNumber = 180;
  const ::Interactive::Message::QueryDevInfoReq_USR& querydevinforeq_usr_value() const;
  ::Interactive::Message::QueryDevInfoReq_USR* mutable_querydevinforeq_usr_value();
  ::Interactive::Message::QueryDevInfoReq_USR* release_querydevinforeq_usr_value();
  void set_allocated_querydevinforeq_usr_value(::Interactive::Message::QueryDevInfoReq_USR* querydevinforeq_usr_value);

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  bool has_querydevreq_usr_value() const;
  void clear_querydevreq_usr_value();
  static const int kQueryDevReqUSRValueFieldNumber = 190;
  const ::Interactive::Message::QueryDevReq_USR& querydevreq_usr_value() const;
  ::Interactive::Message::QueryDevReq_USR* mutable_querydevreq_usr_value();
  ::Interactive::Message::QueryDevReq_USR* release_querydevreq_usr_value();
  void set_allocated_querydevreq_usr_value(::Interactive::Message::QueryDevReq_USR* querydevreq_usr_value);

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  bool has_queryuserreq_usr_value() const;
  void clear_queryuserreq_usr_value();
  static const int kQueryUserReqUSRValueFieldNumber = 200;
  const ::Interactive::Message::QueryUserReq_USR& queryuserreq_usr_value() const;
  ::Interactive::Message::QueryUserReq_USR* mutable_queryuserreq_usr_value();
  ::Interactive::Message::QueryUserReq_USR* release_queryuserreq_usr_value();
  void set_allocated_queryuserreq_usr_value(::Interactive::Message::QueryUserReq_USR* queryuserreq_usr_value);

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  bool has_sharingdevreq_usr_value() const;
  void clear_sharingdevreq_usr_value();
  static const int kSharingDevReqUSRValueFieldNumber = 210;
  const ::Interactive::Message::SharingDevReq_USR& sharingdevreq_usr_value() const;
  ::Interactive::Message::SharingDevReq_USR* mutable_sharingdevreq_usr_value();
  ::Interactive::Message::SharingDevReq_USR* release_sharingdevreq_usr_value();
  void set_allocated_sharingdevreq_usr_value(::Interactive::Message::SharingDevReq_USR* sharingdevreq_usr_value);

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  bool has_cancelshareddevreq_usr_value() const;
  void clear_cancelshareddevreq_usr_value();
  static const int kCancelSharedDevReqUSRValueFieldNumber = 220;
  const ::Interactive::Message::CancelSharedDevReq_USR& cancelshareddevreq_usr_value() const;
  ::Interactive::Message::CancelSharedDevReq_USR* mutable_cancelshareddevreq_usr_value();
  ::Interactive::Message::CancelSharedDevReq_USR* release_cancelshareddevreq_usr_value();
  void set_allocated_cancelshareddevreq_usr_value(::Interactive::Message::CancelSharedDevReq_USR* cancelshareddevreq_usr_value);

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  bool has_addfriendsreq_usr_value() const;
  void clear_addfriendsreq_usr_value();
  static const int kAddFriendsReqUSRValueFieldNumber = 230;
  const ::Interactive::Message::AddFriendsReq_USR& addfriendsreq_usr_value() const;
  ::Interactive::Message::AddFriendsReq_USR* mutable_addfriendsreq_usr_value();
  ::Interactive::Message::AddFriendsReq_USR* release_addfriendsreq_usr_value();
  void set_allocated_addfriendsreq_usr_value(::Interactive::Message::AddFriendsReq_USR* addfriendsreq_usr_value);

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  bool has_delfriendsreq_usr_value() const;
  void clear_delfriendsreq_usr_value();
  static const int kDelFriendsReqUSRValueFieldNumber = 240;
  const ::Interactive::Message::DelFriendsReq_USR& delfriendsreq_usr_value() const;
  ::Interactive::Message::DelFriendsReq_USR* mutable_delfriendsreq_usr_value();
  ::Interactive::Message::DelFriendsReq_USR* release_delfriendsreq_usr_value();
  void set_allocated_delfriendsreq_usr_value(::Interactive::Message::DelFriendsReq_USR* delfriendsreq_usr_value);

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  bool has_queryfriendsreq_usr_value() const;
  void clear_queryfriendsreq_usr_value();
  static const int kQueryFriendsReqUSRValueFieldNumber = 250;
  const ::Interactive::Message::QueryFriendsReq_USR& queryfriendsreq_usr_value() const;
  ::Interactive::Message::QueryFriendsReq_USR* mutable_queryfriendsreq_usr_value();
  ::Interactive::Message::QueryFriendsReq_USR* release_queryfriendsreq_usr_value();
  void set_allocated_queryfriendsreq_usr_value(::Interactive::Message::QueryFriendsReq_USR* queryfriendsreq_usr_value);

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  bool has_storageaddressreq_usr_value() const;
  void clear_storageaddressreq_usr_value();
  static const int kStorageAddressReqUSRValueFieldNumber = 252;
  const ::Interactive::Message::StorageAddressReq_USR& storageaddressreq_usr_value() const;
  ::Interactive::Message::StorageAddressReq_USR* mutable_storageaddressreq_usr_value();
  ::Interactive::Message::StorageAddressReq_USR* release_storageaddressreq_usr_value();
  void set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressReq_USR* storageaddressreq_usr_value);

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  bool has_p2pinforeq_usr_value() const;
  void clear_p2pinforeq_usr_value();
  static const int kP2PInfoReqUSRValueFieldNumber = 254;
  const ::Interactive::Message::P2pInfoReq_USR& p2pinforeq_usr_value() const;
  ::Interactive::Message::P2pInfoReq_USR* mutable_p2pinforeq_usr_value();
  ::Interactive::Message::P2pInfoReq_USR* release_p2pinforeq_usr_value();
  void set_allocated_p2pinforeq_usr_value(::Interactive::Message::P2pInfoReq_USR* p2pinforeq_usr_value);

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  bool has_deletefilereq_usr_value() const;
  void clear_deletefilereq_usr_value();
  static const int kDeleteFileReqUSRValueFieldNumber = 310;
  const ::Interactive::Message::DeleteFileReq_USR& deletefilereq_usr_value() const;
  ::Interactive::Message::DeleteFileReq_USR* mutable_deletefilereq_usr_value();
  ::Interactive::Message::DeleteFileReq_USR* release_deletefilereq_usr_value();
  void set_allocated_deletefilereq_usr_value(::Interactive::Message::DeleteFileReq_USR* deletefilereq_usr_value);

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  bool has_downloadfilereq_usr_value() const;
  void clear_downloadfilereq_usr_value();
  static const int kDownloadFileReqUSRValueFieldNumber = 320;
  const ::Interactive::Message::DownloadFileReq_USR& downloadfilereq_usr_value() const;
  ::Interactive::Message::DownloadFileReq_USR* mutable_downloadfilereq_usr_value();
  ::Interactive::Message::DownloadFileReq_USR* release_downloadfilereq_usr_value();
  void set_allocated_downloadfilereq_usr_value(::Interactive::Message::DownloadFileReq_USR* downloadfilereq_usr_value);

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  bool has_queryfilereq_usr_value() const;
  void clear_queryfilereq_usr_value();
  static const int kQueryFileReqUSRValueFieldNumber = 330;
  const ::Interactive::Message::QueryFileReq_USR& queryfilereq_usr_value() const;
  ::Interactive::Message::QueryFileReq_USR* mutable_queryfilereq_usr_value();
  ::Interactive::Message::QueryFileReq_USR* release_queryfilereq_usr_value();
  void set_allocated_queryfilereq_usr_value(::Interactive::Message::QueryFileReq_USR* queryfilereq_usr_value);

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  bool has_getonlinedevinforeq_inner_value() const;
  void clear_getonlinedevinforeq_inner_value();
  static const int kGetOnlineDevInfoReqINNERValueFieldNumber = 260;
  const ::Interactive::Message::GetOnlineDevInfoReq_INNER& getonlinedevinforeq_inner_value() const;
  ::Interactive::Message::GetOnlineDevInfoReq_INNER* mutable_getonlinedevinforeq_inner_value();
  ::Interactive::Message::GetOnlineDevInfoReq_INNER* release_getonlinedevinforeq_inner_value();
  void set_allocated_getonlinedevinforeq_inner_value(::Interactive::Message::GetOnlineDevInfoReq_INNER* getonlinedevinforeq_inner_value);

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  bool has_broadcastonlinedevinfo_inner_value() const;
  void clear_broadcastonlinedevinfo_inner_value();
  static const int kBroadcastOnlineDevInfoINNERValueFieldNumber = 270;
  const ::Interactive::Message::BroadcastOnlineDevInfo_INNER& broadcastonlinedevinfo_inner_value() const;
  ::Interactive::Message::BroadcastOnlineDevInfo_INNER* mutable_broadcastonlinedevinfo_inner_value();
  ::Interactive::Message::BroadcastOnlineDevInfo_INNER* release_broadcastonlinedevinfo_inner_value();
  void set_allocated_broadcastonlinedevinfo_inner_value(::Interactive::Message::BroadcastOnlineDevInfo_INNER* broadcastonlinedevinfo_inner_value);

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  bool has_getonlineuserinforeq_inner_value() const;
  void clear_getonlineuserinforeq_inner_value();
  static const int kGetOnlineUserInfoReqINNERValueFieldNumber = 280;
  const ::Interactive::Message::GetOnlineUserInfoReq_INNER& getonlineuserinforeq_inner_value() const;
  ::Interactive::Message::GetOnlineUserInfoReq_INNER* mutable_getonlineuserinforeq_inner_value();
  ::Interactive::Message::GetOnlineUserInfoReq_INNER* release_getonlineuserinforeq_inner_value();
  void set_allocated_getonlineuserinforeq_inner_value(::Interactive::Message::GetOnlineUserInfoReq_INNER* getonlineuserinforeq_inner_value);

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  bool has_broadcastonlineuserinfo_inner_value() const;
  void clear_broadcastonlineuserinfo_inner_value();
  static const int kBroadcastOnlineUserInfoINNERValueFieldNumber = 290;
  const ::Interactive::Message::BroadcastOnlineUserInfo_INNER& broadcastonlineuserinfo_inner_value() const;
  ::Interactive::Message::BroadcastOnlineUserInfo_INNER* mutable_broadcastonlineuserinfo_inner_value();
  ::Interactive::Message::BroadcastOnlineUserInfo_INNER* release_broadcastonlineuserinfo_inner_value();
  void set_allocated_broadcastonlineuserinfo_inner_value(::Interactive::Message::BroadcastOnlineUserInfo_INNER* broadcastonlineuserinfo_inner_value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Interactive::Message::GetAccessAddressReq_DEV* getaccessaddressreq_dev_value_;
  ::Interactive::Message::LoginReq_DEV* loginreq_dev_value_;
  ::Interactive::Message::LogoutReq_DEV* logoutreq_dev_value_;
  ::Interactive::Message::ShakehandReq_DEV* shakehandreq_dev_value_;
  ::Interactive::Message::ConfigInfoReq_DEV* configinforeq_dev_value_;
  ::Interactive::Message::StorageAddressReq_DEV* storageaddressreq_dev_value_;
  ::Interactive::Message::P2pInfoReq_DEV* p2pinforeq_dev_value_;
  ::Interactive::Message::AddFileReq_DEV* addfilereq_dev_value_;
  ::Interactive::Message::MsgPreHandlerReq_USR* msgprehandlerreq_usr_value_;
  ::Interactive::Message::GetAccessAddressReq_USR* getaccessaddressreq_usr_value_;
  ::Interactive::Message::RegisterUserReq_USR* registeruserreq_usr_value_;
  ::Interactive::Message::UnRegisterUserReq_USR* unregisteruserreq_usr_value_;
  ::Interactive::Message::QueryUsrInfoReq_USR* queryusrinforeq_usr_value_;
  ::Interactive::Message::ModifyUserInfoReq_USR* modifyuserinforeq_usr_value_;
  ::Interactive::Message::LoginReq_USR* loginreq_usr_value_;
  ::Interactive::Message::LogoutReq_USR* logoutreq_usr_value_;
  ::Interactive::Message::ShakehandReq_USR* shakehandreq_usr_value_;
  ::Interactive::Message::ConfigInfoReq_USR* configinforeq_usr_value_;
  ::Interactive::Message::AddDevReq_USR* adddevreq_usr_value_;
  ::Interactive::Message::DelDevReq_USR* deldevreq_usr_value_;
  ::Interactive::Message::ModifyDevReq_USR* modifydevreq_usr_value_;
  ::Interactive::Message::QueryDevInfoReq_USR* querydevinforeq_usr_value_;
  ::Interactive::Message::QueryDevReq_USR* querydevreq_usr_value_;
  ::Interactive::Message::QueryUserReq_USR* queryuserreq_usr_value_;
  ::Interactive::Message::SharingDevReq_USR* sharingdevreq_usr_value_;
  ::Interactive::Message::CancelSharedDevReq_USR* cancelshareddevreq_usr_value_;
  ::Interactive::Message::AddFriendsReq_USR* addfriendsreq_usr_value_;
  ::Interactive::Message::DelFriendsReq_USR* delfriendsreq_usr_value_;
  ::Interactive::Message::QueryFriendsReq_USR* queryfriendsreq_usr_value_;
  ::Interactive::Message::StorageAddressReq_USR* storageaddressreq_usr_value_;
  ::Interactive::Message::P2pInfoReq_USR* p2pinforeq_usr_value_;
  ::Interactive::Message::DeleteFileReq_USR* deletefilereq_usr_value_;
  ::Interactive::Message::DownloadFileReq_USR* downloadfilereq_usr_value_;
  ::Interactive::Message::QueryFileReq_USR* queryfilereq_usr_value_;
  ::Interactive::Message::GetOnlineDevInfoReq_INNER* getonlinedevinforeq_inner_value_;
  ::Interactive::Message::BroadcastOnlineDevInfo_INNER* broadcastonlinedevinfo_inner_value_;
  ::Interactive::Message::GetOnlineUserInfoReq_INNER* getonlineuserinforeq_inner_value_;
  ::Interactive::Message::BroadcastOnlineUserInfo_INNER* broadcastonlineuserinfo_inner_value_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.Rsp) */ {
 public:
  Rsp();
  virtual ~Rsp();

  Rsp(const Rsp& from);

  inline Rsp& operator=(const Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rsp& default_instance();

  static inline const Rsp* internal_default_instance() {
    return reinterpret_cast<const Rsp*>(
               &_Rsp_default_instance_);
  }

  void Swap(Rsp* other);

  // implements Message ----------------------------------------------

  inline Rsp* New() const PROTOBUF_FINAL { return New(NULL); }

  Rsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rsp& from);
  void MergeFrom(const Rsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strRetMsg = 20;
  void clear_strretmsg();
  static const int kStrRetMsgFieldNumber = 20;
  const ::std::string& strretmsg() const;
  void set_strretmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_strretmsg(::std::string&& value);
  #endif
  void set_strretmsg(const char* value);
  void set_strretmsg(const char* value, size_t size);
  ::std::string* mutable_strretmsg();
  ::std::string* release_strretmsg();
  void set_allocated_strretmsg(::std::string* strretmsg);

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  bool has_getaccessaddressrsp_dev_value() const;
  void clear_getaccessaddressrsp_dev_value();
  static const int kGetAccessAddressRspDEVValueFieldNumber = 30;
  const ::Interactive::Message::GetAccessAddressRsp_DEV& getaccessaddressrsp_dev_value() const;
  ::Interactive::Message::GetAccessAddressRsp_DEV* mutable_getaccessaddressrsp_dev_value();
  ::Interactive::Message::GetAccessAddressRsp_DEV* release_getaccessaddressrsp_dev_value();
  void set_allocated_getaccessaddressrsp_dev_value(::Interactive::Message::GetAccessAddressRsp_DEV* getaccessaddressrsp_dev_value);

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  bool has_loginrsp_dev_value() const;
  void clear_loginrsp_dev_value();
  static const int kLoginRspDEVValueFieldNumber = 40;
  const ::Interactive::Message::LoginRsp_DEV& loginrsp_dev_value() const;
  ::Interactive::Message::LoginRsp_DEV* mutable_loginrsp_dev_value();
  ::Interactive::Message::LoginRsp_DEV* release_loginrsp_dev_value();
  void set_allocated_loginrsp_dev_value(::Interactive::Message::LoginRsp_DEV* loginrsp_dev_value);

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  bool has_logoutrsp_dev_value() const;
  void clear_logoutrsp_dev_value();
  static const int kLogoutRspDEVValueFieldNumber = 50;
  const ::Interactive::Message::LogoutRsp_DEV& logoutrsp_dev_value() const;
  ::Interactive::Message::LogoutRsp_DEV* mutable_logoutrsp_dev_value();
  ::Interactive::Message::LogoutRsp_DEV* release_logoutrsp_dev_value();
  void set_allocated_logoutrsp_dev_value(::Interactive::Message::LogoutRsp_DEV* logoutrsp_dev_value);

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  bool has_shakehandrsp_dev_value() const;
  void clear_shakehandrsp_dev_value();
  static const int kShakehandRspDEVValueFieldNumber = 60;
  const ::Interactive::Message::ShakehandRsp_DEV& shakehandrsp_dev_value() const;
  ::Interactive::Message::ShakehandRsp_DEV* mutable_shakehandrsp_dev_value();
  ::Interactive::Message::ShakehandRsp_DEV* release_shakehandrsp_dev_value();
  void set_allocated_shakehandrsp_dev_value(::Interactive::Message::ShakehandRsp_DEV* shakehandrsp_dev_value);

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  bool has_configinforsp_dev_value() const;
  void clear_configinforsp_dev_value();
  static const int kConfigInfoRspDEVValueFieldNumber = 70;
  const ::Interactive::Message::ConfigInfoRsp_DEV& configinforsp_dev_value() const;
  ::Interactive::Message::ConfigInfoRsp_DEV* mutable_configinforsp_dev_value();
  ::Interactive::Message::ConfigInfoRsp_DEV* release_configinforsp_dev_value();
  void set_allocated_configinforsp_dev_value(::Interactive::Message::ConfigInfoRsp_DEV* configinforsp_dev_value);

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  bool has_storageaddressrsp_dev_value() const;
  void clear_storageaddressrsp_dev_value();
  static const int kStorageAddressRspDEVValueFieldNumber = 72;
  const ::Interactive::Message::StorageAddressRsp_DEV& storageaddressrsp_dev_value() const;
  ::Interactive::Message::StorageAddressRsp_DEV* mutable_storageaddressrsp_dev_value();
  ::Interactive::Message::StorageAddressRsp_DEV* release_storageaddressrsp_dev_value();
  void set_allocated_storageaddressrsp_dev_value(::Interactive::Message::StorageAddressRsp_DEV* storageaddressrsp_dev_value);

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  bool has_p2pinforsp_dev_value() const;
  void clear_p2pinforsp_dev_value();
  static const int kP2PInfoRspDEVValueFieldNumber = 74;
  const ::Interactive::Message::P2pInfoRsp_DEV& p2pinforsp_dev_value() const;
  ::Interactive::Message::P2pInfoRsp_DEV* mutable_p2pinforsp_dev_value();
  ::Interactive::Message::P2pInfoRsp_DEV* release_p2pinforsp_dev_value();
  void set_allocated_p2pinforsp_dev_value(::Interactive::Message::P2pInfoRsp_DEV* p2pinforsp_dev_value);

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  bool has_addfilersp_dev_value() const;
  void clear_addfilersp_dev_value();
  static const int kAddFileRspDEVValueFieldNumber = 80;
  const ::Interactive::Message::AddFileRsp_DEV& addfilersp_dev_value() const;
  ::Interactive::Message::AddFileRsp_DEV* mutable_addfilersp_dev_value();
  ::Interactive::Message::AddFileRsp_DEV* release_addfilersp_dev_value();
  void set_allocated_addfilersp_dev_value(::Interactive::Message::AddFileRsp_DEV* addfilersp_dev_value);

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  bool has_msgprehandlerrsp_usr_value() const;
  void clear_msgprehandlerrsp_usr_value();
  static const int kMsgPreHandlerRspUSRValueFieldNumber = 85;
  const ::Interactive::Message::MsgPreHandlerRsp_USR& msgprehandlerrsp_usr_value() const;
  ::Interactive::Message::MsgPreHandlerRsp_USR* mutable_msgprehandlerrsp_usr_value();
  ::Interactive::Message::MsgPreHandlerRsp_USR* release_msgprehandlerrsp_usr_value();
  void set_allocated_msgprehandlerrsp_usr_value(::Interactive::Message::MsgPreHandlerRsp_USR* msgprehandlerrsp_usr_value);

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  bool has_getaccessaddressrsp_usr_value() const;
  void clear_getaccessaddressrsp_usr_value();
  static const int kGetAccessAddressRspUSRValueFieldNumber = 90;
  const ::Interactive::Message::GetAccessAddressRsp_USR& getaccessaddressrsp_usr_value() const;
  ::Interactive::Message::GetAccessAddressRsp_USR* mutable_getaccessaddressrsp_usr_value();
  ::Interactive::Message::GetAccessAddressRsp_USR* release_getaccessaddressrsp_usr_value();
  void set_allocated_getaccessaddressrsp_usr_value(::Interactive::Message::GetAccessAddressRsp_USR* getaccessaddressrsp_usr_value);

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  bool has_registeruserrsp_usr_value() const;
  void clear_registeruserrsp_usr_value();
  static const int kRegisterUserRspUSRValueFieldNumber = 100;
  const ::Interactive::Message::RegisterUserRsp_USR& registeruserrsp_usr_value() const;
  ::Interactive::Message::RegisterUserRsp_USR* mutable_registeruserrsp_usr_value();
  ::Interactive::Message::RegisterUserRsp_USR* release_registeruserrsp_usr_value();
  void set_allocated_registeruserrsp_usr_value(::Interactive::Message::RegisterUserRsp_USR* registeruserrsp_usr_value);

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  bool has_unregisteruserrsp_usr_value() const;
  void clear_unregisteruserrsp_usr_value();
  static const int kUnRegisterUserRspUSRValueFieldNumber = 110;
  const ::Interactive::Message::UnRegisterUserRsp_USR& unregisteruserrsp_usr_value() const;
  ::Interactive::Message::UnRegisterUserRsp_USR* mutable_unregisteruserrsp_usr_value();
  ::Interactive::Message::UnRegisterUserRsp_USR* release_unregisteruserrsp_usr_value();
  void set_allocated_unregisteruserrsp_usr_value(::Interactive::Message::UnRegisterUserRsp_USR* unregisteruserrsp_usr_value);

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  bool has_queryusrinforsp_usr_value() const;
  void clear_queryusrinforsp_usr_value();
  static const int kQueryUsrInfoRspUSRValueFieldNumber = 120;
  const ::Interactive::Message::QueryUsrInfoRsp_USR& queryusrinforsp_usr_value() const;
  ::Interactive::Message::QueryUsrInfoRsp_USR* mutable_queryusrinforsp_usr_value();
  ::Interactive::Message::QueryUsrInfoRsp_USR* release_queryusrinforsp_usr_value();
  void set_allocated_queryusrinforsp_usr_value(::Interactive::Message::QueryUsrInfoRsp_USR* queryusrinforsp_usr_value);

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  bool has_modifyuserinforsp_usr_value() const;
  void clear_modifyuserinforsp_usr_value();
  static const int kModifyUserInfoRspUSRValueFieldNumber = 122;
  const ::Interactive::Message::ModifyUserInfoRsp_USR& modifyuserinforsp_usr_value() const;
  ::Interactive::Message::ModifyUserInfoRsp_USR* mutable_modifyuserinforsp_usr_value();
  ::Interactive::Message::ModifyUserInfoRsp_USR* release_modifyuserinforsp_usr_value();
  void set_allocated_modifyuserinforsp_usr_value(::Interactive::Message::ModifyUserInfoRsp_USR* modifyuserinforsp_usr_value);

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  bool has_loginrsp_usr_value() const;
  void clear_loginrsp_usr_value();
  static const int kLoginRspUSRValueFieldNumber = 130;
  const ::Interactive::Message::LoginRsp_USR& loginrsp_usr_value() const;
  ::Interactive::Message::LoginRsp_USR* mutable_loginrsp_usr_value();
  ::Interactive::Message::LoginRsp_USR* release_loginrsp_usr_value();
  void set_allocated_loginrsp_usr_value(::Interactive::Message::LoginRsp_USR* loginrsp_usr_value);

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  bool has_logoutrsp_usr_value() const;
  void clear_logoutrsp_usr_value();
  static const int kLogoutRspUSRValueFieldNumber = 140;
  const ::Interactive::Message::LogoutRsp_USR& logoutrsp_usr_value() const;
  ::Interactive::Message::LogoutRsp_USR* mutable_logoutrsp_usr_value();
  ::Interactive::Message::LogoutRsp_USR* release_logoutrsp_usr_value();
  void set_allocated_logoutrsp_usr_value(::Interactive::Message::LogoutRsp_USR* logoutrsp_usr_value);

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  bool has_shakehandrsp_usr_value() const;
  void clear_shakehandrsp_usr_value();
  static const int kShakehandRspUSRValueFieldNumber = 150;
  const ::Interactive::Message::ShakehandRsp_USR& shakehandrsp_usr_value() const;
  ::Interactive::Message::ShakehandRsp_USR* mutable_shakehandrsp_usr_value();
  ::Interactive::Message::ShakehandRsp_USR* release_shakehandrsp_usr_value();
  void set_allocated_shakehandrsp_usr_value(::Interactive::Message::ShakehandRsp_USR* shakehandrsp_usr_value);

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  bool has_configinforsp_usr_value() const;
  void clear_configinforsp_usr_value();
  static const int kConfigInfoRspUSRValueFieldNumber = 160;
  const ::Interactive::Message::ConfigInfoRsp_USR& configinforsp_usr_value() const;
  ::Interactive::Message::ConfigInfoRsp_USR* mutable_configinforsp_usr_value();
  ::Interactive::Message::ConfigInfoRsp_USR* release_configinforsp_usr_value();
  void set_allocated_configinforsp_usr_value(::Interactive::Message::ConfigInfoRsp_USR* configinforsp_usr_value);

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  bool has_adddevrsp_usr_value() const;
  void clear_adddevrsp_usr_value();
  static const int kAddDevRspUSRValueFieldNumber = 170;
  const ::Interactive::Message::AddDevRsp_USR& adddevrsp_usr_value() const;
  ::Interactive::Message::AddDevRsp_USR* mutable_adddevrsp_usr_value();
  ::Interactive::Message::AddDevRsp_USR* release_adddevrsp_usr_value();
  void set_allocated_adddevrsp_usr_value(::Interactive::Message::AddDevRsp_USR* adddevrsp_usr_value);

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  bool has_deldevrsp_usr_value() const;
  void clear_deldevrsp_usr_value();
  static const int kDelDevRspUSRValueFieldNumber = 180;
  const ::Interactive::Message::DelDevRsp_USR& deldevrsp_usr_value() const;
  ::Interactive::Message::DelDevRsp_USR* mutable_deldevrsp_usr_value();
  ::Interactive::Message::DelDevRsp_USR* release_deldevrsp_usr_value();
  void set_allocated_deldevrsp_usr_value(::Interactive::Message::DelDevRsp_USR* deldevrsp_usr_value);

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  bool has_modifydevrsp_usr_value() const;
  void clear_modifydevrsp_usr_value();
  static const int kModifyDevRspUSRValueFieldNumber = 190;
  const ::Interactive::Message::ModifyDevRsp_USR& modifydevrsp_usr_value() const;
  ::Interactive::Message::ModifyDevRsp_USR* mutable_modifydevrsp_usr_value();
  ::Interactive::Message::ModifyDevRsp_USR* release_modifydevrsp_usr_value();
  void set_allocated_modifydevrsp_usr_value(::Interactive::Message::ModifyDevRsp_USR* modifydevrsp_usr_value);

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  bool has_querydevinforsp_usr_value() const;
  void clear_querydevinforsp_usr_value();
  static const int kQueryDevInfoRspUSRValueFieldNumber = 200;
  const ::Interactive::Message::QueryDevInfoRsp_USR& querydevinforsp_usr_value() const;
  ::Interactive::Message::QueryDevInfoRsp_USR* mutable_querydevinforsp_usr_value();
  ::Interactive::Message::QueryDevInfoRsp_USR* release_querydevinforsp_usr_value();
  void set_allocated_querydevinforsp_usr_value(::Interactive::Message::QueryDevInfoRsp_USR* querydevinforsp_usr_value);

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  bool has_querydevrsp_usr_value() const;
  void clear_querydevrsp_usr_value();
  static const int kQueryDevRspUSRValueFieldNumber = 210;
  const ::Interactive::Message::QueryDevRsp_USR& querydevrsp_usr_value() const;
  ::Interactive::Message::QueryDevRsp_USR* mutable_querydevrsp_usr_value();
  ::Interactive::Message::QueryDevRsp_USR* release_querydevrsp_usr_value();
  void set_allocated_querydevrsp_usr_value(::Interactive::Message::QueryDevRsp_USR* querydevrsp_usr_value);

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  bool has_queryuserrsp_usr_value() const;
  void clear_queryuserrsp_usr_value();
  static const int kQueryUserRspUSRValueFieldNumber = 220;
  const ::Interactive::Message::QueryUserRsp_USR& queryuserrsp_usr_value() const;
  ::Interactive::Message::QueryUserRsp_USR* mutable_queryuserrsp_usr_value();
  ::Interactive::Message::QueryUserRsp_USR* release_queryuserrsp_usr_value();
  void set_allocated_queryuserrsp_usr_value(::Interactive::Message::QueryUserRsp_USR* queryuserrsp_usr_value);

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  bool has_sharingdevrsp_usr_value() const;
  void clear_sharingdevrsp_usr_value();
  static const int kSharingDevRspUSRValueFieldNumber = 230;
  const ::Interactive::Message::SharingDevRsp_USR& sharingdevrsp_usr_value() const;
  ::Interactive::Message::SharingDevRsp_USR* mutable_sharingdevrsp_usr_value();
  ::Interactive::Message::SharingDevRsp_USR* release_sharingdevrsp_usr_value();
  void set_allocated_sharingdevrsp_usr_value(::Interactive::Message::SharingDevRsp_USR* sharingdevrsp_usr_value);

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  bool has_cancelshareddevrsp_usr_value() const;
  void clear_cancelshareddevrsp_usr_value();
  static const int kCancelSharedDevRspUSRValueFieldNumber = 240;
  const ::Interactive::Message::CancelSharedDevRsp_USR& cancelshareddevrsp_usr_value() const;
  ::Interactive::Message::CancelSharedDevRsp_USR* mutable_cancelshareddevrsp_usr_value();
  ::Interactive::Message::CancelSharedDevRsp_USR* release_cancelshareddevrsp_usr_value();
  void set_allocated_cancelshareddevrsp_usr_value(::Interactive::Message::CancelSharedDevRsp_USR* cancelshareddevrsp_usr_value);

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  bool has_addfriendsrsp_usr_value() const;
  void clear_addfriendsrsp_usr_value();
  static const int kAddFriendsRspUSRValueFieldNumber = 250;
  const ::Interactive::Message::AddFriendsRsp_USR& addfriendsrsp_usr_value() const;
  ::Interactive::Message::AddFriendsRsp_USR* mutable_addfriendsrsp_usr_value();
  ::Interactive::Message::AddFriendsRsp_USR* release_addfriendsrsp_usr_value();
  void set_allocated_addfriendsrsp_usr_value(::Interactive::Message::AddFriendsRsp_USR* addfriendsrsp_usr_value);

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  bool has_delfriendsrsp_usr_value() const;
  void clear_delfriendsrsp_usr_value();
  static const int kDelFriendsRspUSRValueFieldNumber = 260;
  const ::Interactive::Message::DelFriendsRsp_USR& delfriendsrsp_usr_value() const;
  ::Interactive::Message::DelFriendsRsp_USR* mutable_delfriendsrsp_usr_value();
  ::Interactive::Message::DelFriendsRsp_USR* release_delfriendsrsp_usr_value();
  void set_allocated_delfriendsrsp_usr_value(::Interactive::Message::DelFriendsRsp_USR* delfriendsrsp_usr_value);

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  bool has_queryfriendsrsp_usr_value() const;
  void clear_queryfriendsrsp_usr_value();
  static const int kQueryFriendsRspUSRValueFieldNumber = 270;
  const ::Interactive::Message::QueryFriendsRsp_USR& queryfriendsrsp_usr_value() const;
  ::Interactive::Message::QueryFriendsRsp_USR* mutable_queryfriendsrsp_usr_value();
  ::Interactive::Message::QueryFriendsRsp_USR* release_queryfriendsrsp_usr_value();
  void set_allocated_queryfriendsrsp_usr_value(::Interactive::Message::QueryFriendsRsp_USR* queryfriendsrsp_usr_value);

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  bool has_storageaddressreq_usr_value() const;
  void clear_storageaddressreq_usr_value();
  static const int kStorageAddressReqUSRValueFieldNumber = 272;
  const ::Interactive::Message::StorageAddressRsp_USR& storageaddressreq_usr_value() const;
  ::Interactive::Message::StorageAddressRsp_USR* mutable_storageaddressreq_usr_value();
  ::Interactive::Message::StorageAddressRsp_USR* release_storageaddressreq_usr_value();
  void set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressRsp_USR* storageaddressreq_usr_value);

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  bool has_p2pinforsp_usr_value() const;
  void clear_p2pinforsp_usr_value();
  static const int kP2PInfoRspUSRValueFieldNumber = 274;
  const ::Interactive::Message::P2pInfoRsp_USR& p2pinforsp_usr_value() const;
  ::Interactive::Message::P2pInfoRsp_USR* mutable_p2pinforsp_usr_value();
  ::Interactive::Message::P2pInfoRsp_USR* release_p2pinforsp_usr_value();
  void set_allocated_p2pinforsp_usr_value(::Interactive::Message::P2pInfoRsp_USR* p2pinforsp_usr_value);

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  bool has_deletefilersp_usr_value() const;
  void clear_deletefilersp_usr_value();
  static const int kDeleteFileRspUSRValueFieldNumber = 310;
  const ::Interactive::Message::DeleteFileRsp_USR& deletefilersp_usr_value() const;
  ::Interactive::Message::DeleteFileRsp_USR* mutable_deletefilersp_usr_value();
  ::Interactive::Message::DeleteFileRsp_USR* release_deletefilersp_usr_value();
  void set_allocated_deletefilersp_usr_value(::Interactive::Message::DeleteFileRsp_USR* deletefilersp_usr_value);

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  bool has_downloadfilersp_usr_value() const;
  void clear_downloadfilersp_usr_value();
  static const int kDownloadFileRspUSRValueFieldNumber = 320;
  const ::Interactive::Message::DownloadFileRsp_USR& downloadfilersp_usr_value() const;
  ::Interactive::Message::DownloadFileRsp_USR* mutable_downloadfilersp_usr_value();
  ::Interactive::Message::DownloadFileRsp_USR* release_downloadfilersp_usr_value();
  void set_allocated_downloadfilersp_usr_value(::Interactive::Message::DownloadFileRsp_USR* downloadfilersp_usr_value);

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  bool has_queryfilersp_usr_value() const;
  void clear_queryfilersp_usr_value();
  static const int kQueryFileRspUSRValueFieldNumber = 330;
  const ::Interactive::Message::QueryFileRsp_USR& queryfilersp_usr_value() const;
  ::Interactive::Message::QueryFileRsp_USR* mutable_queryfilersp_usr_value();
  ::Interactive::Message::QueryFileRsp_USR* release_queryfilersp_usr_value();
  void set_allocated_queryfilersp_usr_value(::Interactive::Message::QueryFileRsp_USR* queryfilersp_usr_value);

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  bool has_getonlinedevinforsp_inner_value() const;
  void clear_getonlinedevinforsp_inner_value();
  static const int kGetOnlineDevInfoRspINNERValueFieldNumber = 280;
  const ::Interactive::Message::GetOnlineDevInfoRsp_INNER& getonlinedevinforsp_inner_value() const;
  ::Interactive::Message::GetOnlineDevInfoRsp_INNER* mutable_getonlinedevinforsp_inner_value();
  ::Interactive::Message::GetOnlineDevInfoRsp_INNER* release_getonlinedevinforsp_inner_value();
  void set_allocated_getonlinedevinforsp_inner_value(::Interactive::Message::GetOnlineDevInfoRsp_INNER* getonlinedevinforsp_inner_value);

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  bool has_getonlineuserinforsp_inner_value() const;
  void clear_getonlineuserinforsp_inner_value();
  static const int kGetOnlineUserInfoRspINNERValueFieldNumber = 290;
  const ::Interactive::Message::GetOnlineUserInfoRsp_INNER& getonlineuserinforsp_inner_value() const;
  ::Interactive::Message::GetOnlineUserInfoRsp_INNER* mutable_getonlineuserinforsp_inner_value();
  ::Interactive::Message::GetOnlineUserInfoRsp_INNER* release_getonlineuserinforsp_inner_value();
  void set_allocated_getonlineuserinforsp_inner_value(::Interactive::Message::GetOnlineUserInfoRsp_INNER* getonlineuserinforsp_inner_value);

  // int32 iRetcode = 10;
  void clear_iretcode();
  static const int kIRetcodeFieldNumber = 10;
  ::google::protobuf::int32 iretcode() const;
  void set_iretcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strretmsg_;
  ::Interactive::Message::GetAccessAddressRsp_DEV* getaccessaddressrsp_dev_value_;
  ::Interactive::Message::LoginRsp_DEV* loginrsp_dev_value_;
  ::Interactive::Message::LogoutRsp_DEV* logoutrsp_dev_value_;
  ::Interactive::Message::ShakehandRsp_DEV* shakehandrsp_dev_value_;
  ::Interactive::Message::ConfigInfoRsp_DEV* configinforsp_dev_value_;
  ::Interactive::Message::StorageAddressRsp_DEV* storageaddressrsp_dev_value_;
  ::Interactive::Message::P2pInfoRsp_DEV* p2pinforsp_dev_value_;
  ::Interactive::Message::AddFileRsp_DEV* addfilersp_dev_value_;
  ::Interactive::Message::MsgPreHandlerRsp_USR* msgprehandlerrsp_usr_value_;
  ::Interactive::Message::GetAccessAddressRsp_USR* getaccessaddressrsp_usr_value_;
  ::Interactive::Message::RegisterUserRsp_USR* registeruserrsp_usr_value_;
  ::Interactive::Message::UnRegisterUserRsp_USR* unregisteruserrsp_usr_value_;
  ::Interactive::Message::QueryUsrInfoRsp_USR* queryusrinforsp_usr_value_;
  ::Interactive::Message::ModifyUserInfoRsp_USR* modifyuserinforsp_usr_value_;
  ::Interactive::Message::LoginRsp_USR* loginrsp_usr_value_;
  ::Interactive::Message::LogoutRsp_USR* logoutrsp_usr_value_;
  ::Interactive::Message::ShakehandRsp_USR* shakehandrsp_usr_value_;
  ::Interactive::Message::ConfigInfoRsp_USR* configinforsp_usr_value_;
  ::Interactive::Message::AddDevRsp_USR* adddevrsp_usr_value_;
  ::Interactive::Message::DelDevRsp_USR* deldevrsp_usr_value_;
  ::Interactive::Message::ModifyDevRsp_USR* modifydevrsp_usr_value_;
  ::Interactive::Message::QueryDevInfoRsp_USR* querydevinforsp_usr_value_;
  ::Interactive::Message::QueryDevRsp_USR* querydevrsp_usr_value_;
  ::Interactive::Message::QueryUserRsp_USR* queryuserrsp_usr_value_;
  ::Interactive::Message::SharingDevRsp_USR* sharingdevrsp_usr_value_;
  ::Interactive::Message::CancelSharedDevRsp_USR* cancelshareddevrsp_usr_value_;
  ::Interactive::Message::AddFriendsRsp_USR* addfriendsrsp_usr_value_;
  ::Interactive::Message::DelFriendsRsp_USR* delfriendsrsp_usr_value_;
  ::Interactive::Message::QueryFriendsRsp_USR* queryfriendsrsp_usr_value_;
  ::Interactive::Message::StorageAddressRsp_USR* storageaddressreq_usr_value_;
  ::Interactive::Message::P2pInfoRsp_USR* p2pinforsp_usr_value_;
  ::Interactive::Message::DeleteFileRsp_USR* deletefilersp_usr_value_;
  ::Interactive::Message::DownloadFileRsp_USR* downloadfilersp_usr_value_;
  ::Interactive::Message::QueryFileRsp_USR* queryfilersp_usr_value_;
  ::Interactive::Message::GetOnlineDevInfoRsp_INNER* getonlinedevinforsp_inner_value_;
  ::Interactive::Message::GetOnlineUserInfoRsp_INNER* getonlineuserinforsp_inner_value_;
  ::google::protobuf::int32 iretcode_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InteractiveMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interactive.Message.InteractiveMessage) */ {
 public:
  InteractiveMessage();
  virtual ~InteractiveMessage();

  InteractiveMessage(const InteractiveMessage& from);

  inline InteractiveMessage& operator=(const InteractiveMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InteractiveMessage& default_instance();

  static inline const InteractiveMessage* internal_default_instance() {
    return reinterpret_cast<const InteractiveMessage*>(
               &_InteractiveMessage_default_instance_);
  }

  void Swap(InteractiveMessage* other);

  // implements Message ----------------------------------------------

  inline InteractiveMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  InteractiveMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InteractiveMessage& from);
  void MergeFrom(const InteractiveMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InteractiveMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strSID = 3;
  void clear_strsid();
  static const int kStrSIDFieldNumber = 3;
  const ::std::string& strsid() const;
  void set_strsid(const ::std::string& value);
  #if LANG_CXX11
  void set_strsid(::std::string&& value);
  #endif
  void set_strsid(const char* value);
  void set_strsid(const char* value, size_t size);
  ::std::string* mutable_strsid();
  ::std::string* release_strsid();
  void set_allocated_strsid(::std::string* strsid);

  // .Interactive.Message.Req ReqValue = 4;
  bool has_reqvalue() const;
  void clear_reqvalue();
  static const int kReqValueFieldNumber = 4;
  const ::Interactive::Message::Req& reqvalue() const;
  ::Interactive::Message::Req* mutable_reqvalue();
  ::Interactive::Message::Req* release_reqvalue();
  void set_allocated_reqvalue(::Interactive::Message::Req* reqvalue);

  // .Interactive.Message.Rsp RspValue = 5;
  bool has_rspvalue() const;
  void clear_rspvalue();
  static const int kRspValueFieldNumber = 5;
  const ::Interactive::Message::Rsp& rspvalue() const;
  ::Interactive::Message::Rsp* mutable_rspvalue();
  ::Interactive::Message::Rsp* release_rspvalue();
  void set_allocated_rspvalue(::Interactive::Message::Rsp* rspvalue);

  // uint64 uiMsgSeq = 2;
  void clear_uimsgseq();
  static const int kUiMsgSeqFieldNumber = 2;
  ::google::protobuf::uint64 uimsgseq() const;
  void set_uimsgseq(::google::protobuf::uint64 value);

  // .Interactive.Message.MsgType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::Interactive::Message::MsgType type() const;
  void set_type(::Interactive::Message::MsgType value);

  // @@protoc_insertion_point(class_scope:Interactive.Message.InteractiveMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsid_;
  ::Interactive::Message::Req* reqvalue_;
  ::Interactive::Message::Rsp* rspvalue_;
  ::google::protobuf::uint64 uimsgseq_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_InteractiveProtocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PermissionOfUser

// uint32 uiUnlimited = 1;
inline void PermissionOfUser::clear_uiunlimited() {
  uiunlimited_ = 0u;
}
inline ::google::protobuf::uint32 PermissionOfUser::uiunlimited() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.PermissionOfUser.uiUnlimited)
  return uiunlimited_;
}
inline void PermissionOfUser::set_uiunlimited(::google::protobuf::uint32 value) {
  
  uiunlimited_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.PermissionOfUser.uiUnlimited)
}

// uint32 uiWatch = 2;
inline void PermissionOfUser::clear_uiwatch() {
  uiwatch_ = 0u;
}
inline ::google::protobuf::uint32 PermissionOfUser::uiwatch() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.PermissionOfUser.uiWatch)
  return uiwatch_;
}
inline void PermissionOfUser::set_uiwatch(::google::protobuf::uint32 value) {
  
  uiwatch_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.PermissionOfUser.uiWatch)
}

// -------------------------------------------------------------------

// Device

// string strDevID = 1;
inline void Device::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Device::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevID)
  return strdevid_.GetNoArena();
}
inline void Device::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevID)
}
#if LANG_CXX11
inline void Device::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevID)
}
#endif
inline void Device::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevID)
}
inline void Device::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevID)
}
inline ::std::string* Device::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Device::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Device::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevID)
}

// string strDevName = 2;
inline void Device::clear_strdevname() {
  strdevname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Device::strdevname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevName)
  return strdevname_.GetNoArena();
}
inline void Device::set_strdevname(const ::std::string& value) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevName)
}
#if LANG_CXX11
inline void Device::set_strdevname(::std::string&& value) {
  
  strdevname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevName)
}
#endif
inline void Device::set_strdevname(const char* value) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevName)
}
inline void Device::set_strdevname(const char* value, size_t size) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevName)
}
inline ::std::string* Device::mutable_strdevname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevName)
  return strdevname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Device::release_strdevname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevName)
  
  return strdevname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Device::set_allocated_strdevname(::std::string* strdevname) {
  if (strdevname != NULL) {
    
  } else {
    
  }
  strdevname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevName)
}

// string strDevPassword = 3;
inline void Device::clear_strdevpassword() {
  strdevpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Device::strdevpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevPassword)
  return strdevpassword_.GetNoArena();
}
inline void Device::set_strdevpassword(const ::std::string& value) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevPassword)
}
#if LANG_CXX11
inline void Device::set_strdevpassword(::std::string&& value) {
  
  strdevpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevPassword)
}
#endif
inline void Device::set_strdevpassword(const char* value) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevPassword)
}
inline void Device::set_strdevpassword(const char* value, size_t size) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevPassword)
}
inline ::std::string* Device::mutable_strdevpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevPassword)
  return strdevpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Device::release_strdevpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevPassword)
  
  return strdevpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Device::set_allocated_strdevpassword(::std::string* strdevpassword) {
  if (strdevpassword != NULL) {
    
  } else {
    
  }
  strdevpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevPassword)
}

// uint32 uiTypeInfo = 4;
inline void Device::clear_uitypeinfo() {
  uitypeinfo_ = 0u;
}
inline ::google::protobuf::uint32 Device::uitypeinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.uiTypeInfo)
  return uitypeinfo_;
}
inline void Device::set_uitypeinfo(::google::protobuf::uint32 value) {
  
  uitypeinfo_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.uiTypeInfo)
}

// string strCreatedate = 5;
inline void Device::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Device::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strCreatedate)
  return strcreatedate_.GetNoArena();
}
inline void Device::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strCreatedate)
}
#if LANG_CXX11
inline void Device::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strCreatedate)
}
#endif
inline void Device::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strCreatedate)
}
inline void Device::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strCreatedate)
}
inline ::std::string* Device::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Device::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Device::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strCreatedate)
}

// uint32 uiStatus = 6;
inline void Device::clear_uistatus() {
  uistatus_ = 0u;
}
inline ::google::protobuf::uint32 Device::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.uiStatus)
  return uistatus_;
}
inline void Device::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.uiStatus)
}

// string strExtend = 7;
inline void Device::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Device::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strExtend)
  return strextend_.GetNoArena();
}
inline void Device::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strExtend)
}
#if LANG_CXX11
inline void Device::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strExtend)
}
#endif
inline void Device::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strExtend)
}
inline void Device::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strExtend)
}
inline ::std::string* Device::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Device::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Device::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strExtend)
}

// string strInnerinfo = 8;
inline void Device::clear_strinnerinfo() {
  strinnerinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Device::strinnerinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strInnerinfo)
  return strinnerinfo_.GetNoArena();
}
inline void Device::set_strinnerinfo(const ::std::string& value) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strInnerinfo)
}
#if LANG_CXX11
inline void Device::set_strinnerinfo(::std::string&& value) {
  
  strinnerinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strInnerinfo)
}
#endif
inline void Device::set_strinnerinfo(const char* value) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strInnerinfo)
}
inline void Device::set_strinnerinfo(const char* value, size_t size) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strInnerinfo)
}
inline ::std::string* Device::mutable_strinnerinfo() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strInnerinfo)
  return strinnerinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Device::release_strinnerinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strInnerinfo)
  
  return strinnerinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Device::set_allocated_strinnerinfo(::std::string* strinnerinfo) {
  if (strinnerinfo != NULL) {
    
  } else {
    
  }
  strinnerinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strinnerinfo);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strInnerinfo)
}

// -------------------------------------------------------------------

// User

// string strUserID = 1;
inline void User::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserID)
  return struserid_.GetNoArena();
}
inline void User::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserID)
}
#if LANG_CXX11
inline void User::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserID)
}
#endif
inline void User::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserID)
}
inline void User::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserID)
}
inline ::std::string* User::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserID)
}

// string strUserName = 2;
inline void User::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserName)
  return strusername_.GetNoArena();
}
inline void User::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserName)
}
#if LANG_CXX11
inline void User::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserName)
}
#endif
inline void User::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserName)
}
inline void User::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserName)
}
inline ::std::string* User::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserName)
}

// string strUserPassword = 3;
inline void User::clear_struserpassword() {
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::struserpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserPassword)
  return struserpassword_.GetNoArena();
}
inline void User::set_struserpassword(const ::std::string& value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserPassword)
}
#if LANG_CXX11
inline void User::set_struserpassword(::std::string&& value) {
  
  struserpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserPassword)
}
#endif
inline void User::set_struserpassword(const char* value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserPassword)
}
inline void User::set_struserpassword(const char* value, size_t size) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserPassword)
}
inline ::std::string* User::mutable_struserpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserPassword)
  return struserpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_struserpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserPassword)
  
  return struserpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_struserpassword(::std::string* struserpassword) {
  if (struserpassword != NULL) {
    
  } else {
    
  }
  struserpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserPassword)
}

// uint32 uiTypeInfo = 4;
inline void User::clear_uitypeinfo() {
  uitypeinfo_ = 0u;
}
inline ::google::protobuf::uint32 User::uitypeinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.uiTypeInfo)
  return uitypeinfo_;
}
inline void User::set_uitypeinfo(::google::protobuf::uint32 value) {
  
  uitypeinfo_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.User.uiTypeInfo)
}

// string strCreatedate = 5;
inline void User::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strCreatedate)
  return strcreatedate_.GetNoArena();
}
inline void User::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strCreatedate)
}
#if LANG_CXX11
inline void User::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strCreatedate)
}
#endif
inline void User::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strCreatedate)
}
inline void User::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strCreatedate)
}
inline ::std::string* User::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strCreatedate)
}

// uint32 uiStatus = 6;
inline void User::clear_uistatus() {
  uistatus_ = 0u;
}
inline ::google::protobuf::uint32 User::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.uiStatus)
  return uistatus_;
}
inline void User::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.User.uiStatus)
}

// string strExtend = 7;
inline void User::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strExtend)
  return strextend_.GetNoArena();
}
inline void User::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strExtend)
}
#if LANG_CXX11
inline void User::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strExtend)
}
#endif
inline void User::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strExtend)
}
inline void User::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strExtend)
}
inline ::std::string* User::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strExtend)
}

// -------------------------------------------------------------------

// Relation

// string strUserID = 1;
inline void Relation::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Relation::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strUserID)
  return struserid_.GetNoArena();
}
inline void Relation::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strUserID)
}
#if LANG_CXX11
inline void Relation::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strUserID)
}
#endif
inline void Relation::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strUserID)
}
inline void Relation::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strUserID)
}
inline ::std::string* Relation::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Relation::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strUserID)
}

// string strDevID = 2;
inline void Relation::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Relation::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strDevID)
  return strdevid_.GetNoArena();
}
inline void Relation::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strDevID)
}
#if LANG_CXX11
inline void Relation::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strDevID)
}
#endif
inline void Relation::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strDevID)
}
inline void Relation::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strDevID)
}
inline ::std::string* Relation::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Relation::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strDevID)
}

// uint32 uiRelation = 3;
inline void Relation::clear_uirelation() {
  uirelation_ = 0u;
}
inline ::google::protobuf::uint32 Relation::uirelation() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.uiRelation)
  return uirelation_;
}
inline void Relation::set_uirelation(::google::protobuf::uint32 value) {
  
  uirelation_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.uiRelation)
}

// string strBeginDate = 4;
inline void Relation::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Relation::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void Relation::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strBeginDate)
}
#if LANG_CXX11
inline void Relation::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strBeginDate)
}
#endif
inline void Relation::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strBeginDate)
}
inline void Relation::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strBeginDate)
}
inline ::std::string* Relation::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Relation::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strBeginDate)
}

// string strEndDate = 5;
inline void Relation::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Relation::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strEndDate)
  return strenddate_.GetNoArena();
}
inline void Relation::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strEndDate)
}
#if LANG_CXX11
inline void Relation::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strEndDate)
}
#endif
inline void Relation::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strEndDate)
}
inline void Relation::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strEndDate)
}
inline ::std::string* Relation::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Relation::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strEndDate)
}

// string strValue = 6;
inline void Relation::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Relation::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strValue)
  return strvalue_.GetNoArena();
}
inline void Relation::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strValue)
}
#if LANG_CXX11
inline void Relation::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strValue)
}
#endif
inline void Relation::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strValue)
}
inline void Relation::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strValue)
}
inline ::std::string* Relation::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Relation::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strValue)
}

// -------------------------------------------------------------------

// File

// string strFileID = 1;
inline void File::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileID)
  return strfileid_.GetNoArena();
}
inline void File::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileID)
}
#if LANG_CXX11
inline void File::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileID)
}
#endif
inline void File::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileID)
}
inline void File::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileID)
}
inline ::std::string* File::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileID)
}

// string strUserID = 2;
inline void File::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strUserID)
  return struserid_.GetNoArena();
}
inline void File::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strUserID)
}
#if LANG_CXX11
inline void File::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strUserID)
}
#endif
inline void File::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strUserID)
}
inline void File::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strUserID)
}
inline ::std::string* File::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strUserID)
}

// string strDevID = 3;
inline void File::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strDevID)
  return strdevid_.GetNoArena();
}
inline void File::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strDevID)
}
#if LANG_CXX11
inline void File::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strDevID)
}
#endif
inline void File::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strDevID)
}
inline void File::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strDevID)
}
inline ::std::string* File::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strDevID)
}

// string strRemoteFileID = 4;
inline void File::clear_strremotefileid() {
  strremotefileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strremotefileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strRemoteFileID)
  return strremotefileid_.GetNoArena();
}
inline void File::set_strremotefileid(const ::std::string& value) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strRemoteFileID)
}
#if LANG_CXX11
inline void File::set_strremotefileid(::std::string&& value) {
  
  strremotefileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strRemoteFileID)
}
#endif
inline void File::set_strremotefileid(const char* value) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strRemoteFileID)
}
inline void File::set_strremotefileid(const char* value, size_t size) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strRemoteFileID)
}
inline ::std::string* File::mutable_strremotefileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strRemoteFileID)
  return strremotefileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strremotefileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strRemoteFileID)
  
  return strremotefileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strremotefileid(::std::string* strremotefileid) {
  if (strremotefileid != NULL) {
    
  } else {
    
  }
  strremotefileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strremotefileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strRemoteFileID)
}

// string strDownloadUrl = 5;
inline void File::clear_strdownloadurl() {
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strdownloadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strDownloadUrl)
  return strdownloadurl_.GetNoArena();
}
inline void File::set_strdownloadurl(const ::std::string& value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strDownloadUrl)
}
#if LANG_CXX11
inline void File::set_strdownloadurl(::std::string&& value) {
  
  strdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strDownloadUrl)
}
#endif
inline void File::set_strdownloadurl(const char* value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strDownloadUrl)
}
inline void File::set_strdownloadurl(const char* value, size_t size) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strDownloadUrl)
}
inline ::std::string* File::mutable_strdownloadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strDownloadUrl)
  return strdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strdownloadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strDownloadUrl)
  
  return strdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strdownloadurl(::std::string* strdownloadurl) {
  if (strdownloadurl != NULL) {
    
  } else {
    
  }
  strdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strDownloadUrl)
}

// string strFileName = 6;
inline void File::clear_strfilename() {
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strfilename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileName)
  return strfilename_.GetNoArena();
}
inline void File::set_strfilename(const ::std::string& value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileName)
}
#if LANG_CXX11
inline void File::set_strfilename(::std::string&& value) {
  
  strfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileName)
}
#endif
inline void File::set_strfilename(const char* value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileName)
}
inline void File::set_strfilename(const char* value, size_t size) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileName)
}
inline ::std::string* File::mutable_strfilename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileName)
  return strfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strfilename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileName)
  
  return strfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strfilename(::std::string* strfilename) {
  if (strfilename != NULL) {
    
  } else {
    
  }
  strfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileName)
}

// string strSuffixName = 7;
inline void File::clear_strsuffixname() {
  strsuffixname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strsuffixname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strSuffixName)
  return strsuffixname_.GetNoArena();
}
inline void File::set_strsuffixname(const ::std::string& value) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strSuffixName)
}
#if LANG_CXX11
inline void File::set_strsuffixname(::std::string&& value) {
  
  strsuffixname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strSuffixName)
}
#endif
inline void File::set_strsuffixname(const char* value) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strSuffixName)
}
inline void File::set_strsuffixname(const char* value, size_t size) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strSuffixName)
}
inline ::std::string* File::mutable_strsuffixname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strSuffixName)
  return strsuffixname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strsuffixname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strSuffixName)
  
  return strsuffixname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strsuffixname(::std::string* strsuffixname) {
  if (strsuffixname != NULL) {
    
  } else {
    
  }
  strsuffixname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsuffixname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strSuffixName)
}

// uint64 uiFileSize = 8;
inline void File::clear_uifilesize() {
  uifilesize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 File::uifilesize() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiFileSize)
  return uifilesize_;
}
inline void File::set_uifilesize(::google::protobuf::uint64 value) {
  
  uifilesize_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiFileSize)
}

// uint32 uiBusinessType = 9;
inline void File::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
inline ::google::protobuf::uint32 File::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiBusinessType)
  return uibusinesstype_;
}
inline void File::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiBusinessType)
}

// string strFileCreatedate = 10;
inline void File::clear_strfilecreatedate() {
  strfilecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strfilecreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileCreatedate)
  return strfilecreatedate_.GetNoArena();
}
inline void File::set_strfilecreatedate(const ::std::string& value) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileCreatedate)
}
#if LANG_CXX11
inline void File::set_strfilecreatedate(::std::string&& value) {
  
  strfilecreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileCreatedate)
}
#endif
inline void File::set_strfilecreatedate(const char* value) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileCreatedate)
}
inline void File::set_strfilecreatedate(const char* value, size_t size) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileCreatedate)
}
inline ::std::string* File::mutable_strfilecreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileCreatedate)
  return strfilecreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strfilecreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileCreatedate)
  
  return strfilecreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strfilecreatedate(::std::string* strfilecreatedate) {
  if (strfilecreatedate != NULL) {
    
  } else {
    
  }
  strfilecreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilecreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileCreatedate)
}

// string strCreatedate = 11;
inline void File::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strCreatedate)
  return strcreatedate_.GetNoArena();
}
inline void File::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strCreatedate)
}
#if LANG_CXX11
inline void File::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strCreatedate)
}
#endif
inline void File::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strCreatedate)
}
inline void File::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strCreatedate)
}
inline ::std::string* File::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strCreatedate)
}

// uint32 uiStatus = 12;
inline void File::clear_uistatus() {
  uistatus_ = 0u;
}
inline ::google::protobuf::uint32 File::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiStatus)
  return uistatus_;
}
inline void File::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiStatus)
}

// string strExtend = 13;
inline void File::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strExtend)
  return strextend_.GetNoArena();
}
inline void File::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strExtend)
}
#if LANG_CXX11
inline void File::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strExtend)
}
#endif
inline void File::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strExtend)
}
inline void File::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strExtend)
}
inline ::std::string* File::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strExtend)
}

// -------------------------------------------------------------------

// FileUrl

// string strFileID = 1;
inline void FileUrl::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileUrl::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.FileUrl.strFileID)
  return strfileid_.GetNoArena();
}
inline void FileUrl::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.FileUrl.strFileID)
}
#if LANG_CXX11
inline void FileUrl::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.FileUrl.strFileID)
}
#endif
inline void FileUrl::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.FileUrl.strFileID)
}
inline void FileUrl::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.FileUrl.strFileID)
}
inline ::std::string* FileUrl::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.FileUrl.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileUrl::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.FileUrl.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileUrl::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.FileUrl.strFileID)
}

// string strDownloadUrl = 2;
inline void FileUrl::clear_strdownloadurl() {
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileUrl::strdownloadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.FileUrl.strDownloadUrl)
  return strdownloadurl_.GetNoArena();
}
inline void FileUrl::set_strdownloadurl(const ::std::string& value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.FileUrl.strDownloadUrl)
}
#if LANG_CXX11
inline void FileUrl::set_strdownloadurl(::std::string&& value) {
  
  strdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.FileUrl.strDownloadUrl)
}
#endif
inline void FileUrl::set_strdownloadurl(const char* value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.FileUrl.strDownloadUrl)
}
inline void FileUrl::set_strdownloadurl(const char* value, size_t size) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.FileUrl.strDownloadUrl)
}
inline ::std::string* FileUrl::mutable_strdownloadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.FileUrl.strDownloadUrl)
  return strdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileUrl::release_strdownloadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.FileUrl.strDownloadUrl)
  
  return strdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileUrl::set_allocated_strdownloadurl(::std::string* strdownloadurl) {
  if (strdownloadurl != NULL) {
    
  } else {
    
  }
  strdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.FileUrl.strDownloadUrl)
}

// -------------------------------------------------------------------

// GetAccessAddressReq_DEV

// string strDevID = 1;
inline void GetAccessAddressReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void GetAccessAddressReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
#if LANG_CXX11
inline void GetAccessAddressReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
#endif
inline void GetAccessAddressReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
inline void GetAccessAddressReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
inline ::std::string* GetAccessAddressReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}

// string strValue = 2;
inline void GetAccessAddressReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void GetAccessAddressReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
#if LANG_CXX11
inline void GetAccessAddressReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
#endif
inline void GetAccessAddressReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
inline void GetAccessAddressReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
inline ::std::string* GetAccessAddressReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}

// -------------------------------------------------------------------

// GetAccessAddressRsp_DEV

// string strAccessAddress = 1;
inline void GetAccessAddressRsp_DEV::clear_straccessaddress() {
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressRsp_DEV::straccessaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  return straccessaddress_.GetNoArena();
}
inline void GetAccessAddressRsp_DEV::set_straccessaddress(const ::std::string& value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
#if LANG_CXX11
inline void GetAccessAddressRsp_DEV::set_straccessaddress(::std::string&& value) {
  
  straccessaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
#endif
inline void GetAccessAddressRsp_DEV::set_straccessaddress(const char* value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
inline void GetAccessAddressRsp_DEV::set_straccessaddress(const char* value, size_t size) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
inline ::std::string* GetAccessAddressRsp_DEV::mutable_straccessaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  return straccessaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressRsp_DEV::release_straccessaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  
  return straccessaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressRsp_DEV::set_allocated_straccessaddress(::std::string* straccessaddress) {
  if (straccessaddress != NULL) {
    
  } else {
    
  }
  straccessaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}

// string strAccessPort = 2;
inline void GetAccessAddressRsp_DEV::clear_straccessport() {
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressRsp_DEV::straccessport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  return straccessport_.GetNoArena();
}
inline void GetAccessAddressRsp_DEV::set_straccessport(const ::std::string& value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
#if LANG_CXX11
inline void GetAccessAddressRsp_DEV::set_straccessport(::std::string&& value) {
  
  straccessport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
#endif
inline void GetAccessAddressRsp_DEV::set_straccessport(const char* value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
inline void GetAccessAddressRsp_DEV::set_straccessport(const char* value, size_t size) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
inline ::std::string* GetAccessAddressRsp_DEV::mutable_straccessport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  return straccessport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressRsp_DEV::release_straccessport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  
  return straccessport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressRsp_DEV::set_allocated_straccessport(::std::string* straccessport) {
  if (straccessport != NULL) {
    
  } else {
    
  }
  straccessport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}

// string strValue = 3;
inline void GetAccessAddressRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void GetAccessAddressRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
#if LANG_CXX11
inline void GetAccessAddressRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
#endif
inline void GetAccessAddressRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
inline void GetAccessAddressRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
inline ::std::string* GetAccessAddressRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}

// -------------------------------------------------------------------

// LoginReq_DEV

// string strDevID = 1;
inline void LoginReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void LoginReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strDevID)
}
#if LANG_CXX11
inline void LoginReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strDevID)
}
#endif
inline void LoginReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strDevID)
}
inline void LoginReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strDevID)
}
inline ::std::string* LoginReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strDevID)
}

// string strPassword = 2;
inline void LoginReq_DEV::clear_strpassword() {
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq_DEV::strpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strPassword)
  return strpassword_.GetNoArena();
}
inline void LoginReq_DEV::set_strpassword(const ::std::string& value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strPassword)
}
#if LANG_CXX11
inline void LoginReq_DEV::set_strpassword(::std::string&& value) {
  
  strpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strPassword)
}
#endif
inline void LoginReq_DEV::set_strpassword(const char* value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strPassword)
}
inline void LoginReq_DEV::set_strpassword(const char* value, size_t size) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strPassword)
}
inline ::std::string* LoginReq_DEV::mutable_strpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strPassword)
  return strpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq_DEV::release_strpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strPassword)
  
  return strpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq_DEV::set_allocated_strpassword(::std::string* strpassword) {
  if (strpassword != NULL) {
    
  } else {
    
  }
  strpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strPassword)
}

// string strValue = 3;
inline void LoginReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void LoginReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strValue)
}
#if LANG_CXX11
inline void LoginReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strValue)
}
#endif
inline void LoginReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strValue)
}
inline void LoginReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strValue)
}
inline ::std::string* LoginReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strValue)
}

// -------------------------------------------------------------------

// LoginRsp_DEV

// string strValue = 2;
inline void LoginRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void LoginRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_DEV.strValue)
}
#if LANG_CXX11
inline void LoginRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_DEV.strValue)
}
#endif
inline void LoginRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_DEV.strValue)
}
inline void LoginRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_DEV.strValue)
}
inline ::std::string* LoginRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_DEV.strValue)
}

// -------------------------------------------------------------------

// LogoutReq_DEV

// string strDevID = 1;
inline void LogoutReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void LogoutReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_DEV.strDevID)
}
#if LANG_CXX11
inline void LogoutReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_DEV.strDevID)
}
#endif
inline void LogoutReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_DEV.strDevID)
}
inline void LogoutReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_DEV.strDevID)
}
inline ::std::string* LogoutReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_DEV.strDevID)
}

// string strValue = 2;
inline void LogoutReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void LogoutReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_DEV.strValue)
}
#if LANG_CXX11
inline void LogoutReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_DEV.strValue)
}
#endif
inline void LogoutReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_DEV.strValue)
}
inline void LogoutReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_DEV.strValue)
}
inline ::std::string* LogoutReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_DEV.strValue)
}

// -------------------------------------------------------------------

// LogoutRsp_DEV

// string strValue = 1;
inline void LogoutRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void LogoutRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutRsp_DEV.strValue)
}
#if LANG_CXX11
inline void LogoutRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutRsp_DEV.strValue)
}
#endif
inline void LogoutRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutRsp_DEV.strValue)
}
inline void LogoutRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutRsp_DEV.strValue)
}
inline ::std::string* LogoutRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutRsp_DEV.strValue)
}

// -------------------------------------------------------------------

// ShakehandReq_DEV

// string strDevID = 1;
inline void ShakehandReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void ShakehandReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_DEV.strDevID)
}
#if LANG_CXX11
inline void ShakehandReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_DEV.strDevID)
}
#endif
inline void ShakehandReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_DEV.strDevID)
}
inline void ShakehandReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_DEV.strDevID)
}
inline ::std::string* ShakehandReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_DEV.strDevID)
}

// string strValue = 3;
inline void ShakehandReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void ShakehandReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_DEV.strValue)
}
#if LANG_CXX11
inline void ShakehandReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_DEV.strValue)
}
#endif
inline void ShakehandReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_DEV.strValue)
}
inline void ShakehandReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_DEV.strValue)
}
inline ::std::string* ShakehandReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_DEV.strValue)
}

// -------------------------------------------------------------------

// ShakehandRsp_DEV

// string strValue = 1;
inline void ShakehandRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void ShakehandRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandRsp_DEV.strValue)
}
#if LANG_CXX11
inline void ShakehandRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandRsp_DEV.strValue)
}
#endif
inline void ShakehandRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandRsp_DEV.strValue)
}
inline void ShakehandRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandRsp_DEV.strValue)
}
inline ::std::string* ShakehandRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandRsp_DEV.strValue)
}

// -------------------------------------------------------------------

// ConfigInfoReq_DEV

// string strDevID = 1;
inline void ConfigInfoReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void ConfigInfoReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
#if LANG_CXX11
inline void ConfigInfoReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
#endif
inline void ConfigInfoReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
inline void ConfigInfoReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
inline ::std::string* ConfigInfoReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}

// string strValue = 2;
inline void ConfigInfoReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void ConfigInfoReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
#if LANG_CXX11
inline void ConfigInfoReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
#endif
inline void ConfigInfoReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
inline void ConfigInfoReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
inline ::std::string* ConfigInfoReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_DEV.strValue)
}

// -------------------------------------------------------------------

// ConfigInfoRsp_DEV

// string strConfigInfo = 1;
inline void ConfigInfoRsp_DEV::clear_strconfiginfo() {
  strconfiginfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoRsp_DEV::strconfiginfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  return strconfiginfo_.GetNoArena();
}
inline void ConfigInfoRsp_DEV::set_strconfiginfo(const ::std::string& value) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
#if LANG_CXX11
inline void ConfigInfoRsp_DEV::set_strconfiginfo(::std::string&& value) {
  
  strconfiginfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
#endif
inline void ConfigInfoRsp_DEV::set_strconfiginfo(const char* value) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
inline void ConfigInfoRsp_DEV::set_strconfiginfo(const char* value, size_t size) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
inline ::std::string* ConfigInfoRsp_DEV::mutable_strconfiginfo() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  return strconfiginfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoRsp_DEV::release_strconfiginfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  
  return strconfiginfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoRsp_DEV::set_allocated_strconfiginfo(::std::string* strconfiginfo) {
  if (strconfiginfo != NULL) {
    
  } else {
    
  }
  strconfiginfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconfiginfo);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}

// string strValue = 2;
inline void ConfigInfoRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void ConfigInfoRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
#if LANG_CXX11
inline void ConfigInfoRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
#endif
inline void ConfigInfoRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
inline void ConfigInfoRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
inline ::std::string* ConfigInfoRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}

// -------------------------------------------------------------------

// StorageAddressReq_DEV

// string strDevID = 1;
inline void StorageAddressReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAddressReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void StorageAddressReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
#if LANG_CXX11
inline void StorageAddressReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
#endif
inline void StorageAddressReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
inline void StorageAddressReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
inline ::std::string* StorageAddressReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAddressReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAddressReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_DEV.strDevID)
}

// uint32 uiStorageType = 2;
inline void StorageAddressReq_DEV::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
inline ::google::protobuf::uint32 StorageAddressReq_DEV::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.uiStorageType)
  return uistoragetype_;
}
inline void StorageAddressReq_DEV::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.uiStorageType)
}

// uint32 uiStorageAction = 3;
inline void StorageAddressReq_DEV::clear_uistorageaction() {
  uistorageaction_ = 0u;
}
inline ::google::protobuf::uint32 StorageAddressReq_DEV::uistorageaction() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.uiStorageAction)
  return uistorageaction_;
}
inline void StorageAddressReq_DEV::set_uistorageaction(::google::protobuf::uint32 value) {
  
  uistorageaction_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.uiStorageAction)
}

// string strFileID = 4;
inline void StorageAddressReq_DEV::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAddressReq_DEV::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.strFileID)
  return strfileid_.GetNoArena();
}
inline void StorageAddressReq_DEV::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
#if LANG_CXX11
inline void StorageAddressReq_DEV::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
#endif
inline void StorageAddressReq_DEV::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
inline void StorageAddressReq_DEV::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
inline ::std::string* StorageAddressReq_DEV::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_DEV.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAddressReq_DEV::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_DEV.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAddressReq_DEV::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_DEV.strFileID)
}

// -------------------------------------------------------------------

// StorageAddressRsp_DEV

// string strAddress = 1;
inline void StorageAddressRsp_DEV::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAddressRsp_DEV::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  return straddress_.GetNoArena();
}
inline void StorageAddressRsp_DEV::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
#if LANG_CXX11
inline void StorageAddressRsp_DEV::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
#endif
inline void StorageAddressRsp_DEV::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
inline void StorageAddressRsp_DEV::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
inline ::std::string* StorageAddressRsp_DEV::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAddressRsp_DEV::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAddressRsp_DEV::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}

// uint32 uiPort = 2;
inline void StorageAddressRsp_DEV::clear_uiport() {
  uiport_ = 0u;
}
inline ::google::protobuf::uint32 StorageAddressRsp_DEV::uiport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_DEV.uiPort)
  return uiport_;
}
inline void StorageAddressRsp_DEV::set_uiport(::google::protobuf::uint32 value) {
  
  uiport_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_DEV.uiPort)
}

// -------------------------------------------------------------------

// P2pInfoReq_DEV

// string strDevID = 1;
inline void P2pInfoReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void P2pInfoReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
#if LANG_CXX11
inline void P2pInfoReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
#endif
inline void P2pInfoReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
inline void P2pInfoReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
inline ::std::string* P2pInfoReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDevID)
}

// string strDevIpAddress = 2;
inline void P2pInfoReq_DEV::clear_strdevipaddress() {
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoReq_DEV::strdevipaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  return strdevipaddress_.GetNoArena();
}
inline void P2pInfoReq_DEV::set_strdevipaddress(const ::std::string& value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
#if LANG_CXX11
inline void P2pInfoReq_DEV::set_strdevipaddress(::std::string&& value) {
  
  strdevipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
#endif
inline void P2pInfoReq_DEV::set_strdevipaddress(const char* value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
inline void P2pInfoReq_DEV::set_strdevipaddress(const char* value, size_t size) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
inline ::std::string* P2pInfoReq_DEV::mutable_strdevipaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  return strdevipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoReq_DEV::release_strdevipaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  
  return strdevipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoReq_DEV::set_allocated_strdevipaddress(::std::string* strdevipaddress) {
  if (strdevipaddress != NULL) {
    
  } else {
    
  }
  strdevipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevipaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}

// -------------------------------------------------------------------

// P2pInfoRsp_DEV

// string strP2pServer = 1;
inline void P2pInfoRsp_DEV::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoRsp_DEV::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  return strp2pserver_.GetNoArena();
}
inline void P2pInfoRsp_DEV::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
#if LANG_CXX11
inline void P2pInfoRsp_DEV::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
#endif
inline void P2pInfoRsp_DEV::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
inline void P2pInfoRsp_DEV::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
inline ::std::string* P2pInfoRsp_DEV::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoRsp_DEV::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoRsp_DEV::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}

// string strP2pID = 2;
inline void P2pInfoRsp_DEV::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoRsp_DEV::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  return strp2pid_.GetNoArena();
}
inline void P2pInfoRsp_DEV::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
#if LANG_CXX11
inline void P2pInfoRsp_DEV::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
#endif
inline void P2pInfoRsp_DEV::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
inline void P2pInfoRsp_DEV::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
inline ::std::string* P2pInfoRsp_DEV::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoRsp_DEV::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoRsp_DEV::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}

// uint32 uiLease = 3;
inline void P2pInfoRsp_DEV::clear_uilease() {
  uilease_ = 0u;
}
inline ::google::protobuf::uint32 P2pInfoRsp_DEV::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.uiLease)
  return uilease_;
}
inline void P2pInfoRsp_DEV::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.uiLease)
}

// -------------------------------------------------------------------

// AddFileReq_DEV

// string strDevID = 1;
inline void AddFileReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddFileReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
inline void AddFileReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileReq_DEV.strDevID)
}
#if LANG_CXX11
inline void AddFileReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileReq_DEV.strDevID)
}
#endif
inline void AddFileReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileReq_DEV.strDevID)
}
inline void AddFileReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileReq_DEV.strDevID)
}
inline ::std::string* AddFileReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFileReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFileReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileReq_DEV.strDevID)
}

// repeated .Interactive.Message.File fileInfo = 2;
inline int AddFileReq_DEV::fileinfo_size() const {
  return fileinfo_.size();
}
inline void AddFileReq_DEV::clear_fileinfo() {
  fileinfo_.Clear();
}
inline const ::Interactive::Message::File& AddFileReq_DEV::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Get(index);
}
inline ::Interactive::Message::File* AddFileReq_DEV::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Mutable(index);
}
inline ::Interactive::Message::File* AddFileReq_DEV::add_fileinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
AddFileReq_DEV::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.AddFileReq_DEV.fileInfo)
  return &fileinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
AddFileReq_DEV::fileinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_;
}

// string strValue = 3;
inline void AddFileReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddFileReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void AddFileReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileReq_DEV.strValue)
}
#if LANG_CXX11
inline void AddFileReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileReq_DEV.strValue)
}
#endif
inline void AddFileReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileReq_DEV.strValue)
}
inline void AddFileReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileReq_DEV.strValue)
}
inline ::std::string* AddFileReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFileReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFileReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileReq_DEV.strValue)
}

// -------------------------------------------------------------------

// AddFileRsp_DEV

// string strValue = 1;
inline void AddFileRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddFileRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
inline void AddFileRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileRsp_DEV.strValue)
}
#if LANG_CXX11
inline void AddFileRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileRsp_DEV.strValue)
}
#endif
inline void AddFileRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileRsp_DEV.strValue)
}
inline void AddFileRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileRsp_DEV.strValue)
}
inline ::std::string* AddFileRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFileRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFileRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileRsp_DEV.strValue)
}

// repeated string strFileIDFailed = 2;
inline int AddFileRsp_DEV::strfileidfailed_size() const {
  return strfileidfailed_.size();
}
inline void AddFileRsp_DEV::clear_strfileidfailed() {
  strfileidfailed_.Clear();
}
inline const ::std::string& AddFileRsp_DEV::strfileidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Get(index);
}
inline ::std::string* AddFileRsp_DEV::mutable_strfileidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Mutable(index);
}
inline void AddFileRsp_DEV::set_strfileidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  strfileidfailed_.Mutable(index)->assign(value);
}
inline void AddFileRsp_DEV::set_strfileidfailed(int index, const char* value) {
  strfileidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
inline void AddFileRsp_DEV::set_strfileidfailed(int index, const char* value, size_t size) {
  strfileidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
inline ::std::string* AddFileRsp_DEV::add_strfileidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Add();
}
inline void AddFileRsp_DEV::add_strfileidfailed(const ::std::string& value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
inline void AddFileRsp_DEV::add_strfileidfailed(const char* value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
inline void AddFileRsp_DEV::add_strfileidfailed(const char* value, size_t size) {
  strfileidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddFileRsp_DEV::strfileidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AddFileRsp_DEV::mutable_strfileidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return &strfileidfailed_;
}

// -------------------------------------------------------------------

// MsgPreHandlerReq_USR

// string strValue = 1;
inline void MsgPreHandlerReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPreHandlerReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void MsgPreHandlerReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
#if LANG_CXX11
inline void MsgPreHandlerReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
#endif
inline void MsgPreHandlerReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
inline void MsgPreHandlerReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
inline ::std::string* MsgPreHandlerReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPreHandlerReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPreHandlerReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}

// -------------------------------------------------------------------

// MsgPreHandlerRsp_USR

// string strValue = 1;
inline void MsgPreHandlerRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPreHandlerRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void MsgPreHandlerRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
#if LANG_CXX11
inline void MsgPreHandlerRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
#endif
inline void MsgPreHandlerRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
inline void MsgPreHandlerRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
inline ::std::string* MsgPreHandlerRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPreHandlerRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPreHandlerRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}

// -------------------------------------------------------------------

// GetAccessAddressReq_USR

// string strSerializeID = 1;
inline void GetAccessAddressReq_USR::clear_strserializeid() {
  strserializeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressReq_USR::strserializeid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  return strserializeid_.GetNoArena();
}
inline void GetAccessAddressReq_USR::set_strserializeid(const ::std::string& value) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
#if LANG_CXX11
inline void GetAccessAddressReq_USR::set_strserializeid(::std::string&& value) {
  
  strserializeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
#endif
inline void GetAccessAddressReq_USR::set_strserializeid(const char* value) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
inline void GetAccessAddressReq_USR::set_strserializeid(const char* value, size_t size) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
inline ::std::string* GetAccessAddressReq_USR::mutable_strserializeid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  return strserializeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressReq_USR::release_strserializeid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  
  return strserializeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressReq_USR::set_allocated_strserializeid(::std::string* strserializeid) {
  if (strserializeid != NULL) {
    
  } else {
    
  }
  strserializeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserializeid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}

// string strValue = 2;
inline void GetAccessAddressReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void GetAccessAddressReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
#if LANG_CXX11
inline void GetAccessAddressReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
#endif
inline void GetAccessAddressReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
inline void GetAccessAddressReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
inline ::std::string* GetAccessAddressReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_USR.strValue)
}

// -------------------------------------------------------------------

// GetAccessAddressRsp_USR

// string strAccessAddress = 1;
inline void GetAccessAddressRsp_USR::clear_straccessaddress() {
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressRsp_USR::straccessaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  return straccessaddress_.GetNoArena();
}
inline void GetAccessAddressRsp_USR::set_straccessaddress(const ::std::string& value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
#if LANG_CXX11
inline void GetAccessAddressRsp_USR::set_straccessaddress(::std::string&& value) {
  
  straccessaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
#endif
inline void GetAccessAddressRsp_USR::set_straccessaddress(const char* value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
inline void GetAccessAddressRsp_USR::set_straccessaddress(const char* value, size_t size) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
inline ::std::string* GetAccessAddressRsp_USR::mutable_straccessaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  return straccessaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressRsp_USR::release_straccessaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  
  return straccessaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressRsp_USR::set_allocated_straccessaddress(::std::string* straccessaddress) {
  if (straccessaddress != NULL) {
    
  } else {
    
  }
  straccessaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}

// string strAccessPort = 2;
inline void GetAccessAddressRsp_USR::clear_straccessport() {
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressRsp_USR::straccessport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  return straccessport_.GetNoArena();
}
inline void GetAccessAddressRsp_USR::set_straccessport(const ::std::string& value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
#if LANG_CXX11
inline void GetAccessAddressRsp_USR::set_straccessport(::std::string&& value) {
  
  straccessport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
#endif
inline void GetAccessAddressRsp_USR::set_straccessport(const char* value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
inline void GetAccessAddressRsp_USR::set_straccessport(const char* value, size_t size) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
inline ::std::string* GetAccessAddressRsp_USR::mutable_straccessport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  return straccessport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressRsp_USR::release_straccessport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  
  return straccessport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressRsp_USR::set_allocated_straccessport(::std::string* straccessport) {
  if (straccessport != NULL) {
    
  } else {
    
  }
  straccessport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}

// string strValue = 3;
inline void GetAccessAddressRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAccessAddressRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void GetAccessAddressRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
#if LANG_CXX11
inline void GetAccessAddressRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
#endif
inline void GetAccessAddressRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
inline void GetAccessAddressRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
inline ::std::string* GetAccessAddressRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAccessAddressRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAccessAddressRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}

// -------------------------------------------------------------------

// RegisterUserReq_USR

// .Interactive.Message.User userInfo = 1;
inline bool RegisterUserReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void RegisterUserReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::Interactive::Message::User& RegisterUserReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
inline ::Interactive::Message::User* RegisterUserReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserReq_USR.userInfo)
  return userinfo_;
}
inline ::Interactive::Message::User* RegisterUserReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void RegisterUserReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserReq_USR.userInfo)
}

// string strValue = 2;
inline void RegisterUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void RegisterUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserReq_USR.strValue)
}
#if LANG_CXX11
inline void RegisterUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserReq_USR.strValue)
}
#endif
inline void RegisterUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserReq_USR.strValue)
}
inline void RegisterUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserReq_USR.strValue)
}
inline ::std::string* RegisterUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserReq_USR.strValue)
}

// -------------------------------------------------------------------

// RegisterUserRsp_USR

// string strUserID = 1;
inline void RegisterUserRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterUserRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void RegisterUserRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
#if LANG_CXX11
inline void RegisterUserRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
#endif
inline void RegisterUserRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
inline void RegisterUserRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
inline ::std::string* RegisterUserRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterUserRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterUserRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserRsp_USR.strUserID)
}

// string strValue = 2;
inline void RegisterUserRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterUserRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void RegisterUserRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserRsp_USR.strValue)
}
#if LANG_CXX11
inline void RegisterUserRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserRsp_USR.strValue)
}
#endif
inline void RegisterUserRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserRsp_USR.strValue)
}
inline void RegisterUserRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserRsp_USR.strValue)
}
inline ::std::string* RegisterUserRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterUserRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterUserRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserRsp_USR.strValue)
}

// -------------------------------------------------------------------

// UnRegisterUserReq_USR

// .Interactive.Message.User userInfo = 1;
inline bool UnRegisterUserReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void UnRegisterUserReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::Interactive::Message::User& UnRegisterUserReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
inline ::Interactive::Message::User* UnRegisterUserReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  return userinfo_;
}
inline ::Interactive::Message::User* UnRegisterUserReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void UnRegisterUserReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserReq_USR.userInfo)
}

// string strValue = 2;
inline void UnRegisterUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnRegisterUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void UnRegisterUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
#if LANG_CXX11
inline void UnRegisterUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
#endif
inline void UnRegisterUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
inline void UnRegisterUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
inline ::std::string* UnRegisterUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnRegisterUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnRegisterUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserReq_USR.strValue)
}

// -------------------------------------------------------------------

// UnRegisterUserRsp_USR

// string strUserID = 1;
inline void UnRegisterUserRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnRegisterUserRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void UnRegisterUserRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
#if LANG_CXX11
inline void UnRegisterUserRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
#endif
inline void UnRegisterUserRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
inline void UnRegisterUserRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
inline ::std::string* UnRegisterUserRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnRegisterUserRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnRegisterUserRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}

// string strValue = 2;
inline void UnRegisterUserRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnRegisterUserRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void UnRegisterUserRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
#if LANG_CXX11
inline void UnRegisterUserRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
#endif
inline void UnRegisterUserRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
inline void UnRegisterUserRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
inline ::std::string* UnRegisterUserRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnRegisterUserRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnRegisterUserRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}

// -------------------------------------------------------------------

// QueryUsrInfoReq_USR

// string strUserID = 1;
inline void QueryUsrInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryUsrInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryUsrInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
#if LANG_CXX11
inline void QueryUsrInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
#endif
inline void QueryUsrInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
inline void QueryUsrInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
inline ::std::string* QueryUsrInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryUsrInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryUsrInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}

// string strValue = 2;
inline void QueryUsrInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryUsrInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryUsrInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
#if LANG_CXX11
inline void QueryUsrInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
#endif
inline void QueryUsrInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
inline void QueryUsrInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
inline ::std::string* QueryUsrInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryUsrInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryUsrInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}

// -------------------------------------------------------------------

// QueryUsrInfoRsp_USR

// .Interactive.Message.User userInfo = 1;
inline bool QueryUsrInfoRsp_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void QueryUsrInfoRsp_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::Interactive::Message::User& QueryUsrInfoRsp_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
inline ::Interactive::Message::User* QueryUsrInfoRsp_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  return userinfo_;
}
inline ::Interactive::Message::User* QueryUsrInfoRsp_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void QueryUsrInfoRsp_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
}

// string strValue = 2;
inline void QueryUsrInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryUsrInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryUsrInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
#if LANG_CXX11
inline void QueryUsrInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
#endif
inline void QueryUsrInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
inline void QueryUsrInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
inline ::std::string* QueryUsrInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryUsrInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryUsrInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}

// -------------------------------------------------------------------

// ModifyUserInfoReq_USR

// .Interactive.Message.User userInfo = 1;
inline bool ModifyUserInfoReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void ModifyUserInfoReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::Interactive::Message::User& ModifyUserInfoReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
inline ::Interactive::Message::User* ModifyUserInfoReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  return userinfo_;
}
inline ::Interactive::Message::User* ModifyUserInfoReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void ModifyUserInfoReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
}

// -------------------------------------------------------------------

// ModifyUserInfoRsp_USR

// string strValue = 1;
inline void ModifyUserInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyUserInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyUserInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
#if LANG_CXX11
inline void ModifyUserInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
#endif
inline void ModifyUserInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
inline void ModifyUserInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
inline ::std::string* ModifyUserInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyUserInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyUserInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}

// -------------------------------------------------------------------

// LoginReq_USR

// .Interactive.Message.User userInfo = 1;
inline bool LoginReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void LoginReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::Interactive::Message::User& LoginReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
inline ::Interactive::Message::User* LoginReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_USR.userInfo)
  return userinfo_;
}
inline ::Interactive::Message::User* LoginReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void LoginReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_USR.userInfo)
}

// string strValue = 2;
inline void LoginReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void LoginReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_USR.strValue)
}
#if LANG_CXX11
inline void LoginReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_USR.strValue)
}
#endif
inline void LoginReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_USR.strValue)
}
inline void LoginReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_USR.strValue)
}
inline ::std::string* LoginReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_USR.strValue)
}

// -------------------------------------------------------------------

// LoginRsp_USR

// string strUserID = 1;
inline void LoginRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void LoginRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strUserID)
}
#if LANG_CXX11
inline void LoginRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_USR.strUserID)
}
#endif
inline void LoginRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strUserID)
}
inline void LoginRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strUserID)
}
inline ::std::string* LoginRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_USR.strUserID)
}

// repeated .Interactive.Message.Relation relationInfo = 2;
inline int LoginRsp_USR::relationinfo_size() const {
  return relationinfo_.size();
}
inline void LoginRsp_USR::clear_relationinfo() {
  relationinfo_.Clear();
}
inline const ::Interactive::Message::Relation& LoginRsp_USR::relationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Get(index);
}
inline ::Interactive::Message::Relation* LoginRsp_USR::mutable_relationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Mutable(index);
}
inline ::Interactive::Message::Relation* LoginRsp_USR::add_relationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
LoginRsp_USR::mutable_relationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.LoginRsp_USR.relationInfo)
  return &relationinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
LoginRsp_USR::relationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_;
}

// string strValue = 3;
inline void LoginRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void LoginRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strValue)
}
#if LANG_CXX11
inline void LoginRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_USR.strValue)
}
#endif
inline void LoginRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strValue)
}
inline void LoginRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strValue)
}
inline ::std::string* LoginRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_USR.strValue)
}

// -------------------------------------------------------------------

// LogoutReq_USR

// .Interactive.Message.User userInfo = 1;
inline bool LogoutReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void LogoutReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::Interactive::Message::User& LogoutReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
inline ::Interactive::Message::User* LogoutReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_USR.userInfo)
  return userinfo_;
}
inline ::Interactive::Message::User* LogoutReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void LogoutReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_USR.userInfo)
}

// string strValue = 2;
inline void LogoutReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void LogoutReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_USR.strValue)
}
#if LANG_CXX11
inline void LogoutReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_USR.strValue)
}
#endif
inline void LogoutReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_USR.strValue)
}
inline void LogoutReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_USR.strValue)
}
inline ::std::string* LogoutReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_USR.strValue)
}

// -------------------------------------------------------------------

// LogoutRsp_USR

// string strValue = 1;
inline void LogoutRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void LogoutRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutRsp_USR.strValue)
}
#if LANG_CXX11
inline void LogoutRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutRsp_USR.strValue)
}
#endif
inline void LogoutRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutRsp_USR.strValue)
}
inline void LogoutRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutRsp_USR.strValue)
}
inline ::std::string* LogoutRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutRsp_USR.strValue)
}

// -------------------------------------------------------------------

// ShakehandReq_USR

// string strUserID = 1;
inline void ShakehandReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void ShakehandReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_USR.strUserID)
}
#if LANG_CXX11
inline void ShakehandReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_USR.strUserID)
}
#endif
inline void ShakehandReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_USR.strUserID)
}
inline void ShakehandReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_USR.strUserID)
}
inline ::std::string* ShakehandReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_USR.strUserID)
}

// string strValue = 2;
inline void ShakehandReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void ShakehandReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_USR.strValue)
}
#if LANG_CXX11
inline void ShakehandReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_USR.strValue)
}
#endif
inline void ShakehandReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_USR.strValue)
}
inline void ShakehandReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_USR.strValue)
}
inline ::std::string* ShakehandReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_USR.strValue)
}

// -------------------------------------------------------------------

// ShakehandRsp_USR

// string strValue = 1;
inline void ShakehandRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void ShakehandRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandRsp_USR.strValue)
}
#if LANG_CXX11
inline void ShakehandRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandRsp_USR.strValue)
}
#endif
inline void ShakehandRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandRsp_USR.strValue)
}
inline void ShakehandRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandRsp_USR.strValue)
}
inline ::std::string* ShakehandRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandRsp_USR.strValue)
}

// -------------------------------------------------------------------

// ConfigInfoReq_USR

// string strUserID = 1;
inline void ConfigInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void ConfigInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
#if LANG_CXX11
inline void ConfigInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
#endif
inline void ConfigInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
inline void ConfigInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
inline ::std::string* ConfigInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_USR.strUserID)
}

// string strValue = 2;
inline void ConfigInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void ConfigInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_USR.strValue)
}
#if LANG_CXX11
inline void ConfigInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_USR.strValue)
}
#endif
inline void ConfigInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_USR.strValue)
}
inline void ConfigInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_USR.strValue)
}
inline ::std::string* ConfigInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_USR.strValue)
}

// -------------------------------------------------------------------

// ConfigInfoRsp_USR

// string strValue = 1;
inline void ConfigInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void ConfigInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
#if LANG_CXX11
inline void ConfigInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
#endif
inline void ConfigInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
inline void ConfigInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
inline ::std::string* ConfigInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_USR.strValue)
}

// repeated string strItems = 2;
inline int ConfigInfoRsp_USR::stritems_size() const {
  return stritems_.size();
}
inline void ConfigInfoRsp_USR::clear_stritems() {
  stritems_.Clear();
}
inline const ::std::string& ConfigInfoRsp_USR::stritems(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Get(index);
}
inline ::std::string* ConfigInfoRsp_USR::mutable_stritems(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Mutable(index);
}
inline void ConfigInfoRsp_USR::set_stritems(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_USR.strItems)
  stritems_.Mutable(index)->assign(value);
}
inline void ConfigInfoRsp_USR::set_stritems(int index, const char* value) {
  stritems_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
inline void ConfigInfoRsp_USR::set_stritems(int index, const char* value, size_t size) {
  stritems_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
inline ::std::string* ConfigInfoRsp_USR::add_stritems() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Add();
}
inline void ConfigInfoRsp_USR::add_stritems(const ::std::string& value) {
  stritems_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
inline void ConfigInfoRsp_USR::add_stritems(const char* value) {
  stritems_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
inline void ConfigInfoRsp_USR::add_stritems(const char* value, size_t size) {
  stritems_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigInfoRsp_USR::stritems() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigInfoRsp_USR::mutable_stritems() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return &stritems_;
}

// -------------------------------------------------------------------

// AddDevReq_USR

// string strUserID = 1;
inline void AddDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void AddDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevReq_USR.strUserID)
}
#if LANG_CXX11
inline void AddDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevReq_USR.strUserID)
}
#endif
inline void AddDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevReq_USR.strUserID)
}
inline void AddDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevReq_USR.strUserID)
}
inline ::std::string* AddDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevReq_USR.strUserID)
}

// .Interactive.Message.Device devInfo = 2;
inline bool AddDevReq_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
inline void AddDevReq_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
inline const ::Interactive::Message::Device& AddDevReq_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevReq_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
inline ::Interactive::Message::Device* AddDevReq_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevReq_USR.devInfo)
  return devinfo_;
}
inline ::Interactive::Message::Device* AddDevReq_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevReq_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
inline void AddDevReq_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevReq_USR.devInfo)
}

// -------------------------------------------------------------------

// AddDevRsp_USR

// string strValue = 1;
inline void AddDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void AddDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevRsp_USR.strValue)
}
#if LANG_CXX11
inline void AddDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevRsp_USR.strValue)
}
#endif
inline void AddDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevRsp_USR.strValue)
}
inline void AddDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevRsp_USR.strValue)
}
inline ::std::string* AddDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevRsp_USR.strValue)
}

// -------------------------------------------------------------------

// DelDevReq_USR

// string strUserID = 1;
inline void DelDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void DelDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevReq_USR.strUserID)
}
#if LANG_CXX11
inline void DelDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelDevReq_USR.strUserID)
}
#endif
inline void DelDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevReq_USR.strUserID)
}
inline void DelDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevReq_USR.strUserID)
}
inline ::std::string* DelDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelDevReq_USR.strUserID)
}

// repeated string strDevID = 2;
inline int DelDevReq_USR::strdevid_size() const {
  return strdevid_.size();
}
inline void DelDevReq_USR::clear_strdevid() {
  strdevid_.Clear();
}
inline const ::std::string& DelDevReq_USR::strdevid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Get(index);
}
inline ::std::string* DelDevReq_USR::mutable_strdevid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Mutable(index);
}
inline void DelDevReq_USR::set_strdevid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevReq_USR.strDevID)
  strdevid_.Mutable(index)->assign(value);
}
inline void DelDevReq_USR::set_strdevid(int index, const char* value) {
  strdevid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevReq_USR.strDevID)
}
inline void DelDevReq_USR::set_strdevid(int index, const char* value, size_t size) {
  strdevid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevReq_USR.strDevID)
}
inline ::std::string* DelDevReq_USR::add_strdevid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Add();
}
inline void DelDevReq_USR::add_strdevid(const ::std::string& value) {
  strdevid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelDevReq_USR.strDevID)
}
inline void DelDevReq_USR::add_strdevid(const char* value) {
  strdevid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelDevReq_USR.strDevID)
}
inline void DelDevReq_USR::add_strdevid(const char* value, size_t size) {
  strdevid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelDevReq_USR.strDevID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelDevReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DelDevReq_USR::mutable_strdevid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelDevReq_USR.strDevID)
  return &strdevid_;
}

// -------------------------------------------------------------------

// DelDevRsp_USR

// string strValue = 1;
inline void DelDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void DelDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevRsp_USR.strValue)
}
#if LANG_CXX11
inline void DelDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelDevRsp_USR.strValue)
}
#endif
inline void DelDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevRsp_USR.strValue)
}
inline void DelDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevRsp_USR.strValue)
}
inline ::std::string* DelDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelDevRsp_USR.strValue)
}

// repeated string strDevIDFailed = 2;
inline int DelDevRsp_USR::strdevidfailed_size() const {
  return strdevidfailed_.size();
}
inline void DelDevRsp_USR::clear_strdevidfailed() {
  strdevidfailed_.Clear();
}
inline const ::std::string& DelDevRsp_USR::strdevidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Get(index);
}
inline ::std::string* DelDevRsp_USR::mutable_strdevidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Mutable(index);
}
inline void DelDevRsp_USR::set_strdevidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  strdevidfailed_.Mutable(index)->assign(value);
}
inline void DelDevRsp_USR::set_strdevidfailed(int index, const char* value) {
  strdevidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
inline void DelDevRsp_USR::set_strdevidfailed(int index, const char* value, size_t size) {
  strdevidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
inline ::std::string* DelDevRsp_USR::add_strdevidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Add();
}
inline void DelDevRsp_USR::add_strdevidfailed(const ::std::string& value) {
  strdevidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
inline void DelDevRsp_USR::add_strdevidfailed(const char* value) {
  strdevidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
inline void DelDevRsp_USR::add_strdevidfailed(const char* value, size_t size) {
  strdevidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelDevRsp_USR::strdevidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DelDevRsp_USR::mutable_strdevidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return &strdevidfailed_;
}

// -------------------------------------------------------------------

// ModifyDevReq_USR

// string strUserID = 1;
inline void ModifyDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void ModifyDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevReq_USR.strUserID)
}
#if LANG_CXX11
inline void ModifyDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevReq_USR.strUserID)
}
#endif
inline void ModifyDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevReq_USR.strUserID)
}
inline void ModifyDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevReq_USR.strUserID)
}
inline ::std::string* ModifyDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevReq_USR.strUserID)
}

// .Interactive.Message.Device devInfo = 2;
inline bool ModifyDevReq_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
inline void ModifyDevReq_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
inline const ::Interactive::Message::Device& ModifyDevReq_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
inline ::Interactive::Message::Device* ModifyDevReq_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevReq_USR.devInfo)
  return devinfo_;
}
inline ::Interactive::Message::Device* ModifyDevReq_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevReq_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
inline void ModifyDevReq_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevReq_USR.devInfo)
}

// -------------------------------------------------------------------

// ModifyDevRsp_USR

// string strValue = 1;
inline void ModifyDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void ModifyDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevRsp_USR.strValue)
}
#if LANG_CXX11
inline void ModifyDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevRsp_USR.strValue)
}
#endif
inline void ModifyDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevRsp_USR.strValue)
}
inline void ModifyDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevRsp_USR.strValue)
}
inline ::std::string* ModifyDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevRsp_USR.strValue)
}

// -------------------------------------------------------------------

// QueryDevInfoReq_USR

// string strDevID = 1;
inline void QueryDevInfoReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDevInfoReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
inline void QueryDevInfoReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
#if LANG_CXX11
inline void QueryDevInfoReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
#endif
inline void QueryDevInfoReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
inline void QueryDevInfoReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
inline ::std::string* QueryDevInfoReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDevInfoReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDevInfoReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}

// string strValue = 2;
inline void QueryDevInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDevInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryDevInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
#if LANG_CXX11
inline void QueryDevInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
#endif
inline void QueryDevInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
inline void QueryDevInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
inline ::std::string* QueryDevInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDevInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDevInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strValue)
}

// -------------------------------------------------------------------

// QueryDevInfoRsp_USR

// .Interactive.Message.Device devInfo = 1;
inline bool QueryDevInfoRsp_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
inline void QueryDevInfoRsp_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
inline const ::Interactive::Message::Device& QueryDevInfoRsp_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
inline ::Interactive::Message::Device* QueryDevInfoRsp_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  return devinfo_;
}
inline ::Interactive::Message::Device* QueryDevInfoRsp_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
inline void QueryDevInfoRsp_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
}

// string strValue = 2;
inline void QueryDevInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDevInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryDevInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
#if LANG_CXX11
inline void QueryDevInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
#endif
inline void QueryDevInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
inline void QueryDevInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
inline ::std::string* QueryDevInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDevInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDevInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}

// -------------------------------------------------------------------

// QueryDevReq_USR

// string strUserID = 1;
inline void QueryDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.strUserID)
}
#if LANG_CXX11
inline void QueryDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevReq_USR.strUserID)
}
#endif
inline void QueryDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevReq_USR.strUserID)
}
inline void QueryDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevReq_USR.strUserID)
}
inline ::std::string* QueryDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevReq_USR.strUserID)
}

// uint32 uiBeginIndex = 2;
inline void QueryDevReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryDevReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryDevReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.uiBeginIndex)
}

// string strValue = 3;
inline void QueryDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.strValue)
}
#if LANG_CXX11
inline void QueryDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevReq_USR.strValue)
}
#endif
inline void QueryDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevReq_USR.strValue)
}
inline void QueryDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevReq_USR.strValue)
}
inline ::std::string* QueryDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevReq_USR.strValue)
}

// -------------------------------------------------------------------

// QueryDevRsp_USR

// repeated .Interactive.Message.Relation allRelationInfo = 1;
inline int QueryDevRsp_USR::allrelationinfo_size() const {
  return allrelationinfo_.size();
}
inline void QueryDevRsp_USR::clear_allrelationinfo() {
  allrelationinfo_.Clear();
}
inline const ::Interactive::Message::Relation& QueryDevRsp_USR::allrelationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Get(index);
}
inline ::Interactive::Message::Relation* QueryDevRsp_USR::mutable_allrelationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Mutable(index);
}
inline ::Interactive::Message::Relation* QueryDevRsp_USR::add_allrelationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
QueryDevRsp_USR::mutable_allrelationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return &allrelationinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
QueryDevRsp_USR::allrelationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_;
}

// -------------------------------------------------------------------

// QueryUserReq_USR

// string strDevID = 1;
inline void QueryUserReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryUserReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
inline void QueryUserReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.strDevID)
}
#if LANG_CXX11
inline void QueryUserReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserReq_USR.strDevID)
}
#endif
inline void QueryUserReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserReq_USR.strDevID)
}
inline void QueryUserReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserReq_USR.strDevID)
}
inline ::std::string* QueryUserReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryUserReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryUserReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserReq_USR.strDevID)
}

// uint32 uiBeginIndex = 2;
inline void QueryUserReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryUserReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryUserReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.uiBeginIndex)
}

// string strValue = 3;
inline void QueryUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.strValue)
}
#if LANG_CXX11
inline void QueryUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserReq_USR.strValue)
}
#endif
inline void QueryUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserReq_USR.strValue)
}
inline void QueryUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserReq_USR.strValue)
}
inline ::std::string* QueryUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserReq_USR.strValue)
}

// -------------------------------------------------------------------

// QueryUserRsp_USR

// repeated .Interactive.Message.Relation allRelationInfo = 1;
inline int QueryUserRsp_USR::allrelationinfo_size() const {
  return allrelationinfo_.size();
}
inline void QueryUserRsp_USR::clear_allrelationinfo() {
  allrelationinfo_.Clear();
}
inline const ::Interactive::Message::Relation& QueryUserRsp_USR::allrelationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Get(index);
}
inline ::Interactive::Message::Relation* QueryUserRsp_USR::mutable_allrelationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Mutable(index);
}
inline ::Interactive::Message::Relation* QueryUserRsp_USR::add_allrelationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
QueryUserRsp_USR::mutable_allrelationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return &allrelationinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
QueryUserRsp_USR::allrelationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_;
}

// -------------------------------------------------------------------

// SharingDevReq_USR

// .Interactive.Message.Relation relationInfo = 1;
inline bool SharingDevReq_USR::has_relationinfo() const {
  return this != internal_default_instance() && relationinfo_ != NULL;
}
inline void SharingDevReq_USR::clear_relationinfo() {
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) delete relationinfo_;
  relationinfo_ = NULL;
}
inline const ::Interactive::Message::Relation& SharingDevReq_USR::relationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.relationInfo)
  return relationinfo_ != NULL ? *relationinfo_
                         : *::Interactive::Message::Relation::internal_default_instance();
}
inline ::Interactive::Message::Relation* SharingDevReq_USR::mutable_relationinfo() {
  
  if (relationinfo_ == NULL) {
    relationinfo_ = new ::Interactive::Message::Relation;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.relationInfo)
  return relationinfo_;
}
inline ::Interactive::Message::Relation* SharingDevReq_USR::release_relationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.relationInfo)
  
  ::Interactive::Message::Relation* temp = relationinfo_;
  relationinfo_ = NULL;
  return temp;
}
inline void SharingDevReq_USR::set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo) {
  delete relationinfo_;
  relationinfo_ = relationinfo;
  if (relationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.relationInfo)
}

// string strValue = 2;
inline void SharingDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SharingDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void SharingDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevReq_USR.strValue)
}
#if LANG_CXX11
inline void SharingDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevReq_USR.strValue)
}
#endif
inline void SharingDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevReq_USR.strValue)
}
inline void SharingDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevReq_USR.strValue)
}
inline ::std::string* SharingDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SharingDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SharingDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.strValue)
}

// -------------------------------------------------------------------

// SharingDevRsp_USR

// string strValue = 1;
inline void SharingDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SharingDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void SharingDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevRsp_USR.strValue)
}
#if LANG_CXX11
inline void SharingDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevRsp_USR.strValue)
}
#endif
inline void SharingDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevRsp_USR.strValue)
}
inline void SharingDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevRsp_USR.strValue)
}
inline ::std::string* SharingDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SharingDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SharingDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevRsp_USR.strValue)
}

// -------------------------------------------------------------------

// CancelSharedDevReq_USR

// .Interactive.Message.Relation relationInfo = 1;
inline bool CancelSharedDevReq_USR::has_relationinfo() const {
  return this != internal_default_instance() && relationinfo_ != NULL;
}
inline void CancelSharedDevReq_USR::clear_relationinfo() {
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) delete relationinfo_;
  relationinfo_ = NULL;
}
inline const ::Interactive::Message::Relation& CancelSharedDevReq_USR::relationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  return relationinfo_ != NULL ? *relationinfo_
                         : *::Interactive::Message::Relation::internal_default_instance();
}
inline ::Interactive::Message::Relation* CancelSharedDevReq_USR::mutable_relationinfo() {
  
  if (relationinfo_ == NULL) {
    relationinfo_ = new ::Interactive::Message::Relation;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  return relationinfo_;
}
inline ::Interactive::Message::Relation* CancelSharedDevReq_USR::release_relationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  
  ::Interactive::Message::Relation* temp = relationinfo_;
  relationinfo_ = NULL;
  return temp;
}
inline void CancelSharedDevReq_USR::set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo) {
  delete relationinfo_;
  relationinfo_ = relationinfo;
  if (relationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
}

// string strValue = 2;
inline void CancelSharedDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelSharedDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void CancelSharedDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
#if LANG_CXX11
inline void CancelSharedDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
#endif
inline void CancelSharedDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
inline void CancelSharedDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
inline ::std::string* CancelSharedDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelSharedDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelSharedDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevReq_USR.strValue)
}

// -------------------------------------------------------------------

// CancelSharedDevRsp_USR

// string strValue = 1;
inline void CancelSharedDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelSharedDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void CancelSharedDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
#if LANG_CXX11
inline void CancelSharedDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
#endif
inline void CancelSharedDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
inline void CancelSharedDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
inline ::std::string* CancelSharedDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelSharedDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelSharedDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}

// -------------------------------------------------------------------

// AddFriendsReq_USR

// string strUserID = 1;
inline void AddFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void AddFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsReq_USR.strUserID)
}
#if LANG_CXX11
inline void AddFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsReq_USR.strUserID)
}
#endif
inline void AddFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsReq_USR.strUserID)
}
inline void AddFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsReq_USR.strUserID)
}
inline ::std::string* AddFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsReq_USR.strUserID)
}

// string strFriendUserID = 2;
inline void AddFriendsReq_USR::clear_strfrienduserid() {
  strfrienduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddFriendsReq_USR::strfrienduserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.GetNoArena();
}
inline void AddFriendsReq_USR::set_strfrienduserid(const ::std::string& value) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
#if LANG_CXX11
inline void AddFriendsReq_USR::set_strfrienduserid(::std::string&& value) {
  
  strfrienduserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
#endif
inline void AddFriendsReq_USR::set_strfrienduserid(const char* value) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
inline void AddFriendsReq_USR::set_strfrienduserid(const char* value, size_t size) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
inline ::std::string* AddFriendsReq_USR::mutable_strfrienduserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFriendsReq_USR::release_strfrienduserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  
  return strfrienduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFriendsReq_USR::set_allocated_strfrienduserid(::std::string* strfrienduserid) {
  if (strfrienduserid != NULL) {
    
  } else {
    
  }
  strfrienduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfrienduserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}

// -------------------------------------------------------------------

// AddFriendsRsp_USR

// string strValue = 1;
inline void AddFriendsRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddFriendsRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void AddFriendsRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsRsp_USR.strValue)
}
#if LANG_CXX11
inline void AddFriendsRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsRsp_USR.strValue)
}
#endif
inline void AddFriendsRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsRsp_USR.strValue)
}
inline void AddFriendsRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsRsp_USR.strValue)
}
inline ::std::string* AddFriendsRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFriendsRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFriendsRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsRsp_USR.strValue)
}

// -------------------------------------------------------------------

// DelFriendsReq_USR

// string strUserID = 1;
inline void DelFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void DelFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsReq_USR.strUserID)
}
#if LANG_CXX11
inline void DelFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelFriendsReq_USR.strUserID)
}
#endif
inline void DelFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsReq_USR.strUserID)
}
inline void DelFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsReq_USR.strUserID)
}
inline ::std::string* DelFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelFriendsReq_USR.strUserID)
}

// repeated string strFriendUserID = 2;
inline int DelFriendsReq_USR::strfrienduserid_size() const {
  return strfrienduserid_.size();
}
inline void DelFriendsReq_USR::clear_strfrienduserid() {
  strfrienduserid_.Clear();
}
inline const ::std::string& DelFriendsReq_USR::strfrienduserid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Get(index);
}
inline ::std::string* DelFriendsReq_USR::mutable_strfrienduserid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Mutable(index);
}
inline void DelFriendsReq_USR::set_strfrienduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  strfrienduserid_.Mutable(index)->assign(value);
}
inline void DelFriendsReq_USR::set_strfrienduserid(int index, const char* value) {
  strfrienduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
inline void DelFriendsReq_USR::set_strfrienduserid(int index, const char* value, size_t size) {
  strfrienduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
inline ::std::string* DelFriendsReq_USR::add_strfrienduserid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Add();
}
inline void DelFriendsReq_USR::add_strfrienduserid(const ::std::string& value) {
  strfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
inline void DelFriendsReq_USR::add_strfrienduserid(const char* value) {
  strfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
inline void DelFriendsReq_USR::add_strfrienduserid(const char* value, size_t size) {
  strfrienduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelFriendsReq_USR::strfrienduserid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DelFriendsReq_USR::mutable_strfrienduserid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return &strfrienduserid_;
}

// -------------------------------------------------------------------

// DelFriendsRsp_USR

// string strValue = 1;
inline void DelFriendsRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelFriendsRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void DelFriendsRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsRsp_USR.strValue)
}
#if LANG_CXX11
inline void DelFriendsRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelFriendsRsp_USR.strValue)
}
#endif
inline void DelFriendsRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsRsp_USR.strValue)
}
inline void DelFriendsRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsRsp_USR.strValue)
}
inline ::std::string* DelFriendsRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelFriendsRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelFriendsRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelFriendsRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelFriendsRsp_USR.strValue)
}

// repeated string strFriendUserIDFailed = 2;
inline int DelFriendsRsp_USR::strfrienduseridfailed_size() const {
  return strfrienduseridfailed_.size();
}
inline void DelFriendsRsp_USR::clear_strfrienduseridfailed() {
  strfrienduseridfailed_.Clear();
}
inline const ::std::string& DelFriendsRsp_USR::strfrienduseridfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Get(index);
}
inline ::std::string* DelFriendsRsp_USR::mutable_strfrienduseridfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Mutable(index);
}
inline void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  strfrienduseridfailed_.Mutable(index)->assign(value);
}
inline void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const char* value) {
  strfrienduseridfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
inline void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const char* value, size_t size) {
  strfrienduseridfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
inline ::std::string* DelFriendsRsp_USR::add_strfrienduseridfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Add();
}
inline void DelFriendsRsp_USR::add_strfrienduseridfailed(const ::std::string& value) {
  strfrienduseridfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
inline void DelFriendsRsp_USR::add_strfrienduseridfailed(const char* value) {
  strfrienduseridfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
inline void DelFriendsRsp_USR::add_strfrienduseridfailed(const char* value, size_t size) {
  strfrienduseridfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelFriendsRsp_USR::strfrienduseridfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DelFriendsRsp_USR::mutable_strfrienduseridfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return &strfrienduseridfailed_;
}

// -------------------------------------------------------------------

// QueryFriendsReq_USR

// string strUserID = 1;
inline void QueryFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
#if LANG_CXX11
inline void QueryFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
#endif
inline void QueryFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
inline void QueryFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
inline ::std::string* QueryFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFriendsReq_USR.strUserID)
}

// uint32 uiBeginIndex = 2;
inline void QueryFriendsReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryFriendsReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryFriendsReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.uiBeginIndex)
}

// string strValue = 3;
inline void QueryFriendsReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFriendsReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryFriendsReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.strValue)
}
#if LANG_CXX11
inline void QueryFriendsReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFriendsReq_USR.strValue)
}
#endif
inline void QueryFriendsReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsReq_USR.strValue)
}
inline void QueryFriendsReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsReq_USR.strValue)
}
inline ::std::string* QueryFriendsReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFriendsReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFriendsReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFriendsReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFriendsReq_USR.strValue)
}

// -------------------------------------------------------------------

// QueryFriendsRsp_USR

// repeated string strAllFriendUserID = 1;
inline int QueryFriendsRsp_USR::strallfrienduserid_size() const {
  return strallfrienduserid_.size();
}
inline void QueryFriendsRsp_USR::clear_strallfrienduserid() {
  strallfrienduserid_.Clear();
}
inline const ::std::string& QueryFriendsRsp_USR::strallfrienduserid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Get(index);
}
inline ::std::string* QueryFriendsRsp_USR::mutable_strallfrienduserid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Mutable(index);
}
inline void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  strallfrienduserid_.Mutable(index)->assign(value);
}
inline void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const char* value) {
  strallfrienduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
inline void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const char* value, size_t size) {
  strallfrienduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
inline ::std::string* QueryFriendsRsp_USR::add_strallfrienduserid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Add();
}
inline void QueryFriendsRsp_USR::add_strallfrienduserid(const ::std::string& value) {
  strallfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
inline void QueryFriendsRsp_USR::add_strallfrienduserid(const char* value) {
  strallfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
inline void QueryFriendsRsp_USR::add_strallfrienduserid(const char* value, size_t size) {
  strallfrienduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryFriendsRsp_USR::strallfrienduserid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QueryFriendsRsp_USR::mutable_strallfrienduserid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return &strallfrienduserid_;
}

// -------------------------------------------------------------------

// StorageAddressReq_USR

// string strUserID = 1;
inline void StorageAddressReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAddressReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void StorageAddressReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.strUserID)
}
#if LANG_CXX11
inline void StorageAddressReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_USR.strUserID)
}
#endif
inline void StorageAddressReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_USR.strUserID)
}
inline void StorageAddressReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_USR.strUserID)
}
inline ::std::string* StorageAddressReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAddressReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAddressReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_USR.strUserID)
}

// uint32 uiStorageType = 2;
inline void StorageAddressReq_USR::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
inline ::google::protobuf::uint32 StorageAddressReq_USR::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.uiStorageType)
  return uistoragetype_;
}
inline void StorageAddressReq_USR::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.uiStorageType)
}

// uint32 uiStorageAction = 3;
inline void StorageAddressReq_USR::clear_uistorageaction() {
  uistorageaction_ = 0u;
}
inline ::google::protobuf::uint32 StorageAddressReq_USR::uistorageaction() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.uiStorageAction)
  return uistorageaction_;
}
inline void StorageAddressReq_USR::set_uistorageaction(::google::protobuf::uint32 value) {
  
  uistorageaction_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.uiStorageAction)
}

// string strFileID = 4;
inline void StorageAddressReq_USR::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAddressReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.strFileID)
  return strfileid_.GetNoArena();
}
inline void StorageAddressReq_USR::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.strFileID)
}
#if LANG_CXX11
inline void StorageAddressReq_USR::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_USR.strFileID)
}
#endif
inline void StorageAddressReq_USR::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_USR.strFileID)
}
inline void StorageAddressReq_USR::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_USR.strFileID)
}
inline ::std::string* StorageAddressReq_USR::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_USR.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAddressReq_USR::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_USR.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAddressReq_USR::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_USR.strFileID)
}

// -------------------------------------------------------------------

// StorageAddressRsp_USR

// string strAddress = 1;
inline void StorageAddressRsp_USR::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAddressRsp_USR::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_USR.strAddress)
  return straddress_.GetNoArena();
}
inline void StorageAddressRsp_USR::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
#if LANG_CXX11
inline void StorageAddressRsp_USR::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
#endif
inline void StorageAddressRsp_USR::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
inline void StorageAddressRsp_USR::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
inline ::std::string* StorageAddressRsp_USR::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressRsp_USR.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAddressRsp_USR::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressRsp_USR.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAddressRsp_USR::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressRsp_USR.strAddress)
}

// uint32 uiPort = 2;
inline void StorageAddressRsp_USR::clear_uiport() {
  uiport_ = 0u;
}
inline ::google::protobuf::uint32 StorageAddressRsp_USR::uiport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_USR.uiPort)
  return uiport_;
}
inline void StorageAddressRsp_USR::set_uiport(::google::protobuf::uint32 value) {
  
  uiport_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_USR.uiPort)
}

// -------------------------------------------------------------------

// P2pInfoReq_USR

// string strUserID = 1;
inline void P2pInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void P2pInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strUserID)
}
#if LANG_CXX11
inline void P2pInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strUserID)
}
#endif
inline void P2pInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strUserID)
}
inline void P2pInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strUserID)
}
inline ::std::string* P2pInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strUserID)
}

// string strUserIpAddress = 2;
inline void P2pInfoReq_USR::clear_struseripaddress() {
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoReq_USR::struseripaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  return struseripaddress_.GetNoArena();
}
inline void P2pInfoReq_USR::set_struseripaddress(const ::std::string& value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
#if LANG_CXX11
inline void P2pInfoReq_USR::set_struseripaddress(::std::string&& value) {
  
  struseripaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
#endif
inline void P2pInfoReq_USR::set_struseripaddress(const char* value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
inline void P2pInfoReq_USR::set_struseripaddress(const char* value, size_t size) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
inline ::std::string* P2pInfoReq_USR::mutable_struseripaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  return struseripaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoReq_USR::release_struseripaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  
  return struseripaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoReq_USR::set_allocated_struseripaddress(::std::string* struseripaddress) {
  if (struseripaddress != NULL) {
    
  } else {
    
  }
  struseripaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseripaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}

// string strDevID = 3;
inline void P2pInfoReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
inline void P2pInfoReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strDevID)
}
#if LANG_CXX11
inline void P2pInfoReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strDevID)
}
#endif
inline void P2pInfoReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strDevID)
}
inline void P2pInfoReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strDevID)
}
inline ::std::string* P2pInfoReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strDevID)
}

// -------------------------------------------------------------------

// P2pInfoRsp_USR

// string strP2pServer = 1;
inline void P2pInfoRsp_USR::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoRsp_USR::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  return strp2pserver_.GetNoArena();
}
inline void P2pInfoRsp_USR::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
#if LANG_CXX11
inline void P2pInfoRsp_USR::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
#endif
inline void P2pInfoRsp_USR::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
inline void P2pInfoRsp_USR::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
inline ::std::string* P2pInfoRsp_USR::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoRsp_USR::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoRsp_USR::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}

// string strP2pID = 2;
inline void P2pInfoRsp_USR::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P2pInfoRsp_USR::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  return strp2pid_.GetNoArena();
}
inline void P2pInfoRsp_USR::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
#if LANG_CXX11
inline void P2pInfoRsp_USR::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
#endif
inline void P2pInfoRsp_USR::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
inline void P2pInfoRsp_USR::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
inline ::std::string* P2pInfoRsp_USR::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P2pInfoRsp_USR::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P2pInfoRsp_USR::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}

// uint32 uiLease = 3;
inline void P2pInfoRsp_USR::clear_uilease() {
  uilease_ = 0u;
}
inline ::google::protobuf::uint32 P2pInfoRsp_USR::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.uiLease)
  return uilease_;
}
inline void P2pInfoRsp_USR::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.uiLease)
}

// -------------------------------------------------------------------

// DeleteFileReq_USR

// string strUserID = 1;
inline void DeleteFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void DeleteFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileReq_USR.strUserID)
}
#if LANG_CXX11
inline void DeleteFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteFileReq_USR.strUserID)
}
#endif
inline void DeleteFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileReq_USR.strUserID)
}
inline void DeleteFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileReq_USR.strUserID)
}
inline ::std::string* DeleteFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteFileReq_USR.strUserID)
}

// repeated string strFileID = 2;
inline int DeleteFileReq_USR::strfileid_size() const {
  return strfileid_.size();
}
inline void DeleteFileReq_USR::clear_strfileid() {
  strfileid_.Clear();
}
inline const ::std::string& DeleteFileReq_USR::strfileid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Get(index);
}
inline ::std::string* DeleteFileReq_USR::mutable_strfileid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Mutable(index);
}
inline void DeleteFileReq_USR::set_strfileid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileReq_USR.strFileID)
  strfileid_.Mutable(index)->assign(value);
}
inline void DeleteFileReq_USR::set_strfileid(int index, const char* value) {
  strfileid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileReq_USR.strFileID)
}
inline void DeleteFileReq_USR::set_strfileid(int index, const char* value, size_t size) {
  strfileid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileReq_USR.strFileID)
}
inline ::std::string* DeleteFileReq_USR::add_strfileid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Add();
}
inline void DeleteFileReq_USR::add_strfileid(const ::std::string& value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeleteFileReq_USR.strFileID)
}
inline void DeleteFileReq_USR::add_strfileid(const char* value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeleteFileReq_USR.strFileID)
}
inline void DeleteFileReq_USR::add_strfileid(const char* value, size_t size) {
  strfileid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeleteFileReq_USR.strFileID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteFileReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteFileReq_USR::mutable_strfileid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeleteFileReq_USR.strFileID)
  return &strfileid_;
}

// -------------------------------------------------------------------

// DeleteFileRsp_USR

// string strValue = 1;
inline void DeleteFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void DeleteFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileRsp_USR.strValue)
}
#if LANG_CXX11
inline void DeleteFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteFileRsp_USR.strValue)
}
#endif
inline void DeleteFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileRsp_USR.strValue)
}
inline void DeleteFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileRsp_USR.strValue)
}
inline ::std::string* DeleteFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteFileRsp_USR.strValue)
}

// repeated string strFileIDFailed = 2;
inline int DeleteFileRsp_USR::strfileidfailed_size() const {
  return strfileidfailed_.size();
}
inline void DeleteFileRsp_USR::clear_strfileidfailed() {
  strfileidfailed_.Clear();
}
inline const ::std::string& DeleteFileRsp_USR::strfileidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Get(index);
}
inline ::std::string* DeleteFileRsp_USR::mutable_strfileidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Mutable(index);
}
inline void DeleteFileRsp_USR::set_strfileidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  strfileidfailed_.Mutable(index)->assign(value);
}
inline void DeleteFileRsp_USR::set_strfileidfailed(int index, const char* value) {
  strfileidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
inline void DeleteFileRsp_USR::set_strfileidfailed(int index, const char* value, size_t size) {
  strfileidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
inline ::std::string* DeleteFileRsp_USR::add_strfileidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Add();
}
inline void DeleteFileRsp_USR::add_strfileidfailed(const ::std::string& value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
inline void DeleteFileRsp_USR::add_strfileidfailed(const char* value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
inline void DeleteFileRsp_USR::add_strfileidfailed(const char* value, size_t size) {
  strfileidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteFileRsp_USR::strfileidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteFileRsp_USR::mutable_strfileidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return &strfileidfailed_;
}

// -------------------------------------------------------------------

// DownloadFileReq_USR

// string strUserID = 1;
inline void DownloadFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DownloadFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void DownloadFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileReq_USR.strUserID)
}
#if LANG_CXX11
inline void DownloadFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DownloadFileReq_USR.strUserID)
}
#endif
inline void DownloadFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileReq_USR.strUserID)
}
inline void DownloadFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileReq_USR.strUserID)
}
inline ::std::string* DownloadFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DownloadFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DownloadFileReq_USR.strUserID)
}

// repeated string strFileID = 2;
inline int DownloadFileReq_USR::strfileid_size() const {
  return strfileid_.size();
}
inline void DownloadFileReq_USR::clear_strfileid() {
  strfileid_.Clear();
}
inline const ::std::string& DownloadFileReq_USR::strfileid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Get(index);
}
inline ::std::string* DownloadFileReq_USR::mutable_strfileid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Mutable(index);
}
inline void DownloadFileReq_USR::set_strfileid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileReq_USR.strFileID)
  strfileid_.Mutable(index)->assign(value);
}
inline void DownloadFileReq_USR::set_strfileid(int index, const char* value) {
  strfileid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileReq_USR.strFileID)
}
inline void DownloadFileReq_USR::set_strfileid(int index, const char* value, size_t size) {
  strfileid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileReq_USR.strFileID)
}
inline ::std::string* DownloadFileReq_USR::add_strfileid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Add();
}
inline void DownloadFileReq_USR::add_strfileid(const ::std::string& value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DownloadFileReq_USR.strFileID)
}
inline void DownloadFileReq_USR::add_strfileid(const char* value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DownloadFileReq_USR.strFileID)
}
inline void DownloadFileReq_USR::add_strfileid(const char* value, size_t size) {
  strfileid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DownloadFileReq_USR.strFileID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DownloadFileReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DownloadFileReq_USR::mutable_strfileid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DownloadFileReq_USR.strFileID)
  return &strfileid_;
}

// -------------------------------------------------------------------

// DownloadFileRsp_USR

// string strValue = 1;
inline void DownloadFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DownloadFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void DownloadFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileRsp_USR.strValue)
}
#if LANG_CXX11
inline void DownloadFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DownloadFileRsp_USR.strValue)
}
#endif
inline void DownloadFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileRsp_USR.strValue)
}
inline void DownloadFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileRsp_USR.strValue)
}
inline ::std::string* DownloadFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DownloadFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DownloadFileRsp_USR.strValue)
}

// repeated .Interactive.Message.FileUrl fileUrl = 2;
inline int DownloadFileRsp_USR::fileurl_size() const {
  return fileurl_.size();
}
inline void DownloadFileRsp_USR::clear_fileurl() {
  fileurl_.Clear();
}
inline const ::Interactive::Message::FileUrl& DownloadFileRsp_USR::fileurl(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Get(index);
}
inline ::Interactive::Message::FileUrl* DownloadFileRsp_USR::mutable_fileurl(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Mutable(index);
}
inline ::Interactive::Message::FileUrl* DownloadFileRsp_USR::add_fileurl() {
  // @@protoc_insertion_point(field_add:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >*
DownloadFileRsp_USR::mutable_fileurl() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return &fileurl_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >&
DownloadFileRsp_USR::fileurl() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_;
}

// -------------------------------------------------------------------

// QueryFileReq_USR

// string strUserID = 1;
inline void QueryFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
inline void QueryFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strUserID)
}
#if LANG_CXX11
inline void QueryFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strUserID)
}
#endif
inline void QueryFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strUserID)
}
inline void QueryFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strUserID)
}
inline ::std::string* QueryFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strUserID)
}

// string strDevID = 2;
inline void QueryFileReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFileReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
inline void QueryFileReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strDevID)
}
#if LANG_CXX11
inline void QueryFileReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strDevID)
}
#endif
inline void QueryFileReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strDevID)
}
inline void QueryFileReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strDevID)
}
inline ::std::string* QueryFileReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFileReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFileReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strDevID)
}

// uint32 uiBeginIndex = 3;
inline void QueryFileReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
inline ::google::protobuf::uint32 QueryFileReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.uiBeginIndex)
  return uibeginindex_;
}
inline void QueryFileReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.uiBeginIndex)
}

// string strBeginDate = 4;
inline void QueryFileReq_USR::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFileReq_USR::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strBeginDate)
  return strbegindate_.GetNoArena();
}
inline void QueryFileReq_USR::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
#if LANG_CXX11
inline void QueryFileReq_USR::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
#endif
inline void QueryFileReq_USR::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
inline void QueryFileReq_USR::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
inline ::std::string* QueryFileReq_USR::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFileReq_USR::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFileReq_USR::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strBeginDate)
}

// string strEndDate = 5;
inline void QueryFileReq_USR::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFileReq_USR::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strEndDate)
  return strenddate_.GetNoArena();
}
inline void QueryFileReq_USR::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strEndDate)
}
#if LANG_CXX11
inline void QueryFileReq_USR::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strEndDate)
}
#endif
inline void QueryFileReq_USR::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strEndDate)
}
inline void QueryFileReq_USR::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strEndDate)
}
inline ::std::string* QueryFileReq_USR::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFileReq_USR::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFileReq_USR::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strEndDate)
}

// uint32 uiBusinessType = 6;
inline void QueryFileReq_USR::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
inline ::google::protobuf::uint32 QueryFileReq_USR::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.uiBusinessType)
  return uibusinesstype_;
}
inline void QueryFileReq_USR::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.uiBusinessType)
}

// string strValue = 7;
inline void QueryFileReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFileReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryFileReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strValue)
}
#if LANG_CXX11
inline void QueryFileReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strValue)
}
#endif
inline void QueryFileReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strValue)
}
inline void QueryFileReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strValue)
}
inline ::std::string* QueryFileReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFileReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFileReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strValue)
}

// -------------------------------------------------------------------

// QueryFileRsp_USR

// string strValue = 1;
inline void QueryFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
inline void QueryFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileRsp_USR.strValue)
}
#if LANG_CXX11
inline void QueryFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileRsp_USR.strValue)
}
#endif
inline void QueryFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileRsp_USR.strValue)
}
inline void QueryFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileRsp_USR.strValue)
}
inline ::std::string* QueryFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileRsp_USR.strValue)
}

// repeated .Interactive.Message.File fileInfo = 2;
inline int QueryFileRsp_USR::fileinfo_size() const {
  return fileinfo_.size();
}
inline void QueryFileRsp_USR::clear_fileinfo() {
  fileinfo_.Clear();
}
inline const ::Interactive::Message::File& QueryFileRsp_USR::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Get(index);
}
inline ::Interactive::Message::File* QueryFileRsp_USR::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Mutable(index);
}
inline ::Interactive::Message::File* QueryFileRsp_USR::add_fileinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
QueryFileRsp_USR::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return &fileinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
QueryFileRsp_USR::fileinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_;
}

// -------------------------------------------------------------------

// GetOnlineDevInfoReq_INNER

// string strValue = 1;
inline void GetOnlineDevInfoReq_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOnlineDevInfoReq_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  return strvalue_.GetNoArena();
}
inline void GetOnlineDevInfoReq_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
#if LANG_CXX11
inline void GetOnlineDevInfoReq_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
#endif
inline void GetOnlineDevInfoReq_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
inline void GetOnlineDevInfoReq_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
inline ::std::string* GetOnlineDevInfoReq_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOnlineDevInfoReq_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOnlineDevInfoReq_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}

// -------------------------------------------------------------------

// GetOnlineDevInfoRsp_INNER

// repeated .Interactive.Message.Device devInfo = 1;
inline int GetOnlineDevInfoRsp_INNER::devinfo_size() const {
  return devinfo_.size();
}
inline void GetOnlineDevInfoRsp_INNER::clear_devinfo() {
  devinfo_.Clear();
}
inline const ::Interactive::Message::Device& GetOnlineDevInfoRsp_INNER::devinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Get(index);
}
inline ::Interactive::Message::Device* GetOnlineDevInfoRsp_INNER::mutable_devinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Mutable(index);
}
inline ::Interactive::Message::Device* GetOnlineDevInfoRsp_INNER::add_devinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
GetOnlineDevInfoRsp_INNER::mutable_devinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return &devinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
GetOnlineDevInfoRsp_INNER::devinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_;
}

// string strValue = 2;
inline void GetOnlineDevInfoRsp_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOnlineDevInfoRsp_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  return strvalue_.GetNoArena();
}
inline void GetOnlineDevInfoRsp_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
#if LANG_CXX11
inline void GetOnlineDevInfoRsp_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
#endif
inline void GetOnlineDevInfoRsp_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
inline void GetOnlineDevInfoRsp_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
inline ::std::string* GetOnlineDevInfoRsp_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOnlineDevInfoRsp_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOnlineDevInfoRsp_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}

// -------------------------------------------------------------------

// BroadcastOnlineDevInfo_INNER

// repeated .Interactive.Message.Device devInfo = 1;
inline int BroadcastOnlineDevInfo_INNER::devinfo_size() const {
  return devinfo_.size();
}
inline void BroadcastOnlineDevInfo_INNER::clear_devinfo() {
  devinfo_.Clear();
}
inline const ::Interactive::Message::Device& BroadcastOnlineDevInfo_INNER::devinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Get(index);
}
inline ::Interactive::Message::Device* BroadcastOnlineDevInfo_INNER::mutable_devinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Mutable(index);
}
inline ::Interactive::Message::Device* BroadcastOnlineDevInfo_INNER::add_devinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
BroadcastOnlineDevInfo_INNER::mutable_devinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return &devinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
BroadcastOnlineDevInfo_INNER::devinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_;
}

// string strValue = 2;
inline void BroadcastOnlineDevInfo_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadcastOnlineDevInfo_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  return strvalue_.GetNoArena();
}
inline void BroadcastOnlineDevInfo_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
#if LANG_CXX11
inline void BroadcastOnlineDevInfo_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
#endif
inline void BroadcastOnlineDevInfo_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
inline void BroadcastOnlineDevInfo_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
inline ::std::string* BroadcastOnlineDevInfo_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastOnlineDevInfo_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastOnlineDevInfo_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}

// -------------------------------------------------------------------

// GetOnlineUserInfoReq_INNER

// string strValue = 1;
inline void GetOnlineUserInfoReq_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOnlineUserInfoReq_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  return strvalue_.GetNoArena();
}
inline void GetOnlineUserInfoReq_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
#if LANG_CXX11
inline void GetOnlineUserInfoReq_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
#endif
inline void GetOnlineUserInfoReq_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
inline void GetOnlineUserInfoReq_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
inline ::std::string* GetOnlineUserInfoReq_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOnlineUserInfoReq_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOnlineUserInfoReq_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}

// -------------------------------------------------------------------

// GetOnlineUserInfoRsp_INNER

// repeated .Interactive.Message.User userInfo = 1;
inline int GetOnlineUserInfoRsp_INNER::userinfo_size() const {
  return userinfo_.size();
}
inline void GetOnlineUserInfoRsp_INNER::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::Interactive::Message::User& GetOnlineUserInfoRsp_INNER::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Get(index);
}
inline ::Interactive::Message::User* GetOnlineUserInfoRsp_INNER::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Mutable(index);
}
inline ::Interactive::Message::User* GetOnlineUserInfoRsp_INNER::add_userinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
GetOnlineUserInfoRsp_INNER::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return &userinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
GetOnlineUserInfoRsp_INNER::userinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_;
}

// string strValue = 2;
inline void GetOnlineUserInfoRsp_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOnlineUserInfoRsp_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  return strvalue_.GetNoArena();
}
inline void GetOnlineUserInfoRsp_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
#if LANG_CXX11
inline void GetOnlineUserInfoRsp_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
#endif
inline void GetOnlineUserInfoRsp_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
inline void GetOnlineUserInfoRsp_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
inline ::std::string* GetOnlineUserInfoRsp_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOnlineUserInfoRsp_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOnlineUserInfoRsp_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}

// -------------------------------------------------------------------

// BroadcastOnlineUserInfo_INNER

// repeated .Interactive.Message.User userInfo = 1;
inline int BroadcastOnlineUserInfo_INNER::userinfo_size() const {
  return userinfo_.size();
}
inline void BroadcastOnlineUserInfo_INNER::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::Interactive::Message::User& BroadcastOnlineUserInfo_INNER::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Get(index);
}
inline ::Interactive::Message::User* BroadcastOnlineUserInfo_INNER::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Mutable(index);
}
inline ::Interactive::Message::User* BroadcastOnlineUserInfo_INNER::add_userinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
BroadcastOnlineUserInfo_INNER::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return &userinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
BroadcastOnlineUserInfo_INNER::userinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_;
}

// string strValue = 2;
inline void BroadcastOnlineUserInfo_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadcastOnlineUserInfo_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  return strvalue_.GetNoArena();
}
inline void BroadcastOnlineUserInfo_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
#if LANG_CXX11
inline void BroadcastOnlineUserInfo_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
#endif
inline void BroadcastOnlineUserInfo_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
inline void BroadcastOnlineUserInfo_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
inline ::std::string* BroadcastOnlineUserInfo_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastOnlineUserInfo_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastOnlineUserInfo_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}

// -------------------------------------------------------------------

// Req

// .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
inline bool Req::has_getaccessaddressreq_dev_value() const {
  return this != internal_default_instance() && getaccessaddressreq_dev_value_ != NULL;
}
inline void Req::clear_getaccessaddressreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_dev_value_ != NULL) delete getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = NULL;
}
inline const ::Interactive::Message::GetAccessAddressReq_DEV& Req::getaccessaddressreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  return getaccessaddressreq_dev_value_ != NULL ? *getaccessaddressreq_dev_value_
                         : *::Interactive::Message::GetAccessAddressReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::GetAccessAddressReq_DEV* Req::mutable_getaccessaddressreq_dev_value() {
  
  if (getaccessaddressreq_dev_value_ == NULL) {
    getaccessaddressreq_dev_value_ = new ::Interactive::Message::GetAccessAddressReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  return getaccessaddressreq_dev_value_;
}
inline ::Interactive::Message::GetAccessAddressReq_DEV* Req::release_getaccessaddressreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  
  ::Interactive::Message::GetAccessAddressReq_DEV* temp = getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_getaccessaddressreq_dev_value(::Interactive::Message::GetAccessAddressReq_DEV* getaccessaddressreq_dev_value) {
  delete getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = getaccessaddressreq_dev_value;
  if (getaccessaddressreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
}

// .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
inline bool Req::has_loginreq_dev_value() const {
  return this != internal_default_instance() && loginreq_dev_value_ != NULL;
}
inline void Req::clear_loginreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && loginreq_dev_value_ != NULL) delete loginreq_dev_value_;
  loginreq_dev_value_ = NULL;
}
inline const ::Interactive::Message::LoginReq_DEV& Req::loginreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LoginReq_DEV_Value)
  return loginreq_dev_value_ != NULL ? *loginreq_dev_value_
                         : *::Interactive::Message::LoginReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::LoginReq_DEV* Req::mutable_loginreq_dev_value() {
  
  if (loginreq_dev_value_ == NULL) {
    loginreq_dev_value_ = new ::Interactive::Message::LoginReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LoginReq_DEV_Value)
  return loginreq_dev_value_;
}
inline ::Interactive::Message::LoginReq_DEV* Req::release_loginreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LoginReq_DEV_Value)
  
  ::Interactive::Message::LoginReq_DEV* temp = loginreq_dev_value_;
  loginreq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_loginreq_dev_value(::Interactive::Message::LoginReq_DEV* loginreq_dev_value) {
  delete loginreq_dev_value_;
  loginreq_dev_value_ = loginreq_dev_value;
  if (loginreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LoginReq_DEV_Value)
}

// .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
inline bool Req::has_logoutreq_dev_value() const {
  return this != internal_default_instance() && logoutreq_dev_value_ != NULL;
}
inline void Req::clear_logoutreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && logoutreq_dev_value_ != NULL) delete logoutreq_dev_value_;
  logoutreq_dev_value_ = NULL;
}
inline const ::Interactive::Message::LogoutReq_DEV& Req::logoutreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LogoutReq_DEV_Value)
  return logoutreq_dev_value_ != NULL ? *logoutreq_dev_value_
                         : *::Interactive::Message::LogoutReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::LogoutReq_DEV* Req::mutable_logoutreq_dev_value() {
  
  if (logoutreq_dev_value_ == NULL) {
    logoutreq_dev_value_ = new ::Interactive::Message::LogoutReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LogoutReq_DEV_Value)
  return logoutreq_dev_value_;
}
inline ::Interactive::Message::LogoutReq_DEV* Req::release_logoutreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LogoutReq_DEV_Value)
  
  ::Interactive::Message::LogoutReq_DEV* temp = logoutreq_dev_value_;
  logoutreq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_logoutreq_dev_value(::Interactive::Message::LogoutReq_DEV* logoutreq_dev_value) {
  delete logoutreq_dev_value_;
  logoutreq_dev_value_ = logoutreq_dev_value;
  if (logoutreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LogoutReq_DEV_Value)
}

// .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
inline bool Req::has_shakehandreq_dev_value() const {
  return this != internal_default_instance() && shakehandreq_dev_value_ != NULL;
}
inline void Req::clear_shakehandreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_dev_value_ != NULL) delete shakehandreq_dev_value_;
  shakehandreq_dev_value_ = NULL;
}
inline const ::Interactive::Message::ShakehandReq_DEV& Req::shakehandreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ShakehandReq_DEV_Value)
  return shakehandreq_dev_value_ != NULL ? *shakehandreq_dev_value_
                         : *::Interactive::Message::ShakehandReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::ShakehandReq_DEV* Req::mutable_shakehandreq_dev_value() {
  
  if (shakehandreq_dev_value_ == NULL) {
    shakehandreq_dev_value_ = new ::Interactive::Message::ShakehandReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ShakehandReq_DEV_Value)
  return shakehandreq_dev_value_;
}
inline ::Interactive::Message::ShakehandReq_DEV* Req::release_shakehandreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ShakehandReq_DEV_Value)
  
  ::Interactive::Message::ShakehandReq_DEV* temp = shakehandreq_dev_value_;
  shakehandreq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_shakehandreq_dev_value(::Interactive::Message::ShakehandReq_DEV* shakehandreq_dev_value) {
  delete shakehandreq_dev_value_;
  shakehandreq_dev_value_ = shakehandreq_dev_value;
  if (shakehandreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ShakehandReq_DEV_Value)
}

// .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
inline bool Req::has_configinforeq_dev_value() const {
  return this != internal_default_instance() && configinforeq_dev_value_ != NULL;
}
inline void Req::clear_configinforeq_dev_value() {
  if (GetArenaNoVirtual() == NULL && configinforeq_dev_value_ != NULL) delete configinforeq_dev_value_;
  configinforeq_dev_value_ = NULL;
}
inline const ::Interactive::Message::ConfigInfoReq_DEV& Req::configinforeq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  return configinforeq_dev_value_ != NULL ? *configinforeq_dev_value_
                         : *::Interactive::Message::ConfigInfoReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::ConfigInfoReq_DEV* Req::mutable_configinforeq_dev_value() {
  
  if (configinforeq_dev_value_ == NULL) {
    configinforeq_dev_value_ = new ::Interactive::Message::ConfigInfoReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  return configinforeq_dev_value_;
}
inline ::Interactive::Message::ConfigInfoReq_DEV* Req::release_configinforeq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  
  ::Interactive::Message::ConfigInfoReq_DEV* temp = configinforeq_dev_value_;
  configinforeq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_configinforeq_dev_value(::Interactive::Message::ConfigInfoReq_DEV* configinforeq_dev_value) {
  delete configinforeq_dev_value_;
  configinforeq_dev_value_ = configinforeq_dev_value;
  if (configinforeq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
}

// .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
inline bool Req::has_storageaddressreq_dev_value() const {
  return this != internal_default_instance() && storageaddressreq_dev_value_ != NULL;
}
inline void Req::clear_storageaddressreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_dev_value_ != NULL) delete storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = NULL;
}
inline const ::Interactive::Message::StorageAddressReq_DEV& Req::storageaddressreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  return storageaddressreq_dev_value_ != NULL ? *storageaddressreq_dev_value_
                         : *::Interactive::Message::StorageAddressReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::StorageAddressReq_DEV* Req::mutable_storageaddressreq_dev_value() {
  
  if (storageaddressreq_dev_value_ == NULL) {
    storageaddressreq_dev_value_ = new ::Interactive::Message::StorageAddressReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  return storageaddressreq_dev_value_;
}
inline ::Interactive::Message::StorageAddressReq_DEV* Req::release_storageaddressreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  
  ::Interactive::Message::StorageAddressReq_DEV* temp = storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_storageaddressreq_dev_value(::Interactive::Message::StorageAddressReq_DEV* storageaddressreq_dev_value) {
  delete storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = storageaddressreq_dev_value;
  if (storageaddressreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.StorageAddressReq_DEV_Value)
}

// .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
inline bool Req::has_p2pinforeq_dev_value() const {
  return this != internal_default_instance() && p2pinforeq_dev_value_ != NULL;
}
inline void Req::clear_p2pinforeq_dev_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforeq_dev_value_ != NULL) delete p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = NULL;
}
inline const ::Interactive::Message::P2pInfoReq_DEV& Req::p2pinforeq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  return p2pinforeq_dev_value_ != NULL ? *p2pinforeq_dev_value_
                         : *::Interactive::Message::P2pInfoReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::P2pInfoReq_DEV* Req::mutable_p2pinforeq_dev_value() {
  
  if (p2pinforeq_dev_value_ == NULL) {
    p2pinforeq_dev_value_ = new ::Interactive::Message::P2pInfoReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  return p2pinforeq_dev_value_;
}
inline ::Interactive::Message::P2pInfoReq_DEV* Req::release_p2pinforeq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  
  ::Interactive::Message::P2pInfoReq_DEV* temp = p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_p2pinforeq_dev_value(::Interactive::Message::P2pInfoReq_DEV* p2pinforeq_dev_value) {
  delete p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = p2pinforeq_dev_value;
  if (p2pinforeq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.P2pInfoReq_DEV_Value)
}

// .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
inline bool Req::has_addfilereq_dev_value() const {
  return this != internal_default_instance() && addfilereq_dev_value_ != NULL;
}
inline void Req::clear_addfilereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && addfilereq_dev_value_ != NULL) delete addfilereq_dev_value_;
  addfilereq_dev_value_ = NULL;
}
inline const ::Interactive::Message::AddFileReq_DEV& Req::addfilereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddFileReq_DEV_Value)
  return addfilereq_dev_value_ != NULL ? *addfilereq_dev_value_
                         : *::Interactive::Message::AddFileReq_DEV::internal_default_instance();
}
inline ::Interactive::Message::AddFileReq_DEV* Req::mutable_addfilereq_dev_value() {
  
  if (addfilereq_dev_value_ == NULL) {
    addfilereq_dev_value_ = new ::Interactive::Message::AddFileReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddFileReq_DEV_Value)
  return addfilereq_dev_value_;
}
inline ::Interactive::Message::AddFileReq_DEV* Req::release_addfilereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddFileReq_DEV_Value)
  
  ::Interactive::Message::AddFileReq_DEV* temp = addfilereq_dev_value_;
  addfilereq_dev_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_addfilereq_dev_value(::Interactive::Message::AddFileReq_DEV* addfilereq_dev_value) {
  delete addfilereq_dev_value_;
  addfilereq_dev_value_ = addfilereq_dev_value;
  if (addfilereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddFileReq_DEV_Value)
}

// .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
inline bool Req::has_msgprehandlerreq_usr_value() const {
  return this != internal_default_instance() && msgprehandlerreq_usr_value_ != NULL;
}
inline void Req::clear_msgprehandlerreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && msgprehandlerreq_usr_value_ != NULL) delete msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::MsgPreHandlerReq_USR& Req::msgprehandlerreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  return msgprehandlerreq_usr_value_ != NULL ? *msgprehandlerreq_usr_value_
                         : *::Interactive::Message::MsgPreHandlerReq_USR::internal_default_instance();
}
inline ::Interactive::Message::MsgPreHandlerReq_USR* Req::mutable_msgprehandlerreq_usr_value() {
  
  if (msgprehandlerreq_usr_value_ == NULL) {
    msgprehandlerreq_usr_value_ = new ::Interactive::Message::MsgPreHandlerReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  return msgprehandlerreq_usr_value_;
}
inline ::Interactive::Message::MsgPreHandlerReq_USR* Req::release_msgprehandlerreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  
  ::Interactive::Message::MsgPreHandlerReq_USR* temp = msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_msgprehandlerreq_usr_value(::Interactive::Message::MsgPreHandlerReq_USR* msgprehandlerreq_usr_value) {
  delete msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = msgprehandlerreq_usr_value;
  if (msgprehandlerreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
}

// .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
inline bool Req::has_getaccessaddressreq_usr_value() const {
  return this != internal_default_instance() && getaccessaddressreq_usr_value_ != NULL;
}
inline void Req::clear_getaccessaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_usr_value_ != NULL) delete getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::GetAccessAddressReq_USR& Req::getaccessaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  return getaccessaddressreq_usr_value_ != NULL ? *getaccessaddressreq_usr_value_
                         : *::Interactive::Message::GetAccessAddressReq_USR::internal_default_instance();
}
inline ::Interactive::Message::GetAccessAddressReq_USR* Req::mutable_getaccessaddressreq_usr_value() {
  
  if (getaccessaddressreq_usr_value_ == NULL) {
    getaccessaddressreq_usr_value_ = new ::Interactive::Message::GetAccessAddressReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  return getaccessaddressreq_usr_value_;
}
inline ::Interactive::Message::GetAccessAddressReq_USR* Req::release_getaccessaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  
  ::Interactive::Message::GetAccessAddressReq_USR* temp = getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_getaccessaddressreq_usr_value(::Interactive::Message::GetAccessAddressReq_USR* getaccessaddressreq_usr_value) {
  delete getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = getaccessaddressreq_usr_value;
  if (getaccessaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
}

// .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
inline bool Req::has_registeruserreq_usr_value() const {
  return this != internal_default_instance() && registeruserreq_usr_value_ != NULL;
}
inline void Req::clear_registeruserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && registeruserreq_usr_value_ != NULL) delete registeruserreq_usr_value_;
  registeruserreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::RegisterUserReq_USR& Req::registeruserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.RegisterUserReq_USR_Value)
  return registeruserreq_usr_value_ != NULL ? *registeruserreq_usr_value_
                         : *::Interactive::Message::RegisterUserReq_USR::internal_default_instance();
}
inline ::Interactive::Message::RegisterUserReq_USR* Req::mutable_registeruserreq_usr_value() {
  
  if (registeruserreq_usr_value_ == NULL) {
    registeruserreq_usr_value_ = new ::Interactive::Message::RegisterUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.RegisterUserReq_USR_Value)
  return registeruserreq_usr_value_;
}
inline ::Interactive::Message::RegisterUserReq_USR* Req::release_registeruserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.RegisterUserReq_USR_Value)
  
  ::Interactive::Message::RegisterUserReq_USR* temp = registeruserreq_usr_value_;
  registeruserreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_registeruserreq_usr_value(::Interactive::Message::RegisterUserReq_USR* registeruserreq_usr_value) {
  delete registeruserreq_usr_value_;
  registeruserreq_usr_value_ = registeruserreq_usr_value;
  if (registeruserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.RegisterUserReq_USR_Value)
}

// .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
inline bool Req::has_unregisteruserreq_usr_value() const {
  return this != internal_default_instance() && unregisteruserreq_usr_value_ != NULL;
}
inline void Req::clear_unregisteruserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregisteruserreq_usr_value_ != NULL) delete unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::UnRegisterUserReq_USR& Req::unregisteruserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  return unregisteruserreq_usr_value_ != NULL ? *unregisteruserreq_usr_value_
                         : *::Interactive::Message::UnRegisterUserReq_USR::internal_default_instance();
}
inline ::Interactive::Message::UnRegisterUserReq_USR* Req::mutable_unregisteruserreq_usr_value() {
  
  if (unregisteruserreq_usr_value_ == NULL) {
    unregisteruserreq_usr_value_ = new ::Interactive::Message::UnRegisterUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  return unregisteruserreq_usr_value_;
}
inline ::Interactive::Message::UnRegisterUserReq_USR* Req::release_unregisteruserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  
  ::Interactive::Message::UnRegisterUserReq_USR* temp = unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_unregisteruserreq_usr_value(::Interactive::Message::UnRegisterUserReq_USR* unregisteruserreq_usr_value) {
  delete unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = unregisteruserreq_usr_value;
  if (unregisteruserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
}

// .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
inline bool Req::has_queryusrinforeq_usr_value() const {
  return this != internal_default_instance() && queryusrinforeq_usr_value_ != NULL;
}
inline void Req::clear_queryusrinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusrinforeq_usr_value_ != NULL) delete queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryUsrInfoReq_USR& Req::queryusrinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  return queryusrinforeq_usr_value_ != NULL ? *queryusrinforeq_usr_value_
                         : *::Interactive::Message::QueryUsrInfoReq_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryUsrInfoReq_USR* Req::mutable_queryusrinforeq_usr_value() {
  
  if (queryusrinforeq_usr_value_ == NULL) {
    queryusrinforeq_usr_value_ = new ::Interactive::Message::QueryUsrInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  return queryusrinforeq_usr_value_;
}
inline ::Interactive::Message::QueryUsrInfoReq_USR* Req::release_queryusrinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  
  ::Interactive::Message::QueryUsrInfoReq_USR* temp = queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_queryusrinforeq_usr_value(::Interactive::Message::QueryUsrInfoReq_USR* queryusrinforeq_usr_value) {
  delete queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = queryusrinforeq_usr_value;
  if (queryusrinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
}

// .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
inline bool Req::has_modifyuserinforeq_usr_value() const {
  return this != internal_default_instance() && modifyuserinforeq_usr_value_ != NULL;
}
inline void Req::clear_modifyuserinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifyuserinforeq_usr_value_ != NULL) delete modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = NULL;
}
inline const ::Interactive::Message::ModifyUserInfoReq_USR& Req::modifyuserinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  return modifyuserinforeq_usr_value_ != NULL ? *modifyuserinforeq_usr_value_
                         : *::Interactive::Message::ModifyUserInfoReq_USR::internal_default_instance();
}
inline ::Interactive::Message::ModifyUserInfoReq_USR* Req::mutable_modifyuserinforeq_usr_value() {
  
  if (modifyuserinforeq_usr_value_ == NULL) {
    modifyuserinforeq_usr_value_ = new ::Interactive::Message::ModifyUserInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  return modifyuserinforeq_usr_value_;
}
inline ::Interactive::Message::ModifyUserInfoReq_USR* Req::release_modifyuserinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  
  ::Interactive::Message::ModifyUserInfoReq_USR* temp = modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_modifyuserinforeq_usr_value(::Interactive::Message::ModifyUserInfoReq_USR* modifyuserinforeq_usr_value) {
  delete modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = modifyuserinforeq_usr_value;
  if (modifyuserinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
}

// .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
inline bool Req::has_loginreq_usr_value() const {
  return this != internal_default_instance() && loginreq_usr_value_ != NULL;
}
inline void Req::clear_loginreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && loginreq_usr_value_ != NULL) delete loginreq_usr_value_;
  loginreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::LoginReq_USR& Req::loginreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LoginReq_USR_Value)
  return loginreq_usr_value_ != NULL ? *loginreq_usr_value_
                         : *::Interactive::Message::LoginReq_USR::internal_default_instance();
}
inline ::Interactive::Message::LoginReq_USR* Req::mutable_loginreq_usr_value() {
  
  if (loginreq_usr_value_ == NULL) {
    loginreq_usr_value_ = new ::Interactive::Message::LoginReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LoginReq_USR_Value)
  return loginreq_usr_value_;
}
inline ::Interactive::Message::LoginReq_USR* Req::release_loginreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LoginReq_USR_Value)
  
  ::Interactive::Message::LoginReq_USR* temp = loginreq_usr_value_;
  loginreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_loginreq_usr_value(::Interactive::Message::LoginReq_USR* loginreq_usr_value) {
  delete loginreq_usr_value_;
  loginreq_usr_value_ = loginreq_usr_value;
  if (loginreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LoginReq_USR_Value)
}

// .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
inline bool Req::has_logoutreq_usr_value() const {
  return this != internal_default_instance() && logoutreq_usr_value_ != NULL;
}
inline void Req::clear_logoutreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && logoutreq_usr_value_ != NULL) delete logoutreq_usr_value_;
  logoutreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::LogoutReq_USR& Req::logoutreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LogoutReq_USR_Value)
  return logoutreq_usr_value_ != NULL ? *logoutreq_usr_value_
                         : *::Interactive::Message::LogoutReq_USR::internal_default_instance();
}
inline ::Interactive::Message::LogoutReq_USR* Req::mutable_logoutreq_usr_value() {
  
  if (logoutreq_usr_value_ == NULL) {
    logoutreq_usr_value_ = new ::Interactive::Message::LogoutReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LogoutReq_USR_Value)
  return logoutreq_usr_value_;
}
inline ::Interactive::Message::LogoutReq_USR* Req::release_logoutreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LogoutReq_USR_Value)
  
  ::Interactive::Message::LogoutReq_USR* temp = logoutreq_usr_value_;
  logoutreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_logoutreq_usr_value(::Interactive::Message::LogoutReq_USR* logoutreq_usr_value) {
  delete logoutreq_usr_value_;
  logoutreq_usr_value_ = logoutreq_usr_value;
  if (logoutreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LogoutReq_USR_Value)
}

// .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
inline bool Req::has_shakehandreq_usr_value() const {
  return this != internal_default_instance() && shakehandreq_usr_value_ != NULL;
}
inline void Req::clear_shakehandreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_usr_value_ != NULL) delete shakehandreq_usr_value_;
  shakehandreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::ShakehandReq_USR& Req::shakehandreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ShakehandReq_USR_Value)
  return shakehandreq_usr_value_ != NULL ? *shakehandreq_usr_value_
                         : *::Interactive::Message::ShakehandReq_USR::internal_default_instance();
}
inline ::Interactive::Message::ShakehandReq_USR* Req::mutable_shakehandreq_usr_value() {
  
  if (shakehandreq_usr_value_ == NULL) {
    shakehandreq_usr_value_ = new ::Interactive::Message::ShakehandReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ShakehandReq_USR_Value)
  return shakehandreq_usr_value_;
}
inline ::Interactive::Message::ShakehandReq_USR* Req::release_shakehandreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ShakehandReq_USR_Value)
  
  ::Interactive::Message::ShakehandReq_USR* temp = shakehandreq_usr_value_;
  shakehandreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_shakehandreq_usr_value(::Interactive::Message::ShakehandReq_USR* shakehandreq_usr_value) {
  delete shakehandreq_usr_value_;
  shakehandreq_usr_value_ = shakehandreq_usr_value;
  if (shakehandreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ShakehandReq_USR_Value)
}

// .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
inline bool Req::has_configinforeq_usr_value() const {
  return this != internal_default_instance() && configinforeq_usr_value_ != NULL;
}
inline void Req::clear_configinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && configinforeq_usr_value_ != NULL) delete configinforeq_usr_value_;
  configinforeq_usr_value_ = NULL;
}
inline const ::Interactive::Message::ConfigInfoReq_USR& Req::configinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  return configinforeq_usr_value_ != NULL ? *configinforeq_usr_value_
                         : *::Interactive::Message::ConfigInfoReq_USR::internal_default_instance();
}
inline ::Interactive::Message::ConfigInfoReq_USR* Req::mutable_configinforeq_usr_value() {
  
  if (configinforeq_usr_value_ == NULL) {
    configinforeq_usr_value_ = new ::Interactive::Message::ConfigInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  return configinforeq_usr_value_;
}
inline ::Interactive::Message::ConfigInfoReq_USR* Req::release_configinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  
  ::Interactive::Message::ConfigInfoReq_USR* temp = configinforeq_usr_value_;
  configinforeq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_configinforeq_usr_value(::Interactive::Message::ConfigInfoReq_USR* configinforeq_usr_value) {
  delete configinforeq_usr_value_;
  configinforeq_usr_value_ = configinforeq_usr_value;
  if (configinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ConfigInfoReq_USR_Value)
}

// .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
inline bool Req::has_adddevreq_usr_value() const {
  return this != internal_default_instance() && adddevreq_usr_value_ != NULL;
}
inline void Req::clear_adddevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && adddevreq_usr_value_ != NULL) delete adddevreq_usr_value_;
  adddevreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::AddDevReq_USR& Req::adddevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddDevReq_USR_Value)
  return adddevreq_usr_value_ != NULL ? *adddevreq_usr_value_
                         : *::Interactive::Message::AddDevReq_USR::internal_default_instance();
}
inline ::Interactive::Message::AddDevReq_USR* Req::mutable_adddevreq_usr_value() {
  
  if (adddevreq_usr_value_ == NULL) {
    adddevreq_usr_value_ = new ::Interactive::Message::AddDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddDevReq_USR_Value)
  return adddevreq_usr_value_;
}
inline ::Interactive::Message::AddDevReq_USR* Req::release_adddevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddDevReq_USR_Value)
  
  ::Interactive::Message::AddDevReq_USR* temp = adddevreq_usr_value_;
  adddevreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_adddevreq_usr_value(::Interactive::Message::AddDevReq_USR* adddevreq_usr_value) {
  delete adddevreq_usr_value_;
  adddevreq_usr_value_ = adddevreq_usr_value;
  if (adddevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddDevReq_USR_Value)
}

// .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
inline bool Req::has_deldevreq_usr_value() const {
  return this != internal_default_instance() && deldevreq_usr_value_ != NULL;
}
inline void Req::clear_deldevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deldevreq_usr_value_ != NULL) delete deldevreq_usr_value_;
  deldevreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::DelDevReq_USR& Req::deldevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DelDevReq_USR_Value)
  return deldevreq_usr_value_ != NULL ? *deldevreq_usr_value_
                         : *::Interactive::Message::DelDevReq_USR::internal_default_instance();
}
inline ::Interactive::Message::DelDevReq_USR* Req::mutable_deldevreq_usr_value() {
  
  if (deldevreq_usr_value_ == NULL) {
    deldevreq_usr_value_ = new ::Interactive::Message::DelDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DelDevReq_USR_Value)
  return deldevreq_usr_value_;
}
inline ::Interactive::Message::DelDevReq_USR* Req::release_deldevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DelDevReq_USR_Value)
  
  ::Interactive::Message::DelDevReq_USR* temp = deldevreq_usr_value_;
  deldevreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_deldevreq_usr_value(::Interactive::Message::DelDevReq_USR* deldevreq_usr_value) {
  delete deldevreq_usr_value_;
  deldevreq_usr_value_ = deldevreq_usr_value;
  if (deldevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DelDevReq_USR_Value)
}

// .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
inline bool Req::has_modifydevreq_usr_value() const {
  return this != internal_default_instance() && modifydevreq_usr_value_ != NULL;
}
inline void Req::clear_modifydevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydevreq_usr_value_ != NULL) delete modifydevreq_usr_value_;
  modifydevreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::ModifyDevReq_USR& Req::modifydevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyDevReq_USR_Value)
  return modifydevreq_usr_value_ != NULL ? *modifydevreq_usr_value_
                         : *::Interactive::Message::ModifyDevReq_USR::internal_default_instance();
}
inline ::Interactive::Message::ModifyDevReq_USR* Req::mutable_modifydevreq_usr_value() {
  
  if (modifydevreq_usr_value_ == NULL) {
    modifydevreq_usr_value_ = new ::Interactive::Message::ModifyDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyDevReq_USR_Value)
  return modifydevreq_usr_value_;
}
inline ::Interactive::Message::ModifyDevReq_USR* Req::release_modifydevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyDevReq_USR_Value)
  
  ::Interactive::Message::ModifyDevReq_USR* temp = modifydevreq_usr_value_;
  modifydevreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_modifydevreq_usr_value(::Interactive::Message::ModifyDevReq_USR* modifydevreq_usr_value) {
  delete modifydevreq_usr_value_;
  modifydevreq_usr_value_ = modifydevreq_usr_value;
  if (modifydevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyDevReq_USR_Value)
}

// .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
inline bool Req::has_querydevinforeq_usr_value() const {
  return this != internal_default_instance() && querydevinforeq_usr_value_ != NULL;
}
inline void Req::clear_querydevinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevinforeq_usr_value_ != NULL) delete querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryDevInfoReq_USR& Req::querydevinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  return querydevinforeq_usr_value_ != NULL ? *querydevinforeq_usr_value_
                         : *::Interactive::Message::QueryDevInfoReq_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryDevInfoReq_USR* Req::mutable_querydevinforeq_usr_value() {
  
  if (querydevinforeq_usr_value_ == NULL) {
    querydevinforeq_usr_value_ = new ::Interactive::Message::QueryDevInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  return querydevinforeq_usr_value_;
}
inline ::Interactive::Message::QueryDevInfoReq_USR* Req::release_querydevinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  
  ::Interactive::Message::QueryDevInfoReq_USR* temp = querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_querydevinforeq_usr_value(::Interactive::Message::QueryDevInfoReq_USR* querydevinforeq_usr_value) {
  delete querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = querydevinforeq_usr_value;
  if (querydevinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
}

// .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
inline bool Req::has_querydevreq_usr_value() const {
  return this != internal_default_instance() && querydevreq_usr_value_ != NULL;
}
inline void Req::clear_querydevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevreq_usr_value_ != NULL) delete querydevreq_usr_value_;
  querydevreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryDevReq_USR& Req::querydevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDevReq_USR_Value)
  return querydevreq_usr_value_ != NULL ? *querydevreq_usr_value_
                         : *::Interactive::Message::QueryDevReq_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryDevReq_USR* Req::mutable_querydevreq_usr_value() {
  
  if (querydevreq_usr_value_ == NULL) {
    querydevreq_usr_value_ = new ::Interactive::Message::QueryDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDevReq_USR_Value)
  return querydevreq_usr_value_;
}
inline ::Interactive::Message::QueryDevReq_USR* Req::release_querydevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDevReq_USR_Value)
  
  ::Interactive::Message::QueryDevReq_USR* temp = querydevreq_usr_value_;
  querydevreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_querydevreq_usr_value(::Interactive::Message::QueryDevReq_USR* querydevreq_usr_value) {
  delete querydevreq_usr_value_;
  querydevreq_usr_value_ = querydevreq_usr_value;
  if (querydevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDevReq_USR_Value)
}

// .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
inline bool Req::has_queryuserreq_usr_value() const {
  return this != internal_default_instance() && queryuserreq_usr_value_ != NULL;
}
inline void Req::clear_queryuserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryuserreq_usr_value_ != NULL) delete queryuserreq_usr_value_;
  queryuserreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryUserReq_USR& Req::queryuserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUserReq_USR_Value)
  return queryuserreq_usr_value_ != NULL ? *queryuserreq_usr_value_
                         : *::Interactive::Message::QueryUserReq_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryUserReq_USR* Req::mutable_queryuserreq_usr_value() {
  
  if (queryuserreq_usr_value_ == NULL) {
    queryuserreq_usr_value_ = new ::Interactive::Message::QueryUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUserReq_USR_Value)
  return queryuserreq_usr_value_;
}
inline ::Interactive::Message::QueryUserReq_USR* Req::release_queryuserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUserReq_USR_Value)
  
  ::Interactive::Message::QueryUserReq_USR* temp = queryuserreq_usr_value_;
  queryuserreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_queryuserreq_usr_value(::Interactive::Message::QueryUserReq_USR* queryuserreq_usr_value) {
  delete queryuserreq_usr_value_;
  queryuserreq_usr_value_ = queryuserreq_usr_value;
  if (queryuserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUserReq_USR_Value)
}

// .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
inline bool Req::has_sharingdevreq_usr_value() const {
  return this != internal_default_instance() && sharingdevreq_usr_value_ != NULL;
}
inline void Req::clear_sharingdevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && sharingdevreq_usr_value_ != NULL) delete sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::SharingDevReq_USR& Req::sharingdevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.SharingDevReq_USR_Value)
  return sharingdevreq_usr_value_ != NULL ? *sharingdevreq_usr_value_
                         : *::Interactive::Message::SharingDevReq_USR::internal_default_instance();
}
inline ::Interactive::Message::SharingDevReq_USR* Req::mutable_sharingdevreq_usr_value() {
  
  if (sharingdevreq_usr_value_ == NULL) {
    sharingdevreq_usr_value_ = new ::Interactive::Message::SharingDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.SharingDevReq_USR_Value)
  return sharingdevreq_usr_value_;
}
inline ::Interactive::Message::SharingDevReq_USR* Req::release_sharingdevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.SharingDevReq_USR_Value)
  
  ::Interactive::Message::SharingDevReq_USR* temp = sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_sharingdevreq_usr_value(::Interactive::Message::SharingDevReq_USR* sharingdevreq_usr_value) {
  delete sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = sharingdevreq_usr_value;
  if (sharingdevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.SharingDevReq_USR_Value)
}

// .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
inline bool Req::has_cancelshareddevreq_usr_value() const {
  return this != internal_default_instance() && cancelshareddevreq_usr_value_ != NULL;
}
inline void Req::clear_cancelshareddevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && cancelshareddevreq_usr_value_ != NULL) delete cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::CancelSharedDevReq_USR& Req::cancelshareddevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  return cancelshareddevreq_usr_value_ != NULL ? *cancelshareddevreq_usr_value_
                         : *::Interactive::Message::CancelSharedDevReq_USR::internal_default_instance();
}
inline ::Interactive::Message::CancelSharedDevReq_USR* Req::mutable_cancelshareddevreq_usr_value() {
  
  if (cancelshareddevreq_usr_value_ == NULL) {
    cancelshareddevreq_usr_value_ = new ::Interactive::Message::CancelSharedDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  return cancelshareddevreq_usr_value_;
}
inline ::Interactive::Message::CancelSharedDevReq_USR* Req::release_cancelshareddevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  
  ::Interactive::Message::CancelSharedDevReq_USR* temp = cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_cancelshareddevreq_usr_value(::Interactive::Message::CancelSharedDevReq_USR* cancelshareddevreq_usr_value) {
  delete cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = cancelshareddevreq_usr_value;
  if (cancelshareddevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
}

// .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
inline bool Req::has_addfriendsreq_usr_value() const {
  return this != internal_default_instance() && addfriendsreq_usr_value_ != NULL;
}
inline void Req::clear_addfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && addfriendsreq_usr_value_ != NULL) delete addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::AddFriendsReq_USR& Req::addfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddFriendsReq_USR_Value)
  return addfriendsreq_usr_value_ != NULL ? *addfriendsreq_usr_value_
                         : *::Interactive::Message::AddFriendsReq_USR::internal_default_instance();
}
inline ::Interactive::Message::AddFriendsReq_USR* Req::mutable_addfriendsreq_usr_value() {
  
  if (addfriendsreq_usr_value_ == NULL) {
    addfriendsreq_usr_value_ = new ::Interactive::Message::AddFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddFriendsReq_USR_Value)
  return addfriendsreq_usr_value_;
}
inline ::Interactive::Message::AddFriendsReq_USR* Req::release_addfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddFriendsReq_USR_Value)
  
  ::Interactive::Message::AddFriendsReq_USR* temp = addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_addfriendsreq_usr_value(::Interactive::Message::AddFriendsReq_USR* addfriendsreq_usr_value) {
  delete addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = addfriendsreq_usr_value;
  if (addfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddFriendsReq_USR_Value)
}

// .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
inline bool Req::has_delfriendsreq_usr_value() const {
  return this != internal_default_instance() && delfriendsreq_usr_value_ != NULL;
}
inline void Req::clear_delfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && delfriendsreq_usr_value_ != NULL) delete delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::DelFriendsReq_USR& Req::delfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DelFriendsReq_USR_Value)
  return delfriendsreq_usr_value_ != NULL ? *delfriendsreq_usr_value_
                         : *::Interactive::Message::DelFriendsReq_USR::internal_default_instance();
}
inline ::Interactive::Message::DelFriendsReq_USR* Req::mutable_delfriendsreq_usr_value() {
  
  if (delfriendsreq_usr_value_ == NULL) {
    delfriendsreq_usr_value_ = new ::Interactive::Message::DelFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DelFriendsReq_USR_Value)
  return delfriendsreq_usr_value_;
}
inline ::Interactive::Message::DelFriendsReq_USR* Req::release_delfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DelFriendsReq_USR_Value)
  
  ::Interactive::Message::DelFriendsReq_USR* temp = delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_delfriendsreq_usr_value(::Interactive::Message::DelFriendsReq_USR* delfriendsreq_usr_value) {
  delete delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = delfriendsreq_usr_value;
  if (delfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DelFriendsReq_USR_Value)
}

// .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
inline bool Req::has_queryfriendsreq_usr_value() const {
  return this != internal_default_instance() && queryfriendsreq_usr_value_ != NULL;
}
inline void Req::clear_queryfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfriendsreq_usr_value_ != NULL) delete queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryFriendsReq_USR& Req::queryfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  return queryfriendsreq_usr_value_ != NULL ? *queryfriendsreq_usr_value_
                         : *::Interactive::Message::QueryFriendsReq_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryFriendsReq_USR* Req::mutable_queryfriendsreq_usr_value() {
  
  if (queryfriendsreq_usr_value_ == NULL) {
    queryfriendsreq_usr_value_ = new ::Interactive::Message::QueryFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  return queryfriendsreq_usr_value_;
}
inline ::Interactive::Message::QueryFriendsReq_USR* Req::release_queryfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  
  ::Interactive::Message::QueryFriendsReq_USR* temp = queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_queryfriendsreq_usr_value(::Interactive::Message::QueryFriendsReq_USR* queryfriendsreq_usr_value) {
  delete queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = queryfriendsreq_usr_value;
  if (queryfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFriendsReq_USR_Value)
}

// .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
inline bool Req::has_storageaddressreq_usr_value() const {
  return this != internal_default_instance() && storageaddressreq_usr_value_ != NULL;
}
inline void Req::clear_storageaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::StorageAddressReq_USR& Req::storageaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_ != NULL ? *storageaddressreq_usr_value_
                         : *::Interactive::Message::StorageAddressReq_USR::internal_default_instance();
}
inline ::Interactive::Message::StorageAddressReq_USR* Req::mutable_storageaddressreq_usr_value() {
  
  if (storageaddressreq_usr_value_ == NULL) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_;
}
inline ::Interactive::Message::StorageAddressReq_USR* Req::release_storageaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.StorageAddressReq_USR_Value)
  
  ::Interactive::Message::StorageAddressReq_USR* temp = storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressReq_USR* storageaddressreq_usr_value) {
  delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = storageaddressreq_usr_value;
  if (storageaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.StorageAddressReq_USR_Value)
}

// .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
inline bool Req::has_p2pinforeq_usr_value() const {
  return this != internal_default_instance() && p2pinforeq_usr_value_ != NULL;
}
inline void Req::clear_p2pinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforeq_usr_value_ != NULL) delete p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = NULL;
}
inline const ::Interactive::Message::P2pInfoReq_USR& Req::p2pinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.P2pInfoReq_USR_Value)
  return p2pinforeq_usr_value_ != NULL ? *p2pinforeq_usr_value_
                         : *::Interactive::Message::P2pInfoReq_USR::internal_default_instance();
}
inline ::Interactive::Message::P2pInfoReq_USR* Req::mutable_p2pinforeq_usr_value() {
  
  if (p2pinforeq_usr_value_ == NULL) {
    p2pinforeq_usr_value_ = new ::Interactive::Message::P2pInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.P2pInfoReq_USR_Value)
  return p2pinforeq_usr_value_;
}
inline ::Interactive::Message::P2pInfoReq_USR* Req::release_p2pinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.P2pInfoReq_USR_Value)
  
  ::Interactive::Message::P2pInfoReq_USR* temp = p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_p2pinforeq_usr_value(::Interactive::Message::P2pInfoReq_USR* p2pinforeq_usr_value) {
  delete p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = p2pinforeq_usr_value;
  if (p2pinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.P2pInfoReq_USR_Value)
}

// .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
inline bool Req::has_deletefilereq_usr_value() const {
  return this != internal_default_instance() && deletefilereq_usr_value_ != NULL;
}
inline void Req::clear_deletefilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletefilereq_usr_value_ != NULL) delete deletefilereq_usr_value_;
  deletefilereq_usr_value_ = NULL;
}
inline const ::Interactive::Message::DeleteFileReq_USR& Req::deletefilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeleteFileReq_USR_Value)
  return deletefilereq_usr_value_ != NULL ? *deletefilereq_usr_value_
                         : *::Interactive::Message::DeleteFileReq_USR::internal_default_instance();
}
inline ::Interactive::Message::DeleteFileReq_USR* Req::mutable_deletefilereq_usr_value() {
  
  if (deletefilereq_usr_value_ == NULL) {
    deletefilereq_usr_value_ = new ::Interactive::Message::DeleteFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeleteFileReq_USR_Value)
  return deletefilereq_usr_value_;
}
inline ::Interactive::Message::DeleteFileReq_USR* Req::release_deletefilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeleteFileReq_USR_Value)
  
  ::Interactive::Message::DeleteFileReq_USR* temp = deletefilereq_usr_value_;
  deletefilereq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_deletefilereq_usr_value(::Interactive::Message::DeleteFileReq_USR* deletefilereq_usr_value) {
  delete deletefilereq_usr_value_;
  deletefilereq_usr_value_ = deletefilereq_usr_value;
  if (deletefilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeleteFileReq_USR_Value)
}

// .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
inline bool Req::has_downloadfilereq_usr_value() const {
  return this != internal_default_instance() && downloadfilereq_usr_value_ != NULL;
}
inline void Req::clear_downloadfilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && downloadfilereq_usr_value_ != NULL) delete downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = NULL;
}
inline const ::Interactive::Message::DownloadFileReq_USR& Req::downloadfilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DownloadFileReq_USR_Value)
  return downloadfilereq_usr_value_ != NULL ? *downloadfilereq_usr_value_
                         : *::Interactive::Message::DownloadFileReq_USR::internal_default_instance();
}
inline ::Interactive::Message::DownloadFileReq_USR* Req::mutable_downloadfilereq_usr_value() {
  
  if (downloadfilereq_usr_value_ == NULL) {
    downloadfilereq_usr_value_ = new ::Interactive::Message::DownloadFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DownloadFileReq_USR_Value)
  return downloadfilereq_usr_value_;
}
inline ::Interactive::Message::DownloadFileReq_USR* Req::release_downloadfilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DownloadFileReq_USR_Value)
  
  ::Interactive::Message::DownloadFileReq_USR* temp = downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_downloadfilereq_usr_value(::Interactive::Message::DownloadFileReq_USR* downloadfilereq_usr_value) {
  delete downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = downloadfilereq_usr_value;
  if (downloadfilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DownloadFileReq_USR_Value)
}

// .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
inline bool Req::has_queryfilereq_usr_value() const {
  return this != internal_default_instance() && queryfilereq_usr_value_ != NULL;
}
inline void Req::clear_queryfilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfilereq_usr_value_ != NULL) delete queryfilereq_usr_value_;
  queryfilereq_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryFileReq_USR& Req::queryfilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFileReq_USR_Value)
  return queryfilereq_usr_value_ != NULL ? *queryfilereq_usr_value_
                         : *::Interactive::Message::QueryFileReq_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryFileReq_USR* Req::mutable_queryfilereq_usr_value() {
  
  if (queryfilereq_usr_value_ == NULL) {
    queryfilereq_usr_value_ = new ::Interactive::Message::QueryFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFileReq_USR_Value)
  return queryfilereq_usr_value_;
}
inline ::Interactive::Message::QueryFileReq_USR* Req::release_queryfilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFileReq_USR_Value)
  
  ::Interactive::Message::QueryFileReq_USR* temp = queryfilereq_usr_value_;
  queryfilereq_usr_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_queryfilereq_usr_value(::Interactive::Message::QueryFileReq_USR* queryfilereq_usr_value) {
  delete queryfilereq_usr_value_;
  queryfilereq_usr_value_ = queryfilereq_usr_value;
  if (queryfilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFileReq_USR_Value)
}

// .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
inline bool Req::has_getonlinedevinforeq_inner_value() const {
  return this != internal_default_instance() && getonlinedevinforeq_inner_value_ != NULL;
}
inline void Req::clear_getonlinedevinforeq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlinedevinforeq_inner_value_ != NULL) delete getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = NULL;
}
inline const ::Interactive::Message::GetOnlineDevInfoReq_INNER& Req::getonlinedevinforeq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  return getonlinedevinforeq_inner_value_ != NULL ? *getonlinedevinforeq_inner_value_
                         : *::Interactive::Message::GetOnlineDevInfoReq_INNER::internal_default_instance();
}
inline ::Interactive::Message::GetOnlineDevInfoReq_INNER* Req::mutable_getonlinedevinforeq_inner_value() {
  
  if (getonlinedevinforeq_inner_value_ == NULL) {
    getonlinedevinforeq_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  return getonlinedevinforeq_inner_value_;
}
inline ::Interactive::Message::GetOnlineDevInfoReq_INNER* Req::release_getonlinedevinforeq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  
  ::Interactive::Message::GetOnlineDevInfoReq_INNER* temp = getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_getonlinedevinforeq_inner_value(::Interactive::Message::GetOnlineDevInfoReq_INNER* getonlinedevinforeq_inner_value) {
  delete getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = getonlinedevinforeq_inner_value;
  if (getonlinedevinforeq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
}

// .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
inline bool Req::has_broadcastonlinedevinfo_inner_value() const {
  return this != internal_default_instance() && broadcastonlinedevinfo_inner_value_ != NULL;
}
inline void Req::clear_broadcastonlinedevinfo_inner_value() {
  if (GetArenaNoVirtual() == NULL && broadcastonlinedevinfo_inner_value_ != NULL) delete broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = NULL;
}
inline const ::Interactive::Message::BroadcastOnlineDevInfo_INNER& Req::broadcastonlinedevinfo_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  return broadcastonlinedevinfo_inner_value_ != NULL ? *broadcastonlinedevinfo_inner_value_
                         : *::Interactive::Message::BroadcastOnlineDevInfo_INNER::internal_default_instance();
}
inline ::Interactive::Message::BroadcastOnlineDevInfo_INNER* Req::mutable_broadcastonlinedevinfo_inner_value() {
  
  if (broadcastonlinedevinfo_inner_value_ == NULL) {
    broadcastonlinedevinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineDevInfo_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  return broadcastonlinedevinfo_inner_value_;
}
inline ::Interactive::Message::BroadcastOnlineDevInfo_INNER* Req::release_broadcastonlinedevinfo_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  
  ::Interactive::Message::BroadcastOnlineDevInfo_INNER* temp = broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_broadcastonlinedevinfo_inner_value(::Interactive::Message::BroadcastOnlineDevInfo_INNER* broadcastonlinedevinfo_inner_value) {
  delete broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = broadcastonlinedevinfo_inner_value;
  if (broadcastonlinedevinfo_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
}

// .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
inline bool Req::has_getonlineuserinforeq_inner_value() const {
  return this != internal_default_instance() && getonlineuserinforeq_inner_value_ != NULL;
}
inline void Req::clear_getonlineuserinforeq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlineuserinforeq_inner_value_ != NULL) delete getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = NULL;
}
inline const ::Interactive::Message::GetOnlineUserInfoReq_INNER& Req::getonlineuserinforeq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  return getonlineuserinforeq_inner_value_ != NULL ? *getonlineuserinforeq_inner_value_
                         : *::Interactive::Message::GetOnlineUserInfoReq_INNER::internal_default_instance();
}
inline ::Interactive::Message::GetOnlineUserInfoReq_INNER* Req::mutable_getonlineuserinforeq_inner_value() {
  
  if (getonlineuserinforeq_inner_value_ == NULL) {
    getonlineuserinforeq_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  return getonlineuserinforeq_inner_value_;
}
inline ::Interactive::Message::GetOnlineUserInfoReq_INNER* Req::release_getonlineuserinforeq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  
  ::Interactive::Message::GetOnlineUserInfoReq_INNER* temp = getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_getonlineuserinforeq_inner_value(::Interactive::Message::GetOnlineUserInfoReq_INNER* getonlineuserinforeq_inner_value) {
  delete getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = getonlineuserinforeq_inner_value;
  if (getonlineuserinforeq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
}

// .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
inline bool Req::has_broadcastonlineuserinfo_inner_value() const {
  return this != internal_default_instance() && broadcastonlineuserinfo_inner_value_ != NULL;
}
inline void Req::clear_broadcastonlineuserinfo_inner_value() {
  if (GetArenaNoVirtual() == NULL && broadcastonlineuserinfo_inner_value_ != NULL) delete broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = NULL;
}
inline const ::Interactive::Message::BroadcastOnlineUserInfo_INNER& Req::broadcastonlineuserinfo_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  return broadcastonlineuserinfo_inner_value_ != NULL ? *broadcastonlineuserinfo_inner_value_
                         : *::Interactive::Message::BroadcastOnlineUserInfo_INNER::internal_default_instance();
}
inline ::Interactive::Message::BroadcastOnlineUserInfo_INNER* Req::mutable_broadcastonlineuserinfo_inner_value() {
  
  if (broadcastonlineuserinfo_inner_value_ == NULL) {
    broadcastonlineuserinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineUserInfo_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  return broadcastonlineuserinfo_inner_value_;
}
inline ::Interactive::Message::BroadcastOnlineUserInfo_INNER* Req::release_broadcastonlineuserinfo_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  
  ::Interactive::Message::BroadcastOnlineUserInfo_INNER* temp = broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = NULL;
  return temp;
}
inline void Req::set_allocated_broadcastonlineuserinfo_inner_value(::Interactive::Message::BroadcastOnlineUserInfo_INNER* broadcastonlineuserinfo_inner_value) {
  delete broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = broadcastonlineuserinfo_inner_value;
  if (broadcastonlineuserinfo_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
}

// -------------------------------------------------------------------

// Rsp

// int32 iRetcode = 10;
inline void Rsp::clear_iretcode() {
  iretcode_ = 0;
}
inline ::google::protobuf::int32 Rsp::iretcode() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.iRetcode)
  return iretcode_;
}
inline void Rsp::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Rsp.iRetcode)
}

// string strRetMsg = 20;
inline void Rsp::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rsp::strretmsg() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.strRetMsg)
  return strretmsg_.GetNoArena();
}
inline void Rsp::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Rsp.strRetMsg)
}
#if LANG_CXX11
inline void Rsp::set_strretmsg(::std::string&& value) {
  
  strretmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Rsp.strRetMsg)
}
#endif
inline void Rsp::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Rsp.strRetMsg)
}
inline void Rsp::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Rsp.strRetMsg)
}
inline ::std::string* Rsp::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rsp::release_strretmsg() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rsp::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.strRetMsg)
}

// .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
inline bool Rsp::has_getaccessaddressrsp_dev_value() const {
  return this != internal_default_instance() && getaccessaddressrsp_dev_value_ != NULL;
}
inline void Rsp::clear_getaccessaddressrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_dev_value_ != NULL) delete getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::GetAccessAddressRsp_DEV& Rsp::getaccessaddressrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  return getaccessaddressrsp_dev_value_ != NULL ? *getaccessaddressrsp_dev_value_
                         : *::Interactive::Message::GetAccessAddressRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::GetAccessAddressRsp_DEV* Rsp::mutable_getaccessaddressrsp_dev_value() {
  
  if (getaccessaddressrsp_dev_value_ == NULL) {
    getaccessaddressrsp_dev_value_ = new ::Interactive::Message::GetAccessAddressRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  return getaccessaddressrsp_dev_value_;
}
inline ::Interactive::Message::GetAccessAddressRsp_DEV* Rsp::release_getaccessaddressrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  
  ::Interactive::Message::GetAccessAddressRsp_DEV* temp = getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_getaccessaddressrsp_dev_value(::Interactive::Message::GetAccessAddressRsp_DEV* getaccessaddressrsp_dev_value) {
  delete getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = getaccessaddressrsp_dev_value;
  if (getaccessaddressrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
}

// .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
inline bool Rsp::has_loginrsp_dev_value() const {
  return this != internal_default_instance() && loginrsp_dev_value_ != NULL;
}
inline void Rsp::clear_loginrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && loginrsp_dev_value_ != NULL) delete loginrsp_dev_value_;
  loginrsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::LoginRsp_DEV& Rsp::loginrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  return loginrsp_dev_value_ != NULL ? *loginrsp_dev_value_
                         : *::Interactive::Message::LoginRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::LoginRsp_DEV* Rsp::mutable_loginrsp_dev_value() {
  
  if (loginrsp_dev_value_ == NULL) {
    loginrsp_dev_value_ = new ::Interactive::Message::LoginRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  return loginrsp_dev_value_;
}
inline ::Interactive::Message::LoginRsp_DEV* Rsp::release_loginrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  
  ::Interactive::Message::LoginRsp_DEV* temp = loginrsp_dev_value_;
  loginrsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_loginrsp_dev_value(::Interactive::Message::LoginRsp_DEV* loginrsp_dev_value) {
  delete loginrsp_dev_value_;
  loginrsp_dev_value_ = loginrsp_dev_value;
  if (loginrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LoginRsp_DEV_Value)
}

// .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
inline bool Rsp::has_logoutrsp_dev_value() const {
  return this != internal_default_instance() && logoutrsp_dev_value_ != NULL;
}
inline void Rsp::clear_logoutrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && logoutrsp_dev_value_ != NULL) delete logoutrsp_dev_value_;
  logoutrsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::LogoutRsp_DEV& Rsp::logoutrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  return logoutrsp_dev_value_ != NULL ? *logoutrsp_dev_value_
                         : *::Interactive::Message::LogoutRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::LogoutRsp_DEV* Rsp::mutable_logoutrsp_dev_value() {
  
  if (logoutrsp_dev_value_ == NULL) {
    logoutrsp_dev_value_ = new ::Interactive::Message::LogoutRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  return logoutrsp_dev_value_;
}
inline ::Interactive::Message::LogoutRsp_DEV* Rsp::release_logoutrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  
  ::Interactive::Message::LogoutRsp_DEV* temp = logoutrsp_dev_value_;
  logoutrsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_logoutrsp_dev_value(::Interactive::Message::LogoutRsp_DEV* logoutrsp_dev_value) {
  delete logoutrsp_dev_value_;
  logoutrsp_dev_value_ = logoutrsp_dev_value;
  if (logoutrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
}

// .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
inline bool Rsp::has_shakehandrsp_dev_value() const {
  return this != internal_default_instance() && shakehandrsp_dev_value_ != NULL;
}
inline void Rsp::clear_shakehandrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_dev_value_ != NULL) delete shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::ShakehandRsp_DEV& Rsp::shakehandrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  return shakehandrsp_dev_value_ != NULL ? *shakehandrsp_dev_value_
                         : *::Interactive::Message::ShakehandRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::ShakehandRsp_DEV* Rsp::mutable_shakehandrsp_dev_value() {
  
  if (shakehandrsp_dev_value_ == NULL) {
    shakehandrsp_dev_value_ = new ::Interactive::Message::ShakehandRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  return shakehandrsp_dev_value_;
}
inline ::Interactive::Message::ShakehandRsp_DEV* Rsp::release_shakehandrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  
  ::Interactive::Message::ShakehandRsp_DEV* temp = shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_shakehandrsp_dev_value(::Interactive::Message::ShakehandRsp_DEV* shakehandrsp_dev_value) {
  delete shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = shakehandrsp_dev_value;
  if (shakehandrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
}

// .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
inline bool Rsp::has_configinforsp_dev_value() const {
  return this != internal_default_instance() && configinforsp_dev_value_ != NULL;
}
inline void Rsp::clear_configinforsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && configinforsp_dev_value_ != NULL) delete configinforsp_dev_value_;
  configinforsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::ConfigInfoRsp_DEV& Rsp::configinforsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  return configinforsp_dev_value_ != NULL ? *configinforsp_dev_value_
                         : *::Interactive::Message::ConfigInfoRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::ConfigInfoRsp_DEV* Rsp::mutable_configinforsp_dev_value() {
  
  if (configinforsp_dev_value_ == NULL) {
    configinforsp_dev_value_ = new ::Interactive::Message::ConfigInfoRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  return configinforsp_dev_value_;
}
inline ::Interactive::Message::ConfigInfoRsp_DEV* Rsp::release_configinforsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  
  ::Interactive::Message::ConfigInfoRsp_DEV* temp = configinforsp_dev_value_;
  configinforsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_configinforsp_dev_value(::Interactive::Message::ConfigInfoRsp_DEV* configinforsp_dev_value) {
  delete configinforsp_dev_value_;
  configinforsp_dev_value_ = configinforsp_dev_value;
  if (configinforsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
}

// .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
inline bool Rsp::has_storageaddressrsp_dev_value() const {
  return this != internal_default_instance() && storageaddressrsp_dev_value_ != NULL;
}
inline void Rsp::clear_storageaddressrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressrsp_dev_value_ != NULL) delete storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::StorageAddressRsp_DEV& Rsp::storageaddressrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  return storageaddressrsp_dev_value_ != NULL ? *storageaddressrsp_dev_value_
                         : *::Interactive::Message::StorageAddressRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::StorageAddressRsp_DEV* Rsp::mutable_storageaddressrsp_dev_value() {
  
  if (storageaddressrsp_dev_value_ == NULL) {
    storageaddressrsp_dev_value_ = new ::Interactive::Message::StorageAddressRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  return storageaddressrsp_dev_value_;
}
inline ::Interactive::Message::StorageAddressRsp_DEV* Rsp::release_storageaddressrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  
  ::Interactive::Message::StorageAddressRsp_DEV* temp = storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_storageaddressrsp_dev_value(::Interactive::Message::StorageAddressRsp_DEV* storageaddressrsp_dev_value) {
  delete storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = storageaddressrsp_dev_value;
  if (storageaddressrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
}

// .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
inline bool Rsp::has_p2pinforsp_dev_value() const {
  return this != internal_default_instance() && p2pinforsp_dev_value_ != NULL;
}
inline void Rsp::clear_p2pinforsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforsp_dev_value_ != NULL) delete p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = NULL;
}
inline const ::Interactive::Message::P2pInfoRsp_DEV& Rsp::p2pinforsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  return p2pinforsp_dev_value_ != NULL ? *p2pinforsp_dev_value_
                         : *::Interactive::Message::P2pInfoRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::P2pInfoRsp_DEV* Rsp::mutable_p2pinforsp_dev_value() {
  
  if (p2pinforsp_dev_value_ == NULL) {
    p2pinforsp_dev_value_ = new ::Interactive::Message::P2pInfoRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  return p2pinforsp_dev_value_;
}
inline ::Interactive::Message::P2pInfoRsp_DEV* Rsp::release_p2pinforsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  
  ::Interactive::Message::P2pInfoRsp_DEV* temp = p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_p2pinforsp_dev_value(::Interactive::Message::P2pInfoRsp_DEV* p2pinforsp_dev_value) {
  delete p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = p2pinforsp_dev_value;
  if (p2pinforsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
}

// .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
inline bool Rsp::has_addfilersp_dev_value() const {
  return this != internal_default_instance() && addfilersp_dev_value_ != NULL;
}
inline void Rsp::clear_addfilersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && addfilersp_dev_value_ != NULL) delete addfilersp_dev_value_;
  addfilersp_dev_value_ = NULL;
}
inline const ::Interactive::Message::AddFileRsp_DEV& Rsp::addfilersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  return addfilersp_dev_value_ != NULL ? *addfilersp_dev_value_
                         : *::Interactive::Message::AddFileRsp_DEV::internal_default_instance();
}
inline ::Interactive::Message::AddFileRsp_DEV* Rsp::mutable_addfilersp_dev_value() {
  
  if (addfilersp_dev_value_ == NULL) {
    addfilersp_dev_value_ = new ::Interactive::Message::AddFileRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  return addfilersp_dev_value_;
}
inline ::Interactive::Message::AddFileRsp_DEV* Rsp::release_addfilersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  
  ::Interactive::Message::AddFileRsp_DEV* temp = addfilersp_dev_value_;
  addfilersp_dev_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_addfilersp_dev_value(::Interactive::Message::AddFileRsp_DEV* addfilersp_dev_value) {
  delete addfilersp_dev_value_;
  addfilersp_dev_value_ = addfilersp_dev_value;
  if (addfilersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
}

// .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
inline bool Rsp::has_msgprehandlerrsp_usr_value() const {
  return this != internal_default_instance() && msgprehandlerrsp_usr_value_ != NULL;
}
inline void Rsp::clear_msgprehandlerrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && msgprehandlerrsp_usr_value_ != NULL) delete msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::MsgPreHandlerRsp_USR& Rsp::msgprehandlerrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  return msgprehandlerrsp_usr_value_ != NULL ? *msgprehandlerrsp_usr_value_
                         : *::Interactive::Message::MsgPreHandlerRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::MsgPreHandlerRsp_USR* Rsp::mutable_msgprehandlerrsp_usr_value() {
  
  if (msgprehandlerrsp_usr_value_ == NULL) {
    msgprehandlerrsp_usr_value_ = new ::Interactive::Message::MsgPreHandlerRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  return msgprehandlerrsp_usr_value_;
}
inline ::Interactive::Message::MsgPreHandlerRsp_USR* Rsp::release_msgprehandlerrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  
  ::Interactive::Message::MsgPreHandlerRsp_USR* temp = msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_msgprehandlerrsp_usr_value(::Interactive::Message::MsgPreHandlerRsp_USR* msgprehandlerrsp_usr_value) {
  delete msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = msgprehandlerrsp_usr_value;
  if (msgprehandlerrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
}

// .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
inline bool Rsp::has_getaccessaddressrsp_usr_value() const {
  return this != internal_default_instance() && getaccessaddressrsp_usr_value_ != NULL;
}
inline void Rsp::clear_getaccessaddressrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_usr_value_ != NULL) delete getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::GetAccessAddressRsp_USR& Rsp::getaccessaddressrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  return getaccessaddressrsp_usr_value_ != NULL ? *getaccessaddressrsp_usr_value_
                         : *::Interactive::Message::GetAccessAddressRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::GetAccessAddressRsp_USR* Rsp::mutable_getaccessaddressrsp_usr_value() {
  
  if (getaccessaddressrsp_usr_value_ == NULL) {
    getaccessaddressrsp_usr_value_ = new ::Interactive::Message::GetAccessAddressRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  return getaccessaddressrsp_usr_value_;
}
inline ::Interactive::Message::GetAccessAddressRsp_USR* Rsp::release_getaccessaddressrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  
  ::Interactive::Message::GetAccessAddressRsp_USR* temp = getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_getaccessaddressrsp_usr_value(::Interactive::Message::GetAccessAddressRsp_USR* getaccessaddressrsp_usr_value) {
  delete getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = getaccessaddressrsp_usr_value;
  if (getaccessaddressrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
}

// .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
inline bool Rsp::has_registeruserrsp_usr_value() const {
  return this != internal_default_instance() && registeruserrsp_usr_value_ != NULL;
}
inline void Rsp::clear_registeruserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && registeruserrsp_usr_value_ != NULL) delete registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::RegisterUserRsp_USR& Rsp::registeruserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  return registeruserrsp_usr_value_ != NULL ? *registeruserrsp_usr_value_
                         : *::Interactive::Message::RegisterUserRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::RegisterUserRsp_USR* Rsp::mutable_registeruserrsp_usr_value() {
  
  if (registeruserrsp_usr_value_ == NULL) {
    registeruserrsp_usr_value_ = new ::Interactive::Message::RegisterUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  return registeruserrsp_usr_value_;
}
inline ::Interactive::Message::RegisterUserRsp_USR* Rsp::release_registeruserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  
  ::Interactive::Message::RegisterUserRsp_USR* temp = registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_registeruserrsp_usr_value(::Interactive::Message::RegisterUserRsp_USR* registeruserrsp_usr_value) {
  delete registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = registeruserrsp_usr_value;
  if (registeruserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
}

// .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
inline bool Rsp::has_unregisteruserrsp_usr_value() const {
  return this != internal_default_instance() && unregisteruserrsp_usr_value_ != NULL;
}
inline void Rsp::clear_unregisteruserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregisteruserrsp_usr_value_ != NULL) delete unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::UnRegisterUserRsp_USR& Rsp::unregisteruserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  return unregisteruserrsp_usr_value_ != NULL ? *unregisteruserrsp_usr_value_
                         : *::Interactive::Message::UnRegisterUserRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::UnRegisterUserRsp_USR* Rsp::mutable_unregisteruserrsp_usr_value() {
  
  if (unregisteruserrsp_usr_value_ == NULL) {
    unregisteruserrsp_usr_value_ = new ::Interactive::Message::UnRegisterUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  return unregisteruserrsp_usr_value_;
}
inline ::Interactive::Message::UnRegisterUserRsp_USR* Rsp::release_unregisteruserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  
  ::Interactive::Message::UnRegisterUserRsp_USR* temp = unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_unregisteruserrsp_usr_value(::Interactive::Message::UnRegisterUserRsp_USR* unregisteruserrsp_usr_value) {
  delete unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = unregisteruserrsp_usr_value;
  if (unregisteruserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
}

// .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
inline bool Rsp::has_queryusrinforsp_usr_value() const {
  return this != internal_default_instance() && queryusrinforsp_usr_value_ != NULL;
}
inline void Rsp::clear_queryusrinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusrinforsp_usr_value_ != NULL) delete queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryUsrInfoRsp_USR& Rsp::queryusrinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  return queryusrinforsp_usr_value_ != NULL ? *queryusrinforsp_usr_value_
                         : *::Interactive::Message::QueryUsrInfoRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryUsrInfoRsp_USR* Rsp::mutable_queryusrinforsp_usr_value() {
  
  if (queryusrinforsp_usr_value_ == NULL) {
    queryusrinforsp_usr_value_ = new ::Interactive::Message::QueryUsrInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  return queryusrinforsp_usr_value_;
}
inline ::Interactive::Message::QueryUsrInfoRsp_USR* Rsp::release_queryusrinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryUsrInfoRsp_USR* temp = queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_queryusrinforsp_usr_value(::Interactive::Message::QueryUsrInfoRsp_USR* queryusrinforsp_usr_value) {
  delete queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = queryusrinforsp_usr_value;
  if (queryusrinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
}

// .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
inline bool Rsp::has_modifyuserinforsp_usr_value() const {
  return this != internal_default_instance() && modifyuserinforsp_usr_value_ != NULL;
}
inline void Rsp::clear_modifyuserinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifyuserinforsp_usr_value_ != NULL) delete modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::ModifyUserInfoRsp_USR& Rsp::modifyuserinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  return modifyuserinforsp_usr_value_ != NULL ? *modifyuserinforsp_usr_value_
                         : *::Interactive::Message::ModifyUserInfoRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::ModifyUserInfoRsp_USR* Rsp::mutable_modifyuserinforsp_usr_value() {
  
  if (modifyuserinforsp_usr_value_ == NULL) {
    modifyuserinforsp_usr_value_ = new ::Interactive::Message::ModifyUserInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  return modifyuserinforsp_usr_value_;
}
inline ::Interactive::Message::ModifyUserInfoRsp_USR* Rsp::release_modifyuserinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  
  ::Interactive::Message::ModifyUserInfoRsp_USR* temp = modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_modifyuserinforsp_usr_value(::Interactive::Message::ModifyUserInfoRsp_USR* modifyuserinforsp_usr_value) {
  delete modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = modifyuserinforsp_usr_value;
  if (modifyuserinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
}

// .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
inline bool Rsp::has_loginrsp_usr_value() const {
  return this != internal_default_instance() && loginrsp_usr_value_ != NULL;
}
inline void Rsp::clear_loginrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && loginrsp_usr_value_ != NULL) delete loginrsp_usr_value_;
  loginrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::LoginRsp_USR& Rsp::loginrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LoginRsp_USR_Value)
  return loginrsp_usr_value_ != NULL ? *loginrsp_usr_value_
                         : *::Interactive::Message::LoginRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::LoginRsp_USR* Rsp::mutable_loginrsp_usr_value() {
  
  if (loginrsp_usr_value_ == NULL) {
    loginrsp_usr_value_ = new ::Interactive::Message::LoginRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LoginRsp_USR_Value)
  return loginrsp_usr_value_;
}
inline ::Interactive::Message::LoginRsp_USR* Rsp::release_loginrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LoginRsp_USR_Value)
  
  ::Interactive::Message::LoginRsp_USR* temp = loginrsp_usr_value_;
  loginrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_loginrsp_usr_value(::Interactive::Message::LoginRsp_USR* loginrsp_usr_value) {
  delete loginrsp_usr_value_;
  loginrsp_usr_value_ = loginrsp_usr_value;
  if (loginrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LoginRsp_USR_Value)
}

// .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
inline bool Rsp::has_logoutrsp_usr_value() const {
  return this != internal_default_instance() && logoutrsp_usr_value_ != NULL;
}
inline void Rsp::clear_logoutrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && logoutrsp_usr_value_ != NULL) delete logoutrsp_usr_value_;
  logoutrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::LogoutRsp_USR& Rsp::logoutrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  return logoutrsp_usr_value_ != NULL ? *logoutrsp_usr_value_
                         : *::Interactive::Message::LogoutRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::LogoutRsp_USR* Rsp::mutable_logoutrsp_usr_value() {
  
  if (logoutrsp_usr_value_ == NULL) {
    logoutrsp_usr_value_ = new ::Interactive::Message::LogoutRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  return logoutrsp_usr_value_;
}
inline ::Interactive::Message::LogoutRsp_USR* Rsp::release_logoutrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  
  ::Interactive::Message::LogoutRsp_USR* temp = logoutrsp_usr_value_;
  logoutrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_logoutrsp_usr_value(::Interactive::Message::LogoutRsp_USR* logoutrsp_usr_value) {
  delete logoutrsp_usr_value_;
  logoutrsp_usr_value_ = logoutrsp_usr_value;
  if (logoutrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LogoutRsp_USR_Value)
}

// .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
inline bool Rsp::has_shakehandrsp_usr_value() const {
  return this != internal_default_instance() && shakehandrsp_usr_value_ != NULL;
}
inline void Rsp::clear_shakehandrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_usr_value_ != NULL) delete shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::ShakehandRsp_USR& Rsp::shakehandrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  return shakehandrsp_usr_value_ != NULL ? *shakehandrsp_usr_value_
                         : *::Interactive::Message::ShakehandRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::ShakehandRsp_USR* Rsp::mutable_shakehandrsp_usr_value() {
  
  if (shakehandrsp_usr_value_ == NULL) {
    shakehandrsp_usr_value_ = new ::Interactive::Message::ShakehandRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  return shakehandrsp_usr_value_;
}
inline ::Interactive::Message::ShakehandRsp_USR* Rsp::release_shakehandrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  
  ::Interactive::Message::ShakehandRsp_USR* temp = shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_shakehandrsp_usr_value(::Interactive::Message::ShakehandRsp_USR* shakehandrsp_usr_value) {
  delete shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = shakehandrsp_usr_value;
  if (shakehandrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
}

// .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
inline bool Rsp::has_configinforsp_usr_value() const {
  return this != internal_default_instance() && configinforsp_usr_value_ != NULL;
}
inline void Rsp::clear_configinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && configinforsp_usr_value_ != NULL) delete configinforsp_usr_value_;
  configinforsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::ConfigInfoRsp_USR& Rsp::configinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  return configinforsp_usr_value_ != NULL ? *configinforsp_usr_value_
                         : *::Interactive::Message::ConfigInfoRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::ConfigInfoRsp_USR* Rsp::mutable_configinforsp_usr_value() {
  
  if (configinforsp_usr_value_ == NULL) {
    configinforsp_usr_value_ = new ::Interactive::Message::ConfigInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  return configinforsp_usr_value_;
}
inline ::Interactive::Message::ConfigInfoRsp_USR* Rsp::release_configinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  
  ::Interactive::Message::ConfigInfoRsp_USR* temp = configinforsp_usr_value_;
  configinforsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_configinforsp_usr_value(::Interactive::Message::ConfigInfoRsp_USR* configinforsp_usr_value) {
  delete configinforsp_usr_value_;
  configinforsp_usr_value_ = configinforsp_usr_value;
  if (configinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
}

// .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
inline bool Rsp::has_adddevrsp_usr_value() const {
  return this != internal_default_instance() && adddevrsp_usr_value_ != NULL;
}
inline void Rsp::clear_adddevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && adddevrsp_usr_value_ != NULL) delete adddevrsp_usr_value_;
  adddevrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::AddDevRsp_USR& Rsp::adddevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  return adddevrsp_usr_value_ != NULL ? *adddevrsp_usr_value_
                         : *::Interactive::Message::AddDevRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::AddDevRsp_USR* Rsp::mutable_adddevrsp_usr_value() {
  
  if (adddevrsp_usr_value_ == NULL) {
    adddevrsp_usr_value_ = new ::Interactive::Message::AddDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  return adddevrsp_usr_value_;
}
inline ::Interactive::Message::AddDevRsp_USR* Rsp::release_adddevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  
  ::Interactive::Message::AddDevRsp_USR* temp = adddevrsp_usr_value_;
  adddevrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_adddevrsp_usr_value(::Interactive::Message::AddDevRsp_USR* adddevrsp_usr_value) {
  delete adddevrsp_usr_value_;
  adddevrsp_usr_value_ = adddevrsp_usr_value;
  if (adddevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddDevRsp_USR_Value)
}

// .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
inline bool Rsp::has_deldevrsp_usr_value() const {
  return this != internal_default_instance() && deldevrsp_usr_value_ != NULL;
}
inline void Rsp::clear_deldevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deldevrsp_usr_value_ != NULL) delete deldevrsp_usr_value_;
  deldevrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::DelDevRsp_USR& Rsp::deldevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  return deldevrsp_usr_value_ != NULL ? *deldevrsp_usr_value_
                         : *::Interactive::Message::DelDevRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::DelDevRsp_USR* Rsp::mutable_deldevrsp_usr_value() {
  
  if (deldevrsp_usr_value_ == NULL) {
    deldevrsp_usr_value_ = new ::Interactive::Message::DelDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  return deldevrsp_usr_value_;
}
inline ::Interactive::Message::DelDevRsp_USR* Rsp::release_deldevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  
  ::Interactive::Message::DelDevRsp_USR* temp = deldevrsp_usr_value_;
  deldevrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_deldevrsp_usr_value(::Interactive::Message::DelDevRsp_USR* deldevrsp_usr_value) {
  delete deldevrsp_usr_value_;
  deldevrsp_usr_value_ = deldevrsp_usr_value;
  if (deldevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DelDevRsp_USR_Value)
}

// .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
inline bool Rsp::has_modifydevrsp_usr_value() const {
  return this != internal_default_instance() && modifydevrsp_usr_value_ != NULL;
}
inline void Rsp::clear_modifydevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydevrsp_usr_value_ != NULL) delete modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::ModifyDevRsp_USR& Rsp::modifydevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  return modifydevrsp_usr_value_ != NULL ? *modifydevrsp_usr_value_
                         : *::Interactive::Message::ModifyDevRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::ModifyDevRsp_USR* Rsp::mutable_modifydevrsp_usr_value() {
  
  if (modifydevrsp_usr_value_ == NULL) {
    modifydevrsp_usr_value_ = new ::Interactive::Message::ModifyDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  return modifydevrsp_usr_value_;
}
inline ::Interactive::Message::ModifyDevRsp_USR* Rsp::release_modifydevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  
  ::Interactive::Message::ModifyDevRsp_USR* temp = modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_modifydevrsp_usr_value(::Interactive::Message::ModifyDevRsp_USR* modifydevrsp_usr_value) {
  delete modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = modifydevrsp_usr_value;
  if (modifydevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
}

// .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
inline bool Rsp::has_querydevinforsp_usr_value() const {
  return this != internal_default_instance() && querydevinforsp_usr_value_ != NULL;
}
inline void Rsp::clear_querydevinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevinforsp_usr_value_ != NULL) delete querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryDevInfoRsp_USR& Rsp::querydevinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  return querydevinforsp_usr_value_ != NULL ? *querydevinforsp_usr_value_
                         : *::Interactive::Message::QueryDevInfoRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryDevInfoRsp_USR* Rsp::mutable_querydevinforsp_usr_value() {
  
  if (querydevinforsp_usr_value_ == NULL) {
    querydevinforsp_usr_value_ = new ::Interactive::Message::QueryDevInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  return querydevinforsp_usr_value_;
}
inline ::Interactive::Message::QueryDevInfoRsp_USR* Rsp::release_querydevinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryDevInfoRsp_USR* temp = querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_querydevinforsp_usr_value(::Interactive::Message::QueryDevInfoRsp_USR* querydevinforsp_usr_value) {
  delete querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = querydevinforsp_usr_value;
  if (querydevinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
}

// .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
inline bool Rsp::has_querydevrsp_usr_value() const {
  return this != internal_default_instance() && querydevrsp_usr_value_ != NULL;
}
inline void Rsp::clear_querydevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevrsp_usr_value_ != NULL) delete querydevrsp_usr_value_;
  querydevrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryDevRsp_USR& Rsp::querydevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  return querydevrsp_usr_value_ != NULL ? *querydevrsp_usr_value_
                         : *::Interactive::Message::QueryDevRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryDevRsp_USR* Rsp::mutable_querydevrsp_usr_value() {
  
  if (querydevrsp_usr_value_ == NULL) {
    querydevrsp_usr_value_ = new ::Interactive::Message::QueryDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  return querydevrsp_usr_value_;
}
inline ::Interactive::Message::QueryDevRsp_USR* Rsp::release_querydevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  
  ::Interactive::Message::QueryDevRsp_USR* temp = querydevrsp_usr_value_;
  querydevrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_querydevrsp_usr_value(::Interactive::Message::QueryDevRsp_USR* querydevrsp_usr_value) {
  delete querydevrsp_usr_value_;
  querydevrsp_usr_value_ = querydevrsp_usr_value;
  if (querydevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
}

// .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
inline bool Rsp::has_queryuserrsp_usr_value() const {
  return this != internal_default_instance() && queryuserrsp_usr_value_ != NULL;
}
inline void Rsp::clear_queryuserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryuserrsp_usr_value_ != NULL) delete queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryUserRsp_USR& Rsp::queryuserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  return queryuserrsp_usr_value_ != NULL ? *queryuserrsp_usr_value_
                         : *::Interactive::Message::QueryUserRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryUserRsp_USR* Rsp::mutable_queryuserrsp_usr_value() {
  
  if (queryuserrsp_usr_value_ == NULL) {
    queryuserrsp_usr_value_ = new ::Interactive::Message::QueryUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  return queryuserrsp_usr_value_;
}
inline ::Interactive::Message::QueryUserRsp_USR* Rsp::release_queryuserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  
  ::Interactive::Message::QueryUserRsp_USR* temp = queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_queryuserrsp_usr_value(::Interactive::Message::QueryUserRsp_USR* queryuserrsp_usr_value) {
  delete queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = queryuserrsp_usr_value;
  if (queryuserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
}

// .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
inline bool Rsp::has_sharingdevrsp_usr_value() const {
  return this != internal_default_instance() && sharingdevrsp_usr_value_ != NULL;
}
inline void Rsp::clear_sharingdevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && sharingdevrsp_usr_value_ != NULL) delete sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::SharingDevRsp_USR& Rsp::sharingdevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  return sharingdevrsp_usr_value_ != NULL ? *sharingdevrsp_usr_value_
                         : *::Interactive::Message::SharingDevRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::SharingDevRsp_USR* Rsp::mutable_sharingdevrsp_usr_value() {
  
  if (sharingdevrsp_usr_value_ == NULL) {
    sharingdevrsp_usr_value_ = new ::Interactive::Message::SharingDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  return sharingdevrsp_usr_value_;
}
inline ::Interactive::Message::SharingDevRsp_USR* Rsp::release_sharingdevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  
  ::Interactive::Message::SharingDevRsp_USR* temp = sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_sharingdevrsp_usr_value(::Interactive::Message::SharingDevRsp_USR* sharingdevrsp_usr_value) {
  delete sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = sharingdevrsp_usr_value;
  if (sharingdevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
}

// .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
inline bool Rsp::has_cancelshareddevrsp_usr_value() const {
  return this != internal_default_instance() && cancelshareddevrsp_usr_value_ != NULL;
}
inline void Rsp::clear_cancelshareddevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && cancelshareddevrsp_usr_value_ != NULL) delete cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::CancelSharedDevRsp_USR& Rsp::cancelshareddevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  return cancelshareddevrsp_usr_value_ != NULL ? *cancelshareddevrsp_usr_value_
                         : *::Interactive::Message::CancelSharedDevRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::CancelSharedDevRsp_USR* Rsp::mutable_cancelshareddevrsp_usr_value() {
  
  if (cancelshareddevrsp_usr_value_ == NULL) {
    cancelshareddevrsp_usr_value_ = new ::Interactive::Message::CancelSharedDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  return cancelshareddevrsp_usr_value_;
}
inline ::Interactive::Message::CancelSharedDevRsp_USR* Rsp::release_cancelshareddevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  
  ::Interactive::Message::CancelSharedDevRsp_USR* temp = cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_cancelshareddevrsp_usr_value(::Interactive::Message::CancelSharedDevRsp_USR* cancelshareddevrsp_usr_value) {
  delete cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = cancelshareddevrsp_usr_value;
  if (cancelshareddevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
}

// .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
inline bool Rsp::has_addfriendsrsp_usr_value() const {
  return this != internal_default_instance() && addfriendsrsp_usr_value_ != NULL;
}
inline void Rsp::clear_addfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && addfriendsrsp_usr_value_ != NULL) delete addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::AddFriendsRsp_USR& Rsp::addfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  return addfriendsrsp_usr_value_ != NULL ? *addfriendsrsp_usr_value_
                         : *::Interactive::Message::AddFriendsRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::AddFriendsRsp_USR* Rsp::mutable_addfriendsrsp_usr_value() {
  
  if (addfriendsrsp_usr_value_ == NULL) {
    addfriendsrsp_usr_value_ = new ::Interactive::Message::AddFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  return addfriendsrsp_usr_value_;
}
inline ::Interactive::Message::AddFriendsRsp_USR* Rsp::release_addfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  
  ::Interactive::Message::AddFriendsRsp_USR* temp = addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_addfriendsrsp_usr_value(::Interactive::Message::AddFriendsRsp_USR* addfriendsrsp_usr_value) {
  delete addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = addfriendsrsp_usr_value;
  if (addfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
}

// .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
inline bool Rsp::has_delfriendsrsp_usr_value() const {
  return this != internal_default_instance() && delfriendsrsp_usr_value_ != NULL;
}
inline void Rsp::clear_delfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && delfriendsrsp_usr_value_ != NULL) delete delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::DelFriendsRsp_USR& Rsp::delfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  return delfriendsrsp_usr_value_ != NULL ? *delfriendsrsp_usr_value_
                         : *::Interactive::Message::DelFriendsRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::DelFriendsRsp_USR* Rsp::mutable_delfriendsrsp_usr_value() {
  
  if (delfriendsrsp_usr_value_ == NULL) {
    delfriendsrsp_usr_value_ = new ::Interactive::Message::DelFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  return delfriendsrsp_usr_value_;
}
inline ::Interactive::Message::DelFriendsRsp_USR* Rsp::release_delfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  
  ::Interactive::Message::DelFriendsRsp_USR* temp = delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_delfriendsrsp_usr_value(::Interactive::Message::DelFriendsRsp_USR* delfriendsrsp_usr_value) {
  delete delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = delfriendsrsp_usr_value;
  if (delfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
}

// .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
inline bool Rsp::has_queryfriendsrsp_usr_value() const {
  return this != internal_default_instance() && queryfriendsrsp_usr_value_ != NULL;
}
inline void Rsp::clear_queryfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfriendsrsp_usr_value_ != NULL) delete queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryFriendsRsp_USR& Rsp::queryfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  return queryfriendsrsp_usr_value_ != NULL ? *queryfriendsrsp_usr_value_
                         : *::Interactive::Message::QueryFriendsRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryFriendsRsp_USR* Rsp::mutable_queryfriendsrsp_usr_value() {
  
  if (queryfriendsrsp_usr_value_ == NULL) {
    queryfriendsrsp_usr_value_ = new ::Interactive::Message::QueryFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  return queryfriendsrsp_usr_value_;
}
inline ::Interactive::Message::QueryFriendsRsp_USR* Rsp::release_queryfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  
  ::Interactive::Message::QueryFriendsRsp_USR* temp = queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_queryfriendsrsp_usr_value(::Interactive::Message::QueryFriendsRsp_USR* queryfriendsrsp_usr_value) {
  delete queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = queryfriendsrsp_usr_value;
  if (queryfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
}

// .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
inline bool Rsp::has_storageaddressreq_usr_value() const {
  return this != internal_default_instance() && storageaddressreq_usr_value_ != NULL;
}
inline void Rsp::clear_storageaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
}
inline const ::Interactive::Message::StorageAddressRsp_USR& Rsp::storageaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_ != NULL ? *storageaddressreq_usr_value_
                         : *::Interactive::Message::StorageAddressRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::StorageAddressRsp_USR* Rsp::mutable_storageaddressreq_usr_value() {
  
  if (storageaddressreq_usr_value_ == NULL) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_;
}
inline ::Interactive::Message::StorageAddressRsp_USR* Rsp::release_storageaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  
  ::Interactive::Message::StorageAddressRsp_USR* temp = storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressRsp_USR* storageaddressreq_usr_value) {
  delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = storageaddressreq_usr_value;
  if (storageaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
}

// .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
inline bool Rsp::has_p2pinforsp_usr_value() const {
  return this != internal_default_instance() && p2pinforsp_usr_value_ != NULL;
}
inline void Rsp::clear_p2pinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforsp_usr_value_ != NULL) delete p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = NULL;
}
inline const ::Interactive::Message::P2pInfoRsp_USR& Rsp::p2pinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  return p2pinforsp_usr_value_ != NULL ? *p2pinforsp_usr_value_
                         : *::Interactive::Message::P2pInfoRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::P2pInfoRsp_USR* Rsp::mutable_p2pinforsp_usr_value() {
  
  if (p2pinforsp_usr_value_ == NULL) {
    p2pinforsp_usr_value_ = new ::Interactive::Message::P2pInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  return p2pinforsp_usr_value_;
}
inline ::Interactive::Message::P2pInfoRsp_USR* Rsp::release_p2pinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  
  ::Interactive::Message::P2pInfoRsp_USR* temp = p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_p2pinforsp_usr_value(::Interactive::Message::P2pInfoRsp_USR* p2pinforsp_usr_value) {
  delete p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = p2pinforsp_usr_value;
  if (p2pinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
}

// .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
inline bool Rsp::has_deletefilersp_usr_value() const {
  return this != internal_default_instance() && deletefilersp_usr_value_ != NULL;
}
inline void Rsp::clear_deletefilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletefilersp_usr_value_ != NULL) delete deletefilersp_usr_value_;
  deletefilersp_usr_value_ = NULL;
}
inline const ::Interactive::Message::DeleteFileRsp_USR& Rsp::deletefilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  return deletefilersp_usr_value_ != NULL ? *deletefilersp_usr_value_
                         : *::Interactive::Message::DeleteFileRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::DeleteFileRsp_USR* Rsp::mutable_deletefilersp_usr_value() {
  
  if (deletefilersp_usr_value_ == NULL) {
    deletefilersp_usr_value_ = new ::Interactive::Message::DeleteFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  return deletefilersp_usr_value_;
}
inline ::Interactive::Message::DeleteFileRsp_USR* Rsp::release_deletefilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  
  ::Interactive::Message::DeleteFileRsp_USR* temp = deletefilersp_usr_value_;
  deletefilersp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_deletefilersp_usr_value(::Interactive::Message::DeleteFileRsp_USR* deletefilersp_usr_value) {
  delete deletefilersp_usr_value_;
  deletefilersp_usr_value_ = deletefilersp_usr_value;
  if (deletefilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
}

// .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
inline bool Rsp::has_downloadfilersp_usr_value() const {
  return this != internal_default_instance() && downloadfilersp_usr_value_ != NULL;
}
inline void Rsp::clear_downloadfilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && downloadfilersp_usr_value_ != NULL) delete downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = NULL;
}
inline const ::Interactive::Message::DownloadFileRsp_USR& Rsp::downloadfilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  return downloadfilersp_usr_value_ != NULL ? *downloadfilersp_usr_value_
                         : *::Interactive::Message::DownloadFileRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::DownloadFileRsp_USR* Rsp::mutable_downloadfilersp_usr_value() {
  
  if (downloadfilersp_usr_value_ == NULL) {
    downloadfilersp_usr_value_ = new ::Interactive::Message::DownloadFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  return downloadfilersp_usr_value_;
}
inline ::Interactive::Message::DownloadFileRsp_USR* Rsp::release_downloadfilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  
  ::Interactive::Message::DownloadFileRsp_USR* temp = downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_downloadfilersp_usr_value(::Interactive::Message::DownloadFileRsp_USR* downloadfilersp_usr_value) {
  delete downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = downloadfilersp_usr_value;
  if (downloadfilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
}

// .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
inline bool Rsp::has_queryfilersp_usr_value() const {
  return this != internal_default_instance() && queryfilersp_usr_value_ != NULL;
}
inline void Rsp::clear_queryfilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfilersp_usr_value_ != NULL) delete queryfilersp_usr_value_;
  queryfilersp_usr_value_ = NULL;
}
inline const ::Interactive::Message::QueryFileRsp_USR& Rsp::queryfilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  return queryfilersp_usr_value_ != NULL ? *queryfilersp_usr_value_
                         : *::Interactive::Message::QueryFileRsp_USR::internal_default_instance();
}
inline ::Interactive::Message::QueryFileRsp_USR* Rsp::mutable_queryfilersp_usr_value() {
  
  if (queryfilersp_usr_value_ == NULL) {
    queryfilersp_usr_value_ = new ::Interactive::Message::QueryFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  return queryfilersp_usr_value_;
}
inline ::Interactive::Message::QueryFileRsp_USR* Rsp::release_queryfilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  
  ::Interactive::Message::QueryFileRsp_USR* temp = queryfilersp_usr_value_;
  queryfilersp_usr_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_queryfilersp_usr_value(::Interactive::Message::QueryFileRsp_USR* queryfilersp_usr_value) {
  delete queryfilersp_usr_value_;
  queryfilersp_usr_value_ = queryfilersp_usr_value;
  if (queryfilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
}

// .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
inline bool Rsp::has_getonlinedevinforsp_inner_value() const {
  return this != internal_default_instance() && getonlinedevinforsp_inner_value_ != NULL;
}
inline void Rsp::clear_getonlinedevinforsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlinedevinforsp_inner_value_ != NULL) delete getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = NULL;
}
inline const ::Interactive::Message::GetOnlineDevInfoRsp_INNER& Rsp::getonlinedevinforsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  return getonlinedevinforsp_inner_value_ != NULL ? *getonlinedevinforsp_inner_value_
                         : *::Interactive::Message::GetOnlineDevInfoRsp_INNER::internal_default_instance();
}
inline ::Interactive::Message::GetOnlineDevInfoRsp_INNER* Rsp::mutable_getonlinedevinforsp_inner_value() {
  
  if (getonlinedevinforsp_inner_value_ == NULL) {
    getonlinedevinforsp_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  return getonlinedevinforsp_inner_value_;
}
inline ::Interactive::Message::GetOnlineDevInfoRsp_INNER* Rsp::release_getonlinedevinforsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  
  ::Interactive::Message::GetOnlineDevInfoRsp_INNER* temp = getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_getonlinedevinforsp_inner_value(::Interactive::Message::GetOnlineDevInfoRsp_INNER* getonlinedevinforsp_inner_value) {
  delete getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = getonlinedevinforsp_inner_value;
  if (getonlinedevinforsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
}

// .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
inline bool Rsp::has_getonlineuserinforsp_inner_value() const {
  return this != internal_default_instance() && getonlineuserinforsp_inner_value_ != NULL;
}
inline void Rsp::clear_getonlineuserinforsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlineuserinforsp_inner_value_ != NULL) delete getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = NULL;
}
inline const ::Interactive::Message::GetOnlineUserInfoRsp_INNER& Rsp::getonlineuserinforsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  return getonlineuserinforsp_inner_value_ != NULL ? *getonlineuserinforsp_inner_value_
                         : *::Interactive::Message::GetOnlineUserInfoRsp_INNER::internal_default_instance();
}
inline ::Interactive::Message::GetOnlineUserInfoRsp_INNER* Rsp::mutable_getonlineuserinforsp_inner_value() {
  
  if (getonlineuserinforsp_inner_value_ == NULL) {
    getonlineuserinforsp_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  return getonlineuserinforsp_inner_value_;
}
inline ::Interactive::Message::GetOnlineUserInfoRsp_INNER* Rsp::release_getonlineuserinforsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  
  ::Interactive::Message::GetOnlineUserInfoRsp_INNER* temp = getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_getonlineuserinforsp_inner_value(::Interactive::Message::GetOnlineUserInfoRsp_INNER* getonlineuserinforsp_inner_value) {
  delete getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = getonlineuserinforsp_inner_value;
  if (getonlineuserinforsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
}

// -------------------------------------------------------------------

// InteractiveMessage

// .Interactive.Message.MsgType type = 1;
inline void InteractiveMessage::clear_type() {
  type_ = 0;
}
inline ::Interactive::Message::MsgType InteractiveMessage::type() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.type)
  return static_cast< ::Interactive::Message::MsgType >(type_);
}
inline void InteractiveMessage::set_type(::Interactive::Message::MsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.type)
}

// uint64 uiMsgSeq = 2;
inline void InteractiveMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InteractiveMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.uiMsgSeq)
  return uimsgseq_;
}
inline void InteractiveMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.uiMsgSeq)
}

// string strSID = 3;
inline void InteractiveMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InteractiveMessage::strsid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.strSID)
  return strsid_.GetNoArena();
}
inline void InteractiveMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.strSID)
}
#if LANG_CXX11
inline void InteractiveMessage::set_strsid(::std::string&& value) {
  
  strsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.InteractiveMessage.strSID)
}
#endif
inline void InteractiveMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.InteractiveMessage.strSID)
}
inline void InteractiveMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.InteractiveMessage.strSID)
}
inline ::std::string* InteractiveMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InteractiveMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InteractiveMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.strSID)
}

// .Interactive.Message.Req ReqValue = 4;
inline bool InteractiveMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
inline void InteractiveMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
inline const ::Interactive::Message::Req& InteractiveMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.ReqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::Interactive::Message::Req::internal_default_instance();
}
inline ::Interactive::Message::Req* InteractiveMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::Interactive::Message::Req;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.ReqValue)
  return reqvalue_;
}
inline ::Interactive::Message::Req* InteractiveMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.ReqValue)
  
  ::Interactive::Message::Req* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
inline void InteractiveMessage::set_allocated_reqvalue(::Interactive::Message::Req* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.ReqValue)
}

// .Interactive.Message.Rsp RspValue = 5;
inline bool InteractiveMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
inline void InteractiveMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
inline const ::Interactive::Message::Rsp& InteractiveMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.RspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::Interactive::Message::Rsp::internal_default_instance();
}
inline ::Interactive::Message::Rsp* InteractiveMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::Interactive::Message::Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.RspValue)
  return rspvalue_;
}
inline ::Interactive::Message::Rsp* InteractiveMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.RspValue)
  
  ::Interactive::Message::Rsp* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
inline void InteractiveMessage::set_allocated_rspvalue(::Interactive::Message::Rsp* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.RspValue)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Message
}  // namespace Interactive

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Interactive::Message::MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Interactive::Message::MsgType>() {
  return ::Interactive::Message::MsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InteractiveProtocol_2eproto__INCLUDED
