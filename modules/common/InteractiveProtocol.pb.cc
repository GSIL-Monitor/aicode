// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InteractiveProtocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InteractiveProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Interactive {
namespace Message {
class PermissionOfUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PermissionOfUser> {
} _PermissionOfUser_default_instance_;
class DeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Device> {
} _Device_default_instance_;
class DeviceStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceStatus> {
} _DeviceStatus_default_instance_;
class UserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<User> {
} _User_default_instance_;
class RelationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Relation> {
} _Relation_default_instance_;
class FileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<File> {
} _File_default_instance_;
class FileUrlDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileUrl> {
} _FileUrl_default_instance_;
class DeviceAccessRecordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceAccessRecord> {
} _DeviceAccessRecord_default_instance_;
class UserAccessRecordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserAccessRecord> {
} _UserAccessRecord_default_instance_;
class ConfigurationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Configuration> {
} _Configuration_default_instance_;
class DoorbellParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DoorbellParameter> {
} _DoorbellParameter_default_instance_;
class DeviceEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceEvent> {
} _DeviceEvent_default_instance_;
class StorageDetailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageDetail> {
} _StorageDetail_default_instance_;
class DeviceCapacityDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceCapacity> {
} _DeviceCapacity_default_instance_;
class GetAccessAddressReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressReq_DEV> {
} _GetAccessAddressReq_DEV_default_instance_;
class GetAccessAddressRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressRsp_DEV> {
} _GetAccessAddressRsp_DEV_default_instance_;
class LoginReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq_DEV> {
} _LoginReq_DEV_default_instance_;
class LoginRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp_DEV> {
} _LoginRsp_DEV_default_instance_;
class LogoutReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq_DEV> {
} _LogoutReq_DEV_default_instance_;
class LogoutRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutRsp_DEV> {
} _LogoutRsp_DEV_default_instance_;
class ShakehandReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandReq_DEV> {
} _ShakehandReq_DEV_default_instance_;
class ShakehandRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandRsp_DEV> {
} _ShakehandRsp_DEV_default_instance_;
class ConfigInfoReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoReq_DEV> {
} _ConfigInfoReq_DEV_default_instance_;
class ConfigInfoRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoRsp_DEV> {
} _ConfigInfoRsp_DEV_default_instance_;
class StorageAddressReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressReq_DEV> {
} _StorageAddressReq_DEV_default_instance_;
class StorageAddressRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressRsp_DEV> {
} _StorageAddressRsp_DEV_default_instance_;
class P2pInfoReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoReq_DEV> {
} _P2pInfoReq_DEV_default_instance_;
class P2pInfoRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoRsp_DEV> {
} _P2pInfoRsp_DEV_default_instance_;
class AddFileReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFileReq_DEV> {
} _AddFileReq_DEV_default_instance_;
class AddFileRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFileRsp_DEV> {
} _AddFileRsp_DEV_default_instance_;
class QueryTimeZoneReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryTimeZoneReq_DEV> {
} _QueryTimeZoneReq_DEV_default_instance_;
class QueryTimeZoneRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryTimeZoneRsp_DEV> {
} _QueryTimeZoneRsp_DEV_default_instance_;
class QueryAccessDomainNameReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAccessDomainNameReq_DEV> {
} _QueryAccessDomainNameReq_DEV_default_instance_;
class QueryAccessDomainNameRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAccessDomainNameRsp_DEV> {
} _QueryAccessDomainNameRsp_DEV_default_instance_;
class QueryUpgradeSiteReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUpgradeSiteReq_DEV> {
} _QueryUpgradeSiteReq_DEV_default_instance_;
class QueryUpgradeSiteRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUpgradeSiteRsp_DEV> {
} _QueryUpgradeSiteRsp_DEV_default_instance_;
class QueryFirmwareUpgradeReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFirmwareUpgradeReq_DEV> {
} _QueryFirmwareUpgradeReq_DEV_default_instance_;
class QueryFirmwareUpgradeRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFirmwareUpgradeRsp_DEV> {
} _QueryFirmwareUpgradeRsp_DEV_default_instance_;
class ModifyDevicePropertyReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDevicePropertyReq_DEV> {
} _ModifyDevicePropertyReq_DEV_default_instance_;
class ModifyDevicePropertyRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDevicePropertyRsp_DEV> {
} _ModifyDevicePropertyRsp_DEV_default_instance_;
class QueryDeviceParameterReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceParameterReq_DEV> {
} _QueryDeviceParameterReq_DEV_default_instance_;
class QueryDeviceParameterRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceParameterRsp_DEV> {
} _QueryDeviceParameterRsp_DEV_default_instance_;
class QueryPlatformPushStatusReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryPlatformPushStatusReq_DEV> {
} _QueryPlatformPushStatusReq_DEV_default_instance_;
class QueryPlatformPushStatusRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryPlatformPushStatusRsp_DEV> {
} _QueryPlatformPushStatusRsp_DEV_default_instance_;
class DeviceEventReportReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceEventReportReq_DEV> {
} _DeviceEventReportReq_DEV_default_instance_;
class DeviceEventReportRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceEventReportRsp_DEV> {
} _DeviceEventReportRsp_DEV_default_instance_;
class MsgPreHandlerReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgPreHandlerReq_USR> {
} _MsgPreHandlerReq_USR_default_instance_;
class MsgPreHandlerRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgPreHandlerRsp_USR> {
} _MsgPreHandlerRsp_USR_default_instance_;
class GetAccessAddressReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressReq_USR> {
} _GetAccessAddressReq_USR_default_instance_;
class GetAccessAddressRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressRsp_USR> {
} _GetAccessAddressRsp_USR_default_instance_;
class RegisterUserReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterUserReq_USR> {
} _RegisterUserReq_USR_default_instance_;
class RegisterUserRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterUserRsp_USR> {
} _RegisterUserRsp_USR_default_instance_;
class UnRegisterUserReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnRegisterUserReq_USR> {
} _UnRegisterUserReq_USR_default_instance_;
class UnRegisterUserRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnRegisterUserRsp_USR> {
} _UnRegisterUserRsp_USR_default_instance_;
class QueryUsrInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUsrInfoReq_USR> {
} _QueryUsrInfoReq_USR_default_instance_;
class QueryUsrInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUsrInfoRsp_USR> {
} _QueryUsrInfoRsp_USR_default_instance_;
class ModifyUserInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyUserInfoReq_USR> {
} _ModifyUserInfoReq_USR_default_instance_;
class ModifyUserInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyUserInfoRsp_USR> {
} _ModifyUserInfoRsp_USR_default_instance_;
class RetrievePwdReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RetrievePwdReq_USR> {
} _RetrievePwdReq_USR_default_instance_;
class RetrievePwdRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RetrievePwdRsp_USR> {
} _RetrievePwdRsp_USR_default_instance_;
class LoginReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq_USR> {
} _LoginReq_USR_default_instance_;
class LoginRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp_USR> {
} _LoginRsp_USR_default_instance_;
class LogoutReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq_USR> {
} _LogoutReq_USR_default_instance_;
class LogoutRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutRsp_USR> {
} _LogoutRsp_USR_default_instance_;
class ShakehandReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandReq_USR> {
} _ShakehandReq_USR_default_instance_;
class ShakehandRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandRsp_USR> {
} _ShakehandRsp_USR_default_instance_;
class ConfigInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoReq_USR> {
} _ConfigInfoReq_USR_default_instance_;
class ConfigInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoRsp_USR> {
} _ConfigInfoRsp_USR_default_instance_;
class AddDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddDevReq_USR> {
} _AddDevReq_USR_default_instance_;
class AddDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddDevRsp_USR> {
} _AddDevRsp_USR_default_instance_;
class DelDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelDevReq_USR> {
} _DelDevReq_USR_default_instance_;
class DelDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelDevRsp_USR> {
} _DelDevRsp_USR_default_instance_;
class ModifyDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDevReq_USR> {
} _ModifyDevReq_USR_default_instance_;
class ModifyDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDevRsp_USR> {
} _ModifyDevRsp_USR_default_instance_;
class QueryDevInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevInfoReq_USR> {
} _QueryDevInfoReq_USR_default_instance_;
class QueryDevInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevInfoRsp_USR> {
} _QueryDevInfoRsp_USR_default_instance_;
class QueryDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevReq_USR> {
} _QueryDevReq_USR_default_instance_;
class QueryDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevRsp_USR> {
} _QueryDevRsp_USR_default_instance_;
class QueryUserReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUserReq_USR> {
} _QueryUserReq_USR_default_instance_;
class QueryUserRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUserRsp_USR> {
} _QueryUserRsp_USR_default_instance_;
class SharingDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SharingDevReq_USR> {
} _SharingDevReq_USR_default_instance_;
class SharingDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SharingDevRsp_USR> {
} _SharingDevRsp_USR_default_instance_;
class CancelSharedDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelSharedDevReq_USR> {
} _CancelSharedDevReq_USR_default_instance_;
class CancelSharedDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelSharedDevRsp_USR> {
} _CancelSharedDevRsp_USR_default_instance_;
class AddFriendsReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFriendsReq_USR> {
} _AddFriendsReq_USR_default_instance_;
class AddFriendsRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFriendsRsp_USR> {
} _AddFriendsRsp_USR_default_instance_;
class DelFriendsReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelFriendsReq_USR> {
} _DelFriendsReq_USR_default_instance_;
class DelFriendsRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelFriendsRsp_USR> {
} _DelFriendsRsp_USR_default_instance_;
class QueryFriendsReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFriendsReq_USR> {
} _QueryFriendsReq_USR_default_instance_;
class QueryFriendsRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFriendsRsp_USR> {
} _QueryFriendsRsp_USR_default_instance_;
class StorageAddressReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressReq_USR> {
} _StorageAddressReq_USR_default_instance_;
class StorageAddressRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressRsp_USR> {
} _StorageAddressRsp_USR_default_instance_;
class P2pInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoReq_USR> {
} _P2pInfoReq_USR_default_instance_;
class P2pInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoRsp_USR> {
} _P2pInfoRsp_USR_default_instance_;
class DeleteFileReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteFileReq_USR> {
} _DeleteFileReq_USR_default_instance_;
class DeleteFileRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteFileRsp_USR> {
} _DeleteFileRsp_USR_default_instance_;
class DownloadFileReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DownloadFileReq_USR> {
} _DownloadFileReq_USR_default_instance_;
class DownloadFileRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DownloadFileRsp_USR> {
} _DownloadFileRsp_USR_default_instance_;
class QueryFileReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFileReq_USR> {
} _QueryFileReq_USR_default_instance_;
class QueryFileRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFileRsp_USR> {
} _QueryFileRsp_USR_default_instance_;
class QueryAccessDomainNameReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAccessDomainNameReq_USR> {
} _QueryAccessDomainNameReq_USR_default_instance_;
class QueryAccessDomainNameRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAccessDomainNameRsp_USR> {
} _QueryAccessDomainNameRsp_USR_default_instance_;
class QueryAppUpgradeReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAppUpgradeReq_USR> {
} _QueryAppUpgradeReq_USR_default_instance_;
class QueryAppUpgradeRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAppUpgradeRsp_USR> {
} _QueryAppUpgradeRsp_USR_default_instance_;
class QueryIfP2pIDValidReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryIfP2pIDValidReq_USR> {
} _QueryIfP2pIDValidReq_USR_default_instance_;
class QueryIfP2pIDValidRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryIfP2pIDValidRsp_USR> {
} _QueryIfP2pIDValidRsp_USR_default_instance_;
class QueryAllDeviceEventReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAllDeviceEventReq_USR> {
} _QueryAllDeviceEventReq_USR_default_instance_;
class QueryAllDeviceEventRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAllDeviceEventRsp_USR> {
} _QueryAllDeviceEventRsp_USR_default_instance_;
class DeleteDeviceEventReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteDeviceEventReq_USR> {
} _DeleteDeviceEventReq_USR_default_instance_;
class DeleteDeviceEventRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteDeviceEventRsp_USR> {
} _DeleteDeviceEventRsp_USR_default_instance_;
class ModifyDeviceEventReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDeviceEventReq_USR> {
} _ModifyDeviceEventReq_USR_default_instance_;
class ModifyDeviceEventRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDeviceEventRsp_USR> {
} _ModifyDeviceEventRsp_USR_default_instance_;
class AddStorageDetailReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddStorageDetailReq_USR> {
} _AddStorageDetailReq_USR_default_instance_;
class AddStorageDetailRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddStorageDetailRsp_USR> {
} _AddStorageDetailRsp_USR_default_instance_;
class DeleteStorageDetailReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteStorageDetailReq_USR> {
} _DeleteStorageDetailReq_USR_default_instance_;
class DeleteStorageDetailRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteStorageDetailRsp_USR> {
} _DeleteStorageDetailRsp_USR_default_instance_;
class ModifyStorageDetailReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyStorageDetailReq_USR> {
} _ModifyStorageDetailReq_USR_default_instance_;
class ModifyStorageDetailRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyStorageDetailRsp_USR> {
} _ModifyStorageDetailRsp_USR_default_instance_;
class QueryStorageDetailReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryStorageDetailReq_USR> {
} _QueryStorageDetailReq_USR_default_instance_;
class QueryStorageDetailRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryStorageDetailRsp_USR> {
} _QueryStorageDetailRsp_USR_default_instance_;
class QueryRegionStorageInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryRegionStorageInfoReq_USR> {
} _QueryRegionStorageInfoReq_USR_default_instance_;
class QueryRegionStorageInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryRegionStorageInfoRsp_USR> {
} _QueryRegionStorageInfoRsp_USR_default_instance_;
class QueryDeviceInfoMultiReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceInfoMultiReq_USR> {
} _QueryDeviceInfoMultiReq_USR_default_instance_;
class QueryDeviceInfoMultiRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceInfoMultiRsp_USR> {
} _QueryDeviceInfoMultiRsp_USR_default_instance_;
class RegisterCmsCallReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterCmsCallReq_USR> {
} _RegisterCmsCallReq_USR_default_instance_;
class RegisterCmsCallRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterCmsCallRsp_USR> {
} _RegisterCmsCallRsp_USR_default_instance_;
class UnregisterCmsCallReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnregisterCmsCallReq_USR> {
} _UnregisterCmsCallReq_USR_default_instance_;
class UnregisterCmsCallRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnregisterCmsCallRsp_USR> {
} _UnregisterCmsCallRsp_USR_default_instance_;
class QuerySharingDeviceLimitReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuerySharingDeviceLimitReq_USR> {
} _QuerySharingDeviceLimitReq_USR_default_instance_;
class QuerySharingDeviceLimitRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuerySharingDeviceLimitRsp_USR> {
} _QuerySharingDeviceLimitRsp_USR_default_instance_;
class QueryDeviceCapacityReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceCapacityReq_USR> {
} _QueryDeviceCapacityReq_USR_default_instance_;
class QueryDeviceCapacityRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceCapacityRsp_USR> {
} _QueryDeviceCapacityRsp_USR_default_instance_;
class QueryALLDeviceCapacityReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryALLDeviceCapacityReq_USR> {
} _QueryALLDeviceCapacityReq_USR_default_instance_;
class QueryALLDeviceCapacityRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryALLDeviceCapacityRsp_USR> {
} _QueryALLDeviceCapacityRsp_USR_default_instance_;
class QueryDeviceP2pIDReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceP2pIDReq_USR> {
} _QueryDeviceP2pIDReq_USR_default_instance_;
class QueryDeviceP2pIDRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDeviceP2pIDRsp_USR> {
} _QueryDeviceP2pIDRsp_USR_default_instance_;
class UploadUserCfgReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UploadUserCfgReq_USR> {
} _UploadUserCfgReq_USR_default_instance_;
class UploadUserCfgRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UploadUserCfgRsp_USR> {
} _UploadUserCfgRsp_USR_default_instance_;
class QueryUserCfgReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUserCfgReq_USR> {
} _QueryUserCfgReq_USR_default_instance_;
class QueryUserCfgRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUserCfgRsp_USR> {
} _QueryUserCfgRsp_USR_default_instance_;
class QueryUploadURLReq_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUploadURLReq_MGR> {
} _QueryUploadURLReq_MGR_default_instance_;
class QueryUploadURLRsp_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUploadURLRsp_MGR> {
} _QueryUploadURLRsp_MGR_default_instance_;
class AddConfigurationReq_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddConfigurationReq_MGR> {
} _AddConfigurationReq_MGR_default_instance_;
class AddConfigurationRsp_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddConfigurationRsp_MGR> {
} _AddConfigurationRsp_MGR_default_instance_;
class DeleteConfigurationReq_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteConfigurationReq_MGR> {
} _DeleteConfigurationReq_MGR_default_instance_;
class DeleteConfigurationRsp_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteConfigurationRsp_MGR> {
} _DeleteConfigurationRsp_MGR_default_instance_;
class ModifyConfigurationReq_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyConfigurationReq_MGR> {
} _ModifyConfigurationReq_MGR_default_instance_;
class ModifyConfigurationRsp_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyConfigurationRsp_MGR> {
} _ModifyConfigurationRsp_MGR_default_instance_;
class QueryAllConfigurationReq_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAllConfigurationReq_MGR> {
} _QueryAllConfigurationReq_MGR_default_instance_;
class QueryAllConfigurationRsp_MGRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAllConfigurationRsp_MGR> {
} _QueryAllConfigurationRsp_MGR_default_instance_;
class GetOnlineDevInfoReq_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineDevInfoReq_INNER> {
} _GetOnlineDevInfoReq_INNER_default_instance_;
class GetOnlineDevInfoRsp_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineDevInfoRsp_INNER> {
} _GetOnlineDevInfoRsp_INNER_default_instance_;
class BroadcastOnlineDevInfo_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BroadcastOnlineDevInfo_INNER> {
} _BroadcastOnlineDevInfo_INNER_default_instance_;
class GetOnlineUserInfoReq_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineUserInfoReq_INNER> {
} _GetOnlineUserInfoReq_INNER_default_instance_;
class GetOnlineUserInfoRsp_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineUserInfoRsp_INNER> {
} _GetOnlineUserInfoRsp_INNER_default_instance_;
class BroadcastOnlineUserInfo_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BroadcastOnlineUserInfo_INNER> {
} _BroadcastOnlineUserInfo_INNER_default_instance_;
class GetDeviceAccessRecordReq_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetDeviceAccessRecordReq_INNER> {
} _GetDeviceAccessRecordReq_INNER_default_instance_;
class GetDeviceAccessRecordRsp_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetDeviceAccessRecordRsp_INNER> {
} _GetDeviceAccessRecordRsp_INNER_default_instance_;
class GetUserAccessRecordReq_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUserAccessRecordReq_INNER> {
} _GetUserAccessRecordReq_INNER_default_instance_;
class GetUserAccessRecordRsp_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUserAccessRecordRsp_INNER> {
} _GetUserAccessRecordRsp_INNER_default_instance_;
class ReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Req> {
} _Req_default_instance_;
class RspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Rsp> {
} _Rsp_default_instance_;
class InteractiveMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InteractiveMessage> {
} _InteractiveMessage_default_instance_;

namespace protobuf_InteractiveProtocol_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[163];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PermissionOfUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PermissionOfUser, uiunlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PermissionOfUser, uiwatch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdevname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdevpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, uitypeinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strextend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strinnerinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdomainname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceStatus, deviceinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceStatus, stronlinestatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, struserpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, uitypeinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, strextend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, straliasname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, stremail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, uirelation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strremotefileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strdownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strfilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strsuffixname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, uifilesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strfilecreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileUrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileUrl, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileUrl, strdownloadurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, straccessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strdevicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strlogintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strlogouttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, uionlineduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, straccessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, struseraliasname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, uiclienttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strlogintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strlogouttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, uionlineduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strsubcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strlatestversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strforceversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strserveraddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strfilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, uifilesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, uileaseduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strupdatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strdoorbellname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strserialnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strdoorbellp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strbatterycapacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strchargingstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strwifisignal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strvolumelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strversionnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strchannelnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strcodingtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strpiralarmswtich_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strdoorbellswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strpiralarmlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strpirineffectivetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strcurrentwifi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strsubcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strdisturbmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strantitheftswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorbellParameter, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, streventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, uieventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, uieventstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, strfileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, streventtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, uireadstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEvent, strthumbnailurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uidomainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, strobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uiobjecttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, strstoragename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uistoragetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uioverlaptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uistoragetimeuplimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uistoragetimedownlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uisizeofspaceused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uistorageunittype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, strextend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageDetail, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCapacity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCapacity, uidevtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCapacity, strcapacitylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, straccessaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, straccessport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, uip2psupplier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strp2pserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, uip2pbuildin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, struserpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strdistributor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strotherproperty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strdomainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_DEV, strconfiginfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, uistoragetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, uistorageaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_DEV, straddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_DEV, uiport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, strdevipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, uip2psupplier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, strdomainname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, strp2pserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, uilease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, strlicensekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, strpushid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, fileinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileRsp_DEV, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileRsp_DEV, strfileidfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneReq_DEV, strdevipaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneRsp_DEV, strcountrycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneRsp_DEV, strcountrynameen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneRsp_DEV, strcountrynamezh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeZoneRsp_DEV, strtimezone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_DEV, strdevipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_DEV, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_DEV, strdomainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_DEV, uilease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUpgradeSiteReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUpgradeSiteReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUpgradeSiteReq_DEV, strdevipaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUpgradeSiteRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUpgradeSiteRsp_DEV, strupgradesiteurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUpgradeSiteRsp_DEV, uilease_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeReq_DEV, strcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeReq_DEV, strsubcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeReq_DEV, strcurrentversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeReq_DEV, strdeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, uinewversionvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, strfirmwarename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, strfirmwarepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, uifirmwaresize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, strversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, strdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, uiforceupgrade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFirmwareUpgradeRsp_DEV, strupdatedate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strdomainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strcorpid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strdevicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strdeviceip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strwebport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strctrlport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strprotocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strmodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strpostfrequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strdevicestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strserverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strserverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strtransfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strmobileport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strchannelcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strdeviceip2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, strrequestsource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyReq_DEV, doorbellparameter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevicePropertyRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceParameterReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceParameterReq_DEV, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceParameterReq_DEV, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceParameterReq_DEV, strquerytype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceParameterRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceParameterRsp_DEV, doorbellparameter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlatformPushStatusReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlatformPushStatusReq_DEV, strdeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlatformPushStatusRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlatformPushStatusRsp_DEV, strstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, uieventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, uieventstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportReq_DEV, streventtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceEventReportRsp_DEV, streventid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_USR, strserializeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, straccessaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, straccessport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserRsp_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserRsp_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoRsp_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoReq_USR, stroldpwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoReq_USR, userinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievePwdReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievePwdReq_USR, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievePwdReq_USR, stremail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievePwdReq_USR, uitype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievePwdRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievePwdRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, uiterminaltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, uitype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, relationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, strdevname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_USR, stritems_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevReq_USR, devinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevRsp_USR, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevReq_USR, strdevid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevRsp_USR, strdevidfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, uideviceshared_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, uideviceshared_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, strversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, stronlinestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, strupdatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevRsp_USR, allrelationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevRsp_USR, strdevname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserRsp_USR, allrelationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserRsp_USR, strusername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, relationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevReq_USR, relationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsReq_USR, strfrienduserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsReq_USR, strfrienduserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsRsp_USR, strfrienduseridfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsRsp_USR, strallfrienduserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, uistoragetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, uistorageaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_USR, straddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_USR, uiport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, struseripaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, uip2psupplier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, strp2pserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, uilease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, strlicensekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, strpushid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileReq_USR, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileRsp_USR, strfileidfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileReq_USR, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileRsp_USR, fileurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileRsp_USR, fileinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_USR, struseripaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_USR, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_USR, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_USR, strdomainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_USR, uilease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAccessDomainNameRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeReq_USR, strcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeReq_USR, strsubcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeReq_USR, strcurrentversion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, uinewversionvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, strappname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, strapppath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, uiappsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, strversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, strdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, uiforceupgrade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAppUpgradeRsp_USR, strupdatedate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryIfP2pIDValidReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryIfP2pIDValidReq_USR, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryIfP2pIDValidReq_USR, uip2ptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryIfP2pIDValidRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryIfP2pIDValidRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, uideviceshared_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, uieventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, uireadstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventReq_USR, strenddate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllDeviceEventRsp_USR, deviceevent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDeviceEventReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDeviceEventReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDeviceEventReq_USR, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDeviceEventReq_USR, streventid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDeviceEventRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDeviceEventRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, streventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, uieventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, uieventstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, strupdatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventReq_USR, uireadstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDeviceEventRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddStorageDetailReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddStorageDetailReq_USR, storagedetail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddStorageDetailRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddStorageDetailRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStorageDetailReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStorageDetailReq_USR, strobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStorageDetailReq_USR, uidomainid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStorageDetailRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStorageDetailRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyStorageDetailReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyStorageDetailReq_USR, storagedetail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyStorageDetailRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyStorageDetailRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryStorageDetailReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryStorageDetailReq_USR, strobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryStorageDetailReq_USR, uidomainid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryStorageDetailRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryStorageDetailRsp_USR, storagedetail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionStorageInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionStorageInfoReq_USR, struserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionStorageInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionStorageInfoRsp_USR, uidomainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionStorageInfoRsp_USR, uisizeofspace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionStorageInfoRsp_USR, uisizeofspaceused_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceInfoMultiReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceInfoMultiReq_USR, strdeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceInfoMultiRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceInfoMultiRsp_USR, devicestatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallReq_USR, strcmsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallReq_USR, strcmsp2pidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallReq_USR, strdevicemac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallReq_USR, strdevicep2pid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallRsp_USR, straddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallRsp_USR, strport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterCmsCallRsp_USR, strp2pidfailedlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnregisterCmsCallReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnregisterCmsCallReq_USR, strcmsid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnregisterCmsCallRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnregisterCmsCallRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySharingDeviceLimitReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySharingDeviceLimitReq_USR, struserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySharingDeviceLimitRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySharingDeviceLimitRsp_USR, uicurrentlimitnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySharingDeviceLimitRsp_USR, uiusednum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceCapacityReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceCapacityReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceCapacityReq_USR, uidevtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceCapacityRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceCapacityRsp_USR, devcap_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryALLDeviceCapacityReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryALLDeviceCapacityReq_USR, struserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryALLDeviceCapacityRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryALLDeviceCapacityRsp_USR, devcaplist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDReq_USR, strdomainname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strupdatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strwebport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strmobileport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strchannelcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strdevicesn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDeviceP2pIDRsp_USR, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgReq_USR, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgReq_USR, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgReq_USR, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadUserCfgRsp_USR, strversion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgReq_USR, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgReq_USR, struserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgRsp_USR, strcfgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgRsp_USR, strversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserCfgRsp_USR, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUploadURLReq_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUploadURLReq_MGR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUploadURLRsp_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUploadURLRsp_MGR, struploadurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConfigurationReq_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConfigurationReq_MGR, configurationinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConfigurationRsp_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConfigurationRsp_MGR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteConfigurationReq_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteConfigurationReq_MGR, strcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteConfigurationReq_MGR, strsubcategory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteConfigurationRsp_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteConfigurationRsp_MGR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyConfigurationReq_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyConfigurationReq_MGR, configurationinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyConfigurationRsp_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyConfigurationRsp_MGR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllConfigurationReq_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllConfigurationReq_MGR, uibeginindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllConfigurationRsp_MGR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllConfigurationRsp_MGR, configurationinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoReq_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoReq_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoRsp_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoRsp_INNER, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoRsp_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineDevInfo_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineDevInfo_INNER, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineDevInfo_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoReq_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoReq_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoRsp_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoRsp_INNER, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoRsp_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineUserInfo_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineUserInfo_INNER, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineUserInfo_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDeviceAccessRecordReq_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDeviceAccessRecordReq_INNER, uibeginindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDeviceAccessRecordRsp_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDeviceAccessRecordRsp_INNER, deviceaccessrecord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDeviceAccessRecordRsp_INNER, uirecordtotal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserAccessRecordReq_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserAccessRecordReq_INNER, uibeginindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserAccessRecordRsp_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserAccessRecordRsp_INNER, useraccessrecord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserAccessRecordRsp_INNER, uirecordtotal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getaccessaddressreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, loginreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, logoutreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, shakehandreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, configinforeq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, storageaddressreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, p2pinforeq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, addfilereq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querytimezonereq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryaccessdomainnamereq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryupgradesitereq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryfirmwareupgradereq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifydevicepropertyreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydeviceparameterreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryplatformpushstatusreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deviceeventreportreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, msgprehandlerreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getaccessaddressreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, registeruserreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, unregisteruserreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryusrinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifyuserinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, retrievepwdreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, loginreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, logoutreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, shakehandreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, configinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, adddevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deldevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifydevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydevinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryuserreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, sharingdevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, cancelshareddevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, addfriendsreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, delfriendsreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryfriendsreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, storageaddressreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, p2pinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deletefilereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, downloadfilereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryfilereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryaccessdomainnamereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryappupgradereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryifp2pidvalidreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryalldeviceeventreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deletedeviceeventreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifydeviceeventreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, addstoragedetailreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deletestoragedetailreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifystoragedetailreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querystoragedetailreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryregionstorageinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydeviceinfomultireq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, registercmscallreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, unregistercmscallreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querysharingdevicelimitreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydevicecapacityreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryalldevicecapacityreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydevicep2pidreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, uploadusercfgreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryusercfgreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getonlinedevinforeq_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, broadcastonlinedevinfo_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getonlineuserinforeq_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, broadcastonlineuserinfo_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getdeviceaccessrecordreq_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getuseraccessrecordreq_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryuploadurlreq_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, addconfigurationreq_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deleteconfigurationreq_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifyconfigurationreq_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryallconfigurationreq_mgr_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, iretcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, strretmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getaccessaddressrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, loginrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, logoutrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, shakehandrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, configinforsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, storageaddressrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, p2pinforsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, addfilersp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querytimezonersp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryaccessdomainnamersp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryupgradesitersp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryfirmwareupgradersp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifydevicepropertyrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydeviceparameterrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryplatformpushstatusrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deviceeventreportrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, msgprehandlerrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getaccessaddressrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, registeruserrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, unregisteruserrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryusrinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifyuserinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, retrievepwdrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, loginrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, logoutrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, shakehandrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, configinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, adddevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deldevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifydevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydevinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryuserrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, sharingdevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, cancelshareddevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, addfriendsrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, delfriendsrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryfriendsrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, storageaddressreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, p2pinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deletefilersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, downloadfilersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryfilersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryaccessdomainnamersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryappupgradersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryifp2pidvalidrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryalldeviceeventrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deletedeviceeventrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifydeviceeventrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, addstoragedetailrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deletestoragedetailrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifystoragedetailrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querystoragedetailrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryregionstorageinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydeviceinfomultirsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, registercmscallrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, unregistercmscallrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querysharingdevicelimitrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydevicecapacityrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryalldevicecapacityrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydevicep2pidrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, uploadusercfgrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryusercfgrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getonlinedevinforsp_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getonlineuserinforsp_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getdeviceaccessrecordrsp_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getuseraccessrecordrsp_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryuploadurlrsp_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, addconfigurationrsp_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deleteconfigurationrsp_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifyconfigurationrsp_mgr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryallconfigurationrsp_mgr_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, uimsgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, strsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, reqvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, rspvalue_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PermissionOfUser)},
  { 6, -1, sizeof(Device)},
  { 20, -1, sizeof(DeviceStatus)},
  { 26, -1, sizeof(User)},
  { 39, -1, sizeof(Relation)},
  { 49, -1, sizeof(File)},
  { 66, -1, sizeof(FileUrl)},
  { 72, -1, sizeof(DeviceAccessRecord)},
  { 86, -1, sizeof(UserAccessRecord)},
  { 101, -1, sizeof(Configuration)},
  { 119, -1, sizeof(DoorbellParameter)},
  { 142, -1, sizeof(DeviceEvent)},
  { 155, -1, sizeof(StorageDetail)},
  { 173, -1, sizeof(DeviceCapacity)},
  { 179, -1, sizeof(GetAccessAddressReq_DEV)},
  { 185, -1, sizeof(GetAccessAddressRsp_DEV)},
  { 192, -1, sizeof(LoginReq_DEV)},
  { 209, -1, sizeof(LoginRsp_DEV)},
  { 214, -1, sizeof(LogoutReq_DEV)},
  { 220, -1, sizeof(LogoutRsp_DEV)},
  { 225, -1, sizeof(ShakehandReq_DEV)},
  { 231, -1, sizeof(ShakehandRsp_DEV)},
  { 236, -1, sizeof(ConfigInfoReq_DEV)},
  { 242, -1, sizeof(ConfigInfoRsp_DEV)},
  { 248, -1, sizeof(StorageAddressReq_DEV)},
  { 256, -1, sizeof(StorageAddressRsp_DEV)},
  { 262, -1, sizeof(P2pInfoReq_DEV)},
  { 270, -1, sizeof(P2pInfoRsp_DEV)},
  { 279, -1, sizeof(AddFileReq_DEV)},
  { 286, -1, sizeof(AddFileRsp_DEV)},
  { 292, -1, sizeof(QueryTimeZoneReq_DEV)},
  { 298, -1, sizeof(QueryTimeZoneRsp_DEV)},
  { 306, -1, sizeof(QueryAccessDomainNameReq_DEV)},
  { 314, -1, sizeof(QueryAccessDomainNameRsp_DEV)},
  { 321, -1, sizeof(QueryUpgradeSiteReq_DEV)},
  { 327, -1, sizeof(QueryUpgradeSiteRsp_DEV)},
  { 333, -1, sizeof(QueryFirmwareUpgradeReq_DEV)},
  { 341, -1, sizeof(QueryFirmwareUpgradeRsp_DEV)},
  { 353, -1, sizeof(ModifyDevicePropertyReq_DEV)},
  { 379, -1, sizeof(ModifyDevicePropertyRsp_DEV)},
  { 384, -1, sizeof(QueryDeviceParameterReq_DEV)},
  { 391, -1, sizeof(QueryDeviceParameterRsp_DEV)},
  { 396, -1, sizeof(QueryPlatformPushStatusReq_DEV)},
  { 401, -1, sizeof(QueryPlatformPushStatusRsp_DEV)},
  { 406, -1, sizeof(DeviceEventReportReq_DEV)},
  { 416, -1, sizeof(DeviceEventReportRsp_DEV)},
  { 421, -1, sizeof(MsgPreHandlerReq_USR)},
  { 426, -1, sizeof(MsgPreHandlerRsp_USR)},
  { 431, -1, sizeof(GetAccessAddressReq_USR)},
  { 437, -1, sizeof(GetAccessAddressRsp_USR)},
  { 444, -1, sizeof(RegisterUserReq_USR)},
  { 450, -1, sizeof(RegisterUserRsp_USR)},
  { 456, -1, sizeof(UnRegisterUserReq_USR)},
  { 462, -1, sizeof(UnRegisterUserRsp_USR)},
  { 468, -1, sizeof(QueryUsrInfoReq_USR)},
  { 474, -1, sizeof(QueryUsrInfoRsp_USR)},
  { 480, -1, sizeof(ModifyUserInfoReq_USR)},
  { 486, -1, sizeof(ModifyUserInfoRsp_USR)},
  { 491, -1, sizeof(RetrievePwdReq_USR)},
  { 498, -1, sizeof(RetrievePwdRsp_USR)},
  { 503, -1, sizeof(LoginReq_USR)},
  { 511, -1, sizeof(LoginRsp_USR)},
  { 519, -1, sizeof(LogoutReq_USR)},
  { 525, -1, sizeof(LogoutRsp_USR)},
  { 530, -1, sizeof(ShakehandReq_USR)},
  { 536, -1, sizeof(ShakehandRsp_USR)},
  { 541, -1, sizeof(ConfigInfoReq_USR)},
  { 547, -1, sizeof(ConfigInfoRsp_USR)},
  { 553, -1, sizeof(AddDevReq_USR)},
  { 559, -1, sizeof(AddDevRsp_USR)},
  { 565, -1, sizeof(DelDevReq_USR)},
  { 571, -1, sizeof(DelDevRsp_USR)},
  { 577, -1, sizeof(ModifyDevReq_USR)},
  { 584, -1, sizeof(ModifyDevRsp_USR)},
  { 589, -1, sizeof(QueryDevInfoReq_USR)},
  { 597, -1, sizeof(QueryDevInfoRsp_USR)},
  { 606, -1, sizeof(QueryDevReq_USR)},
  { 613, -1, sizeof(QueryDevRsp_USR)},
  { 619, -1, sizeof(QueryUserReq_USR)},
  { 626, -1, sizeof(QueryUserRsp_USR)},
  { 632, -1, sizeof(SharingDevReq_USR)},
  { 639, -1, sizeof(SharingDevRsp_USR)},
  { 644, -1, sizeof(CancelSharedDevReq_USR)},
  { 650, -1, sizeof(CancelSharedDevRsp_USR)},
  { 655, -1, sizeof(AddFriendsReq_USR)},
  { 661, -1, sizeof(AddFriendsRsp_USR)},
  { 666, -1, sizeof(DelFriendsReq_USR)},
  { 672, -1, sizeof(DelFriendsRsp_USR)},
  { 678, -1, sizeof(QueryFriendsReq_USR)},
  { 685, -1, sizeof(QueryFriendsRsp_USR)},
  { 690, -1, sizeof(StorageAddressReq_USR)},
  { 698, -1, sizeof(StorageAddressRsp_USR)},
  { 704, -1, sizeof(P2pInfoReq_USR)},
  { 712, -1, sizeof(P2pInfoRsp_USR)},
  { 721, -1, sizeof(DeleteFileReq_USR)},
  { 727, -1, sizeof(DeleteFileRsp_USR)},
  { 733, -1, sizeof(DownloadFileReq_USR)},
  { 739, -1, sizeof(DownloadFileRsp_USR)},
  { 745, -1, sizeof(QueryFileReq_USR)},
  { 756, -1, sizeof(QueryFileRsp_USR)},
  { 762, -1, sizeof(QueryAccessDomainNameReq_USR)},
  { 770, -1, sizeof(QueryAccessDomainNameRsp_USR)},
  { 777, -1, sizeof(QueryAppUpgradeReq_USR)},
  { 784, -1, sizeof(QueryAppUpgradeRsp_USR)},
  { 796, -1, sizeof(QueryIfP2pIDValidReq_USR)},
  { 802, -1, sizeof(QueryIfP2pIDValidRsp_USR)},
  { 807, -1, sizeof(QueryAllDeviceEventReq_USR)},
  { 819, -1, sizeof(QueryAllDeviceEventRsp_USR)},
  { 824, -1, sizeof(DeleteDeviceEventReq_USR)},
  { 831, -1, sizeof(DeleteDeviceEventRsp_USR)},
  { 836, -1, sizeof(ModifyDeviceEventReq_USR)},
  { 848, -1, sizeof(ModifyDeviceEventRsp_USR)},
  { 853, -1, sizeof(AddStorageDetailReq_USR)},
  { 858, -1, sizeof(AddStorageDetailRsp_USR)},
  { 863, -1, sizeof(DeleteStorageDetailReq_USR)},
  { 869, -1, sizeof(DeleteStorageDetailRsp_USR)},
  { 874, -1, sizeof(ModifyStorageDetailReq_USR)},
  { 879, -1, sizeof(ModifyStorageDetailRsp_USR)},
  { 884, -1, sizeof(QueryStorageDetailReq_USR)},
  { 890, -1, sizeof(QueryStorageDetailRsp_USR)},
  { 895, -1, sizeof(QueryRegionStorageInfoReq_USR)},
  { 900, -1, sizeof(QueryRegionStorageInfoRsp_USR)},
  { 907, -1, sizeof(QueryDeviceInfoMultiReq_USR)},
  { 912, -1, sizeof(QueryDeviceInfoMultiRsp_USR)},
  { 917, -1, sizeof(RegisterCmsCallReq_USR)},
  { 925, -1, sizeof(RegisterCmsCallRsp_USR)},
  { 932, -1, sizeof(UnregisterCmsCallReq_USR)},
  { 937, -1, sizeof(UnregisterCmsCallRsp_USR)},
  { 942, -1, sizeof(QuerySharingDeviceLimitReq_USR)},
  { 947, -1, sizeof(QuerySharingDeviceLimitRsp_USR)},
  { 953, -1, sizeof(QueryDeviceCapacityReq_USR)},
  { 959, -1, sizeof(QueryDeviceCapacityRsp_USR)},
  { 964, -1, sizeof(QueryALLDeviceCapacityReq_USR)},
  { 969, -1, sizeof(QueryALLDeviceCapacityRsp_USR)},
  { 974, -1, sizeof(QueryDeviceP2pIDReq_USR)},
  { 979, -1, sizeof(QueryDeviceP2pIDRsp_USR)},
  { 990, -1, sizeof(UploadUserCfgReq_USR)},
  { 998, -1, sizeof(UploadUserCfgRsp_USR)},
  { 1003, -1, sizeof(QueryUserCfgReq_USR)},
  { 1009, -1, sizeof(QueryUserCfgRsp_USR)},
  { 1016, -1, sizeof(QueryUploadURLReq_MGR)},
  { 1021, -1, sizeof(QueryUploadURLRsp_MGR)},
  { 1026, -1, sizeof(AddConfigurationReq_MGR)},
  { 1031, -1, sizeof(AddConfigurationRsp_MGR)},
  { 1036, -1, sizeof(DeleteConfigurationReq_MGR)},
  { 1042, -1, sizeof(DeleteConfigurationRsp_MGR)},
  { 1047, -1, sizeof(ModifyConfigurationReq_MGR)},
  { 1052, -1, sizeof(ModifyConfigurationRsp_MGR)},
  { 1057, -1, sizeof(QueryAllConfigurationReq_MGR)},
  { 1062, -1, sizeof(QueryAllConfigurationRsp_MGR)},
  { 1067, -1, sizeof(GetOnlineDevInfoReq_INNER)},
  { 1072, -1, sizeof(GetOnlineDevInfoRsp_INNER)},
  { 1078, -1, sizeof(BroadcastOnlineDevInfo_INNER)},
  { 1084, -1, sizeof(GetOnlineUserInfoReq_INNER)},
  { 1089, -1, sizeof(GetOnlineUserInfoRsp_INNER)},
  { 1095, -1, sizeof(BroadcastOnlineUserInfo_INNER)},
  { 1101, -1, sizeof(GetDeviceAccessRecordReq_INNER)},
  { 1106, -1, sizeof(GetDeviceAccessRecordRsp_INNER)},
  { 1112, -1, sizeof(GetUserAccessRecordReq_INNER)},
  { 1117, -1, sizeof(GetUserAccessRecordRsp_INNER)},
  { 1123, -1, sizeof(Req)},
  { 1201, -1, sizeof(Rsp)},
  { 1279, -1, sizeof(InteractiveMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PermissionOfUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Relation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileUrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceAccessRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserAccessRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Configuration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DoorbellParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceCapacity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFileReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFileRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryTimeZoneReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryTimeZoneRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAccessDomainNameReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAccessDomainNameRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUpgradeSiteReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUpgradeSiteRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFirmwareUpgradeReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFirmwareUpgradeRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDevicePropertyReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDevicePropertyRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceParameterReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceParameterRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryPlatformPushStatusReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryPlatformPushStatusRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceEventReportReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceEventReportRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgPreHandlerReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgPreHandlerRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterUserReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterUserRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnRegisterUserReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnRegisterUserRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUsrInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUsrInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyUserInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyUserInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RetrievePwdReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RetrievePwdRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUserReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUserRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SharingDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SharingDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelSharedDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelSharedDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendsReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendsRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFriendsReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFriendsRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFriendsReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFriendsRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFileReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFileRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DownloadFileReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DownloadFileRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFileReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFileRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAccessDomainNameReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAccessDomainNameRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAppUpgradeReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAppUpgradeRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryIfP2pIDValidReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryIfP2pIDValidRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAllDeviceEventReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAllDeviceEventRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteDeviceEventReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteDeviceEventRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDeviceEventReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDeviceEventRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddStorageDetailReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddStorageDetailRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteStorageDetailReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteStorageDetailRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyStorageDetailReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyStorageDetailRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryStorageDetailReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryStorageDetailRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryRegionStorageInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryRegionStorageInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceInfoMultiReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceInfoMultiRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterCmsCallReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterCmsCallRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnregisterCmsCallReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnregisterCmsCallRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuerySharingDeviceLimitReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuerySharingDeviceLimitRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceCapacityReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceCapacityRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryALLDeviceCapacityReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryALLDeviceCapacityRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceP2pIDReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDeviceP2pIDRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UploadUserCfgReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UploadUserCfgRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUserCfgReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUserCfgRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUploadURLReq_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUploadURLRsp_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddConfigurationReq_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddConfigurationRsp_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteConfigurationReq_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteConfigurationRsp_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyConfigurationReq_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyConfigurationRsp_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAllConfigurationReq_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAllConfigurationRsp_MGR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineDevInfoReq_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineDevInfoRsp_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BroadcastOnlineDevInfo_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineUserInfoReq_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineUserInfoRsp_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BroadcastOnlineUserInfo_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetDeviceAccessRecordReq_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetDeviceAccessRecordRsp_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUserAccessRecordReq_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUserAccessRecordRsp_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Rsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InteractiveMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "InteractiveProtocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 163);
}

}  // namespace

void TableStruct::Shutdown() {
  _PermissionOfUser_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Device_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DeviceStatus_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _User_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Relation_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _File_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _FileUrl_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _DeviceAccessRecord_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _UserAccessRecord_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Configuration_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _DoorbellParameter_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _DeviceEvent_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _StorageDetail_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _DeviceCapacity_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GetAccessAddressReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GetAccessAddressRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _LoginReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _LoginRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _LogoutReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _LogoutRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _ShakehandReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _ShakehandRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _ConfigInfoReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _ConfigInfoRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _StorageAddressReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _StorageAddressRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _P2pInfoReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _P2pInfoRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _AddFileReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _AddFileRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _QueryTimeZoneReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _QueryTimeZoneRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _QueryAccessDomainNameReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _QueryAccessDomainNameRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _QueryUpgradeSiteReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _QueryUpgradeSiteRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _QueryFirmwareUpgradeReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _QueryFirmwareUpgradeRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _ModifyDevicePropertyReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _ModifyDevicePropertyRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _QueryDeviceParameterReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _QueryDeviceParameterRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _QueryPlatformPushStatusReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _QueryPlatformPushStatusRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _DeviceEventReportReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _DeviceEventReportRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _MsgPreHandlerReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _MsgPreHandlerRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _GetAccessAddressReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _GetAccessAddressRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _RegisterUserReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _RegisterUserRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _UnRegisterUserReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _UnRegisterUserRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _QueryUsrInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _QueryUsrInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _ModifyUserInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _ModifyUserInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _RetrievePwdReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _RetrievePwdRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _LoginReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _LoginRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _LogoutReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _LogoutRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _ShakehandReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
  _ShakehandRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[65].reflection;
  _ConfigInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[66].reflection;
  _ConfigInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[67].reflection;
  _AddDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[68].reflection;
  _AddDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[69].reflection;
  _DelDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[70].reflection;
  _DelDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[71].reflection;
  _ModifyDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[72].reflection;
  _ModifyDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[73].reflection;
  _QueryDevInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[74].reflection;
  _QueryDevInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[75].reflection;
  _QueryDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[76].reflection;
  _QueryDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[77].reflection;
  _QueryUserReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[78].reflection;
  _QueryUserRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[79].reflection;
  _SharingDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[80].reflection;
  _SharingDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[81].reflection;
  _CancelSharedDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[82].reflection;
  _CancelSharedDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[83].reflection;
  _AddFriendsReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[84].reflection;
  _AddFriendsRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[85].reflection;
  _DelFriendsReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[86].reflection;
  _DelFriendsRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[87].reflection;
  _QueryFriendsReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[88].reflection;
  _QueryFriendsRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[89].reflection;
  _StorageAddressReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[90].reflection;
  _StorageAddressRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[91].reflection;
  _P2pInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[92].reflection;
  _P2pInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[93].reflection;
  _DeleteFileReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[94].reflection;
  _DeleteFileRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[95].reflection;
  _DownloadFileReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[96].reflection;
  _DownloadFileRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[97].reflection;
  _QueryFileReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[98].reflection;
  _QueryFileRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[99].reflection;
  _QueryAccessDomainNameReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[100].reflection;
  _QueryAccessDomainNameRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[101].reflection;
  _QueryAppUpgradeReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[102].reflection;
  _QueryAppUpgradeRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[103].reflection;
  _QueryIfP2pIDValidReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[104].reflection;
  _QueryIfP2pIDValidRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[105].reflection;
  _QueryAllDeviceEventReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[106].reflection;
  _QueryAllDeviceEventRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[107].reflection;
  _DeleteDeviceEventReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[108].reflection;
  _DeleteDeviceEventRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[109].reflection;
  _ModifyDeviceEventReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[110].reflection;
  _ModifyDeviceEventRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[111].reflection;
  _AddStorageDetailReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[112].reflection;
  _AddStorageDetailRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[113].reflection;
  _DeleteStorageDetailReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[114].reflection;
  _DeleteStorageDetailRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[115].reflection;
  _ModifyStorageDetailReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[116].reflection;
  _ModifyStorageDetailRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[117].reflection;
  _QueryStorageDetailReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[118].reflection;
  _QueryStorageDetailRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[119].reflection;
  _QueryRegionStorageInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[120].reflection;
  _QueryRegionStorageInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[121].reflection;
  _QueryDeviceInfoMultiReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[122].reflection;
  _QueryDeviceInfoMultiRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[123].reflection;
  _RegisterCmsCallReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[124].reflection;
  _RegisterCmsCallRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[125].reflection;
  _UnregisterCmsCallReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[126].reflection;
  _UnregisterCmsCallRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[127].reflection;
  _QuerySharingDeviceLimitReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[128].reflection;
  _QuerySharingDeviceLimitRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[129].reflection;
  _QueryDeviceCapacityReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[130].reflection;
  _QueryDeviceCapacityRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[131].reflection;
  _QueryALLDeviceCapacityReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[132].reflection;
  _QueryALLDeviceCapacityRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[133].reflection;
  _QueryDeviceP2pIDReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[134].reflection;
  _QueryDeviceP2pIDRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[135].reflection;
  _UploadUserCfgReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[136].reflection;
  _UploadUserCfgRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[137].reflection;
  _QueryUserCfgReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[138].reflection;
  _QueryUserCfgRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[139].reflection;
  _QueryUploadURLReq_MGR_default_instance_.Shutdown();
  delete file_level_metadata[140].reflection;
  _QueryUploadURLRsp_MGR_default_instance_.Shutdown();
  delete file_level_metadata[141].reflection;
  _AddConfigurationReq_MGR_default_instance_.Shutdown();
  delete file_level_metadata[142].reflection;
  _AddConfigurationRsp_MGR_default_instance_.Shutdown();
  delete file_level_metadata[143].reflection;
  _DeleteConfigurationReq_MGR_default_instance_.Shutdown();
  delete file_level_metadata[144].reflection;
  _DeleteConfigurationRsp_MGR_default_instance_.Shutdown();
  delete file_level_metadata[145].reflection;
  _ModifyConfigurationReq_MGR_default_instance_.Shutdown();
  delete file_level_metadata[146].reflection;
  _ModifyConfigurationRsp_MGR_default_instance_.Shutdown();
  delete file_level_metadata[147].reflection;
  _QueryAllConfigurationReq_MGR_default_instance_.Shutdown();
  delete file_level_metadata[148].reflection;
  _QueryAllConfigurationRsp_MGR_default_instance_.Shutdown();
  delete file_level_metadata[149].reflection;
  _GetOnlineDevInfoReq_INNER_default_instance_.Shutdown();
  delete file_level_metadata[150].reflection;
  _GetOnlineDevInfoRsp_INNER_default_instance_.Shutdown();
  delete file_level_metadata[151].reflection;
  _BroadcastOnlineDevInfo_INNER_default_instance_.Shutdown();
  delete file_level_metadata[152].reflection;
  _GetOnlineUserInfoReq_INNER_default_instance_.Shutdown();
  delete file_level_metadata[153].reflection;
  _GetOnlineUserInfoRsp_INNER_default_instance_.Shutdown();
  delete file_level_metadata[154].reflection;
  _BroadcastOnlineUserInfo_INNER_default_instance_.Shutdown();
  delete file_level_metadata[155].reflection;
  _GetDeviceAccessRecordReq_INNER_default_instance_.Shutdown();
  delete file_level_metadata[156].reflection;
  _GetDeviceAccessRecordRsp_INNER_default_instance_.Shutdown();
  delete file_level_metadata[157].reflection;
  _GetUserAccessRecordReq_INNER_default_instance_.Shutdown();
  delete file_level_metadata[158].reflection;
  _GetUserAccessRecordRsp_INNER_default_instance_.Shutdown();
  delete file_level_metadata[159].reflection;
  _Req_default_instance_.Shutdown();
  delete file_level_metadata[160].reflection;
  _Rsp_default_instance_.Shutdown();
  delete file_level_metadata[161].reflection;
  _InteractiveMessage_default_instance_.Shutdown();
  delete file_level_metadata[162].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PermissionOfUser_default_instance_.DefaultConstruct();
  _Device_default_instance_.DefaultConstruct();
  _DeviceStatus_default_instance_.DefaultConstruct();
  _User_default_instance_.DefaultConstruct();
  _Relation_default_instance_.DefaultConstruct();
  _File_default_instance_.DefaultConstruct();
  _FileUrl_default_instance_.DefaultConstruct();
  _DeviceAccessRecord_default_instance_.DefaultConstruct();
  _UserAccessRecord_default_instance_.DefaultConstruct();
  _Configuration_default_instance_.DefaultConstruct();
  _DoorbellParameter_default_instance_.DefaultConstruct();
  _DeviceEvent_default_instance_.DefaultConstruct();
  _StorageDetail_default_instance_.DefaultConstruct();
  _DeviceCapacity_default_instance_.DefaultConstruct();
  _GetAccessAddressReq_DEV_default_instance_.DefaultConstruct();
  _GetAccessAddressRsp_DEV_default_instance_.DefaultConstruct();
  _LoginReq_DEV_default_instance_.DefaultConstruct();
  _LoginRsp_DEV_default_instance_.DefaultConstruct();
  _LogoutReq_DEV_default_instance_.DefaultConstruct();
  _LogoutRsp_DEV_default_instance_.DefaultConstruct();
  _ShakehandReq_DEV_default_instance_.DefaultConstruct();
  _ShakehandRsp_DEV_default_instance_.DefaultConstruct();
  _ConfigInfoReq_DEV_default_instance_.DefaultConstruct();
  _ConfigInfoRsp_DEV_default_instance_.DefaultConstruct();
  _StorageAddressReq_DEV_default_instance_.DefaultConstruct();
  _StorageAddressRsp_DEV_default_instance_.DefaultConstruct();
  _P2pInfoReq_DEV_default_instance_.DefaultConstruct();
  _P2pInfoRsp_DEV_default_instance_.DefaultConstruct();
  _AddFileReq_DEV_default_instance_.DefaultConstruct();
  _AddFileRsp_DEV_default_instance_.DefaultConstruct();
  _QueryTimeZoneReq_DEV_default_instance_.DefaultConstruct();
  _QueryTimeZoneRsp_DEV_default_instance_.DefaultConstruct();
  _QueryAccessDomainNameReq_DEV_default_instance_.DefaultConstruct();
  _QueryAccessDomainNameRsp_DEV_default_instance_.DefaultConstruct();
  _QueryUpgradeSiteReq_DEV_default_instance_.DefaultConstruct();
  _QueryUpgradeSiteRsp_DEV_default_instance_.DefaultConstruct();
  _QueryFirmwareUpgradeReq_DEV_default_instance_.DefaultConstruct();
  _QueryFirmwareUpgradeRsp_DEV_default_instance_.DefaultConstruct();
  _ModifyDevicePropertyReq_DEV_default_instance_.DefaultConstruct();
  _ModifyDevicePropertyRsp_DEV_default_instance_.DefaultConstruct();
  _QueryDeviceParameterReq_DEV_default_instance_.DefaultConstruct();
  _QueryDeviceParameterRsp_DEV_default_instance_.DefaultConstruct();
  _QueryPlatformPushStatusReq_DEV_default_instance_.DefaultConstruct();
  _QueryPlatformPushStatusRsp_DEV_default_instance_.DefaultConstruct();
  _DeviceEventReportReq_DEV_default_instance_.DefaultConstruct();
  _DeviceEventReportRsp_DEV_default_instance_.DefaultConstruct();
  _MsgPreHandlerReq_USR_default_instance_.DefaultConstruct();
  _MsgPreHandlerRsp_USR_default_instance_.DefaultConstruct();
  _GetAccessAddressReq_USR_default_instance_.DefaultConstruct();
  _GetAccessAddressRsp_USR_default_instance_.DefaultConstruct();
  _RegisterUserReq_USR_default_instance_.DefaultConstruct();
  _RegisterUserRsp_USR_default_instance_.DefaultConstruct();
  _UnRegisterUserReq_USR_default_instance_.DefaultConstruct();
  _UnRegisterUserRsp_USR_default_instance_.DefaultConstruct();
  _QueryUsrInfoReq_USR_default_instance_.DefaultConstruct();
  _QueryUsrInfoRsp_USR_default_instance_.DefaultConstruct();
  _ModifyUserInfoReq_USR_default_instance_.DefaultConstruct();
  _ModifyUserInfoRsp_USR_default_instance_.DefaultConstruct();
  _RetrievePwdReq_USR_default_instance_.DefaultConstruct();
  _RetrievePwdRsp_USR_default_instance_.DefaultConstruct();
  _LoginReq_USR_default_instance_.DefaultConstruct();
  _LoginRsp_USR_default_instance_.DefaultConstruct();
  _LogoutReq_USR_default_instance_.DefaultConstruct();
  _LogoutRsp_USR_default_instance_.DefaultConstruct();
  _ShakehandReq_USR_default_instance_.DefaultConstruct();
  _ShakehandRsp_USR_default_instance_.DefaultConstruct();
  _ConfigInfoReq_USR_default_instance_.DefaultConstruct();
  _ConfigInfoRsp_USR_default_instance_.DefaultConstruct();
  _AddDevReq_USR_default_instance_.DefaultConstruct();
  _AddDevRsp_USR_default_instance_.DefaultConstruct();
  _DelDevReq_USR_default_instance_.DefaultConstruct();
  _DelDevRsp_USR_default_instance_.DefaultConstruct();
  _ModifyDevReq_USR_default_instance_.DefaultConstruct();
  _ModifyDevRsp_USR_default_instance_.DefaultConstruct();
  _QueryDevInfoReq_USR_default_instance_.DefaultConstruct();
  _QueryDevInfoRsp_USR_default_instance_.DefaultConstruct();
  _QueryDevReq_USR_default_instance_.DefaultConstruct();
  _QueryDevRsp_USR_default_instance_.DefaultConstruct();
  _QueryUserReq_USR_default_instance_.DefaultConstruct();
  _QueryUserRsp_USR_default_instance_.DefaultConstruct();
  _SharingDevReq_USR_default_instance_.DefaultConstruct();
  _SharingDevRsp_USR_default_instance_.DefaultConstruct();
  _CancelSharedDevReq_USR_default_instance_.DefaultConstruct();
  _CancelSharedDevRsp_USR_default_instance_.DefaultConstruct();
  _AddFriendsReq_USR_default_instance_.DefaultConstruct();
  _AddFriendsRsp_USR_default_instance_.DefaultConstruct();
  _DelFriendsReq_USR_default_instance_.DefaultConstruct();
  _DelFriendsRsp_USR_default_instance_.DefaultConstruct();
  _QueryFriendsReq_USR_default_instance_.DefaultConstruct();
  _QueryFriendsRsp_USR_default_instance_.DefaultConstruct();
  _StorageAddressReq_USR_default_instance_.DefaultConstruct();
  _StorageAddressRsp_USR_default_instance_.DefaultConstruct();
  _P2pInfoReq_USR_default_instance_.DefaultConstruct();
  _P2pInfoRsp_USR_default_instance_.DefaultConstruct();
  _DeleteFileReq_USR_default_instance_.DefaultConstruct();
  _DeleteFileRsp_USR_default_instance_.DefaultConstruct();
  _DownloadFileReq_USR_default_instance_.DefaultConstruct();
  _DownloadFileRsp_USR_default_instance_.DefaultConstruct();
  _QueryFileReq_USR_default_instance_.DefaultConstruct();
  _QueryFileRsp_USR_default_instance_.DefaultConstruct();
  _QueryAccessDomainNameReq_USR_default_instance_.DefaultConstruct();
  _QueryAccessDomainNameRsp_USR_default_instance_.DefaultConstruct();
  _QueryAppUpgradeReq_USR_default_instance_.DefaultConstruct();
  _QueryAppUpgradeRsp_USR_default_instance_.DefaultConstruct();
  _QueryIfP2pIDValidReq_USR_default_instance_.DefaultConstruct();
  _QueryIfP2pIDValidRsp_USR_default_instance_.DefaultConstruct();
  _QueryAllDeviceEventReq_USR_default_instance_.DefaultConstruct();
  _QueryAllDeviceEventRsp_USR_default_instance_.DefaultConstruct();
  _DeleteDeviceEventReq_USR_default_instance_.DefaultConstruct();
  _DeleteDeviceEventRsp_USR_default_instance_.DefaultConstruct();
  _ModifyDeviceEventReq_USR_default_instance_.DefaultConstruct();
  _ModifyDeviceEventRsp_USR_default_instance_.DefaultConstruct();
  _AddStorageDetailReq_USR_default_instance_.DefaultConstruct();
  _AddStorageDetailRsp_USR_default_instance_.DefaultConstruct();
  _DeleteStorageDetailReq_USR_default_instance_.DefaultConstruct();
  _DeleteStorageDetailRsp_USR_default_instance_.DefaultConstruct();
  _ModifyStorageDetailReq_USR_default_instance_.DefaultConstruct();
  _ModifyStorageDetailRsp_USR_default_instance_.DefaultConstruct();
  _QueryStorageDetailReq_USR_default_instance_.DefaultConstruct();
  _QueryStorageDetailRsp_USR_default_instance_.DefaultConstruct();
  _QueryRegionStorageInfoReq_USR_default_instance_.DefaultConstruct();
  _QueryRegionStorageInfoRsp_USR_default_instance_.DefaultConstruct();
  _QueryDeviceInfoMultiReq_USR_default_instance_.DefaultConstruct();
  _QueryDeviceInfoMultiRsp_USR_default_instance_.DefaultConstruct();
  _RegisterCmsCallReq_USR_default_instance_.DefaultConstruct();
  _RegisterCmsCallRsp_USR_default_instance_.DefaultConstruct();
  _UnregisterCmsCallReq_USR_default_instance_.DefaultConstruct();
  _UnregisterCmsCallRsp_USR_default_instance_.DefaultConstruct();
  _QuerySharingDeviceLimitReq_USR_default_instance_.DefaultConstruct();
  _QuerySharingDeviceLimitRsp_USR_default_instance_.DefaultConstruct();
  _QueryDeviceCapacityReq_USR_default_instance_.DefaultConstruct();
  _QueryDeviceCapacityRsp_USR_default_instance_.DefaultConstruct();
  _QueryALLDeviceCapacityReq_USR_default_instance_.DefaultConstruct();
  _QueryALLDeviceCapacityRsp_USR_default_instance_.DefaultConstruct();
  _QueryDeviceP2pIDReq_USR_default_instance_.DefaultConstruct();
  _QueryDeviceP2pIDRsp_USR_default_instance_.DefaultConstruct();
  _UploadUserCfgReq_USR_default_instance_.DefaultConstruct();
  _UploadUserCfgRsp_USR_default_instance_.DefaultConstruct();
  _QueryUserCfgReq_USR_default_instance_.DefaultConstruct();
  _QueryUserCfgRsp_USR_default_instance_.DefaultConstruct();
  _QueryUploadURLReq_MGR_default_instance_.DefaultConstruct();
  _QueryUploadURLRsp_MGR_default_instance_.DefaultConstruct();
  _AddConfigurationReq_MGR_default_instance_.DefaultConstruct();
  _AddConfigurationRsp_MGR_default_instance_.DefaultConstruct();
  _DeleteConfigurationReq_MGR_default_instance_.DefaultConstruct();
  _DeleteConfigurationRsp_MGR_default_instance_.DefaultConstruct();
  _ModifyConfigurationReq_MGR_default_instance_.DefaultConstruct();
  _ModifyConfigurationRsp_MGR_default_instance_.DefaultConstruct();
  _QueryAllConfigurationReq_MGR_default_instance_.DefaultConstruct();
  _QueryAllConfigurationRsp_MGR_default_instance_.DefaultConstruct();
  _GetOnlineDevInfoReq_INNER_default_instance_.DefaultConstruct();
  _GetOnlineDevInfoRsp_INNER_default_instance_.DefaultConstruct();
  _BroadcastOnlineDevInfo_INNER_default_instance_.DefaultConstruct();
  _GetOnlineUserInfoReq_INNER_default_instance_.DefaultConstruct();
  _GetOnlineUserInfoRsp_INNER_default_instance_.DefaultConstruct();
  _BroadcastOnlineUserInfo_INNER_default_instance_.DefaultConstruct();
  _GetDeviceAccessRecordReq_INNER_default_instance_.DefaultConstruct();
  _GetDeviceAccessRecordRsp_INNER_default_instance_.DefaultConstruct();
  _GetUserAccessRecordReq_INNER_default_instance_.DefaultConstruct();
  _GetUserAccessRecordRsp_INNER_default_instance_.DefaultConstruct();
  _Req_default_instance_.DefaultConstruct();
  _Rsp_default_instance_.DefaultConstruct();
  _InteractiveMessage_default_instance_.DefaultConstruct();
  _DeviceStatus_default_instance_.get_mutable()->deviceinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _ModifyDevicePropertyReq_DEV_default_instance_.get_mutable()->doorbellparameter_ = const_cast< ::Interactive::Message::DoorbellParameter*>(
      ::Interactive::Message::DoorbellParameter::internal_default_instance());
  _QueryDeviceParameterRsp_DEV_default_instance_.get_mutable()->doorbellparameter_ = const_cast< ::Interactive::Message::DoorbellParameter*>(
      ::Interactive::Message::DoorbellParameter::internal_default_instance());
  _RegisterUserReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _UnRegisterUserReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _QueryUsrInfoRsp_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _ModifyUserInfoReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _LoginReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _LogoutReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _AddDevReq_USR_default_instance_.get_mutable()->devinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _ModifyDevReq_USR_default_instance_.get_mutable()->devinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _QueryDevInfoRsp_USR_default_instance_.get_mutable()->devinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _SharingDevReq_USR_default_instance_.get_mutable()->relationinfo_ = const_cast< ::Interactive::Message::Relation*>(
      ::Interactive::Message::Relation::internal_default_instance());
  _CancelSharedDevReq_USR_default_instance_.get_mutable()->relationinfo_ = const_cast< ::Interactive::Message::Relation*>(
      ::Interactive::Message::Relation::internal_default_instance());
  _AddStorageDetailReq_USR_default_instance_.get_mutable()->storagedetail_ = const_cast< ::Interactive::Message::StorageDetail*>(
      ::Interactive::Message::StorageDetail::internal_default_instance());
  _ModifyStorageDetailReq_USR_default_instance_.get_mutable()->storagedetail_ = const_cast< ::Interactive::Message::StorageDetail*>(
      ::Interactive::Message::StorageDetail::internal_default_instance());
  _QueryStorageDetailRsp_USR_default_instance_.get_mutable()->storagedetail_ = const_cast< ::Interactive::Message::StorageDetail*>(
      ::Interactive::Message::StorageDetail::internal_default_instance());
  _QueryDeviceCapacityRsp_USR_default_instance_.get_mutable()->devcap_ = const_cast< ::Interactive::Message::DeviceCapacity*>(
      ::Interactive::Message::DeviceCapacity::internal_default_instance());
  _AddConfigurationReq_MGR_default_instance_.get_mutable()->configurationinfo_ = const_cast< ::Interactive::Message::Configuration*>(
      ::Interactive::Message::Configuration::internal_default_instance());
  _ModifyConfigurationReq_MGR_default_instance_.get_mutable()->configurationinfo_ = const_cast< ::Interactive::Message::Configuration*>(
      ::Interactive::Message::Configuration::internal_default_instance());
  _Req_default_instance_.get_mutable()->getaccessaddressreq_dev_value_ = const_cast< ::Interactive::Message::GetAccessAddressReq_DEV*>(
      ::Interactive::Message::GetAccessAddressReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->loginreq_dev_value_ = const_cast< ::Interactive::Message::LoginReq_DEV*>(
      ::Interactive::Message::LoginReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->logoutreq_dev_value_ = const_cast< ::Interactive::Message::LogoutReq_DEV*>(
      ::Interactive::Message::LogoutReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->shakehandreq_dev_value_ = const_cast< ::Interactive::Message::ShakehandReq_DEV*>(
      ::Interactive::Message::ShakehandReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->configinforeq_dev_value_ = const_cast< ::Interactive::Message::ConfigInfoReq_DEV*>(
      ::Interactive::Message::ConfigInfoReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->storageaddressreq_dev_value_ = const_cast< ::Interactive::Message::StorageAddressReq_DEV*>(
      ::Interactive::Message::StorageAddressReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->p2pinforeq_dev_value_ = const_cast< ::Interactive::Message::P2pInfoReq_DEV*>(
      ::Interactive::Message::P2pInfoReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->addfilereq_dev_value_ = const_cast< ::Interactive::Message::AddFileReq_DEV*>(
      ::Interactive::Message::AddFileReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->querytimezonereq_dev_value_ = const_cast< ::Interactive::Message::QueryTimeZoneReq_DEV*>(
      ::Interactive::Message::QueryTimeZoneReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryaccessdomainnamereq_dev_value_ = const_cast< ::Interactive::Message::QueryAccessDomainNameReq_DEV*>(
      ::Interactive::Message::QueryAccessDomainNameReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryupgradesitereq_dev_value_ = const_cast< ::Interactive::Message::QueryUpgradeSiteReq_DEV*>(
      ::Interactive::Message::QueryUpgradeSiteReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryfirmwareupgradereq_dev_value_ = const_cast< ::Interactive::Message::QueryFirmwareUpgradeReq_DEV*>(
      ::Interactive::Message::QueryFirmwareUpgradeReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifydevicepropertyreq_dev_value_ = const_cast< ::Interactive::Message::ModifyDevicePropertyReq_DEV*>(
      ::Interactive::Message::ModifyDevicePropertyReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydeviceparameterreq_dev_value_ = const_cast< ::Interactive::Message::QueryDeviceParameterReq_DEV*>(
      ::Interactive::Message::QueryDeviceParameterReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryplatformpushstatusreq_dev_value_ = const_cast< ::Interactive::Message::QueryPlatformPushStatusReq_DEV*>(
      ::Interactive::Message::QueryPlatformPushStatusReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->deviceeventreportreq_dev_value_ = const_cast< ::Interactive::Message::DeviceEventReportReq_DEV*>(
      ::Interactive::Message::DeviceEventReportReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->msgprehandlerreq_usr_value_ = const_cast< ::Interactive::Message::MsgPreHandlerReq_USR*>(
      ::Interactive::Message::MsgPreHandlerReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->getaccessaddressreq_usr_value_ = const_cast< ::Interactive::Message::GetAccessAddressReq_USR*>(
      ::Interactive::Message::GetAccessAddressReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->registeruserreq_usr_value_ = const_cast< ::Interactive::Message::RegisterUserReq_USR*>(
      ::Interactive::Message::RegisterUserReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->unregisteruserreq_usr_value_ = const_cast< ::Interactive::Message::UnRegisterUserReq_USR*>(
      ::Interactive::Message::UnRegisterUserReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryusrinforeq_usr_value_ = const_cast< ::Interactive::Message::QueryUsrInfoReq_USR*>(
      ::Interactive::Message::QueryUsrInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifyuserinforeq_usr_value_ = const_cast< ::Interactive::Message::ModifyUserInfoReq_USR*>(
      ::Interactive::Message::ModifyUserInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->retrievepwdreq_usr_value_ = const_cast< ::Interactive::Message::RetrievePwdReq_USR*>(
      ::Interactive::Message::RetrievePwdReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->loginreq_usr_value_ = const_cast< ::Interactive::Message::LoginReq_USR*>(
      ::Interactive::Message::LoginReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->logoutreq_usr_value_ = const_cast< ::Interactive::Message::LogoutReq_USR*>(
      ::Interactive::Message::LogoutReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->shakehandreq_usr_value_ = const_cast< ::Interactive::Message::ShakehandReq_USR*>(
      ::Interactive::Message::ShakehandReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->configinforeq_usr_value_ = const_cast< ::Interactive::Message::ConfigInfoReq_USR*>(
      ::Interactive::Message::ConfigInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->adddevreq_usr_value_ = const_cast< ::Interactive::Message::AddDevReq_USR*>(
      ::Interactive::Message::AddDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deldevreq_usr_value_ = const_cast< ::Interactive::Message::DelDevReq_USR*>(
      ::Interactive::Message::DelDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifydevreq_usr_value_ = const_cast< ::Interactive::Message::ModifyDevReq_USR*>(
      ::Interactive::Message::ModifyDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydevinforeq_usr_value_ = const_cast< ::Interactive::Message::QueryDevInfoReq_USR*>(
      ::Interactive::Message::QueryDevInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydevreq_usr_value_ = const_cast< ::Interactive::Message::QueryDevReq_USR*>(
      ::Interactive::Message::QueryDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryuserreq_usr_value_ = const_cast< ::Interactive::Message::QueryUserReq_USR*>(
      ::Interactive::Message::QueryUserReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->sharingdevreq_usr_value_ = const_cast< ::Interactive::Message::SharingDevReq_USR*>(
      ::Interactive::Message::SharingDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->cancelshareddevreq_usr_value_ = const_cast< ::Interactive::Message::CancelSharedDevReq_USR*>(
      ::Interactive::Message::CancelSharedDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->addfriendsreq_usr_value_ = const_cast< ::Interactive::Message::AddFriendsReq_USR*>(
      ::Interactive::Message::AddFriendsReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->delfriendsreq_usr_value_ = const_cast< ::Interactive::Message::DelFriendsReq_USR*>(
      ::Interactive::Message::DelFriendsReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryfriendsreq_usr_value_ = const_cast< ::Interactive::Message::QueryFriendsReq_USR*>(
      ::Interactive::Message::QueryFriendsReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->storageaddressreq_usr_value_ = const_cast< ::Interactive::Message::StorageAddressReq_USR*>(
      ::Interactive::Message::StorageAddressReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->p2pinforeq_usr_value_ = const_cast< ::Interactive::Message::P2pInfoReq_USR*>(
      ::Interactive::Message::P2pInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deletefilereq_usr_value_ = const_cast< ::Interactive::Message::DeleteFileReq_USR*>(
      ::Interactive::Message::DeleteFileReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->downloadfilereq_usr_value_ = const_cast< ::Interactive::Message::DownloadFileReq_USR*>(
      ::Interactive::Message::DownloadFileReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryfilereq_usr_value_ = const_cast< ::Interactive::Message::QueryFileReq_USR*>(
      ::Interactive::Message::QueryFileReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryaccessdomainnamereq_usr_value_ = const_cast< ::Interactive::Message::QueryAccessDomainNameReq_USR*>(
      ::Interactive::Message::QueryAccessDomainNameReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryappupgradereq_usr_value_ = const_cast< ::Interactive::Message::QueryAppUpgradeReq_USR*>(
      ::Interactive::Message::QueryAppUpgradeReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryifp2pidvalidreq_usr_value_ = const_cast< ::Interactive::Message::QueryIfP2pIDValidReq_USR*>(
      ::Interactive::Message::QueryIfP2pIDValidReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryalldeviceeventreq_usr_value_ = const_cast< ::Interactive::Message::QueryAllDeviceEventReq_USR*>(
      ::Interactive::Message::QueryAllDeviceEventReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deletedeviceeventreq_usr_value_ = const_cast< ::Interactive::Message::DeleteDeviceEventReq_USR*>(
      ::Interactive::Message::DeleteDeviceEventReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifydeviceeventreq_usr_value_ = const_cast< ::Interactive::Message::ModifyDeviceEventReq_USR*>(
      ::Interactive::Message::ModifyDeviceEventReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->addstoragedetailreq_usr_value_ = const_cast< ::Interactive::Message::AddStorageDetailReq_USR*>(
      ::Interactive::Message::AddStorageDetailReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deletestoragedetailreq_usr_value_ = const_cast< ::Interactive::Message::DeleteStorageDetailReq_USR*>(
      ::Interactive::Message::DeleteStorageDetailReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifystoragedetailreq_usr_value_ = const_cast< ::Interactive::Message::ModifyStorageDetailReq_USR*>(
      ::Interactive::Message::ModifyStorageDetailReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querystoragedetailreq_usr_value_ = const_cast< ::Interactive::Message::QueryStorageDetailReq_USR*>(
      ::Interactive::Message::QueryStorageDetailReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryregionstorageinforeq_usr_value_ = const_cast< ::Interactive::Message::QueryRegionStorageInfoReq_USR*>(
      ::Interactive::Message::QueryRegionStorageInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydeviceinfomultireq_usr_value_ = const_cast< ::Interactive::Message::QueryDeviceInfoMultiReq_USR*>(
      ::Interactive::Message::QueryDeviceInfoMultiReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->registercmscallreq_usr_value_ = const_cast< ::Interactive::Message::RegisterCmsCallReq_USR*>(
      ::Interactive::Message::RegisterCmsCallReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->unregistercmscallreq_usr_value_ = const_cast< ::Interactive::Message::UnregisterCmsCallReq_USR*>(
      ::Interactive::Message::UnregisterCmsCallReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querysharingdevicelimitreq_usr_value_ = const_cast< ::Interactive::Message::QuerySharingDeviceLimitReq_USR*>(
      ::Interactive::Message::QuerySharingDeviceLimitReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydevicecapacityreq_usr_value_ = const_cast< ::Interactive::Message::QueryDeviceCapacityReq_USR*>(
      ::Interactive::Message::QueryDeviceCapacityReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryalldevicecapacityreq_usr_value_ = const_cast< ::Interactive::Message::QueryALLDeviceCapacityReq_USR*>(
      ::Interactive::Message::QueryALLDeviceCapacityReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydevicep2pidreq_usr_value_ = const_cast< ::Interactive::Message::QueryDeviceP2pIDReq_USR*>(
      ::Interactive::Message::QueryDeviceP2pIDReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->uploadusercfgreq_usr_value_ = const_cast< ::Interactive::Message::UploadUserCfgReq_USR*>(
      ::Interactive::Message::UploadUserCfgReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryusercfgreq_usr_value_ = const_cast< ::Interactive::Message::QueryUserCfgReq_USR*>(
      ::Interactive::Message::QueryUserCfgReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->getonlinedevinforeq_inner_value_ = const_cast< ::Interactive::Message::GetOnlineDevInfoReq_INNER*>(
      ::Interactive::Message::GetOnlineDevInfoReq_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->broadcastonlinedevinfo_inner_value_ = const_cast< ::Interactive::Message::BroadcastOnlineDevInfo_INNER*>(
      ::Interactive::Message::BroadcastOnlineDevInfo_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->getonlineuserinforeq_inner_value_ = const_cast< ::Interactive::Message::GetOnlineUserInfoReq_INNER*>(
      ::Interactive::Message::GetOnlineUserInfoReq_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->broadcastonlineuserinfo_inner_value_ = const_cast< ::Interactive::Message::BroadcastOnlineUserInfo_INNER*>(
      ::Interactive::Message::BroadcastOnlineUserInfo_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->getdeviceaccessrecordreq_inner_value_ = const_cast< ::Interactive::Message::GetDeviceAccessRecordReq_INNER*>(
      ::Interactive::Message::GetDeviceAccessRecordReq_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->getuseraccessrecordreq_inner_value_ = const_cast< ::Interactive::Message::GetUserAccessRecordReq_INNER*>(
      ::Interactive::Message::GetUserAccessRecordReq_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryuploadurlreq_mgr_value_ = const_cast< ::Interactive::Message::QueryUploadURLReq_MGR*>(
      ::Interactive::Message::QueryUploadURLReq_MGR::internal_default_instance());
  _Req_default_instance_.get_mutable()->addconfigurationreq_mgr_value_ = const_cast< ::Interactive::Message::AddConfigurationReq_MGR*>(
      ::Interactive::Message::AddConfigurationReq_MGR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deleteconfigurationreq_mgr_value_ = const_cast< ::Interactive::Message::DeleteConfigurationReq_MGR*>(
      ::Interactive::Message::DeleteConfigurationReq_MGR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifyconfigurationreq_mgr_value_ = const_cast< ::Interactive::Message::ModifyConfigurationReq_MGR*>(
      ::Interactive::Message::ModifyConfigurationReq_MGR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryallconfigurationreq_mgr_value_ = const_cast< ::Interactive::Message::QueryAllConfigurationReq_MGR*>(
      ::Interactive::Message::QueryAllConfigurationReq_MGR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getaccessaddressrsp_dev_value_ = const_cast< ::Interactive::Message::GetAccessAddressRsp_DEV*>(
      ::Interactive::Message::GetAccessAddressRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->loginrsp_dev_value_ = const_cast< ::Interactive::Message::LoginRsp_DEV*>(
      ::Interactive::Message::LoginRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->logoutrsp_dev_value_ = const_cast< ::Interactive::Message::LogoutRsp_DEV*>(
      ::Interactive::Message::LogoutRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->shakehandrsp_dev_value_ = const_cast< ::Interactive::Message::ShakehandRsp_DEV*>(
      ::Interactive::Message::ShakehandRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->configinforsp_dev_value_ = const_cast< ::Interactive::Message::ConfigInfoRsp_DEV*>(
      ::Interactive::Message::ConfigInfoRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->storageaddressrsp_dev_value_ = const_cast< ::Interactive::Message::StorageAddressRsp_DEV*>(
      ::Interactive::Message::StorageAddressRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->p2pinforsp_dev_value_ = const_cast< ::Interactive::Message::P2pInfoRsp_DEV*>(
      ::Interactive::Message::P2pInfoRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->addfilersp_dev_value_ = const_cast< ::Interactive::Message::AddFileRsp_DEV*>(
      ::Interactive::Message::AddFileRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querytimezonersp_dev_value_ = const_cast< ::Interactive::Message::QueryTimeZoneRsp_DEV*>(
      ::Interactive::Message::QueryTimeZoneRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryaccessdomainnamersp_dev_value_ = const_cast< ::Interactive::Message::QueryAccessDomainNameRsp_DEV*>(
      ::Interactive::Message::QueryAccessDomainNameRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryupgradesitersp_dev_value_ = const_cast< ::Interactive::Message::QueryUpgradeSiteRsp_DEV*>(
      ::Interactive::Message::QueryUpgradeSiteRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryfirmwareupgradersp_dev_value_ = const_cast< ::Interactive::Message::QueryFirmwareUpgradeRsp_DEV*>(
      ::Interactive::Message::QueryFirmwareUpgradeRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifydevicepropertyrsp_dev_value_ = const_cast< ::Interactive::Message::ModifyDevicePropertyRsp_DEV*>(
      ::Interactive::Message::ModifyDevicePropertyRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydeviceparameterrsp_dev_value_ = const_cast< ::Interactive::Message::QueryDeviceParameterRsp_DEV*>(
      ::Interactive::Message::QueryDeviceParameterRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryplatformpushstatusrsp_dev_value_ = const_cast< ::Interactive::Message::QueryPlatformPushStatusRsp_DEV*>(
      ::Interactive::Message::QueryPlatformPushStatusRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deviceeventreportrsp_dev_value_ = const_cast< ::Interactive::Message::DeviceEventReportRsp_DEV*>(
      ::Interactive::Message::DeviceEventReportRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->msgprehandlerrsp_usr_value_ = const_cast< ::Interactive::Message::MsgPreHandlerRsp_USR*>(
      ::Interactive::Message::MsgPreHandlerRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getaccessaddressrsp_usr_value_ = const_cast< ::Interactive::Message::GetAccessAddressRsp_USR*>(
      ::Interactive::Message::GetAccessAddressRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->registeruserrsp_usr_value_ = const_cast< ::Interactive::Message::RegisterUserRsp_USR*>(
      ::Interactive::Message::RegisterUserRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->unregisteruserrsp_usr_value_ = const_cast< ::Interactive::Message::UnRegisterUserRsp_USR*>(
      ::Interactive::Message::UnRegisterUserRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryusrinforsp_usr_value_ = const_cast< ::Interactive::Message::QueryUsrInfoRsp_USR*>(
      ::Interactive::Message::QueryUsrInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifyuserinforsp_usr_value_ = const_cast< ::Interactive::Message::ModifyUserInfoRsp_USR*>(
      ::Interactive::Message::ModifyUserInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->retrievepwdrsp_usr_value_ = const_cast< ::Interactive::Message::RetrievePwdRsp_USR*>(
      ::Interactive::Message::RetrievePwdRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->loginrsp_usr_value_ = const_cast< ::Interactive::Message::LoginRsp_USR*>(
      ::Interactive::Message::LoginRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->logoutrsp_usr_value_ = const_cast< ::Interactive::Message::LogoutRsp_USR*>(
      ::Interactive::Message::LogoutRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->shakehandrsp_usr_value_ = const_cast< ::Interactive::Message::ShakehandRsp_USR*>(
      ::Interactive::Message::ShakehandRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->configinforsp_usr_value_ = const_cast< ::Interactive::Message::ConfigInfoRsp_USR*>(
      ::Interactive::Message::ConfigInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->adddevrsp_usr_value_ = const_cast< ::Interactive::Message::AddDevRsp_USR*>(
      ::Interactive::Message::AddDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deldevrsp_usr_value_ = const_cast< ::Interactive::Message::DelDevRsp_USR*>(
      ::Interactive::Message::DelDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifydevrsp_usr_value_ = const_cast< ::Interactive::Message::ModifyDevRsp_USR*>(
      ::Interactive::Message::ModifyDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydevinforsp_usr_value_ = const_cast< ::Interactive::Message::QueryDevInfoRsp_USR*>(
      ::Interactive::Message::QueryDevInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydevrsp_usr_value_ = const_cast< ::Interactive::Message::QueryDevRsp_USR*>(
      ::Interactive::Message::QueryDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryuserrsp_usr_value_ = const_cast< ::Interactive::Message::QueryUserRsp_USR*>(
      ::Interactive::Message::QueryUserRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->sharingdevrsp_usr_value_ = const_cast< ::Interactive::Message::SharingDevRsp_USR*>(
      ::Interactive::Message::SharingDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->cancelshareddevrsp_usr_value_ = const_cast< ::Interactive::Message::CancelSharedDevRsp_USR*>(
      ::Interactive::Message::CancelSharedDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->addfriendsrsp_usr_value_ = const_cast< ::Interactive::Message::AddFriendsRsp_USR*>(
      ::Interactive::Message::AddFriendsRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->delfriendsrsp_usr_value_ = const_cast< ::Interactive::Message::DelFriendsRsp_USR*>(
      ::Interactive::Message::DelFriendsRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryfriendsrsp_usr_value_ = const_cast< ::Interactive::Message::QueryFriendsRsp_USR*>(
      ::Interactive::Message::QueryFriendsRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->storageaddressreq_usr_value_ = const_cast< ::Interactive::Message::StorageAddressRsp_USR*>(
      ::Interactive::Message::StorageAddressRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->p2pinforsp_usr_value_ = const_cast< ::Interactive::Message::P2pInfoRsp_USR*>(
      ::Interactive::Message::P2pInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deletefilersp_usr_value_ = const_cast< ::Interactive::Message::DeleteFileRsp_USR*>(
      ::Interactive::Message::DeleteFileRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->downloadfilersp_usr_value_ = const_cast< ::Interactive::Message::DownloadFileRsp_USR*>(
      ::Interactive::Message::DownloadFileRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryfilersp_usr_value_ = const_cast< ::Interactive::Message::QueryFileRsp_USR*>(
      ::Interactive::Message::QueryFileRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryaccessdomainnamersp_usr_value_ = const_cast< ::Interactive::Message::QueryAccessDomainNameRsp_USR*>(
      ::Interactive::Message::QueryAccessDomainNameRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryappupgradersp_usr_value_ = const_cast< ::Interactive::Message::QueryAppUpgradeRsp_USR*>(
      ::Interactive::Message::QueryAppUpgradeRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryifp2pidvalidrsp_usr_value_ = const_cast< ::Interactive::Message::QueryIfP2pIDValidRsp_USR*>(
      ::Interactive::Message::QueryIfP2pIDValidRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryalldeviceeventrsp_usr_value_ = const_cast< ::Interactive::Message::QueryAllDeviceEventRsp_USR*>(
      ::Interactive::Message::QueryAllDeviceEventRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deletedeviceeventrsp_usr_value_ = const_cast< ::Interactive::Message::DeleteDeviceEventRsp_USR*>(
      ::Interactive::Message::DeleteDeviceEventRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifydeviceeventrsp_usr_value_ = const_cast< ::Interactive::Message::ModifyDeviceEventRsp_USR*>(
      ::Interactive::Message::ModifyDeviceEventRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->addstoragedetailrsp_usr_value_ = const_cast< ::Interactive::Message::AddStorageDetailRsp_USR*>(
      ::Interactive::Message::AddStorageDetailRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deletestoragedetailrsp_usr_value_ = const_cast< ::Interactive::Message::DeleteStorageDetailRsp_USR*>(
      ::Interactive::Message::DeleteStorageDetailRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifystoragedetailrsp_usr_value_ = const_cast< ::Interactive::Message::ModifyStorageDetailRsp_USR*>(
      ::Interactive::Message::ModifyStorageDetailRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querystoragedetailrsp_usr_value_ = const_cast< ::Interactive::Message::QueryStorageDetailRsp_USR*>(
      ::Interactive::Message::QueryStorageDetailRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryregionstorageinforsp_usr_value_ = const_cast< ::Interactive::Message::QueryRegionStorageInfoRsp_USR*>(
      ::Interactive::Message::QueryRegionStorageInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydeviceinfomultirsp_usr_value_ = const_cast< ::Interactive::Message::QueryDeviceInfoMultiRsp_USR*>(
      ::Interactive::Message::QueryDeviceInfoMultiRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->registercmscallrsp_usr_value_ = const_cast< ::Interactive::Message::RegisterCmsCallRsp_USR*>(
      ::Interactive::Message::RegisterCmsCallRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->unregistercmscallrsp_usr_value_ = const_cast< ::Interactive::Message::UnregisterCmsCallRsp_USR*>(
      ::Interactive::Message::UnregisterCmsCallRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querysharingdevicelimitrsp_usr_value_ = const_cast< ::Interactive::Message::QuerySharingDeviceLimitRsp_USR*>(
      ::Interactive::Message::QuerySharingDeviceLimitRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydevicecapacityrsp_usr_value_ = const_cast< ::Interactive::Message::QueryDeviceCapacityRsp_USR*>(
      ::Interactive::Message::QueryDeviceCapacityRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryalldevicecapacityrsp_usr_value_ = const_cast< ::Interactive::Message::QueryALLDeviceCapacityRsp_USR*>(
      ::Interactive::Message::QueryALLDeviceCapacityRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydevicep2pidrsp_usr_value_ = const_cast< ::Interactive::Message::QueryDeviceP2pIDRsp_USR*>(
      ::Interactive::Message::QueryDeviceP2pIDRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->uploadusercfgrsp_usr_value_ = const_cast< ::Interactive::Message::UploadUserCfgRsp_USR*>(
      ::Interactive::Message::UploadUserCfgRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryusercfgrsp_usr_value_ = const_cast< ::Interactive::Message::QueryUserCfgRsp_USR*>(
      ::Interactive::Message::QueryUserCfgRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getonlinedevinforsp_inner_value_ = const_cast< ::Interactive::Message::GetOnlineDevInfoRsp_INNER*>(
      ::Interactive::Message::GetOnlineDevInfoRsp_INNER::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getonlineuserinforsp_inner_value_ = const_cast< ::Interactive::Message::GetOnlineUserInfoRsp_INNER*>(
      ::Interactive::Message::GetOnlineUserInfoRsp_INNER::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getdeviceaccessrecordrsp_inner_value_ = const_cast< ::Interactive::Message::GetDeviceAccessRecordRsp_INNER*>(
      ::Interactive::Message::GetDeviceAccessRecordRsp_INNER::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getuseraccessrecordrsp_inner_value_ = const_cast< ::Interactive::Message::GetUserAccessRecordRsp_INNER*>(
      ::Interactive::Message::GetUserAccessRecordRsp_INNER::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryuploadurlrsp_mgr_value_ = const_cast< ::Interactive::Message::QueryUploadURLRsp_MGR*>(
      ::Interactive::Message::QueryUploadURLRsp_MGR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->addconfigurationrsp_mgr_value_ = const_cast< ::Interactive::Message::AddConfigurationRsp_MGR*>(
      ::Interactive::Message::AddConfigurationRsp_MGR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deleteconfigurationrsp_mgr_value_ = const_cast< ::Interactive::Message::DeleteConfigurationRsp_MGR*>(
      ::Interactive::Message::DeleteConfigurationRsp_MGR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifyconfigurationrsp_mgr_value_ = const_cast< ::Interactive::Message::ModifyConfigurationRsp_MGR*>(
      ::Interactive::Message::ModifyConfigurationRsp_MGR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryallconfigurationrsp_mgr_value_ = const_cast< ::Interactive::Message::QueryAllConfigurationRsp_MGR*>(
      ::Interactive::Message::QueryAllConfigurationRsp_MGR::internal_default_instance());
  _InteractiveMessage_default_instance_.get_mutable()->reqvalue_ = const_cast< ::Interactive::Message::Req*>(
      ::Interactive::Message::Req::internal_default_instance());
  _InteractiveMessage_default_instance_.get_mutable()->rspvalue_ = const_cast< ::Interactive::Message::Rsp*>(
      ::Interactive::Message::Rsp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031InteractiveProtocol.proto\022\023Interactive"
      ".Message\"8\n\020PermissionOfUser\022\023\n\013uiUnlimi"
      "ted\030\001 \001(\r\022\017\n\007uiWatch\030\002 \001(\r\"\325\001\n\006Device\022\020\n"
      "\010strDevID\030\001 \001(\t\022\022\n\nstrDevName\030\002 \001(\t\022\026\n\016s"
      "trDevPassword\030\003 \001(\t\022\022\n\nuiTypeInfo\030\004 \001(\r\022"
      "\025\n\rstrCreatedate\030\005 \001(\t\022\020\n\010uiStatus\030\006 \001(\r"
      "\022\021\n\tstrExtend\030\007 \001(\t\022\024\n\014strInnerinfo\030\010 \001("
      "\t\022\020\n\010strP2pID\030\t \001(\t\022\025\n\rstrDomainName\030\n \001"
      "(\t\"X\n\014DeviceStatus\022/\n\ndeviceInfo\030\001 \001(\0132\033"
      ".Interactive.Message.Device\022\027\n\017strOnline"
      "Status\030\002 \001(\t\"\277\001\n\004User\022\021\n\tstrUserID\030\001 \001(\t"
      "\022\023\n\013strUserName\030\002 \001(\t\022\027\n\017strUserPassword"
      "\030\003 \001(\t\022\022\n\nuiTypeInfo\030\004 \001(\r\022\025\n\rstrCreated"
      "ate\030\005 \001(\t\022\020\n\010uiStatus\030\006 \001(\r\022\021\n\tstrExtend"
      "\030\007 \001(\t\022\024\n\014strAliasName\030\010 \001(\t\022\020\n\010strEmail"
      "\030\t \001(\t\"\177\n\010Relation\022\021\n\tstrUserID\030\001 \001(\t\022\020\n"
      "\010strDevID\030\002 \001(\t\022\022\n\nuiRelation\030\003 \001(\r\022\024\n\014s"
      "trBeginDate\030\004 \001(\t\022\022\n\nstrEndDate\030\005 \001(\t\022\020\n"
      "\010strValue\030\006 \001(\t\"\236\002\n\004File\022\021\n\tstrFileID\030\001 "
      "\001(\t\022\021\n\tstrUserID\030\002 \001(\t\022\020\n\010strDevID\030\003 \001(\t"
      "\022\027\n\017strRemoteFileID\030\004 \001(\t\022\026\n\016strDownload"
      "Url\030\005 \001(\t\022\023\n\013strFileName\030\006 \001(\t\022\025\n\rstrSuf"
      "fixName\030\007 \001(\t\022\022\n\nuiFileSize\030\010 \001(\004\022\026\n\016uiB"
      "usinessType\030\t \001(\r\022\031\n\021strFileCreatedate\030\n"
      " \001(\t\022\025\n\rstrCreatedate\030\013 \001(\t\022\020\n\010uiStatus\030"
      "\014 \001(\r\022\021\n\tstrExtend\030\r \001(\t\"4\n\007FileUrl\022\021\n\ts"
      "trFileID\030\001 \001(\t\022\026\n\016strDownloadUrl\030\002 \001(\t\"\361"
      "\001\n\022DeviceAccessRecord\022\023\n\013strAccessID\030\001 \001"
      "(\t\022\024\n\014strClusterID\030\002 \001(\t\022\023\n\013strDeviceID\030"
      "\003 \001(\t\022\025\n\rstrDeviceName\030\004 \001(\t\022\024\n\014uiDevice"
      "Type\030\005 \001(\r\022\024\n\014strLoginTime\030\006 \001(\t\022\025\n\rstrL"
      "ogoutTime\030\007 \001(\t\022\030\n\020uiOnlineDuration\030\010 \001("
      "\r\022\025\n\rstrCreateDate\030\t \001(\t\022\020\n\010uiStatus\030\n \001"
      "(\r\"\205\002\n\020UserAccessRecord\022\023\n\013strAccessID\030\001"
      " \001(\t\022\024\n\014strClusterID\030\002 \001(\t\022\021\n\tstrUserID\030"
      "\003 \001(\t\022\023\n\013strUserName\030\004 \001(\t\022\030\n\020strUserAli"
      "asname\030\005 \001(\t\022\024\n\014uiClientType\030\006 \001(\r\022\024\n\014st"
      "rLoginTime\030\007 \001(\t\022\025\n\rstrLogoutTime\030\010 \001(\t\022"
      "\030\n\020uiOnlineDuration\030\t \001(\r\022\025\n\rstrCreateDa"
      "te\030\n \001(\t\022\020\n\010uiStatus\030\013 \001(\r\"\307\002\n\rConfigura"
      "tion\022\023\n\013strCategory\030\001 \001(\t\022\026\n\016strSubCateg"
      "ory\030\002 \001(\t\022\030\n\020strLatestVersion\030\003 \001(\t\022\026\n\016s"
      "trDescription\030\004 \001(\t\022\027\n\017strForceVersion\030\005"
      " \001(\t\022\030\n\020strServerAddress\030\006 \001(\t\022\023\n\013strFil"
      "eName\030\007 \001(\t\022\021\n\tstrFileID\030\010 \001(\t\022\022\n\nuiFile"
      "Size\030\t \001(\r\022\023\n\013strFilePath\030\n \001(\t\022\027\n\017uiLea"
      "seDuration\030\013 \001(\r\022\025\n\rstrUpdateDate\030\014 \001(\t\022"
      "\020\n\010uiStatus\030\r \001(\r\022\021\n\tstrExtend\030\016 \001(\t\"\365\003\n"
      "\021DoorbellParameter\022\027\n\017strDoorbellName\030\001 "
      "\001(\t\022\027\n\017strSerialNumber\030\002 \001(\t\022\030\n\020strDoorb"
      "ellP2Pid\030\003 \001(\t\022\032\n\022strBatteryCapacity\030\004 \001"
      "(\t\022\030\n\020strChargingState\030\005 \001(\t\022\025\n\rstrWifiS"
      "ignal\030\006 \001(\t\022\026\n\016strVolumeLevel\030\007 \001(\t\022\030\n\020s"
      "trVersionNumber\030\010 \001(\t\022\030\n\020strChannelNumbe"
      "r\030\t \001(\t\022\025\n\rstrCodingType\030\n \001(\t\022\031\n\021strPIR"
      "AlarmSwtich\030\013 \001(\t\022\031\n\021strDoorbellSwitch\030\014"
      " \001(\t\022\030\n\020strPIRAlarmLevel\030\r \001(\t\022\035\n\025strPIR"
      "IneffectiveTime\030\016 \001(\t\022\026\n\016strCurrentWifi\030"
      "\017 \001(\t\022\026\n\016strSubCategory\030\020 \001(\t\022\026\n\016strDist"
      "urbMode\030\021 \001(\t\022\032\n\022strAntiTheftSwitch\030\022 \001("
      "\t\022\021\n\tstrExtend\030\023 \001(\t\"\317\001\n\013DeviceEvent\022\023\n\013"
      "strDeviceID\030\001 \001(\t\022\024\n\014uiDeviceType\030\002 \001(\r\022"
      "\022\n\nstrEventID\030\003 \001(\t\022\023\n\013uiEventType\030\004 \001(\r"
      "\022\024\n\014uiEventState\030\005 \001(\r\022\022\n\nstrFileUrl\030\006 \001"
      "(\t\022\024\n\014strEventTime\030\007 \001(\t\022\023\n\013uiReadState\030"
      "\010 \001(\r\022\027\n\017strThumbnailUrl\030\t \001(\t\"\327\002\n\rStora"
      "geDetail\022\022\n\nuiDomainID\030\001 \001(\r\022\023\n\013strObjec"
      "tID\030\002 \001(\t\022\024\n\014uiObjectType\030\003 \001(\r\022\026\n\016strSt"
      "orageName\030\004 \001(\t\022\025\n\ruiStorageType\030\005 \001(\r\022\025"
      "\n\ruiOverlapType\030\006 \001(\r\022\034\n\024uiStorageTimeUp"
      "Limit\030\007 \001(\r\022\036\n\026uiStorageTimeDownLimit\030\010 "
      "\001(\r\022\031\n\021uiSizeOfSpaceUsed\030\t \001(\r\022\031\n\021uiStor"
      "ageUnitType\030\n \001(\r\022\024\n\014strBeginDate\030\013 \001(\t\022"
      "\022\n\nstrEndDate\030\014 \001(\t\022\021\n\tstrExtend\030\r \001(\t\022\020"
      "\n\010uiStatus\030\016 \001(\r\"<\n\016DeviceCapacity\022\021\n\tui"
      "DevType\030\001 \001(\r\022\027\n\017strCapacityList\030\002 \003(\t\"="
      "\n\027GetAccessAddressReq_DEV\022\020\n\010strDevID\030\001 "
      "\001(\t\022\020\n\010strValue\030\002 \001(\t\"\\\n\027GetAccessAddres"
      "sRsp_DEV\022\030\n\020strAccessAddress\030\001 \001(\t\022\025\n\rst"
      "rAccessPort\030\002 \001(\t\022\020\n\010strValue\030\003 \001(\t\"\251\002\n\014"
      "LoginReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\023\n\013strPas"
      "sword\030\002 \001(\t\022\024\n\014uiDeviceType\030\003 \001(\r\022\025\n\ruiP"
      "2pSupplier\030\004 \001(\r\022\020\n\010strP2pID\030\005 \001(\t\022\024\n\014st"
      "rP2pServer\030\006 \001(\t\022\024\n\014uiP2pBuildin\030\007 \001(\r\022\023"
      "\n\013strUserName\030\010 \001(\t\022\027\n\017strUserPassword\030\t"
      " \001(\t\022\026\n\016strDistributor\030\n \001(\t\022\030\n\020strOther"
      "Property\030\013 \001(\t\022\025\n\rstrDomainName\030\014 \001(\t\022\020\n"
      "\010strValue\030\r \001(\t\" \n\014LoginRsp_DEV\022\020\n\010strVa"
      "lue\030\002 \001(\t\"3\n\rLogoutReq_DEV\022\020\n\010strDevID\030\001"
      " \001(\t\022\020\n\010strValue\030\002 \001(\t\"!\n\rLogoutRsp_DEV\022"
      "\020\n\010strValue\030\001 \001(\t\"6\n\020ShakehandReq_DEV\022\020\n"
      "\010strDevID\030\001 \001(\t\022\020\n\010strValue\030\003 \001(\t\"$\n\020Sha"
      "kehandRsp_DEV\022\020\n\010strValue\030\001 \001(\t\"7\n\021Confi"
      "gInfoReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\020\n\010strVal"
      "ue\030\002 \001(\t\"<\n\021ConfigInfoRsp_DEV\022\025\n\rstrConf"
      "igInfo\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"l\n\025Storag"
      "eAddressReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\025\n\ruiS"
      "torageType\030\002 \001(\r\022\027\n\017uiStorageAction\030\003 \001("
      "\r\022\021\n\tstrFileID\030\004 \001(\t\";\n\025StorageAddressRs"
      "p_DEV\022\022\n\nstrAddress\030\001 \001(\t\022\016\n\006uiPort\030\002 \001("
      "\r\"i\n\016P2pInfoReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\027\n"
      "\017strDevIpAddress\030\002 \001(\t\022\025\n\ruiP2pSupplier\030"
      "\003 \001(\r\022\025\n\rstrDomainName\030\004 \001(\t\"s\n\016P2pInfoR"
      "sp_DEV\022\024\n\014strP2pServer\030\001 \001(\t\022\020\n\010strP2pID"
      "\030\002 \001(\t\022\017\n\007uiLease\030\003 \001(\r\022\025\n\rstrLicenseKey"
      "\030\004 \001(\t\022\021\n\tstrPushID\030\005 \001(\t\"a\n\016AddFileReq_"
      "DEV\022\020\n\010strDevID\030\001 \001(\t\022+\n\010fileInfo\030\002 \003(\0132"
      "\031.Interactive.Message.File\022\020\n\010strValue\030\003"
      " \001(\t\";\n\016AddFileRsp_DEV\022\020\n\010strValue\030\001 \001(\t"
      "\022\027\n\017strFileIDFailed\030\002 \003(\t\"A\n\024QueryTimeZo"
      "neReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\027\n\017strDevIpA"
      "ddress\030\002 \001(\t\"w\n\024QueryTimeZoneRsp_DEV\022\026\n\016"
      "strCountryCode\030\001 \001(\t\022\030\n\020strCountryNameEn"
      "\030\002 \001(\t\022\030\n\020strCountryNameZh\030\003 \001(\t\022\023\n\013strT"
      "imeZone\030\004 \001(\t\"s\n\034QueryAccessDomainNameRe"
      "q_DEV\022\027\n\017strDevIpAddress\030\001 \001(\t\022\020\n\010strDev"
      "ID\030\002 \001(\t\022\026\n\016uiBusinessType\030\003 \001(\r\022\020\n\010strV"
      "alue\030\004 \001(\t\"X\n\034QueryAccessDomainNameRsp_D"
      "EV\022\025\n\rstrDomainName\030\001 \001(\t\022\017\n\007uiLease\030\002 \001"
      "(\r\022\020\n\010strValue\030\003 \001(\t\"D\n\027QueryUpgradeSite"
      "Req_DEV\022\020\n\010strDevID\030\001 \001(\t\022\027\n\017strDevIpAdd"
      "ress\030\002 \001(\t\"E\n\027QueryUpgradeSiteRsp_DEV\022\031\n"
      "\021strUpgradeSiteUrl\030\001 \001(\t\022\017\n\007uiLease\030\002 \001("
      "\r\"z\n\033QueryFirmwareUpgradeReq_DEV\022\023\n\013strC"
      "ategory\030\001 \001(\t\022\026\n\016strSubCategory\030\002 \001(\t\022\031\n"
      "\021strCurrentVersion\030\003 \001(\t\022\023\n\013strDeviceID\030"
      "\004 \001(\t\"\335\001\n\033QueryFirmwareUpgradeRsp_DEV\022\031\n"
      "\021uiNewVersionValid\030\001 \001(\r\022\027\n\017strFirmwareN"
      "ame\030\002 \001(\t\022\027\n\017strFirmwarePath\030\003 \001(\t\022\026\n\016ui"
      "FirmwareSize\030\004 \001(\r\022\022\n\nstrVersion\030\005 \001(\t\022\026"
      "\n\016strDescription\030\006 \001(\t\022\026\n\016uiForceUpgrade"
      "\030\007 \001(\r\022\025\n\rstrUpdateDate\030\010 \001(\t\"\253\004\n\033Modify"
      "DevicePropertyReq_DEV\022\023\n\013strDeviceID\030\001 \001"
      "(\t\022\025\n\rstrDomainName\030\002 \001(\t\022\021\n\tstrCorpID\030\003"
      " \001(\t\022\025\n\rstrDeviceName\030\004 \001(\t\022\023\n\013strDevice"
      "IP\030\005 \001(\t\022\022\n\nstrWebPort\030\006 \001(\t\022\023\n\013strCtrlP"
      "ort\030\007 \001(\t\022\023\n\013strProtocol\030\010 \001(\t\022\020\n\010strMod"
      "el\030\t \001(\t\022\030\n\020strPostFrequency\030\n \001(\t\022\022\n\nst"
      "rVersion\030\013 \001(\t\022\027\n\017strDeviceStatus\030\014 \001(\t\022"
      "\023\n\013strServerIP\030\r \001(\t\022\025\n\rstrServerPort\030\016 "
      "\001(\t\022\023\n\013strTransfer\030\017 \001(\t\022\025\n\rstrMobilePor"
      "t\030\020 \001(\t\022\027\n\017strChannelCount\030\021 \001(\t\022\020\n\010strP"
      "2pID\030\022 \001(\t\022\024\n\014strDeviceIP2\030\023 \001(\t\022\024\n\014uiDe"
      "viceType\030\024 \001(\r\022\030\n\020strRequestSource\030\025 \001(\t"
      "\022A\n\021doorbellParameter\030\026 \001(\0132&.Interactiv"
      "e.Message.DoorbellParameter\"/\n\033ModifyDev"
      "icePropertyRsp_DEV\022\020\n\010strValue\030\001 \001(\t\"^\n\033"
      "QueryDeviceParameterReq_DEV\022\023\n\013strDevice"
      "ID\030\001 \001(\t\022\024\n\014uiDeviceType\030\002 \001(\r\022\024\n\014strQue"
      "ryType\030\003 \001(\t\"`\n\033QueryDeviceParameterRsp_"
      "DEV\022A\n\021doorbellParameter\030\001 \001(\0132&.Interac"
      "tive.Message.DoorbellParameter\"5\n\036QueryP"
      "latformPushStatusReq_DEV\022\023\n\013strDeviceID\030"
      "\001 \001(\t\"3\n\036QueryPlatformPushStatusRsp_DEV\022"
      "\021\n\tstrStatus\030\001 \001(\t\"\231\001\n\030DeviceEventReport"
      "Req_DEV\022\023\n\013strDeviceID\030\001 \001(\t\022\024\n\014uiDevice"
      "Type\030\002 \001(\r\022\023\n\013uiEventType\030\003 \001(\r\022\024\n\014uiEve"
      "ntState\030\004 \001(\r\022\021\n\tstrFileID\030\005 \001(\t\022\024\n\014strE"
      "ventTime\030\006 \001(\t\".\n\030DeviceEventReportRsp_D"
      "EV\022\022\n\nstrEventID\030\001 \001(\t\"(\n\024MsgPreHandlerR"
      "eq_USR\022\020\n\010strValue\030\001 \001(\t\"(\n\024MsgPreHandle"
      "rRsp_USR\022\020\n\010strValue\030\001 \001(\t\"C\n\027GetAccessA"
      "ddressReq_USR\022\026\n\016strSerializeID\030\001 \001(\t\022\020\n"
      "\010strValue\030\002 \001(\t\"\\\n\027GetAccessAddressRsp_U"
      "SR\022\030\n\020strAccessAddress\030\001 \001(\t\022\025\n\rstrAcces"
      "sPort\030\002 \001(\t\022\020\n\010strValue\030\003 \001(\t\"T\n\023Registe"
      "rUserReq_USR\022+\n\010userInfo\030\001 \001(\0132\031.Interac"
      "tive.Message.User\022\020\n\010strValue\030\002 \001(\t\":\n\023R"
      "egisterUserRsp_USR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n"
      "\010strValue\030\002 \001(\t\"V\n\025UnRegisterUserReq_USR"
      "\022+\n\010userInfo\030\001 \001(\0132\031.Interactive.Message"
      ".User\022\020\n\010strValue\030\002 \001(\t\"<\n\025UnRegisterUse"
      "rRsp_USR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010strValue\030"
      "\002 \001(\t\":\n\023QueryUsrInfoReq_USR\022\021\n\tstrUserI"
      "D\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"T\n\023QueryUsrInf"
      "oRsp_USR\022+\n\010userInfo\030\001 \001(\0132\031.Interactive"
      ".Message.User\022\020\n\010strValue\030\002 \001(\t\"W\n\025Modif"
      "yUserInfoReq_USR\022\021\n\tstrOldPwd\030\001 \001(\t\022+\n\010u"
      "serInfo\030\002 \001(\0132\031.Interactive.Message.User"
      "\")\n\025ModifyUserInfoRsp_USR\022\020\n\010strValue\030\001 "
      "\001(\t\"K\n\022RetrievePwdReq_USR\022\023\n\013strUserName"
      "\030\001 \001(\t\022\020\n\010strEmail\030\002 \001(\t\022\016\n\006uiType\030\003 \001(\r"
      "\"&\n\022RetrievePwdRsp_USR\022\020\n\010strValue\030\001 \001(\t"
      "\"u\n\014LoginReq_USR\022+\n\010userInfo\030\001 \001(\0132\031.Int"
      "eractive.Message.User\022\026\n\016uiTerminalType\030"
      "\002 \001(\r\022\020\n\010strValue\030\003 \001(\t\022\016\n\006uiType\030\004 \001(\r\""
      "|\n\014LoginRsp_USR\022\021\n\tstrUserID\030\001 \001(\t\0223\n\014re"
      "lationInfo\030\002 \003(\0132\035.Interactive.Message.R"
      "elation\022\020\n\010strValue\030\003 \001(\t\022\022\n\nstrDevName\030"
      "\004 \003(\t\"N\n\rLogoutReq_USR\022+\n\010userInfo\030\001 \001(\013"
      "2\031.Interactive.Message.User\022\020\n\010strValue\030"
      "\002 \001(\t\"!\n\rLogoutRsp_USR\022\020\n\010strValue\030\001 \001(\t"
      "\"7\n\020ShakehandReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022"
      "\020\n\010strValue\030\002 \001(\t\"$\n\020ShakehandRsp_USR\022\020\n"
      "\010strValue\030\001 \001(\t\"8\n\021ConfigInfoReq_USR\022\021\n\t"
      "strUserID\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"7\n\021Con"
      "figInfoRsp_USR\022\020\n\010strValue\030\001 \001(\t\022\020\n\010strI"
      "tems\030\002 \003(\t\"P\n\rAddDevReq_USR\022\021\n\tstrUserID"
      "\030\001 \001(\t\022,\n\007devInfo\030\002 \001(\0132\033.Interactive.Me"
      "ssage.Device\"6\n\rAddDevRsp_USR\022\023\n\013strDevi"
      "ceID\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"4\n\rDelDevRe"
      "q_USR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010strDevID\030\002 \003"
      "(\t\"9\n\rDelDevRsp_USR\022\020\n\010strValue\030\001 \001(\t\022\026\n"
      "\016strDevIDFailed\030\002 \003(\t\"k\n\020ModifyDevReq_US"
      "R\022\021\n\tstrUserID\030\001 \001(\t\022,\n\007devInfo\030\002 \001(\0132\033."
      "Interactive.Message.Device\022\026\n\016uiDeviceSh"
      "ared\030\003 \001(\r\"$\n\020ModifyDevRsp_USR\022\020\n\010strVal"
      "ue\030\001 \001(\t\"d\n\023QueryDevInfoReq_USR\022\021\n\tstrUs"
      "erID\030\001 \001(\t\022\020\n\010strDevID\030\002 \001(\t\022\026\n\016uiDevice"
      "Shared\030\003 \001(\r\022\020\n\010strValue\030\004 \001(\t\"\231\001\n\023Query"
      "DevInfoRsp_USR\022,\n\007devInfo\030\001 \001(\0132\033.Intera"
      "ctive.Message.Device\022\022\n\nstrVersion\030\002 \001(\t"
      "\022\027\n\017strOnlineStatus\030\003 \001(\t\022\025\n\rstrUpdateDa"
      "te\030\004 \001(\t\022\020\n\010strValue\030\005 \001(\t\"L\n\017QueryDevRe"
      "q_USR\022\021\n\tstrUserID\030\001 \001(\t\022\024\n\014uiBeginIndex"
      "\030\002 \001(\r\022\020\n\010strValue\030\003 \001(\t\"]\n\017QueryDevRsp_"
      "USR\0226\n\017allRelationInfo\030\001 \003(\0132\035.Interacti"
      "ve.Message.Relation\022\022\n\nstrDevName\030\002 \003(\t\""
      "L\n\020QueryUserReq_USR\022\020\n\010strDevID\030\001 \001(\t\022\024\n"
      "\014uiBeginIndex\030\002 \001(\r\022\020\n\010strValue\030\003 \001(\t\"_\n"
      "\020QueryUserRsp_USR\0226\n\017allRelationInfo\030\001 \003"
      "(\0132\035.Interactive.Message.Relation\022\023\n\013str"
      "UserName\030\002 \003(\t\"o\n\021SharingDevReq_USR\0223\n\014r"
      "elationInfo\030\001 \001(\0132\035.Interactive.Message."
      "Relation\022\023\n\013strUserName\030\002 \001(\t\022\020\n\010strValu"
      "e\030\003 \001(\t\"%\n\021SharingDevRsp_USR\022\020\n\010strValue"
      "\030\001 \001(\t\"_\n\026CancelSharedDevReq_USR\0223\n\014rela"
      "tionInfo\030\001 \001(\0132\035.Interactive.Message.Rel"
      "ation\022\020\n\010strValue\030\002 \001(\t\"*\n\026CancelSharedD"
      "evRsp_USR\022\020\n\010strValue\030\001 \001(\t\"\?\n\021AddFriend"
      "sReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\027\n\017strFriend"
      "UserID\030\002 \001(\t\"%\n\021AddFriendsRsp_USR\022\020\n\010str"
      "Value\030\001 \001(\t\"\?\n\021DelFriendsReq_USR\022\021\n\tstrU"
      "serID\030\001 \001(\t\022\027\n\017strFriendUserID\030\002 \003(\t\"D\n\021"
      "DelFriendsRsp_USR\022\020\n\010strValue\030\001 \001(\t\022\035\n\025s"
      "trFriendUserIDFailed\030\002 \003(\t\"P\n\023QueryFrien"
      "dsReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\024\n\014uiBeginI"
      "ndex\030\002 \001(\r\022\020\n\010strValue\030\003 \001(\t\"1\n\023QueryFri"
      "endsRsp_USR\022\032\n\022strAllFriendUserID\030\001 \003(\t\""
      "m\n\025StorageAddressReq_USR\022\021\n\tstrUserID\030\001 "
      "\001(\t\022\025\n\ruiStorageType\030\002 \001(\r\022\027\n\017uiStorageA"
      "ction\030\003 \001(\r\022\021\n\tstrFileID\030\004 \001(\t\";\n\025Storag"
      "eAddressRsp_USR\022\022\n\nstrAddress\030\001 \001(\t\022\016\n\006u"
      "iPort\030\002 \001(\r\"f\n\016P2pInfoReq_USR\022\021\n\tstrUser"
      "ID\030\001 \001(\t\022\030\n\020strUserIpAddress\030\002 \001(\t\022\020\n\010st"
      "rDevID\030\003 \001(\t\022\025\n\ruiP2pSupplier\030\004 \001(\r\"s\n\016P"
      "2pInfoRsp_USR\022\024\n\014strP2pServer\030\001 \001(\t\022\020\n\010s"
      "trP2pID\030\002 \001(\t\022\017\n\007uiLease\030\003 \001(\r\022\025\n\rstrLic"
      "enseKey\030\004 \001(\t\022\021\n\tstrPushID\030\005 \001(\t\"9\n\021Dele"
      "teFileReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\021\n\tstrF"
      "ileID\030\002 \003(\t\">\n\021DeleteFileRsp_USR\022\020\n\010strV"
      "alue\030\001 \001(\t\022\027\n\017strFileIDFailed\030\002 \003(\t\";\n\023D"
      "ownloadFileReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\021\n"
      "\tstrFileID\030\002 \003(\t\"V\n\023DownloadFileRsp_USR\022"
      "\020\n\010strValue\030\001 \001(\t\022-\n\007fileUrl\030\002 \003(\0132\034.Int"
      "eractive.Message.FileUrl\"\241\001\n\020QueryFileRe"
      "q_USR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010strDevID\030\002 \001"
      "(\t\022\024\n\014uiBeginIndex\030\003 \001(\r\022\024\n\014strBeginDate"
      "\030\004 \001(\t\022\022\n\nstrEndDate\030\005 \001(\t\022\026\n\016uiBusiness"
      "Type\030\006 \001(\r\022\020\n\010strValue\030\007 \001(\t\"Q\n\020QueryFil"
      "eRsp_USR\022\020\n\010strValue\030\001 \001(\t\022+\n\010fileInfo\030\002"
      " \003(\0132\031.Interactive.Message.File\"w\n\034Query"
      "AccessDomainNameReq_USR\022\030\n\020strUserIpAddr"
      "ess\030\001 \001(\t\022\023\n\013strUsername\030\002 \001(\t\022\026\n\016uiBusi"
      "nessType\030\003 \001(\r\022\020\n\010strValue\030\004 \001(\t\"X\n\034Quer"
      "yAccessDomainNameRsp_USR\022\025\n\rstrDomainNam"
      "e\030\001 \001(\t\022\017\n\007uiLease\030\002 \001(\r\022\020\n\010strValue\030\003 \001"
      "(\t\"`\n\026QueryAppUpgradeReq_USR\022\023\n\013strCateg"
      "ory\030\001 \001(\t\022\026\n\016strSubCategory\030\002 \001(\t\022\031\n\021str"
      "CurrentVersion\030\003 \001(\t\"\311\001\n\026QueryAppUpgrade"
      "Rsp_USR\022\031\n\021uiNewVersionValid\030\001 \001(\r\022\022\n\nst"
      "rAppName\030\002 \001(\t\022\022\n\nstrAppPath\030\003 \001(\t\022\021\n\tui"
      "AppSize\030\004 \001(\r\022\022\n\nstrVersion\030\005 \001(\t\022\026\n\016str"
      "Description\030\006 \001(\t\022\026\n\016uiForceUpgrade\030\007 \001("
      "\r\022\025\n\rstrUpdateDate\030\010 \001(\t\"\?\n\030QueryIfP2pID"
      "ValidReq_USR\022\020\n\010strP2pID\030\001 \001(\t\022\021\n\tuiP2pT"
      "ype\030\002 \001(\r\",\n\030QueryIfP2pIDValidRsp_USR\022\020\n"
      "\010strValue\030\001 \001(\t\"\306\001\n\032QueryAllDeviceEventR"
      "eq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\023\n\013strDeviceID"
      "\030\002 \001(\t\022\026\n\016uiDeviceShared\030\003 \001(\r\022\023\n\013uiEven"
      "tType\030\004 \001(\r\022\023\n\013uiReadState\030\005 \001(\r\022\024\n\014uiBe"
      "ginIndex\030\006 \001(\r\022\024\n\014strBeginDate\030\007 \001(\t\022\022\n\n"
      "strEndDate\030\010 \001(\t\"S\n\032QueryAllDeviceEventR"
      "sp_USR\0225\n\013deviceEvent\030\001 \003(\0132 .Interactiv"
      "e.Message.DeviceEvent\"V\n\030DeleteDeviceEve"
      "ntReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\023\n\013strDevic"
      "eID\030\002 \001(\t\022\022\n\nstrEventID\030\003 \001(\t\",\n\030DeleteD"
      "eviceEventRsp_USR\022\020\n\010strValue\030\001 \001(\t\"\300\001\n\030"
      "ModifyDeviceEventReq_USR\022\021\n\tstrUserID\030\001 "
      "\001(\t\022\023\n\013strDeviceID\030\002 \001(\t\022\022\n\nstrEventID\030\003"
      " \001(\t\022\023\n\013uiEventType\030\004 \001(\r\022\024\n\014uiEventStat"
      "e\030\005 \001(\r\022\025\n\rstrUpdateTime\030\006 \001(\t\022\021\n\tstrFil"
      "eID\030\007 \001(\t\022\023\n\013uiReadState\030\010 \001(\r\",\n\030Modify"
      "DeviceEventRsp_USR\022\020\n\010strValue\030\001 \001(\t\"T\n\027"
      "AddStorageDetailReq_USR\0229\n\rstorageDetail"
      "\030\001 \001(\0132\".Interactive.Message.StorageDeta"
      "il\"+\n\027AddStorageDetailRsp_USR\022\020\n\010strValu"
      "e\030\001 \001(\t\"E\n\032DeleteStorageDetailReq_USR\022\023\n"
      "\013strObjectID\030\001 \001(\t\022\022\n\nuiDomainID\030\002 \001(\r\"."
      "\n\032DeleteStorageDetailRsp_USR\022\020\n\010strValue"
      "\030\001 \001(\t\"W\n\032ModifyStorageDetailReq_USR\0229\n\r"
      "storageDetail\030\001 \001(\0132\".Interactive.Messag"
      "e.StorageDetail\".\n\032ModifyStorageDetailRs"
      "p_USR\022\020\n\010strValue\030\001 \001(\t\"D\n\031QueryStorageD"
      "etailReq_USR\022\023\n\013strObjectID\030\001 \001(\t\022\022\n\nuiD"
      "omainID\030\002 \001(\r\"V\n\031QueryStorageDetailRsp_U"
      "SR\0229\n\rstorageDetail\030\001 \001(\0132\".Interactive."
      "Message.StorageDetail\"2\n\035QueryRegionStor"
      "ageInfoReq_USR\022\021\n\tstrUserID\030\001 \001(\t\"e\n\035Que"
      "ryRegionStorageInfoRsp_USR\022\022\n\nuiDomainID"
      "\030\001 \001(\r\022\025\n\ruiSizeOfSpace\030\002 \001(\r\022\031\n\021uiSizeO"
      "fSpaceUsed\030\003 \001(\r\"2\n\033QueryDeviceInfoMulti"
      "Req_USR\022\023\n\013strDeviceID\030\001 \003(\t\"V\n\033QueryDev"
      "iceInfoMultiRsp_USR\0227\n\014deviceStatus\030\001 \003("
      "\0132!.Interactive.Message.DeviceStatus\"q\n\026"
      "RegisterCmsCallReq_USR\022\020\n\010strCmsID\030\001 \001(\t"
      "\022\027\n\017strCmsP2pIDList\030\002 \003(\t\022\024\n\014strDeviceMa"
      "c\030\003 \001(\t\022\026\n\016strDeviceP2pID\030\004 \001(\t\"Y\n\026Regis"
      "terCmsCallRsp_USR\022\022\n\nstrAddress\030\001 \001(\t\022\017\n"
      "\007strPort\030\002 \001(\t\022\032\n\022strP2pIDFailedList\030\003 \003"
      "(\t\",\n\030UnregisterCmsCallReq_USR\022\020\n\010strCms"
      "ID\030\001 \001(\t\",\n\030UnregisterCmsCallRsp_USR\022\020\n\010"
      "strValue\030\001 \001(\t\"3\n\036QuerySharingDeviceLimi"
      "tReq_USR\022\021\n\tstrUserID\030\001 \001(\t\"N\n\036QueryShar"
      "ingDeviceLimitRsp_USR\022\031\n\021uiCurrentLimitN"
      "um\030\001 \001(\r\022\021\n\tuiUsedNum\030\002 \001(\r\"B\n\032QueryDevi"
      "ceCapacityReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\021\n\t"
      "uiDevType\030\002 \001(\r\"Q\n\032QueryDeviceCapacityRs"
      "p_USR\0223\n\006DevCap\030\001 \001(\0132#.Interactive.Mess"
      "age.DeviceCapacity\"2\n\035QueryALLDeviceCapa"
      "cityReq_USR\022\021\n\tstrUserID\030\001 \001(\t\"X\n\035QueryA"
      "LLDeviceCapacityRsp_USR\0227\n\nDevCapList\030\001 "
      "\003(\0132#.Interactive.Message.DeviceCapacity"
      "\"0\n\027QueryDeviceP2pIDReq_USR\022\025\n\rstrDomain"
      "Name\030\001 \001(\t\"\256\001\n\027QueryDeviceP2pIDRsp_USR\022\025"
      "\n\rstrUpdateTime\030\001 \001(\t\022\022\n\nstrWebPort\030\002 \001("
      "\t\022\025\n\rstrMobilePort\030\003 \001(\t\022\027\n\017strChannelCo"
      "unt\030\004 \001(\t\022\023\n\013strDeviceSN\030\005 \001(\t\022\020\n\010strP2p"
      "ID\030\006 \001(\t\022\021\n\tstrExtend\030\007 \001(\t\"g\n\024UploadUse"
      "rCfgReq_USR\022\026\n\016uiBusinessType\030\001 \001(\r\022\021\n\ts"
      "trUserID\030\002 \001(\t\022\021\n\tstrFileID\030\003 \001(\t\022\021\n\tstr"
      "Extend\030\004 \001(\t\"*\n\024UploadUserCfgRsp_USR\022\022\n\n"
      "strVersion\030\001 \001(\t\"@\n\023QueryUserCfgReq_USR\022"
      "\026\n\016uiBusinessType\030\001 \001(\r\022\021\n\tstrUserID\030\002 \001"
      "(\t\"O\n\023QueryUserCfgRsp_USR\022\021\n\tstrCfgURL\030\001"
      " \001(\t\022\022\n\nstrVersion\030\002 \001(\t\022\021\n\tstrExtend\030\003 "
      "\001(\t\")\n\025QueryUploadURLReq_MGR\022\020\n\010strValue"
      "\030\001 \001(\t\"-\n\025QueryUploadURLRsp_MGR\022\024\n\014strUp"
      "loadURL\030\001 \001(\t\"X\n\027AddConfigurationReq_MGR"
      "\022=\n\021configurationInfo\030\001 \001(\0132\".Interactiv"
      "e.Message.Configuration\"+\n\027AddConfigurat"
      "ionRsp_MGR\022\020\n\010strValue\030\001 \001(\t\"I\n\032DeleteCo"
      "nfigurationReq_MGR\022\023\n\013strCategory\030\001 \001(\t\022"
      "\026\n\016strSubCategory\030\002 \001(\t\".\n\032DeleteConfigu"
      "rationRsp_MGR\022\020\n\010strValue\030\001 \001(\t\"[\n\032Modif"
      "yConfigurationReq_MGR\022=\n\021configurationIn"
      "fo\030\001 \001(\0132\".Interactive.Message.Configura"
      "tion\".\n\032ModifyConfigurationRsp_MGR\022\020\n\010st"
      "rValue\030\001 \001(\t\"4\n\034QueryAllConfigurationReq"
      "_MGR\022\024\n\014uiBeginIndex\030\001 \001(\r\"]\n\034QueryAllCo"
      "nfigurationRsp_MGR\022=\n\021configurationInfo\030"
      "\001 \003(\0132\".Interactive.Message.Configuratio"
      "n\"-\n\031GetOnlineDevInfoReq_INNER\022\020\n\010strVal"
      "ue\030\001 \001(\t\"[\n\031GetOnlineDevInfoRsp_INNER\022,\n"
      "\007devInfo\030\001 \003(\0132\033.Interactive.Message.Dev"
      "ice\022\020\n\010strValue\030\002 \001(\t\"^\n\034BroadcastOnline"
      "DevInfo_INNER\022,\n\007devInfo\030\001 \003(\0132\033.Interac"
      "tive.Message.Device\022\020\n\010strValue\030\002 \001(\t\".\n"
      "\032GetOnlineUserInfoReq_INNER\022\020\n\010strValue\030"
      "\001 \001(\t\"[\n\032GetOnlineUserInfoRsp_INNER\022+\n\010u"
      "serInfo\030\001 \003(\0132\031.Interactive.Message.User"
      "\022\020\n\010strValue\030\002 \001(\t\"^\n\035BroadcastOnlineUse"
      "rInfo_INNER\022+\n\010userInfo\030\001 \003(\0132\031.Interact"
      "ive.Message.User\022\020\n\010strValue\030\002 \001(\t\"6\n\036Ge"
      "tDeviceAccessRecordReq_INNER\022\024\n\014uiBeginI"
      "ndex\030\001 \001(\r\"|\n\036GetDeviceAccessRecordRsp_I"
      "NNER\022C\n\022deviceAccessRecord\030\001 \003(\0132\'.Inter"
      "active.Message.DeviceAccessRecord\022\025\n\ruiR"
      "ecordTotal\030\002 \001(\r\"4\n\034GetUserAccessRecordR"
      "eq_INNER\022\024\n\014uiBeginIndex\030\001 \001(\r\"v\n\034GetUse"
      "rAccessRecordRsp_INNER\022\?\n\020userAccessReco"
      "rd\030\001 \003(\0132%.Interactive.Message.UserAcces"
      "sRecord\022\025\n\ruiRecordTotal\030\002 \001(\r\"\362/\n\003Req\022S"
      "\n\035GetAccessAddressReq_DEV_Value\030\n \001(\0132,."
      "Interactive.Message.GetAccessAddressReq_"
      "DEV\022=\n\022LoginReq_DEV_Value\030\024 \001(\0132!.Intera"
      "ctive.Message.LoginReq_DEV\022\?\n\023LogoutReq_"
      "DEV_Value\030\036 \001(\0132\".Interactive.Message.Lo"
      "goutReq_DEV\022E\n\026ShakehandReq_DEV_Value\030( "
      "\001(\0132%.Interactive.Message.ShakehandReq_D"
      "EV\022G\n\027ConfigInfoReq_DEV_Value\0302 \001(\0132&.In"
      "teractive.Message.ConfigInfoReq_DEV\022O\n\033S"
      "torageAddressReq_DEV_Value\0304 \001(\0132*.Inter"
      "active.Message.StorageAddressReq_DEV\022A\n\024"
      "P2pInfoReq_DEV_Value\0306 \001(\0132#.Interactive"
      ".Message.P2pInfoReq_DEV\022A\n\024AddFileReq_DE"
      "V_Value\030< \001(\0132#.Interactive.Message.AddF"
      "ileReq_DEV\022M\n\032QueryTimeZoneReq_DEV_Value"
      "\030= \001(\0132).Interactive.Message.QueryTimeZo"
      "neReq_DEV\022]\n\"QueryAccessDomainNameReq_DE"
      "V_Value\030> \001(\01321.Interactive.Message.Quer"
      "yAccessDomainNameReq_DEV\022S\n\035QueryUpgrade"
      "SiteReq_DEV_Value\030\? \001(\0132,.Interactive.Me"
      "ssage.QueryUpgradeSiteReq_DEV\022[\n!QueryFi"
      "rmwareUpgradeReq_DEV_Value\030@ \001(\01320.Inter"
      "active.Message.QueryFirmwareUpgradeReq_D"
      "EV\022\\\n!ModifyDevicePropertyReq_DEV_Value\030"
      "\240\006 \001(\01320.Interactive.Message.ModifyDevic"
      "ePropertyReq_DEV\022\\\n!QueryDeviceParameter"
      "Req_DEV_Value\030\252\006 \001(\01320.Interactive.Messa"
      "ge.QueryDeviceParameterReq_DEV\022b\n$QueryP"
      "latformPushStatusReq_DEV_Value\030\204\007 \001(\01323."
      "Interactive.Message.QueryPlatformPushSta"
      "tusReq_DEV\022V\n\036DeviceEventReportReq_DEV_V"
      "alue\030\350\007 \001(\0132-.Interactive.Message.Device"
      "EventReportReq_DEV\022M\n\032MsgPreHandlerReq_U"
      "SR_Value\030A \001(\0132).Interactive.Message.Msg"
      "PreHandlerReq_USR\022S\n\035GetAccessAddressReq"
      "_USR_Value\030F \001(\0132,.Interactive.Message.G"
      "etAccessAddressReq_USR\022K\n\031RegisterUserRe"
      "q_USR_Value\030P \001(\0132(.Interactive.Message."
      "RegisterUserReq_USR\022O\n\033UnRegisterUserReq"
      "_USR_Value\030Z \001(\0132*.Interactive.Message.U"
      "nRegisterUserReq_USR\022K\n\031QueryUsrInfoReq_"
      "USR_Value\030d \001(\0132(.Interactive.Message.Qu"
      "eryUsrInfoReq_USR\022O\n\033ModifyUserInfoReq_U"
      "SR_Value\030f \001(\0132*.Interactive.Message.Mod"
      "ifyUserInfoReq_USR\022I\n\030RetrievePwdReq_USR"
      "_Value\030h \001(\0132\'.Interactive.Message.Retri"
      "evePwdReq_USR\022=\n\022LoginReq_USR_Value\030n \001("
      "\0132!.Interactive.Message.LoginReq_USR\022\?\n\023"
      "LogoutReq_USR_Value\030x \001(\0132\".Interactive."
      "Message.LogoutReq_USR\022F\n\026ShakehandReq_US"
      "R_Value\030\202\001 \001(\0132%.Interactive.Message.Sha"
      "kehandReq_USR\022H\n\027ConfigInfoReq_USR_Value"
      "\030\214\001 \001(\0132&.Interactive.Message.ConfigInfo"
      "Req_USR\022@\n\023AddDevReq_USR_Value\030\226\001 \001(\0132\"."
      "Interactive.Message.AddDevReq_USR\022@\n\023Del"
      "DevReq_USR_Value\030\240\001 \001(\0132\".Interactive.Me"
      "ssage.DelDevReq_USR\022F\n\026ModifyDevReq_USR_"
      "Value\030\252\001 \001(\0132%.Interactive.Message.Modif"
      "yDevReq_USR\022L\n\031QueryDevInfoReq_USR_Value"
      "\030\264\001 \001(\0132(.Interactive.Message.QueryDevIn"
      "foReq_USR\022D\n\025QueryDevReq_USR_Value\030\276\001 \001("
      "\0132$.Interactive.Message.QueryDevReq_USR\022"
      "F\n\026QueryUserReq_USR_Value\030\310\001 \001(\0132%.Inter"
      "active.Message.QueryUserReq_USR\022H\n\027Shari"
      "ngDevReq_USR_Value\030\322\001 \001(\0132&.Interactive."
      "Message.SharingDevReq_USR\022R\n\034CancelShare"
      "dDevReq_USR_Value\030\334\001 \001(\0132+.Interactive.M"
      "essage.CancelSharedDevReq_USR\022H\n\027AddFrie"
      "ndsReq_USR_Value\030\346\001 \001(\0132&.Interactive.Me"
      "ssage.AddFriendsReq_USR\022H\n\027DelFriendsReq"
      "_USR_Value\030\360\001 \001(\0132&.Interactive.Message."
      "DelFriendsReq_USR\022L\n\031QueryFriendsReq_USR"
      "_Value\030\372\001 \001(\0132(.Interactive.Message.Quer"
      "yFriendsReq_USR\022P\n\033StorageAddressReq_USR"
      "_Value\030\374\001 \001(\0132*.Interactive.Message.Stor"
      "ageAddressReq_USR\022B\n\024P2pInfoReq_USR_Valu"
      "e\030\376\001 \001(\0132#.Interactive.Message.P2pInfoRe"
      "q_USR\022H\n\027DeleteFileReq_USR_Value\030\266\002 \001(\0132"
      "&.Interactive.Message.DeleteFileReq_USR\022"
      "L\n\031DownloadFileReq_USR_Value\030\300\002 \001(\0132(.In"
      "teractive.Message.DownloadFileReq_USR\022F\n"
      "\026QueryFileReq_USR_Value\030\312\002 \001(\0132%.Interac"
      "tive.Message.QueryFileReq_USR\022^\n\"QueryAc"
      "cessDomainNameReq_USR_Value\030\336\002 \001(\01321.Int"
      "eractive.Message.QueryAccessDomainNameRe"
      "q_USR\022R\n\034QueryAppUpgradeReq_USR_Value\030\350\002"
      " \001(\0132+.Interactive.Message.QueryAppUpgra"
      "deReq_USR\022V\n\036QueryIfP2pIDValidReq_USR_Va"
      "lue\030\362\002 \001(\0132-.Interactive.Message.QueryIf"
      "P2pIDValidReq_USR\022Z\n QueryAllDeviceEvent"
      "Req_USR_Value\030\220\003 \001(\0132/.Interactive.Messa"
      "ge.QueryAllDeviceEventReq_USR\022V\n\036DeleteD"
      "eviceEventReq_USR_Value\030\232\003 \001(\0132-.Interac"
      "tive.Message.DeleteDeviceEventReq_USR\022V\n"
      "\036ModifyDeviceEventReq_USR_Value\030\244\003 \001(\0132-"
      ".Interactive.Message.ModifyDeviceEventRe"
      "q_USR\022T\n\035AddStorageDetailReq_USR_Value\030\274"
      "\005 \001(\0132,.Interactive.Message.AddStorageDe"
      "tailReq_USR\022Z\n DeleteStorageDetailReq_US"
      "R_Value\030\306\005 \001(\0132/.Interactive.Message.Del"
      "eteStorageDetailReq_USR\022Z\n ModifyStorage"
      "DetailReq_USR_Value\030\320\005 \001(\0132/.Interactive"
      ".Message.ModifyStorageDetailReq_USR\022X\n\037Q"
      "ueryStorageDetailReq_USR_Value\030\332\005 \001(\0132.."
      "Interactive.Message.QueryStorageDetailRe"
      "q_USR\022`\n#QueryRegionStorageInfoReq_USR_V"
      "alue\030\344\005 \001(\01322.Interactive.Message.QueryR"
      "egionStorageInfoReq_USR\022\\\n!QueryDeviceIn"
      "foMultiReq_USR_Value\030\314\010 \001(\01320.Interactiv"
      "e.Message.QueryDeviceInfoMultiReq_USR\022R\n"
      "\034RegisterCmsCallReq_USR_Value\030\315\010 \001(\0132+.I"
      "nteractive.Message.RegisterCmsCallReq_US"
      "R\022V\n\036UnregisterCmsCallReq_USR_Value\030\316\010 \001"
      "(\0132-.Interactive.Message.UnregisterCmsCa"
      "llReq_USR\022b\n$QuerySharingDeviceLimitReq_"
      "USR_Value\030\317\010 \001(\01323.Interactive.Message.Q"
      "uerySharingDeviceLimitReq_USR\022Z\n QueryDe"
      "viceCapacityReq_USR_Value\030\320\010 \001(\0132/.Inter"
      "active.Message.QueryDeviceCapacityReq_US"
      "R\022`\n#QueryALLDeviceCapacityReq_USR_Value"
      "\030\321\010 \001(\01322.Interactive.Message.QueryALLDe"
      "viceCapacityReq_USR\022T\n\035QueryDeviceP2pIDR"
      "eq_USR_Value\030\322\010 \001(\0132,.Interactive.Messag"
      "e.QueryDeviceP2pIDReq_USR\022N\n\032UploadUserC"
      "fgReq_USR_Value\030\323\010 \001(\0132).Interactive.Mes"
      "sage.UploadUserCfgReq_USR\022L\n\031QueryUserCf"
      "gReq_USR_Value\030\324\010 \001(\0132(.Interactive.Mess"
      "age.QueryUserCfgReq_USR\022X\n\037GetOnlineDevI"
      "nfoReq_INNER_Value\030\204\002 \001(\0132..Interactive."
      "Message.GetOnlineDevInfoReq_INNER\022^\n\"Bro"
      "adcastOnlineDevInfo_INNER_Value\030\216\002 \001(\01321"
      ".Interactive.Message.BroadcastOnlineDevI"
      "nfo_INNER\022Z\n GetOnlineUserInfoReq_INNER_"
      "Value\030\230\002 \001(\0132/.Interactive.Message.GetOn"
      "lineUserInfoReq_INNER\022`\n#BroadcastOnline"
      "UserInfo_INNER_Value\030\242\002 \001(\01322.Interactiv"
      "e.Message.BroadcastOnlineUserInfo_INNER\022"
      "b\n$GetDeviceAccessRecordReq_INNER_Value\030"
      "\270\003 \001(\01323.Interactive.Message.GetDeviceAc"
      "cessRecordReq_INNER\022^\n\"GetUserAccessReco"
      "rdReq_INNER_Value\030\302\003 \001(\01321.Interactive.M"
      "essage.GetUserAccessRecordReq_INNER\022P\n\033Q"
      "ueryUploadURLReq_MGR_Value\030\330\004 \001(\0132*.Inte"
      "ractive.Message.QueryUploadURLReq_MGR\022T\n"
      "\035AddConfigurationReq_MGR_Value\030\342\004 \001(\0132,."
      "Interactive.Message.AddConfigurationReq_"
      "MGR\022Z\n DeleteConfigurationReq_MGR_Value\030"
      "\354\004 \001(\0132/.Interactive.Message.DeleteConfi"
      "gurationReq_MGR\022Z\n ModifyConfigurationRe"
      "q_MGR_Value\030\366\004 \001(\0132/.Interactive.Message"
      ".ModifyConfigurationReq_MGR\022^\n\"QueryAllC"
      "onfigurationReq_MGR_Value\030\200\005 \001(\01321.Inter"
      "active.Message.QueryAllConfigurationReq_"
      "MGR\"\327.\n\003Rsp\022\020\n\010iRetcode\030\n \001(\005\022\021\n\tstrRetM"
      "sg\030\024 \001(\t\022S\n\035GetAccessAddressRsp_DEV_Valu"
      "e\030\036 \001(\0132,.Interactive.Message.GetAccessA"
      "ddressRsp_DEV\022=\n\022LoginRsp_DEV_Value\030( \001("
      "\0132!.Interactive.Message.LoginRsp_DEV\022\?\n\023"
      "LogoutRsp_DEV_Value\0302 \001(\0132\".Interactive."
      "Message.LogoutRsp_DEV\022E\n\026ShakehandRsp_DE"
      "V_Value\030< \001(\0132%.Interactive.Message.Shak"
      "ehandRsp_DEV\022G\n\027ConfigInfoRsp_DEV_Value\030"
      "F \001(\0132&.Interactive.Message.ConfigInfoRs"
      "p_DEV\022O\n\033StorageAddressRsp_DEV_Value\030H \001"
      "(\0132*.Interactive.Message.StorageAddressR"
      "sp_DEV\022A\n\024P2pInfoRsp_DEV_Value\030J \001(\0132#.I"
      "nteractive.Message.P2pInfoRsp_DEV\022A\n\024Add"
      "FileRsp_DEV_Value\030P \001(\0132#.Interactive.Me"
      "ssage.AddFileRsp_DEV\022M\n\032QueryTimeZoneRsp"
      "_DEV_Value\030Q \001(\0132).Interactive.Message.Q"
      "ueryTimeZoneRsp_DEV\022]\n\"QueryAccessDomain"
      "NameRsp_DEV_Value\030R \001(\01321.Interactive.Me"
      "ssage.QueryAccessDomainNameRsp_DEV\022S\n\035Qu"
      "eryUpgradeSiteRsp_DEV_Value\030S \001(\0132,.Inte"
      "ractive.Message.QueryUpgradeSiteRsp_DEV\022"
      "[\n!QueryFirmwareUpgradeRsp_DEV_Value\030T \001"
      "(\01320.Interactive.Message.QueryFirmwareUp"
      "gradeRsp_DEV\022\\\n!ModifyDevicePropertyRsp_"
      "DEV_Value\030\240\006 \001(\01320.Interactive.Message.M"
      "odifyDevicePropertyRsp_DEV\022\\\n!QueryDevic"
      "eParameterRsp_DEV_Value\030\252\006 \001(\01320.Interac"
      "tive.Message.QueryDeviceParameterRsp_DEV"
      "\022b\n$QueryPlatformPushStatusRsp_DEV_Value"
      "\030\204\007 \001(\01323.Interactive.Message.QueryPlatf"
      "ormPushStatusRsp_DEV\022V\n\036DeviceEventRepor"
      "tRsp_DEV_Value\030\350\007 \001(\0132-.Interactive.Mess"
      "age.DeviceEventReportRsp_DEV\022M\n\032MsgPreHa"
      "ndlerRsp_USR_Value\030U \001(\0132).Interactive.M"
      "essage.MsgPreHandlerRsp_USR\022S\n\035GetAccess"
      "AddressRsp_USR_Value\030Z \001(\0132,.Interactive"
      ".Message.GetAccessAddressRsp_USR\022K\n\031Regi"
      "sterUserRsp_USR_Value\030d \001(\0132(.Interactiv"
      "e.Message.RegisterUserRsp_USR\022O\n\033UnRegis"
      "terUserRsp_USR_Value\030n \001(\0132*.Interactive"
      ".Message.UnRegisterUserRsp_USR\022K\n\031QueryU"
      "srInfoRsp_USR_Value\030x \001(\0132(.Interactive."
      "Message.QueryUsrInfoRsp_USR\022O\n\033ModifyUse"
      "rInfoRsp_USR_Value\030z \001(\0132*.Interactive.M"
      "essage.ModifyUserInfoRsp_USR\022I\n\030Retrieve"
      "PwdRsp_USR_Value\030| \001(\0132\'.Interactive.Mes"
      "sage.RetrievePwdRsp_USR\022>\n\022LoginRsp_USR_"
      "Value\030\202\001 \001(\0132!.Interactive.Message.Login"
      "Rsp_USR\022@\n\023LogoutRsp_USR_Value\030\214\001 \001(\0132\"."
      "Interactive.Message.LogoutRsp_USR\022F\n\026Sha"
      "kehandRsp_USR_Value\030\226\001 \001(\0132%.Interactive"
      ".Message.ShakehandRsp_USR\022H\n\027ConfigInfoR"
      "sp_USR_Value\030\240\001 \001(\0132&.Interactive.Messag"
      "e.ConfigInfoRsp_USR\022@\n\023AddDevRsp_USR_Val"
      "ue\030\252\001 \001(\0132\".Interactive.Message.AddDevRs"
      "p_USR\022@\n\023DelDevRsp_USR_Value\030\264\001 \001(\0132\".In"
      "teractive.Message.DelDevRsp_USR\022F\n\026Modif"
      "yDevRsp_USR_Value\030\276\001 \001(\0132%.Interactive.M"
      "essage.ModifyDevRsp_USR\022L\n\031QueryDevInfoR"
      "sp_USR_Value\030\310\001 \001(\0132(.Interactive.Messag"
      "e.QueryDevInfoRsp_USR\022D\n\025QueryDevRsp_USR"
      "_Value\030\322\001 \001(\0132$.Interactive.Message.Quer"
      "yDevRsp_USR\022F\n\026QueryUserRsp_USR_Value\030\334\001"
      " \001(\0132%.Interactive.Message.QueryUserRsp_"
      "USR\022H\n\027SharingDevRsp_USR_Value\030\346\001 \001(\0132&."
      "Interactive.Message.SharingDevRsp_USR\022R\n"
      "\034CancelSharedDevRsp_USR_Value\030\360\001 \001(\0132+.I"
      "nteractive.Message.CancelSharedDevRsp_US"
      "R\022H\n\027AddFriendsRsp_USR_Value\030\372\001 \001(\0132&.In"
      "teractive.Message.AddFriendsRsp_USR\022H\n\027D"
      "elFriendsRsp_USR_Value\030\204\002 \001(\0132&.Interact"
      "ive.Message.DelFriendsRsp_USR\022L\n\031QueryFr"
      "iendsRsp_USR_Value\030\216\002 \001(\0132(.Interactive."
      "Message.QueryFriendsRsp_USR\022P\n\033StorageAd"
      "dressReq_USR_Value\030\220\002 \001(\0132*.Interactive."
      "Message.StorageAddressRsp_USR\022B\n\024P2pInfo"
      "Rsp_USR_Value\030\222\002 \001(\0132#.Interactive.Messa"
      "ge.P2pInfoRsp_USR\022H\n\027DeleteFileRsp_USR_V"
      "alue\030\266\002 \001(\0132&.Interactive.Message.Delete"
      "FileRsp_USR\022L\n\031DownloadFileRsp_USR_Value"
      "\030\300\002 \001(\0132(.Interactive.Message.DownloadFi"
      "leRsp_USR\022F\n\026QueryFileRsp_USR_Value\030\312\002 \001"
      "(\0132%.Interactive.Message.QueryFileRsp_US"
      "R\022^\n\"QueryAccessDomainNameRsp_USR_Value\030"
      "\336\002 \001(\01321.Interactive.Message.QueryAccess"
      "DomainNameRsp_USR\022R\n\034QueryAppUpgradeRsp_"
      "USR_Value\030\350\002 \001(\0132+.Interactive.Message.Q"
      "ueryAppUpgradeRsp_USR\022V\n\036QueryIfP2pIDVal"
      "idRsp_USR_Value\030\362\002 \001(\0132-.Interactive.Mes"
      "sage.QueryIfP2pIDValidRsp_USR\022Z\n QueryAl"
      "lDeviceEventRsp_USR_Value\030\364\003 \001(\0132/.Inter"
      "active.Message.QueryAllDeviceEventRsp_US"
      "R\022V\n\036DeleteDeviceEventRsp_USR_Value\030\376\003 \001"
      "(\0132-.Interactive.Message.DeleteDeviceEve"
      "ntRsp_USR\022V\n\036ModifyDeviceEventRsp_USR_Va"
      "lue\030\210\004 \001(\0132-.Interactive.Message.ModifyD"
      "eviceEventRsp_USR\022T\n\035AddStorageDetailRsp"
      "_USR_Value\030\274\005 \001(\0132,.Interactive.Message."
      "AddStorageDetailRsp_USR\022Z\n DeleteStorage"
      "DetailRsp_USR_Value\030\306\005 \001(\0132/.Interactive"
      ".Message.DeleteStorageDetailRsp_USR\022Z\n M"
      "odifyStorageDetailRsp_USR_Value\030\320\005 \001(\0132/"
      ".Interactive.Message.ModifyStorageDetail"
      "Rsp_USR\022X\n\037QueryStorageDetailRsp_USR_Val"
      "ue\030\332\005 \001(\0132..Interactive.Message.QuerySto"
      "rageDetailRsp_USR\022`\n#QueryRegionStorageI"
      "nfoRsp_USR_Value\030\344\005 \001(\01322.Interactive.Me"
      "ssage.QueryRegionStorageInfoRsp_USR\022\\\n!Q"
      "ueryDeviceInfoMultiRsp_USR_Value\030\314\010 \001(\0132"
      "0.Interactive.Message.QueryDeviceInfoMul"
      "tiRsp_USR\022R\n\034RegisterCmsCallRsp_USR_Valu"
      "e\030\315\010 \001(\0132+.Interactive.Message.RegisterC"
      "msCallRsp_USR\022V\n\036UnregisterCmsCallRsp_US"
      "R_Value\030\316\010 \001(\0132-.Interactive.Message.Unr"
      "egisterCmsCallRsp_USR\022b\n$QuerySharingDev"
      "iceLimitRsp_USR_Value\030\317\010 \001(\01323.Interacti"
      "ve.Message.QuerySharingDeviceLimitRsp_US"
      "R\022Z\n QueryDeviceCapacityRsp_USR_Value\030\320\010"
      " \001(\0132/.Interactive.Message.QueryDeviceCa"
      "pacityRsp_USR\022`\n#QueryALLDeviceCapacityR"
      "sp_USR_Value\030\321\010 \001(\01322.Interactive.Messag"
      "e.QueryALLDeviceCapacityRsp_USR\022T\n\035Query"
      "DeviceP2pIDRsp_USR_Value\030\322\010 \001(\0132,.Intera"
      "ctive.Message.QueryDeviceP2pIDRsp_USR\022N\n"
      "\032UploadUserCfgRsp_USR_Value\030\323\010 \001(\0132).Int"
      "eractive.Message.UploadUserCfgRsp_USR\022L\n"
      "\031QueryUserCfgRsp_USR_Value\030\324\010 \001(\0132(.Inte"
      "ractive.Message.QueryUserCfgRsp_USR\022X\n\037G"
      "etOnlineDevInfoRsp_INNER_Value\030\230\002 \001(\0132.."
      "Interactive.Message.GetOnlineDevInfoRsp_"
      "INNER\022Z\n GetOnlineUserInfoRsp_INNER_Valu"
      "e\030\242\002 \001(\0132/.Interactive.Message.GetOnline"
      "UserInfoRsp_INNER\022b\n$GetDeviceAccessReco"
      "rdRsp_INNER_Value\030\270\003 \001(\01323.Interactive.M"
      "essage.GetDeviceAccessRecordRsp_INNER\022^\n"
      "\"GetUserAccessRecordRsp_INNER_Value\030\302\003 \001"
      "(\01321.Interactive.Message.GetUserAccessRe"
      "cordRsp_INNER\022P\n\033QueryUploadURLRsp_MGR_V"
      "alue\030\330\004 \001(\0132*.Interactive.Message.QueryU"
      "ploadURLRsp_MGR\022T\n\035AddConfigurationRsp_M"
      "GR_Value\030\342\004 \001(\0132,.Interactive.Message.Ad"
      "dConfigurationRsp_MGR\022Z\n DeleteConfigura"
      "tionRsp_MGR_Value\030\354\004 \001(\0132/.Interactive.M"
      "essage.DeleteConfigurationRsp_MGR\022Z\n Mod"
      "ifyConfigurationRsp_MGR_Value\030\366\004 \001(\0132/.I"
      "nteractive.Message.ModifyConfigurationRs"
      "p_MGR\022^\n\"QueryAllConfigurationRsp_MGR_Va"
      "lue\030\200\005 \001(\01321.Interactive.Message.QueryAl"
      "lConfigurationRsp_MGR\"\272\001\n\022InteractiveMes"
      "sage\022*\n\004type\030\001 \001(\0162\034.Interactive.Message"
      ".MsgType\022\020\n\010uiMsgSeq\030\002 \001(\004\022\016\n\006strSID\030\003 \001"
      "(\t\022*\n\010ReqValue\030\004 \001(\0132\030.Interactive.Messa"
      "ge.Req\022*\n\010RspValue\030\005 \001(\0132\030.Interactive.M"
      "essage.Rsp*\236$\n\007MsgType\022\n\n\006Init_T\020\000\022\036\n\031Ge"
      "tAccessAddressReq_DEV_T\020\220N\022\036\n\031GetAccessA"
      "ddressRsp_DEV_T\020\232N\022\023\n\016LoginReq_DEV_T\020\244N\022"
      "\023\n\016LoginRsp_DEV_T\020\256N\022\024\n\017LogoutReq_DEV_T\020"
      "\270N\022\024\n\017LogoutRsp_DEV_T\020\302N\022\027\n\022ShakehandReq"
      "_DEV_T\020\314N\022\027\n\022ShakehandRsp_DEV_T\020\326N\022\030\n\023Co"
      "nfigInfoReq_DEV_T\020\340N\022\030\n\023ConfigInfoRsp_DE"
      "V_T\020\352N\022\034\n\027StorageAddressReq_DEV_T\020\364N\022\034\n\027"
      "StorageAddressRsp_DEV_T\020\376N\022\025\n\020P2pInfoReq"
      "_DEV_T\020\354O\022\025\n\020P2pInfoRsp_DEV_T\020\366O\022\025\n\020AddF"
      "ileReq_DEV_T\020\274P\022\025\n\020AddFileRsp_DEV_T\020\306P\022\033"
      "\n\026QueryTimeZoneReq_DEV_T\020\320P\022\033\n\026QueryTime"
      "ZoneRsp_DEV_T\020\332P\022#\n\036QueryAccessDomainNam"
      "eReq_DEV_T\020\344P\022#\n\036QueryAccessDomainNameRs"
      "p_DEV_T\020\356P\022\036\n\031QueryUpgradeSiteReq_DEV_T\020"
      "\370P\022\036\n\031QueryUpgradeSiteRsp_DEV_T\020\202Q\022\"\n\035Qu"
      "eryFirmwareUpgradeReq_DEV_T\020\214Q\022\"\n\035QueryF"
      "irmwareUpgradeRsp_DEV_T\020\226Q\022\"\n\035ModifyDevi"
      "cePropertyReq_DEV_T\020\240Q\022\"\n\035ModifyDevicePr"
      "opertyRsp_DEV_T\020\252Q\022\"\n\035QueryDeviceParamet"
      "erReq_DEV_T\020\264Q\022\"\n\035QueryDeviceParameterRs"
      "p_DEV_T\020\276Q\022%\n QueryPlatformPushStatusReq"
      "_DEV_T\020\204R\022%\n QueryPlatformPushStatusRsp_"
      "DEV_T\020\216R\022\037\n\032DeviceEventReportReq_DEV_T\020\350"
      "R\022\037\n\032DeviceEventReportRsp_DEV_T\020\362R\022\034\n\026Ms"
      "gPreHandlerReq_USR_T\020\226\234\001\022\034\n\026MsgPreHandle"
      "rRsp_USR_T\020\227\234\001\022\037\n\031GetAccessAddressReq_US"
      "R_T\020\240\234\001\022\037\n\031GetAccessAddressRsp_USR_T\020\252\234\001"
      "\022\033\n\025RegisterUserReq_USR_T\020\264\234\001\022\033\n\025Registe"
      "rUserRsp_USR_T\020\276\234\001\022\035\n\027UnRegisterUserReq_"
      "USR_T\020\310\234\001\022\035\n\027UnRegisterUserRsp_USR_T\020\322\234\001"
      "\022\033\n\025QueryUsrInfoReq_USR_T\020\323\234\001\022\033\n\025QueryUs"
      "rInfoRsp_USR_T\020\324\234\001\022\035\n\027ModifyUserInfoReq_"
      "USR_T\020\327\234\001\022\035\n\027ModifyUserInfoRsp_USR_T\020\330\234\001"
      "\022\032\n\024RetrievePwdReq_USR_T\020\331\234\001\022\032\n\024Retrieve"
      "PwdRsp_USR_T\020\332\234\001\022\024\n\016LoginReq_USR_T\020\334\234\001\022\024"
      "\n\016LoginRsp_USR_T\020\346\234\001\022\025\n\017LogoutReq_USR_T\020"
      "\360\234\001\022\025\n\017LogoutRsp_USR_T\020\372\234\001\022\030\n\022ShakehandR"
      "eq_USR_T\020\204\235\001\022\030\n\022ShakehandRsp_USR_T\020\216\235\001\022\031"
      "\n\023ConfigInfoReq_USR_T\020\230\235\001\022\031\n\023ConfigInfoR"
      "sp_USR_T\020\242\235\001\022\025\n\017AddDevReq_USR_T\020\254\235\001\022\025\n\017A"
      "ddDevRsp_USR_T\020\266\235\001\022\025\n\017DelDevReq_USR_T\020\300\235"
      "\001\022\025\n\017DelDevRsp_USR_T\020\312\235\001\022\030\n\022ModifyDevReq"
      "_USR_T\020\324\235\001\022\030\n\022ModifyDevRsp_USR_T\020\336\235\001\022\033\n\025"
      "QueryDevInfoReq_USR_T\020\337\235\001\022\033\n\025QueryDevInf"
      "oRsp_USR_T\020\340\235\001\022\027\n\021QueryDevReq_USR_T\020\350\235\001\022"
      "\027\n\021QueryDevRsp_USR_T\020\362\235\001\022\030\n\022QueryUserReq"
      "_USR_T\020\363\235\001\022\030\n\022QueryUserRsp_USR_T\020\364\235\001\022\031\n\023"
      "SharingDevReq_USR_T\020\374\235\001\022\031\n\023SharingDevRsp"
      "_USR_T\020\206\236\001\022\036\n\030CancelSharedDevReq_USR_T\020\220"
      "\236\001\022\036\n\030CancelSharedDevRsp_USR_T\020\232\236\001\022\031\n\023Ad"
      "dFriendsReq_USR_T\020\244\236\001\022\031\n\023AddFriendsRsp_U"
      "SR_T\020\256\236\001\022\031\n\023DelFriendsReq_USR_T\020\270\236\001\022\031\n\023D"
      "elFriendsRsp_USR_T\020\302\236\001\022\034\n\026ModifyFriendsR"
      "eq_USR_T\020\314\236\001\022\034\n\026ModifyFriendsRsp_USR_T\020\326"
      "\236\001\022\033\n\025QueryFriendsReq_USR_T\020\340\236\001\022\033\n\025Query"
      "FriendsRsp_USR_T\020\352\236\001\022\035\n\027StorageAddressRe"
      "q_USR_T\020\364\236\001\022\035\n\027StorageAddressRsp_USR_T\020\376"
      "\236\001\022\026\n\020P2pInfoReq_USR_T\020\210\237\001\022\026\n\020P2pInfoRsp"
      "_USR_T\020\222\237\001\022\031\n\023DeleteFileReq_USR_T\020\224\240\001\022\031\n"
      "\023DeleteFileRsp_USR_T\020\236\240\001\022\033\n\025DownloadFile"
      "Req_USR_T\020\250\240\001\022\033\n\025DownloadFileRsp_USR_T\020\262"
      "\240\001\022\030\n\022QueryFileReq_USR_T\020\274\240\001\022\030\n\022QueryFil"
      "eRsp_USR_T\020\306\240\001\022$\n\036QueryAccessDomainNameR"
      "eq_USR_T\020\370\240\001\022$\n\036QueryAccessDomainNameRsp"
      "_USR_T\020\202\241\001\022\036\n\030QueryAppUpgradeReq_USR_T\020\214"
      "\241\001\022\036\n\030QueryAppUpgradeRsp_USR_T\020\226\241\001\022 \n\032Qu"
      "eryIfP2pIDValidReq_USR_T\020\240\241\001\022 \n\032QueryIfP"
      "2pIDValidRsp_USR_T\020\252\241\001\022\"\n\034QueryAllDevice"
      "EventReq_USR_T\020\334\241\001\022\"\n\034QueryAllDeviceEven"
      "tRsp_USR_T\020\346\241\001\022 \n\032DeleteDeviceEventReq_U"
      "SR_T\020\360\241\001\022 \n\032DeleteDeviceEventRsp_USR_T\020\372"
      "\241\001\022 \n\032ModifyDeviceEventReq_USR_T\020\204\242\001\022 \n\032"
      "ModifyDeviceEventRsp_USR_T\020\216\242\001\022\037\n\031AddSto"
      "rageDetailReq_USR_T\020\300\242\001\022\037\n\031AddStorageDet"
      "ailRsp_USR_T\020\312\242\001\022\"\n\034DeleteStorageDetailR"
      "eq_USR_T\020\324\242\001\022\"\n\034DeleteStorageDetailRsp_U"
      "SR_T\020\336\242\001\022\"\n\034ModifyStorageDetailReq_USR_T"
      "\020\350\242\001\022\"\n\034ModifyStorageDetailRsp_USR_T\020\362\242\001"
      "\022!\n\033QueryStorageDetailReq_USR_T\020\374\242\001\022!\n\033Q"
      "ueryStorageDetailRsp_USR_T\020\206\243\001\022%\n\037QueryR"
      "egionStorageInfoReq_USR_T\020\220\243\001\022%\n\037QueryRe"
      "gionStorageInfoRsp_USR_T\020\232\243\001\022#\n\035QueryDev"
      "iceInfoMultiReq_USR_T\020\326\243\001\022#\n\035QueryDevice"
      "InfoMultiRsp_USR_T\020\340\243\001\022\036\n\030RegisterCmsCal"
      "lReq_USR_T\020\341\243\001\022\036\n\030RegisterCmsCallRsp_USR"
      "_T\020\342\243\001\022 \n\032UnregisterCmsCallReq_USR_T\020\343\243\001"
      "\022 \n\032UnregisterCmsCallRsp_USR_T\020\344\243\001\022&\n Qu"
      "erySharingDeviceLimitReq_USR_T\020\345\243\001\022&\n Qu"
      "erySharingDeviceLimitRsp_USR_T\020\346\243\001\022\"\n\034Qu"
      "eryDeviceCapacityReq_USR_T\020\347\243\001\022\"\n\034QueryD"
      "eviceCapacityRsp_USR_T\020\350\243\001\022%\n\037QueryALLDe"
      "viceCapacityReq_USR_T\020\351\243\001\022%\n\037QueryALLDev"
      "iceCapacityRsp_USR_T\020\352\243\001\022\037\n\031QueryDeviceP"
      "2pIDReq_USR_T\020\353\243\001\022\037\n\031QueryDeviceP2pIDRsp"
      "_USR_T\020\354\243\001\022\034\n\026UploadUserCfgReq_USR_T\020\355\243\001"
      "\022\034\n\026UploadUserCfgRsp_USR_T\020\356\243\001\022\033\n\025QueryU"
      "serCfgReq_USR_T\020\357\243\001\022\033\n\025QueryUserCfgRsp_U"
      "SR_T\020\360\243\001\022!\n\033GetOnlineDevInfoReq_INNER_T\020"
      "\260\352\001\022!\n\033GetOnlineDevInfoRsp_INNER_T\020\272\352\001\022$"
      "\n\036BroadcastOnlineDevInfo_INNER_T\020\304\352\001\022\"\n\034"
      "GetOnlineUserInfoReq_INNER_T\020\316\352\001\022\"\n\034GetO"
      "nlineUserInfoRsp_INNER_T\020\330\352\001\022%\n\037Broadcas"
      "tOnlineUserInfo_INNER_T\020\342\352\001\022&\n GetDevice"
      "AccessRecordReq_INNER_T\020\370\353\001\022&\n GetDevice"
      "AccessRecordRsp_INNER_T\020\202\354\001\022$\n\036GetUserAc"
      "cessRecordReq_INNER_T\020\214\354\001\022$\n\036GetUserAcce"
      "ssRecordRsp_INNER_T\020\226\354\001\022\035\n\027QueryUploadUR"
      "LReq_MGR_T\020\300\270\002\022\035\n\027QueryUploadURLRsp_MGR_"
      "T\020\312\270\002\022\037\n\031AddConfigurationReq_MGR_T\020\324\270\002\022\037"
      "\n\031AddConfigurationRsp_MGR_T\020\336\270\002\022\"\n\034Delet"
      "eConfigurationReq_MGR_T\020\350\270\002\022\"\n\034DeleteCon"
      "figurationRsp_MGR_T\020\362\270\002\022\"\n\034ModifyConfigu"
      "rationReq_MGR_T\020\374\270\002\022\"\n\034ModifyConfigurati"
      "onRsp_MGR_T\020\206\271\002\022$\n\036QueryAllConfiguration"
      "Req_MGR_T\020\220\271\002\022$\n\036QueryAllConfigurationRs"
      "p_MGR_T\020\232\271\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 32259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InteractiveProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_InteractiveProtocol_2eproto

const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10010:
    case 10020:
    case 10030:
    case 10040:
    case 10050:
    case 10060:
    case 10070:
    case 10080:
    case 10090:
    case 10100:
    case 10110:
    case 10220:
    case 10230:
    case 10300:
    case 10310:
    case 10320:
    case 10330:
    case 10340:
    case 10350:
    case 10360:
    case 10370:
    case 10380:
    case 10390:
    case 10400:
    case 10410:
    case 10420:
    case 10430:
    case 10500:
    case 10510:
    case 10600:
    case 10610:
    case 19990:
    case 19991:
    case 20000:
    case 20010:
    case 20020:
    case 20030:
    case 20040:
    case 20050:
    case 20051:
    case 20052:
    case 20055:
    case 20056:
    case 20057:
    case 20058:
    case 20060:
    case 20070:
    case 20080:
    case 20090:
    case 20100:
    case 20110:
    case 20120:
    case 20130:
    case 20140:
    case 20150:
    case 20160:
    case 20170:
    case 20180:
    case 20190:
    case 20191:
    case 20192:
    case 20200:
    case 20210:
    case 20211:
    case 20212:
    case 20220:
    case 20230:
    case 20240:
    case 20250:
    case 20260:
    case 20270:
    case 20280:
    case 20290:
    case 20300:
    case 20310:
    case 20320:
    case 20330:
    case 20340:
    case 20350:
    case 20360:
    case 20370:
    case 20500:
    case 20510:
    case 20520:
    case 20530:
    case 20540:
    case 20550:
    case 20600:
    case 20610:
    case 20620:
    case 20630:
    case 20640:
    case 20650:
    case 20700:
    case 20710:
    case 20720:
    case 20730:
    case 20740:
    case 20750:
    case 20800:
    case 20810:
    case 20820:
    case 20830:
    case 20840:
    case 20850:
    case 20860:
    case 20870:
    case 20880:
    case 20890:
    case 20950:
    case 20960:
    case 20961:
    case 20962:
    case 20963:
    case 20964:
    case 20965:
    case 20966:
    case 20967:
    case 20968:
    case 20969:
    case 20970:
    case 20971:
    case 20972:
    case 20973:
    case 20974:
    case 20975:
    case 20976:
    case 30000:
    case 30010:
    case 30020:
    case 30030:
    case 30040:
    case 30050:
    case 30200:
    case 30210:
    case 30220:
    case 30230:
    case 40000:
    case 40010:
    case 40020:
    case 40030:
    case 40040:
    case 40050:
    case 40060:
    case 40070:
    case 40080:
    case 40090:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PermissionOfUser::kUiUnlimitedFieldNumber;
const int PermissionOfUser::kUiWatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PermissionOfUser::PermissionOfUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.PermissionOfUser)
}
PermissionOfUser::PermissionOfUser(const PermissionOfUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uiunlimited_, &from.uiunlimited_,
    reinterpret_cast<char*>(&uiwatch_) -
    reinterpret_cast<char*>(&uiunlimited_) + sizeof(uiwatch_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.PermissionOfUser)
}

void PermissionOfUser::SharedCtor() {
  ::memset(&uiunlimited_, 0, reinterpret_cast<char*>(&uiwatch_) -
    reinterpret_cast<char*>(&uiunlimited_) + sizeof(uiwatch_));
  _cached_size_ = 0;
}

PermissionOfUser::~PermissionOfUser() {
  // @@protoc_insertion_point(destructor:Interactive.Message.PermissionOfUser)
  SharedDtor();
}

void PermissionOfUser::SharedDtor() {
}

void PermissionOfUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PermissionOfUser::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[0].descriptor;
}

const PermissionOfUser& PermissionOfUser::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

PermissionOfUser* PermissionOfUser::New(::google::protobuf::Arena* arena) const {
  PermissionOfUser* n = new PermissionOfUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PermissionOfUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.PermissionOfUser)
  ::memset(&uiunlimited_, 0, reinterpret_cast<char*>(&uiwatch_) -
    reinterpret_cast<char*>(&uiunlimited_) + sizeof(uiwatch_));
}

bool PermissionOfUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.PermissionOfUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiUnlimited = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiunlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiWatch = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiwatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.PermissionOfUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.PermissionOfUser)
  return false;
#undef DO_
}

void PermissionOfUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.PermissionOfUser)
  // uint32 uiUnlimited = 1;
  if (this->uiunlimited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiunlimited(), output);
  }

  // uint32 uiWatch = 2;
  if (this->uiwatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiwatch(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.PermissionOfUser)
}

::google::protobuf::uint8* PermissionOfUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.PermissionOfUser)
  // uint32 uiUnlimited = 1;
  if (this->uiunlimited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiunlimited(), target);
  }

  // uint32 uiWatch = 2;
  if (this->uiwatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiwatch(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.PermissionOfUser)
  return target;
}

size_t PermissionOfUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.PermissionOfUser)
  size_t total_size = 0;

  // uint32 uiUnlimited = 1;
  if (this->uiunlimited() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiunlimited());
  }

  // uint32 uiWatch = 2;
  if (this->uiwatch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiwatch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PermissionOfUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.PermissionOfUser)
  GOOGLE_DCHECK_NE(&from, this);
  const PermissionOfUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PermissionOfUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.PermissionOfUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.PermissionOfUser)
    MergeFrom(*source);
  }
}

void PermissionOfUser::MergeFrom(const PermissionOfUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.PermissionOfUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uiunlimited() != 0) {
    set_uiunlimited(from.uiunlimited());
  }
  if (from.uiwatch() != 0) {
    set_uiwatch(from.uiwatch());
  }
}

void PermissionOfUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.PermissionOfUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PermissionOfUser::CopyFrom(const PermissionOfUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.PermissionOfUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionOfUser::IsInitialized() const {
  return true;
}

void PermissionOfUser::Swap(PermissionOfUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PermissionOfUser::InternalSwap(PermissionOfUser* other) {
  std::swap(uiunlimited_, other->uiunlimited_);
  std::swap(uiwatch_, other->uiwatch_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PermissionOfUser::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PermissionOfUser

// uint32 uiUnlimited = 1;
void PermissionOfUser::clear_uiunlimited() {
  uiunlimited_ = 0u;
}
::google::protobuf::uint32 PermissionOfUser::uiunlimited() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.PermissionOfUser.uiUnlimited)
  return uiunlimited_;
}
void PermissionOfUser::set_uiunlimited(::google::protobuf::uint32 value) {
  
  uiunlimited_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.PermissionOfUser.uiUnlimited)
}

// uint32 uiWatch = 2;
void PermissionOfUser::clear_uiwatch() {
  uiwatch_ = 0u;
}
::google::protobuf::uint32 PermissionOfUser::uiwatch() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.PermissionOfUser.uiWatch)
  return uiwatch_;
}
void PermissionOfUser::set_uiwatch(::google::protobuf::uint32 value) {
  
  uiwatch_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.PermissionOfUser.uiWatch)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Device::kStrDevIDFieldNumber;
const int Device::kStrDevNameFieldNumber;
const int Device::kStrDevPasswordFieldNumber;
const int Device::kUiTypeInfoFieldNumber;
const int Device::kStrCreatedateFieldNumber;
const int Device::kUiStatusFieldNumber;
const int Device::kStrExtendFieldNumber;
const int Device::kStrInnerinfoFieldNumber;
const int Device::kStrP2PIDFieldNumber;
const int Device::kStrDomainNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Device::Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Device)
}
Device::Device(const Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strdevname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevname().size() > 0) {
    strdevname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevname_);
  }
  strdevpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevpassword().size() > 0) {
    strdevpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevpassword_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  strinnerinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strinnerinfo().size() > 0) {
    strinnerinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strinnerinfo_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  ::memcpy(&uitypeinfo_, &from.uitypeinfo_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Device)
}

void Device::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strinnerinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Device)
  SharedDtor();
}

void Device::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strinnerinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Device::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[1].descriptor;
}

const Device& Device::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Device* Device::New(::google::protobuf::Arena* arena) const {
  Device* n = new Device;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Device)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strinnerinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
}

bool Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Device)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevname().data(), this->strdevname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDevName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevPassword = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevpassword().data(), this->strdevpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDevPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiTypeInfo = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitypeinfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strInnerinfo = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strinnerinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strinnerinfo().data(), this->strinnerinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strInnerinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDomainName = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Device)
  return false;
#undef DO_
}

void Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Device)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strDevName = 2;
  if (this->strdevname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname().data(), this->strdevname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevname(), output);
  }

  // string strDevPassword = 3;
  if (this->strdevpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevpassword().data(), this->strdevpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevpassword(), output);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uitypeinfo(), output);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uistatus(), output);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strextend(), output);
  }

  // string strInnerinfo = 8;
  if (this->strinnerinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strinnerinfo().data(), this->strinnerinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strInnerinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strinnerinfo(), output);
  }

  // string strP2pID = 9;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->strp2pid(), output);
  }

  // string strDomainName = 10;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strdomainname(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Device)
}

::google::protobuf::uint8* Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Device)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strDevName = 2;
  if (this->strdevname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname().data(), this->strdevname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevname(), target);
  }

  // string strDevPassword = 3;
  if (this->strdevpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevpassword().data(), this->strdevpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevpassword(), target);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uitypeinfo(), target);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uistatus(), target);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strextend(), target);
  }

  // string strInnerinfo = 8;
  if (this->strinnerinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strinnerinfo().data(), this->strinnerinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strInnerinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strinnerinfo(), target);
  }

  // string strP2pID = 9;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strp2pid(), target);
  }

  // string strDomainName = 10;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strdomainname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Device)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strDevName = 2;
  if (this->strdevname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevname());
  }

  // string strDevPassword = 3;
  if (this->strdevpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevpassword());
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // string strInnerinfo = 8;
  if (this->strinnerinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strinnerinfo());
  }

  // string strP2pID = 9;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // string strDomainName = 10;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitypeinfo());
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strdevname().size() > 0) {

    strdevname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevname_);
  }
  if (from.strdevpassword().size() > 0) {

    strdevpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevpassword_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.strinnerinfo().size() > 0) {

    strinnerinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strinnerinfo_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  if (from.uitypeinfo() != 0) {
    set_uitypeinfo(from.uitypeinfo());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::Swap(Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Device::InternalSwap(Device* other) {
  strdevid_.Swap(&other->strdevid_);
  strdevname_.Swap(&other->strdevname_);
  strdevpassword_.Swap(&other->strdevpassword_);
  strcreatedate_.Swap(&other->strcreatedate_);
  strextend_.Swap(&other->strextend_);
  strinnerinfo_.Swap(&other->strinnerinfo_);
  strp2pid_.Swap(&other->strp2pid_);
  strdomainname_.Swap(&other->strdomainname_);
  std::swap(uitypeinfo_, other->uitypeinfo_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Device

// string strDevID = 1;
void Device::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevID)
  return strdevid_.GetNoArena();
}
void Device::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevID)
}
#if LANG_CXX11
void Device::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevID)
}
#endif
void Device::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevID)
}
void Device::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevID)
}
::std::string* Device::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevID)
}

// string strDevName = 2;
void Device::clear_strdevname() {
  strdevname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdevname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevName)
  return strdevname_.GetNoArena();
}
void Device::set_strdevname(const ::std::string& value) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevName)
}
#if LANG_CXX11
void Device::set_strdevname(::std::string&& value) {
  
  strdevname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevName)
}
#endif
void Device::set_strdevname(const char* value) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevName)
}
void Device::set_strdevname(const char* value, size_t size) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevName)
}
::std::string* Device::mutable_strdevname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevName)
  return strdevname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdevname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevName)
  
  return strdevname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdevname(::std::string* strdevname) {
  if (strdevname != NULL) {
    
  } else {
    
  }
  strdevname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevName)
}

// string strDevPassword = 3;
void Device::clear_strdevpassword() {
  strdevpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdevpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevPassword)
  return strdevpassword_.GetNoArena();
}
void Device::set_strdevpassword(const ::std::string& value) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevPassword)
}
#if LANG_CXX11
void Device::set_strdevpassword(::std::string&& value) {
  
  strdevpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevPassword)
}
#endif
void Device::set_strdevpassword(const char* value) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevPassword)
}
void Device::set_strdevpassword(const char* value, size_t size) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevPassword)
}
::std::string* Device::mutable_strdevpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevPassword)
  return strdevpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdevpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevPassword)
  
  return strdevpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdevpassword(::std::string* strdevpassword) {
  if (strdevpassword != NULL) {
    
  } else {
    
  }
  strdevpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevPassword)
}

// uint32 uiTypeInfo = 4;
void Device::clear_uitypeinfo() {
  uitypeinfo_ = 0u;
}
::google::protobuf::uint32 Device::uitypeinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.uiTypeInfo)
  return uitypeinfo_;
}
void Device::set_uitypeinfo(::google::protobuf::uint32 value) {
  
  uitypeinfo_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.uiTypeInfo)
}

// string strCreatedate = 5;
void Device::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void Device::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strCreatedate)
}
#if LANG_CXX11
void Device::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strCreatedate)
}
#endif
void Device::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strCreatedate)
}
void Device::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strCreatedate)
}
::std::string* Device::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strCreatedate)
}

// uint32 uiStatus = 6;
void Device::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 Device::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.uiStatus)
  return uistatus_;
}
void Device::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.uiStatus)
}

// string strExtend = 7;
void Device::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strExtend)
  return strextend_.GetNoArena();
}
void Device::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strExtend)
}
#if LANG_CXX11
void Device::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strExtend)
}
#endif
void Device::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strExtend)
}
void Device::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strExtend)
}
::std::string* Device::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strExtend)
}

// string strInnerinfo = 8;
void Device::clear_strinnerinfo() {
  strinnerinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strinnerinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strInnerinfo)
  return strinnerinfo_.GetNoArena();
}
void Device::set_strinnerinfo(const ::std::string& value) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strInnerinfo)
}
#if LANG_CXX11
void Device::set_strinnerinfo(::std::string&& value) {
  
  strinnerinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strInnerinfo)
}
#endif
void Device::set_strinnerinfo(const char* value) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strInnerinfo)
}
void Device::set_strinnerinfo(const char* value, size_t size) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strInnerinfo)
}
::std::string* Device::mutable_strinnerinfo() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strInnerinfo)
  return strinnerinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strinnerinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strInnerinfo)
  
  return strinnerinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strinnerinfo(::std::string* strinnerinfo) {
  if (strinnerinfo != NULL) {
    
  } else {
    
  }
  strinnerinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strinnerinfo);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strInnerinfo)
}

// string strP2pID = 9;
void Device::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strP2pID)
  return strp2pid_.GetNoArena();
}
void Device::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strP2pID)
}
#if LANG_CXX11
void Device::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strP2pID)
}
#endif
void Device::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strP2pID)
}
void Device::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strP2pID)
}
::std::string* Device::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strP2pID)
}

// string strDomainName = 10;
void Device::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDomainName)
  return strdomainname_.GetNoArena();
}
void Device::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDomainName)
}
#if LANG_CXX11
void Device::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDomainName)
}
#endif
void Device::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDomainName)
}
void Device::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDomainName)
}
::std::string* Device::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDomainName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceStatus::kDeviceInfoFieldNumber;
const int DeviceStatus::kStrOnlineStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceStatus::DeviceStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeviceStatus)
}
DeviceStatus::DeviceStatus(const DeviceStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stronlinestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stronlinestatus().size() > 0) {
    stronlinestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stronlinestatus_);
  }
  if (from.has_deviceinfo()) {
    deviceinfo_ = new ::Interactive::Message::Device(*from.deviceinfo_);
  } else {
    deviceinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeviceStatus)
}

void DeviceStatus::SharedCtor() {
  stronlinestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_ = NULL;
  _cached_size_ = 0;
}

DeviceStatus::~DeviceStatus() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeviceStatus)
  SharedDtor();
}

void DeviceStatus::SharedDtor() {
  stronlinestatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete deviceinfo_;
  }
}

void DeviceStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceStatus::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[2].descriptor;
}

const DeviceStatus& DeviceStatus::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceStatus* DeviceStatus::New(::google::protobuf::Arena* arena) const {
  DeviceStatus* n = new DeviceStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeviceStatus)
  stronlinestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && deviceinfo_ != NULL) {
    delete deviceinfo_;
  }
  deviceinfo_ = NULL;
}

bool DeviceStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeviceStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Device deviceInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deviceinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strOnlineStatus = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stronlinestatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stronlinestatus().data(), this->stronlinestatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceStatus.strOnlineStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeviceStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeviceStatus)
  return false;
#undef DO_
}

void DeviceStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeviceStatus)
  // .Interactive.Message.Device deviceInfo = 1;
  if (this->has_deviceinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deviceinfo_, output);
  }

  // string strOnlineStatus = 2;
  if (this->stronlinestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stronlinestatus().data(), this->stronlinestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceStatus.strOnlineStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stronlinestatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeviceStatus)
}

::google::protobuf::uint8* DeviceStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeviceStatus)
  // .Interactive.Message.Device deviceInfo = 1;
  if (this->has_deviceinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->deviceinfo_, false, target);
  }

  // string strOnlineStatus = 2;
  if (this->stronlinestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stronlinestatus().data(), this->stronlinestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceStatus.strOnlineStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stronlinestatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeviceStatus)
  return target;
}

size_t DeviceStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeviceStatus)
  size_t total_size = 0;

  // string strOnlineStatus = 2;
  if (this->stronlinestatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stronlinestatus());
  }

  // .Interactive.Message.Device deviceInfo = 1;
  if (this->has_deviceinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deviceinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeviceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeviceStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeviceStatus)
    MergeFrom(*source);
  }
}

void DeviceStatus::MergeFrom(const DeviceStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeviceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.stronlinestatus().size() > 0) {

    stronlinestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stronlinestatus_);
  }
  if (from.has_deviceinfo()) {
    mutable_deviceinfo()->::Interactive::Message::Device::MergeFrom(from.deviceinfo());
  }
}

void DeviceStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeviceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceStatus::CopyFrom(const DeviceStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeviceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceStatus::IsInitialized() const {
  return true;
}

void DeviceStatus::Swap(DeviceStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceStatus::InternalSwap(DeviceStatus* other) {
  stronlinestatus_.Swap(&other->stronlinestatus_);
  std::swap(deviceinfo_, other->deviceinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceStatus::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceStatus

// .Interactive.Message.Device deviceInfo = 1;
bool DeviceStatus::has_deviceinfo() const {
  return this != internal_default_instance() && deviceinfo_ != NULL;
}
void DeviceStatus::clear_deviceinfo() {
  if (GetArenaNoVirtual() == NULL && deviceinfo_ != NULL) delete deviceinfo_;
  deviceinfo_ = NULL;
}
const ::Interactive::Message::Device& DeviceStatus::deviceinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceStatus.deviceInfo)
  return deviceinfo_ != NULL ? *deviceinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* DeviceStatus::mutable_deviceinfo() {
  
  if (deviceinfo_ == NULL) {
    deviceinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceStatus.deviceInfo)
  return deviceinfo_;
}
::Interactive::Message::Device* DeviceStatus::release_deviceinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceStatus.deviceInfo)
  
  ::Interactive::Message::Device* temp = deviceinfo_;
  deviceinfo_ = NULL;
  return temp;
}
void DeviceStatus::set_allocated_deviceinfo(::Interactive::Message::Device* deviceinfo) {
  delete deviceinfo_;
  deviceinfo_ = deviceinfo;
  if (deviceinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceStatus.deviceInfo)
}

// string strOnlineStatus = 2;
void DeviceStatus::clear_stronlinestatus() {
  stronlinestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceStatus::stronlinestatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceStatus.strOnlineStatus)
  return stronlinestatus_.GetNoArena();
}
void DeviceStatus::set_stronlinestatus(const ::std::string& value) {
  
  stronlinestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceStatus.strOnlineStatus)
}
#if LANG_CXX11
void DeviceStatus::set_stronlinestatus(::std::string&& value) {
  
  stronlinestatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceStatus.strOnlineStatus)
}
#endif
void DeviceStatus::set_stronlinestatus(const char* value) {
  
  stronlinestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceStatus.strOnlineStatus)
}
void DeviceStatus::set_stronlinestatus(const char* value, size_t size) {
  
  stronlinestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceStatus.strOnlineStatus)
}
::std::string* DeviceStatus::mutable_stronlinestatus() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceStatus.strOnlineStatus)
  return stronlinestatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceStatus::release_stronlinestatus() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceStatus.strOnlineStatus)
  
  return stronlinestatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceStatus::set_allocated_stronlinestatus(::std::string* stronlinestatus) {
  if (stronlinestatus != NULL) {
    
  } else {
    
  }
  stronlinestatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stronlinestatus);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceStatus.strOnlineStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kStrUserIDFieldNumber;
const int User::kStrUserNameFieldNumber;
const int User::kStrUserPasswordFieldNumber;
const int User::kUiTypeInfoFieldNumber;
const int User::kStrCreatedateFieldNumber;
const int User::kUiStatusFieldNumber;
const int User::kStrExtendFieldNumber;
const int User::kStrAliasNameFieldNumber;
const int User::kStrEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  struserpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserpassword().size() > 0) {
    struserpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserpassword_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  straliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straliasname().size() > 0) {
    straliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straliasname_);
  }
  stremail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stremail().size() > 0) {
    stremail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stremail_);
  }
  ::memcpy(&uitypeinfo_, &from.uitypeinfo_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.User)
}

void User::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stremail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

User::~User() {
  // @@protoc_insertion_point(destructor:Interactive.Message.User)
  SharedDtor();
}

void User::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straliasname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stremail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[3].descriptor;
}

const User& User::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.User)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stremail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserPassword = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserpassword().data(), this->struserpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strUserPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiTypeInfo = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitypeinfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAliasName = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straliasname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straliasname().data(), this->straliasname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strAliasName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEmail = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stremail().data(), this->stremail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strEmail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.User)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strusername(), output);
  }

  // string strUserPassword = 3;
  if (this->struserpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserpassword().data(), this->struserpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->struserpassword(), output);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uitypeinfo(), output);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uistatus(), output);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strextend(), output);
  }

  // string strAliasName = 8;
  if (this->straliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straliasname().data(), this->straliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strAliasName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->straliasname(), output);
  }

  // string strEmail = 9;
  if (this->stremail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stremail().data(), this->stremail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strEmail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->stremail(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.User)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strusername(), target);
  }

  // string strUserPassword = 3;
  if (this->struserpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserpassword().data(), this->struserpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->struserpassword(), target);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uitypeinfo(), target);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uistatus(), target);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strextend(), target);
  }

  // string strAliasName = 8;
  if (this->straliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straliasname().data(), this->straliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strAliasName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->straliasname(), target);
  }

  // string strEmail = 9;
  if (this->stremail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stremail().data(), this->stremail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strEmail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->stremail(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.User)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strUserPassword = 3;
  if (this->struserpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserpassword());
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // string strAliasName = 8;
  if (this->straliasname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straliasname());
  }

  // string strEmail = 9;
  if (this->stremail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stremail());
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitypeinfo());
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.struserpassword().size() > 0) {

    struserpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserpassword_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.straliasname().size() > 0) {

    straliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straliasname_);
  }
  if (from.stremail().size() > 0) {

    stremail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stremail_);
  }
  if (from.uitypeinfo() != 0) {
    set_uitypeinfo(from.uitypeinfo());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  struserid_.Swap(&other->struserid_);
  strusername_.Swap(&other->strusername_);
  struserpassword_.Swap(&other->struserpassword_);
  strcreatedate_.Swap(&other->strcreatedate_);
  strextend_.Swap(&other->strextend_);
  straliasname_.Swap(&other->straliasname_);
  stremail_.Swap(&other->stremail_);
  std::swap(uitypeinfo_, other->uitypeinfo_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// string strUserID = 1;
void User::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserID)
  return struserid_.GetNoArena();
}
void User::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserID)
}
#if LANG_CXX11
void User::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserID)
}
#endif
void User::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserID)
}
void User::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserID)
}
::std::string* User::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserID)
}

// string strUserName = 2;
void User::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserName)
  return strusername_.GetNoArena();
}
void User::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserName)
}
#if LANG_CXX11
void User::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserName)
}
#endif
void User::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserName)
}
void User::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserName)
}
::std::string* User::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserName)
}

// string strUserPassword = 3;
void User::clear_struserpassword() {
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::struserpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserPassword)
  return struserpassword_.GetNoArena();
}
void User::set_struserpassword(const ::std::string& value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserPassword)
}
#if LANG_CXX11
void User::set_struserpassword(::std::string&& value) {
  
  struserpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserPassword)
}
#endif
void User::set_struserpassword(const char* value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserPassword)
}
void User::set_struserpassword(const char* value, size_t size) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserPassword)
}
::std::string* User::mutable_struserpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserPassword)
  return struserpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_struserpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserPassword)
  
  return struserpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_struserpassword(::std::string* struserpassword) {
  if (struserpassword != NULL) {
    
  } else {
    
  }
  struserpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserPassword)
}

// uint32 uiTypeInfo = 4;
void User::clear_uitypeinfo() {
  uitypeinfo_ = 0u;
}
::google::protobuf::uint32 User::uitypeinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.uiTypeInfo)
  return uitypeinfo_;
}
void User::set_uitypeinfo(::google::protobuf::uint32 value) {
  
  uitypeinfo_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.User.uiTypeInfo)
}

// string strCreatedate = 5;
void User::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void User::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strCreatedate)
}
#if LANG_CXX11
void User::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strCreatedate)
}
#endif
void User::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strCreatedate)
}
void User::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strCreatedate)
}
::std::string* User::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strCreatedate)
}

// uint32 uiStatus = 6;
void User::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 User::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.uiStatus)
  return uistatus_;
}
void User::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.User.uiStatus)
}

// string strExtend = 7;
void User::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strExtend)
  return strextend_.GetNoArena();
}
void User::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strExtend)
}
#if LANG_CXX11
void User::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strExtend)
}
#endif
void User::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strExtend)
}
void User::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strExtend)
}
::std::string* User::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strExtend)
}

// string strAliasName = 8;
void User::clear_straliasname() {
  straliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::straliasname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strAliasName)
  return straliasname_.GetNoArena();
}
void User::set_straliasname(const ::std::string& value) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strAliasName)
}
#if LANG_CXX11
void User::set_straliasname(::std::string&& value) {
  
  straliasname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strAliasName)
}
#endif
void User::set_straliasname(const char* value) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strAliasName)
}
void User::set_straliasname(const char* value, size_t size) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strAliasName)
}
::std::string* User::mutable_straliasname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strAliasName)
  return straliasname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_straliasname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strAliasName)
  
  return straliasname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_straliasname(::std::string* straliasname) {
  if (straliasname != NULL) {
    
  } else {
    
  }
  straliasname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straliasname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strAliasName)
}

// string strEmail = 9;
void User::clear_stremail() {
  stremail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::stremail() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strEmail)
  return stremail_.GetNoArena();
}
void User::set_stremail(const ::std::string& value) {
  
  stremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strEmail)
}
#if LANG_CXX11
void User::set_stremail(::std::string&& value) {
  
  stremail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strEmail)
}
#endif
void User::set_stremail(const char* value) {
  
  stremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strEmail)
}
void User::set_stremail(const char* value, size_t size) {
  
  stremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strEmail)
}
::std::string* User::mutable_stremail() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strEmail)
  return stremail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_stremail() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strEmail)
  
  return stremail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_stremail(::std::string* stremail) {
  if (stremail != NULL) {
    
  } else {
    
  }
  stremail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stremail);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strEmail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Relation::kStrUserIDFieldNumber;
const int Relation::kStrDevIDFieldNumber;
const int Relation::kUiRelationFieldNumber;
const int Relation::kStrBeginDateFieldNumber;
const int Relation::kStrEndDateFieldNumber;
const int Relation::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Relation::Relation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Relation)
}
Relation::Relation(const Relation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uirelation_ = from.uirelation_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Relation)
}

void Relation::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uirelation_ = 0u;
  _cached_size_ = 0;
}

Relation::~Relation() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Relation)
  SharedDtor();
}

void Relation::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Relation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Relation::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[4].descriptor;
}

const Relation& Relation::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Relation* Relation::New(::google::protobuf::Arena* arena) const {
  Relation* n = new Relation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Relation::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Relation)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uirelation_ = 0u;
}

bool Relation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Relation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiRelation = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uirelation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBeginDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strBeginDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndDate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strEndDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Relation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Relation)
  return false;
#undef DO_
}

void Relation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Relation)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevid(), output);
  }

  // uint32 uiRelation = 3;
  if (this->uirelation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uirelation(), output);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strBeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strbegindate(), output);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strenddate(), output);
  }

  // string strValue = 6;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Relation)
}

::google::protobuf::uint8* Relation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Relation)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevid(), target);
  }

  // uint32 uiRelation = 3;
  if (this->uirelation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uirelation(), target);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strBeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strbegindate(), target);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strenddate(), target);
  }

  // string strValue = 6;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Relation)
  return target;
}

size_t Relation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Relation)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // string strValue = 6;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiRelation = 3;
  if (this->uirelation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uirelation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Relation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  const Relation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Relation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Relation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Relation)
    MergeFrom(*source);
  }
}

void Relation::MergeFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uirelation() != 0) {
    set_uirelation(from.uirelation());
  }
}

void Relation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Relation::CopyFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relation::IsInitialized() const {
  return true;
}

void Relation::Swap(Relation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Relation::InternalSwap(Relation* other) {
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uirelation_, other->uirelation_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Relation::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Relation

// string strUserID = 1;
void Relation::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strUserID)
  return struserid_.GetNoArena();
}
void Relation::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strUserID)
}
#if LANG_CXX11
void Relation::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strUserID)
}
#endif
void Relation::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strUserID)
}
void Relation::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strUserID)
}
::std::string* Relation::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strUserID)
}

// string strDevID = 2;
void Relation::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strDevID)
  return strdevid_.GetNoArena();
}
void Relation::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strDevID)
}
#if LANG_CXX11
void Relation::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strDevID)
}
#endif
void Relation::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strDevID)
}
void Relation::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strDevID)
}
::std::string* Relation::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strDevID)
}

// uint32 uiRelation = 3;
void Relation::clear_uirelation() {
  uirelation_ = 0u;
}
::google::protobuf::uint32 Relation::uirelation() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.uiRelation)
  return uirelation_;
}
void Relation::set_uirelation(::google::protobuf::uint32 value) {
  
  uirelation_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.uiRelation)
}

// string strBeginDate = 4;
void Relation::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strBeginDate)
  return strbegindate_.GetNoArena();
}
void Relation::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strBeginDate)
}
#if LANG_CXX11
void Relation::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strBeginDate)
}
#endif
void Relation::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strBeginDate)
}
void Relation::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strBeginDate)
}
::std::string* Relation::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strBeginDate)
}

// string strEndDate = 5;
void Relation::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strEndDate)
  return strenddate_.GetNoArena();
}
void Relation::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strEndDate)
}
#if LANG_CXX11
void Relation::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strEndDate)
}
#endif
void Relation::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strEndDate)
}
void Relation::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strEndDate)
}
::std::string* Relation::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strEndDate)
}

// string strValue = 6;
void Relation::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strValue)
  return strvalue_.GetNoArena();
}
void Relation::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strValue)
}
#if LANG_CXX11
void Relation::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strValue)
}
#endif
void Relation::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strValue)
}
void Relation::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strValue)
}
::std::string* Relation::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kStrFileIDFieldNumber;
const int File::kStrUserIDFieldNumber;
const int File::kStrDevIDFieldNumber;
const int File::kStrRemoteFileIDFieldNumber;
const int File::kStrDownloadUrlFieldNumber;
const int File::kStrFileNameFieldNumber;
const int File::kStrSuffixNameFieldNumber;
const int File::kUiFileSizeFieldNumber;
const int File::kUiBusinessTypeFieldNumber;
const int File::kStrFileCreatedateFieldNumber;
const int File::kStrCreatedateFieldNumber;
const int File::kUiStatusFieldNumber;
const int File::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.File)
}
File::File(const File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strremotefileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strremotefileid().size() > 0) {
    strremotefileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strremotefileid_);
  }
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdownloadurl().size() > 0) {
    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfilename().size() > 0) {
    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  strsuffixname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsuffixname().size() > 0) {
    strsuffixname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsuffixname_);
  }
  strfilecreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfilecreatedate().size() > 0) {
    strfilecreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilecreatedate_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  ::memcpy(&uifilesize_, &from.uifilesize_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.File)
}

void File::SharedCtor() {
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strremotefileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsuffixname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilecreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uifilesize_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

File::~File() {
  // @@protoc_insertion_point(destructor:Interactive.Message.File)
  SharedDtor();
}

void File::SharedDtor() {
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strremotefileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsuffixname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilecreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[5].descriptor;
}

const File& File::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

File* File::New(::google::protobuf::Arena* arena) const {
  File* n = new File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.File)
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strremotefileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsuffixname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uifilesize_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
}

bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strFileID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRemoteFileID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strremotefileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strremotefileid().data(), this->strremotefileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strRemoteFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDownloadUrl = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdownloadurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdownloadurl().data(), this->strdownloadurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strDownloadUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileName = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilename().data(), this->strfilename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strFileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSuffixName = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsuffixname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsuffixname().data(), this->strsuffixname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strSuffixName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uiFileSize = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uifilesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBusinessType = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileCreatedate = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilecreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilecreatedate().data(), this->strfilecreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strFileCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.File)
  return false;
#undef DO_
}

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.File)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strfileid(), output);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->struserid(), output);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevid(), output);
  }

  // string strRemoteFileID = 4;
  if (this->strremotefileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strremotefileid().data(), this->strremotefileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strRemoteFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strremotefileid(), output);
  }

  // string strDownloadUrl = 5;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strdownloadurl(), output);
  }

  // string strFileName = 6;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strfilename(), output);
  }

  // string strSuffixName = 7;
  if (this->strsuffixname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsuffixname().data(), this->strsuffixname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strSuffixName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strsuffixname(), output);
  }

  // uint64 uiFileSize = 8;
  if (this->uifilesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->uifilesize(), output);
  }

  // uint32 uiBusinessType = 9;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uibusinesstype(), output);
  }

  // string strFileCreatedate = 10;
  if (this->strfilecreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilecreatedate().data(), this->strfilecreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strfilecreatedate(), output);
  }

  // string strCreatedate = 11;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 12;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->uistatus(), output);
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.File)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strfileid(), target);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->struserid(), target);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevid(), target);
  }

  // string strRemoteFileID = 4;
  if (this->strremotefileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strremotefileid().data(), this->strremotefileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strRemoteFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strremotefileid(), target);
  }

  // string strDownloadUrl = 5;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strdownloadurl(), target);
  }

  // string strFileName = 6;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strfilename(), target);
  }

  // string strSuffixName = 7;
  if (this->strsuffixname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsuffixname().data(), this->strsuffixname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strSuffixName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strsuffixname(), target);
  }

  // uint64 uiFileSize = 8;
  if (this->uifilesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->uifilesize(), target);
  }

  // uint32 uiBusinessType = 9;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uibusinesstype(), target);
  }

  // string strFileCreatedate = 10;
  if (this->strfilecreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilecreatedate().data(), this->strfilecreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strfilecreatedate(), target);
  }

  // string strCreatedate = 11;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 12;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->uistatus(), target);
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.File)
  return target;
}

size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.File)
  size_t total_size = 0;

  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strRemoteFileID = 4;
  if (this->strremotefileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strremotefileid());
  }

  // string strDownloadUrl = 5;
  if (this->strdownloadurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdownloadurl());
  }

  // string strFileName = 6;
  if (this->strfilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilename());
  }

  // string strSuffixName = 7;
  if (this->strsuffixname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsuffixname());
  }

  // string strFileCreatedate = 10;
  if (this->strfilecreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilecreatedate());
  }

  // string strCreatedate = 11;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // uint64 uiFileSize = 8;
  if (this->uifilesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uifilesize());
  }

  // uint32 uiBusinessType = 9;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  // uint32 uiStatus = 12;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.File)
  GOOGLE_DCHECK_NE(&from, this);
  const File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strremotefileid().size() > 0) {

    strremotefileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strremotefileid_);
  }
  if (from.strdownloadurl().size() > 0) {

    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
  if (from.strfilename().size() > 0) {

    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  if (from.strsuffixname().size() > 0) {

    strsuffixname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsuffixname_);
  }
  if (from.strfilecreatedate().size() > 0) {

    strfilecreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilecreatedate_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.uifilesize() != 0) {
    set_uifilesize(from.uifilesize());
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  strfileid_.Swap(&other->strfileid_);
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strremotefileid_.Swap(&other->strremotefileid_);
  strdownloadurl_.Swap(&other->strdownloadurl_);
  strfilename_.Swap(&other->strfilename_);
  strsuffixname_.Swap(&other->strsuffixname_);
  strfilecreatedate_.Swap(&other->strfilecreatedate_);
  strcreatedate_.Swap(&other->strcreatedate_);
  strextend_.Swap(&other->strextend_);
  std::swap(uifilesize_, other->uifilesize_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File

// string strFileID = 1;
void File::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileID)
  return strfileid_.GetNoArena();
}
void File::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileID)
}
#if LANG_CXX11
void File::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileID)
}
#endif
void File::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileID)
}
void File::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileID)
}
::std::string* File::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileID)
}

// string strUserID = 2;
void File::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strUserID)
  return struserid_.GetNoArena();
}
void File::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strUserID)
}
#if LANG_CXX11
void File::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strUserID)
}
#endif
void File::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strUserID)
}
void File::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strUserID)
}
::std::string* File::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strUserID)
}

// string strDevID = 3;
void File::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strDevID)
  return strdevid_.GetNoArena();
}
void File::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strDevID)
}
#if LANG_CXX11
void File::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strDevID)
}
#endif
void File::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strDevID)
}
void File::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strDevID)
}
::std::string* File::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strDevID)
}

// string strRemoteFileID = 4;
void File::clear_strremotefileid() {
  strremotefileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strremotefileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strRemoteFileID)
  return strremotefileid_.GetNoArena();
}
void File::set_strremotefileid(const ::std::string& value) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strRemoteFileID)
}
#if LANG_CXX11
void File::set_strremotefileid(::std::string&& value) {
  
  strremotefileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strRemoteFileID)
}
#endif
void File::set_strremotefileid(const char* value) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strRemoteFileID)
}
void File::set_strremotefileid(const char* value, size_t size) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strRemoteFileID)
}
::std::string* File::mutable_strremotefileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strRemoteFileID)
  return strremotefileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strremotefileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strRemoteFileID)
  
  return strremotefileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strremotefileid(::std::string* strremotefileid) {
  if (strremotefileid != NULL) {
    
  } else {
    
  }
  strremotefileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strremotefileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strRemoteFileID)
}

// string strDownloadUrl = 5;
void File::clear_strdownloadurl() {
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strdownloadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strDownloadUrl)
  return strdownloadurl_.GetNoArena();
}
void File::set_strdownloadurl(const ::std::string& value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strDownloadUrl)
}
#if LANG_CXX11
void File::set_strdownloadurl(::std::string&& value) {
  
  strdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strDownloadUrl)
}
#endif
void File::set_strdownloadurl(const char* value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strDownloadUrl)
}
void File::set_strdownloadurl(const char* value, size_t size) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strDownloadUrl)
}
::std::string* File::mutable_strdownloadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strDownloadUrl)
  return strdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strdownloadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strDownloadUrl)
  
  return strdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strdownloadurl(::std::string* strdownloadurl) {
  if (strdownloadurl != NULL) {
    
  } else {
    
  }
  strdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strDownloadUrl)
}

// string strFileName = 6;
void File::clear_strfilename() {
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strfilename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileName)
  return strfilename_.GetNoArena();
}
void File::set_strfilename(const ::std::string& value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileName)
}
#if LANG_CXX11
void File::set_strfilename(::std::string&& value) {
  
  strfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileName)
}
#endif
void File::set_strfilename(const char* value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileName)
}
void File::set_strfilename(const char* value, size_t size) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileName)
}
::std::string* File::mutable_strfilename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileName)
  return strfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strfilename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileName)
  
  return strfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strfilename(::std::string* strfilename) {
  if (strfilename != NULL) {
    
  } else {
    
  }
  strfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileName)
}

// string strSuffixName = 7;
void File::clear_strsuffixname() {
  strsuffixname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strsuffixname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strSuffixName)
  return strsuffixname_.GetNoArena();
}
void File::set_strsuffixname(const ::std::string& value) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strSuffixName)
}
#if LANG_CXX11
void File::set_strsuffixname(::std::string&& value) {
  
  strsuffixname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strSuffixName)
}
#endif
void File::set_strsuffixname(const char* value) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strSuffixName)
}
void File::set_strsuffixname(const char* value, size_t size) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strSuffixName)
}
::std::string* File::mutable_strsuffixname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strSuffixName)
  return strsuffixname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strsuffixname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strSuffixName)
  
  return strsuffixname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strsuffixname(::std::string* strsuffixname) {
  if (strsuffixname != NULL) {
    
  } else {
    
  }
  strsuffixname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsuffixname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strSuffixName)
}

// uint64 uiFileSize = 8;
void File::clear_uifilesize() {
  uifilesize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 File::uifilesize() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiFileSize)
  return uifilesize_;
}
void File::set_uifilesize(::google::protobuf::uint64 value) {
  
  uifilesize_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiFileSize)
}

// uint32 uiBusinessType = 9;
void File::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 File::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiBusinessType)
  return uibusinesstype_;
}
void File::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiBusinessType)
}

// string strFileCreatedate = 10;
void File::clear_strfilecreatedate() {
  strfilecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strfilecreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileCreatedate)
  return strfilecreatedate_.GetNoArena();
}
void File::set_strfilecreatedate(const ::std::string& value) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileCreatedate)
}
#if LANG_CXX11
void File::set_strfilecreatedate(::std::string&& value) {
  
  strfilecreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileCreatedate)
}
#endif
void File::set_strfilecreatedate(const char* value) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileCreatedate)
}
void File::set_strfilecreatedate(const char* value, size_t size) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileCreatedate)
}
::std::string* File::mutable_strfilecreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileCreatedate)
  return strfilecreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strfilecreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileCreatedate)
  
  return strfilecreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strfilecreatedate(::std::string* strfilecreatedate) {
  if (strfilecreatedate != NULL) {
    
  } else {
    
  }
  strfilecreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilecreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileCreatedate)
}

// string strCreatedate = 11;
void File::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void File::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strCreatedate)
}
#if LANG_CXX11
void File::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strCreatedate)
}
#endif
void File::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strCreatedate)
}
void File::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strCreatedate)
}
::std::string* File::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strCreatedate)
}

// uint32 uiStatus = 12;
void File::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 File::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiStatus)
  return uistatus_;
}
void File::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiStatus)
}

// string strExtend = 13;
void File::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strExtend)
  return strextend_.GetNoArena();
}
void File::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strExtend)
}
#if LANG_CXX11
void File::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strExtend)
}
#endif
void File::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strExtend)
}
void File::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strExtend)
}
::std::string* File::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileUrl::kStrFileIDFieldNumber;
const int FileUrl::kStrDownloadUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileUrl::FileUrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.FileUrl)
}
FileUrl::FileUrl(const FileUrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdownloadurl().size() > 0) {
    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.FileUrl)
}

void FileUrl::SharedCtor() {
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FileUrl::~FileUrl() {
  // @@protoc_insertion_point(destructor:Interactive.Message.FileUrl)
  SharedDtor();
}

void FileUrl::SharedDtor() {
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileUrl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileUrl::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[6].descriptor;
}

const FileUrl& FileUrl::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileUrl* FileUrl::New(::google::protobuf::Arena* arena) const {
  FileUrl* n = new FileUrl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.FileUrl)
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileUrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.FileUrl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strFileID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.FileUrl.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDownloadUrl = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdownloadurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdownloadurl().data(), this->strdownloadurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.FileUrl.strDownloadUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.FileUrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.FileUrl)
  return false;
#undef DO_
}

void FileUrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.FileUrl)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strfileid(), output);
  }

  // string strDownloadUrl = 2;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdownloadurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.FileUrl)
}

::google::protobuf::uint8* FileUrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.FileUrl)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strfileid(), target);
  }

  // string strDownloadUrl = 2;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdownloadurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.FileUrl)
  return target;
}

size_t FileUrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.FileUrl)
  size_t total_size = 0;

  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strDownloadUrl = 2;
  if (this->strdownloadurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdownloadurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileUrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.FileUrl)
  GOOGLE_DCHECK_NE(&from, this);
  const FileUrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileUrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.FileUrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.FileUrl)
    MergeFrom(*source);
  }
}

void FileUrl::MergeFrom(const FileUrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.FileUrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.strdownloadurl().size() > 0) {

    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
}

void FileUrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.FileUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileUrl::CopyFrom(const FileUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.FileUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUrl::IsInitialized() const {
  return true;
}

void FileUrl::Swap(FileUrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileUrl::InternalSwap(FileUrl* other) {
  strfileid_.Swap(&other->strfileid_);
  strdownloadurl_.Swap(&other->strdownloadurl_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileUrl::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileUrl

// string strFileID = 1;
void FileUrl::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileUrl::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.FileUrl.strFileID)
  return strfileid_.GetNoArena();
}
void FileUrl::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.FileUrl.strFileID)
}
#if LANG_CXX11
void FileUrl::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.FileUrl.strFileID)
}
#endif
void FileUrl::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.FileUrl.strFileID)
}
void FileUrl::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.FileUrl.strFileID)
}
::std::string* FileUrl::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.FileUrl.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileUrl::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.FileUrl.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileUrl::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.FileUrl.strFileID)
}

// string strDownloadUrl = 2;
void FileUrl::clear_strdownloadurl() {
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileUrl::strdownloadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.FileUrl.strDownloadUrl)
  return strdownloadurl_.GetNoArena();
}
void FileUrl::set_strdownloadurl(const ::std::string& value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.FileUrl.strDownloadUrl)
}
#if LANG_CXX11
void FileUrl::set_strdownloadurl(::std::string&& value) {
  
  strdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.FileUrl.strDownloadUrl)
}
#endif
void FileUrl::set_strdownloadurl(const char* value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.FileUrl.strDownloadUrl)
}
void FileUrl::set_strdownloadurl(const char* value, size_t size) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.FileUrl.strDownloadUrl)
}
::std::string* FileUrl::mutable_strdownloadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.FileUrl.strDownloadUrl)
  return strdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileUrl::release_strdownloadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.FileUrl.strDownloadUrl)
  
  return strdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileUrl::set_allocated_strdownloadurl(::std::string* strdownloadurl) {
  if (strdownloadurl != NULL) {
    
  } else {
    
  }
  strdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.FileUrl.strDownloadUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAccessRecord::kStrAccessIDFieldNumber;
const int DeviceAccessRecord::kStrClusterIDFieldNumber;
const int DeviceAccessRecord::kStrDeviceIDFieldNumber;
const int DeviceAccessRecord::kStrDeviceNameFieldNumber;
const int DeviceAccessRecord::kUiDeviceTypeFieldNumber;
const int DeviceAccessRecord::kStrLoginTimeFieldNumber;
const int DeviceAccessRecord::kStrLogoutTimeFieldNumber;
const int DeviceAccessRecord::kUiOnlineDurationFieldNumber;
const int DeviceAccessRecord::kStrCreateDateFieldNumber;
const int DeviceAccessRecord::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAccessRecord::DeviceAccessRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeviceAccessRecord)
}
DeviceAccessRecord::DeviceAccessRecord(const DeviceAccessRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessid().size() > 0) {
    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strdevicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicename().size() > 0) {
    strdevicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicename_);
  }
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogintime().size() > 0) {
    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogouttime().size() > 0) {
    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  ::memcpy(&uidevicetype_, &from.uidevicetype_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeviceAccessRecord)
}

void DeviceAccessRecord::SharedCtor() {
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

DeviceAccessRecord::~DeviceAccessRecord() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeviceAccessRecord)
  SharedDtor();
}

void DeviceAccessRecord::SharedDtor() {
  straccessid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceAccessRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceAccessRecord::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[7].descriptor;
}

const DeviceAccessRecord& DeviceAccessRecord::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceAccessRecord* DeviceAccessRecord::New(::google::protobuf::Arena* arena) const {
  DeviceAccessRecord* n = new DeviceAccessRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceAccessRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeviceAccessRecord)
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uistatus_));
}

bool DeviceAccessRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeviceAccessRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessid().data(), this->straccessid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strAccessID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strClusterID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicename().data(), this->strdevicename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strDeviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLoginTime = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogintime().data(), this->strlogintime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strLoginTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLogoutTime = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogouttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogouttime().data(), this->strlogouttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strLogoutTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiOnlineDuration = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uionlineduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreateDate = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceAccessRecord.strCreateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeviceAccessRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeviceAccessRecord)
  return false;
#undef DO_
}

void DeviceAccessRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeviceAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strAccessID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessid(), output);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strclusterid(), output);
  }

  // string strDeviceID = 3;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdeviceid(), output);
  }

  // string strDeviceName = 4;
  if (this->strdevicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicename().data(), this->strdevicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strDeviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strdevicename(), output);
  }

  // uint32 uiDeviceType = 5;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uidevicetype(), output);
  }

  // string strLoginTime = 6;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strLoginTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strlogintime(), output);
  }

  // string strLogoutTime = 7;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strLogoutTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strlogouttime(), output);
  }

  // uint32 uiOnlineDuration = 8;
  if (this->uionlineduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uionlineduration(), output);
  }

  // string strCreateDate = 9;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strCreateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 10;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeviceAccessRecord)
}

::google::protobuf::uint8* DeviceAccessRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeviceAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strAccessID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessid(), target);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strclusterid(), target);
  }

  // string strDeviceID = 3;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdeviceid(), target);
  }

  // string strDeviceName = 4;
  if (this->strdevicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicename().data(), this->strdevicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strDeviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdevicename(), target);
  }

  // uint32 uiDeviceType = 5;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uidevicetype(), target);
  }

  // string strLoginTime = 6;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strLoginTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strlogintime(), target);
  }

  // string strLogoutTime = 7;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strLogoutTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strlogouttime(), target);
  }

  // uint32 uiOnlineDuration = 8;
  if (this->uionlineduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uionlineduration(), target);
  }

  // string strCreateDate = 9;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceAccessRecord.strCreateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 10;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeviceAccessRecord)
  return target;
}

size_t DeviceAccessRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeviceAccessRecord)
  size_t total_size = 0;

  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessid());
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strDeviceID = 3;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strDeviceName = 4;
  if (this->strdevicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicename());
  }

  // string strLoginTime = 6;
  if (this->strlogintime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogintime());
  }

  // string strLogoutTime = 7;
  if (this->strlogouttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogouttime());
  }

  // string strCreateDate = 9;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // uint32 uiDeviceType = 5;
  if (this->uidevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  // uint32 uiOnlineDuration = 8;
  if (this->uionlineduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uionlineduration());
  }

  // uint32 uiStatus = 10;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceAccessRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeviceAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAccessRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAccessRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeviceAccessRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeviceAccessRecord)
    MergeFrom(*source);
  }
}

void DeviceAccessRecord::MergeFrom(const DeviceAccessRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeviceAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessid().size() > 0) {

    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strdevicename().size() > 0) {

    strdevicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicename_);
  }
  if (from.strlogintime().size() > 0) {

    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  if (from.strlogouttime().size() > 0) {

    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
  if (from.uionlineduration() != 0) {
    set_uionlineduration(from.uionlineduration());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void DeviceAccessRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeviceAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAccessRecord::CopyFrom(const DeviceAccessRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeviceAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAccessRecord::IsInitialized() const {
  return true;
}

void DeviceAccessRecord::Swap(DeviceAccessRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAccessRecord::InternalSwap(DeviceAccessRecord* other) {
  straccessid_.Swap(&other->straccessid_);
  strclusterid_.Swap(&other->strclusterid_);
  strdeviceid_.Swap(&other->strdeviceid_);
  strdevicename_.Swap(&other->strdevicename_);
  strlogintime_.Swap(&other->strlogintime_);
  strlogouttime_.Swap(&other->strlogouttime_);
  strcreatedate_.Swap(&other->strcreatedate_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(uionlineduration_, other->uionlineduration_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceAccessRecord::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceAccessRecord

// string strAccessID = 1;
void DeviceAccessRecord::clear_straccessid() {
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::straccessid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strAccessID)
  return straccessid_.GetNoArena();
}
void DeviceAccessRecord::set_straccessid(const ::std::string& value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strAccessID)
}
#if LANG_CXX11
void DeviceAccessRecord::set_straccessid(::std::string&& value) {
  
  straccessid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strAccessID)
}
#endif
void DeviceAccessRecord::set_straccessid(const char* value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strAccessID)
}
void DeviceAccessRecord::set_straccessid(const char* value, size_t size) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strAccessID)
}
::std::string* DeviceAccessRecord::mutable_straccessid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strAccessID)
  return straccessid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_straccessid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strAccessID)
  
  return straccessid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_straccessid(::std::string* straccessid) {
  if (straccessid != NULL) {
    
  } else {
    
  }
  straccessid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strAccessID)
}

// string strClusterID = 2;
void DeviceAccessRecord::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strclusterid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strClusterID)
  return strclusterid_.GetNoArena();
}
void DeviceAccessRecord::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strClusterID)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strClusterID)
}
#endif
void DeviceAccessRecord::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strClusterID)
}
void DeviceAccessRecord::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strClusterID)
}
::std::string* DeviceAccessRecord::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strClusterID)
}

// string strDeviceID = 3;
void DeviceAccessRecord::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void DeviceAccessRecord::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strDeviceID)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strDeviceID)
}
#endif
void DeviceAccessRecord::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strDeviceID)
}
void DeviceAccessRecord::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strDeviceID)
}
::std::string* DeviceAccessRecord::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strDeviceID)
}

// string strDeviceName = 4;
void DeviceAccessRecord::clear_strdevicename() {
  strdevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strdevicename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strDeviceName)
  return strdevicename_.GetNoArena();
}
void DeviceAccessRecord::set_strdevicename(const ::std::string& value) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strDeviceName)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strdevicename(::std::string&& value) {
  
  strdevicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strDeviceName)
}
#endif
void DeviceAccessRecord::set_strdevicename(const char* value) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strDeviceName)
}
void DeviceAccessRecord::set_strdevicename(const char* value, size_t size) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strDeviceName)
}
::std::string* DeviceAccessRecord::mutable_strdevicename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strDeviceName)
  return strdevicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strdevicename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strDeviceName)
  
  return strdevicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strdevicename(::std::string* strdevicename) {
  if (strdevicename != NULL) {
    
  } else {
    
  }
  strdevicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strDeviceName)
}

// uint32 uiDeviceType = 5;
void DeviceAccessRecord::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 DeviceAccessRecord::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.uiDeviceType)
  return uidevicetype_;
}
void DeviceAccessRecord::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.uiDeviceType)
}

// string strLoginTime = 6;
void DeviceAccessRecord::clear_strlogintime() {
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strlogintime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strLoginTime)
  return strlogintime_.GetNoArena();
}
void DeviceAccessRecord::set_strlogintime(const ::std::string& value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strLoginTime)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strlogintime(::std::string&& value) {
  
  strlogintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strLoginTime)
}
#endif
void DeviceAccessRecord::set_strlogintime(const char* value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strLoginTime)
}
void DeviceAccessRecord::set_strlogintime(const char* value, size_t size) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strLoginTime)
}
::std::string* DeviceAccessRecord::mutable_strlogintime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strLoginTime)
  return strlogintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strlogintime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strLoginTime)
  
  return strlogintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strlogintime(::std::string* strlogintime) {
  if (strlogintime != NULL) {
    
  } else {
    
  }
  strlogintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogintime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strLoginTime)
}

// string strLogoutTime = 7;
void DeviceAccessRecord::clear_strlogouttime() {
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strlogouttime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strLogoutTime)
  return strlogouttime_.GetNoArena();
}
void DeviceAccessRecord::set_strlogouttime(const ::std::string& value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strLogoutTime)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strlogouttime(::std::string&& value) {
  
  strlogouttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strLogoutTime)
}
#endif
void DeviceAccessRecord::set_strlogouttime(const char* value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strLogoutTime)
}
void DeviceAccessRecord::set_strlogouttime(const char* value, size_t size) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strLogoutTime)
}
::std::string* DeviceAccessRecord::mutable_strlogouttime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strLogoutTime)
  return strlogouttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strlogouttime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strLogoutTime)
  
  return strlogouttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strlogouttime(::std::string* strlogouttime) {
  if (strlogouttime != NULL) {
    
  } else {
    
  }
  strlogouttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogouttime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strLogoutTime)
}

// uint32 uiOnlineDuration = 8;
void DeviceAccessRecord::clear_uionlineduration() {
  uionlineduration_ = 0u;
}
::google::protobuf::uint32 DeviceAccessRecord::uionlineduration() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.uiOnlineDuration)
  return uionlineduration_;
}
void DeviceAccessRecord::set_uionlineduration(::google::protobuf::uint32 value) {
  
  uionlineduration_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.uiOnlineDuration)
}

// string strCreateDate = 9;
void DeviceAccessRecord::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.strCreateDate)
  return strcreatedate_.GetNoArena();
}
void DeviceAccessRecord::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.strCreateDate)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceAccessRecord.strCreateDate)
}
#endif
void DeviceAccessRecord::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceAccessRecord.strCreateDate)
}
void DeviceAccessRecord::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceAccessRecord.strCreateDate)
}
::std::string* DeviceAccessRecord::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceAccessRecord.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceAccessRecord.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceAccessRecord.strCreateDate)
}

// uint32 uiStatus = 10;
void DeviceAccessRecord::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 DeviceAccessRecord::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceAccessRecord.uiStatus)
  return uistatus_;
}
void DeviceAccessRecord::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceAccessRecord.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAccessRecord::kStrAccessIDFieldNumber;
const int UserAccessRecord::kStrClusterIDFieldNumber;
const int UserAccessRecord::kStrUserIDFieldNumber;
const int UserAccessRecord::kStrUserNameFieldNumber;
const int UserAccessRecord::kStrUserAliasnameFieldNumber;
const int UserAccessRecord::kUiClientTypeFieldNumber;
const int UserAccessRecord::kStrLoginTimeFieldNumber;
const int UserAccessRecord::kStrLogoutTimeFieldNumber;
const int UserAccessRecord::kUiOnlineDurationFieldNumber;
const int UserAccessRecord::kStrCreateDateFieldNumber;
const int UserAccessRecord::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAccessRecord::UserAccessRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UserAccessRecord)
}
UserAccessRecord::UserAccessRecord(const UserAccessRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessid().size() > 0) {
    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  struseraliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struseraliasname().size() > 0) {
    struseraliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseraliasname_);
  }
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogintime().size() > 0) {
    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogouttime().size() > 0) {
    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  ::memcpy(&uiclienttype_, &from.uiclienttype_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uiclienttype_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UserAccessRecord)
}

void UserAccessRecord::SharedCtor() {
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseraliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uiclienttype_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uiclienttype_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

UserAccessRecord::~UserAccessRecord() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UserAccessRecord)
  SharedDtor();
}

void UserAccessRecord::SharedDtor() {
  straccessid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseraliasname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserAccessRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserAccessRecord::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[8].descriptor;
}

const UserAccessRecord& UserAccessRecord::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserAccessRecord* UserAccessRecord::New(::google::protobuf::Arena* arena) const {
  UserAccessRecord* n = new UserAccessRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserAccessRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UserAccessRecord)
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseraliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uiclienttype_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uiclienttype_) + sizeof(uistatus_));
}

bool UserAccessRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UserAccessRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessid().data(), this->straccessid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strAccessID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strClusterID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserAliasname = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struseraliasname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struseraliasname().data(), this->struseraliasname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strUserAliasname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiClientType = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiclienttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLoginTime = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogintime().data(), this->strlogintime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strLoginTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLogoutTime = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogouttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogouttime().data(), this->strlogouttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strLogoutTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiOnlineDuration = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uionlineduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreateDate = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UserAccessRecord.strCreateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UserAccessRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UserAccessRecord)
  return false;
#undef DO_
}

void UserAccessRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UserAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strAccessID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessid(), output);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strclusterid(), output);
  }

  // string strUserID = 3;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->struserid(), output);
  }

  // string strUserName = 4;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strusername(), output);
  }

  // string strUserAliasname = 5;
  if (this->struseraliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseraliasname().data(), this->struseraliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strUserAliasname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->struseraliasname(), output);
  }

  // uint32 uiClientType = 6;
  if (this->uiclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uiclienttype(), output);
  }

  // string strLoginTime = 7;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strLoginTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strlogintime(), output);
  }

  // string strLogoutTime = 8;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strLogoutTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strlogouttime(), output);
  }

  // uint32 uiOnlineDuration = 9;
  if (this->uionlineduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uionlineduration(), output);
  }

  // string strCreateDate = 10;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strCreateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 11;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UserAccessRecord)
}

::google::protobuf::uint8* UserAccessRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UserAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strAccessID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessid(), target);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strclusterid(), target);
  }

  // string strUserID = 3;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->struserid(), target);
  }

  // string strUserName = 4;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strusername(), target);
  }

  // string strUserAliasname = 5;
  if (this->struseraliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseraliasname().data(), this->struseraliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strUserAliasname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->struseraliasname(), target);
  }

  // uint32 uiClientType = 6;
  if (this->uiclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uiclienttype(), target);
  }

  // string strLoginTime = 7;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strLoginTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strlogintime(), target);
  }

  // string strLogoutTime = 8;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strLogoutTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strlogouttime(), target);
  }

  // uint32 uiOnlineDuration = 9;
  if (this->uionlineduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uionlineduration(), target);
  }

  // string strCreateDate = 10;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UserAccessRecord.strCreateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 11;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UserAccessRecord)
  return target;
}

size_t UserAccessRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UserAccessRecord)
  size_t total_size = 0;

  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessid());
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strUserID = 3;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strUserName = 4;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strUserAliasname = 5;
  if (this->struseraliasname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struseraliasname());
  }

  // string strLoginTime = 7;
  if (this->strlogintime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogintime());
  }

  // string strLogoutTime = 8;
  if (this->strlogouttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogouttime());
  }

  // string strCreateDate = 10;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // uint32 uiClientType = 6;
  if (this->uiclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiclienttype());
  }

  // uint32 uiOnlineDuration = 9;
  if (this->uionlineduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uionlineduration());
  }

  // uint32 uiStatus = 11;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserAccessRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UserAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAccessRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAccessRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UserAccessRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UserAccessRecord)
    MergeFrom(*source);
  }
}

void UserAccessRecord::MergeFrom(const UserAccessRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UserAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessid().size() > 0) {

    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.struseraliasname().size() > 0) {

    struseraliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseraliasname_);
  }
  if (from.strlogintime().size() > 0) {

    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  if (from.strlogouttime().size() > 0) {

    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.uiclienttype() != 0) {
    set_uiclienttype(from.uiclienttype());
  }
  if (from.uionlineduration() != 0) {
    set_uionlineduration(from.uionlineduration());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void UserAccessRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UserAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAccessRecord::CopyFrom(const UserAccessRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UserAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAccessRecord::IsInitialized() const {
  return true;
}

void UserAccessRecord::Swap(UserAccessRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAccessRecord::InternalSwap(UserAccessRecord* other) {
  straccessid_.Swap(&other->straccessid_);
  strclusterid_.Swap(&other->strclusterid_);
  struserid_.Swap(&other->struserid_);
  strusername_.Swap(&other->strusername_);
  struseraliasname_.Swap(&other->struseraliasname_);
  strlogintime_.Swap(&other->strlogintime_);
  strlogouttime_.Swap(&other->strlogouttime_);
  strcreatedate_.Swap(&other->strcreatedate_);
  std::swap(uiclienttype_, other->uiclienttype_);
  std::swap(uionlineduration_, other->uionlineduration_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserAccessRecord::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserAccessRecord

// string strAccessID = 1;
void UserAccessRecord::clear_straccessid() {
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::straccessid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strAccessID)
  return straccessid_.GetNoArena();
}
void UserAccessRecord::set_straccessid(const ::std::string& value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strAccessID)
}
#if LANG_CXX11
void UserAccessRecord::set_straccessid(::std::string&& value) {
  
  straccessid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strAccessID)
}
#endif
void UserAccessRecord::set_straccessid(const char* value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strAccessID)
}
void UserAccessRecord::set_straccessid(const char* value, size_t size) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strAccessID)
}
::std::string* UserAccessRecord::mutable_straccessid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strAccessID)
  return straccessid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_straccessid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strAccessID)
  
  return straccessid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_straccessid(::std::string* straccessid) {
  if (straccessid != NULL) {
    
  } else {
    
  }
  straccessid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strAccessID)
}

// string strClusterID = 2;
void UserAccessRecord::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strclusterid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strClusterID)
  return strclusterid_.GetNoArena();
}
void UserAccessRecord::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strClusterID)
}
#if LANG_CXX11
void UserAccessRecord::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strClusterID)
}
#endif
void UserAccessRecord::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strClusterID)
}
void UserAccessRecord::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strClusterID)
}
::std::string* UserAccessRecord::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strClusterID)
}

// string strUserID = 3;
void UserAccessRecord::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strUserID)
  return struserid_.GetNoArena();
}
void UserAccessRecord::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strUserID)
}
#if LANG_CXX11
void UserAccessRecord::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strUserID)
}
#endif
void UserAccessRecord::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strUserID)
}
void UserAccessRecord::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strUserID)
}
::std::string* UserAccessRecord::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strUserID)
}

// string strUserName = 4;
void UserAccessRecord::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strUserName)
  return strusername_.GetNoArena();
}
void UserAccessRecord::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strUserName)
}
#if LANG_CXX11
void UserAccessRecord::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strUserName)
}
#endif
void UserAccessRecord::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strUserName)
}
void UserAccessRecord::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strUserName)
}
::std::string* UserAccessRecord::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strUserName)
}

// string strUserAliasname = 5;
void UserAccessRecord::clear_struseraliasname() {
  struseraliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::struseraliasname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strUserAliasname)
  return struseraliasname_.GetNoArena();
}
void UserAccessRecord::set_struseraliasname(const ::std::string& value) {
  
  struseraliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strUserAliasname)
}
#if LANG_CXX11
void UserAccessRecord::set_struseraliasname(::std::string&& value) {
  
  struseraliasname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strUserAliasname)
}
#endif
void UserAccessRecord::set_struseraliasname(const char* value) {
  
  struseraliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strUserAliasname)
}
void UserAccessRecord::set_struseraliasname(const char* value, size_t size) {
  
  struseraliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strUserAliasname)
}
::std::string* UserAccessRecord::mutable_struseraliasname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strUserAliasname)
  return struseraliasname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_struseraliasname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strUserAliasname)
  
  return struseraliasname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_struseraliasname(::std::string* struseraliasname) {
  if (struseraliasname != NULL) {
    
  } else {
    
  }
  struseraliasname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseraliasname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strUserAliasname)
}

// uint32 uiClientType = 6;
void UserAccessRecord::clear_uiclienttype() {
  uiclienttype_ = 0u;
}
::google::protobuf::uint32 UserAccessRecord::uiclienttype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.uiClientType)
  return uiclienttype_;
}
void UserAccessRecord::set_uiclienttype(::google::protobuf::uint32 value) {
  
  uiclienttype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.uiClientType)
}

// string strLoginTime = 7;
void UserAccessRecord::clear_strlogintime() {
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strlogintime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strLoginTime)
  return strlogintime_.GetNoArena();
}
void UserAccessRecord::set_strlogintime(const ::std::string& value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strLoginTime)
}
#if LANG_CXX11
void UserAccessRecord::set_strlogintime(::std::string&& value) {
  
  strlogintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strLoginTime)
}
#endif
void UserAccessRecord::set_strlogintime(const char* value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strLoginTime)
}
void UserAccessRecord::set_strlogintime(const char* value, size_t size) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strLoginTime)
}
::std::string* UserAccessRecord::mutable_strlogintime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strLoginTime)
  return strlogintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strlogintime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strLoginTime)
  
  return strlogintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strlogintime(::std::string* strlogintime) {
  if (strlogintime != NULL) {
    
  } else {
    
  }
  strlogintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogintime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strLoginTime)
}

// string strLogoutTime = 8;
void UserAccessRecord::clear_strlogouttime() {
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strlogouttime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strLogoutTime)
  return strlogouttime_.GetNoArena();
}
void UserAccessRecord::set_strlogouttime(const ::std::string& value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strLogoutTime)
}
#if LANG_CXX11
void UserAccessRecord::set_strlogouttime(::std::string&& value) {
  
  strlogouttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strLogoutTime)
}
#endif
void UserAccessRecord::set_strlogouttime(const char* value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strLogoutTime)
}
void UserAccessRecord::set_strlogouttime(const char* value, size_t size) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strLogoutTime)
}
::std::string* UserAccessRecord::mutable_strlogouttime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strLogoutTime)
  return strlogouttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strlogouttime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strLogoutTime)
  
  return strlogouttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strlogouttime(::std::string* strlogouttime) {
  if (strlogouttime != NULL) {
    
  } else {
    
  }
  strlogouttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogouttime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strLogoutTime)
}

// uint32 uiOnlineDuration = 9;
void UserAccessRecord::clear_uionlineduration() {
  uionlineduration_ = 0u;
}
::google::protobuf::uint32 UserAccessRecord::uionlineduration() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.uiOnlineDuration)
  return uionlineduration_;
}
void UserAccessRecord::set_uionlineduration(::google::protobuf::uint32 value) {
  
  uionlineduration_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.uiOnlineDuration)
}

// string strCreateDate = 10;
void UserAccessRecord::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.strCreateDate)
  return strcreatedate_.GetNoArena();
}
void UserAccessRecord::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.strCreateDate)
}
#if LANG_CXX11
void UserAccessRecord::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UserAccessRecord.strCreateDate)
}
#endif
void UserAccessRecord::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UserAccessRecord.strCreateDate)
}
void UserAccessRecord::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UserAccessRecord.strCreateDate)
}
::std::string* UserAccessRecord::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UserAccessRecord.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UserAccessRecord.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UserAccessRecord.strCreateDate)
}

// uint32 uiStatus = 11;
void UserAccessRecord::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 UserAccessRecord::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UserAccessRecord.uiStatus)
  return uistatus_;
}
void UserAccessRecord::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.UserAccessRecord.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Configuration::kStrCategoryFieldNumber;
const int Configuration::kStrSubCategoryFieldNumber;
const int Configuration::kStrLatestVersionFieldNumber;
const int Configuration::kStrDescriptionFieldNumber;
const int Configuration::kStrForceVersionFieldNumber;
const int Configuration::kStrServerAddressFieldNumber;
const int Configuration::kStrFileNameFieldNumber;
const int Configuration::kStrFileIDFieldNumber;
const int Configuration::kUiFileSizeFieldNumber;
const int Configuration::kStrFilePathFieldNumber;
const int Configuration::kUiLeaseDurationFieldNumber;
const int Configuration::kStrUpdateDateFieldNumber;
const int Configuration::kUiStatusFieldNumber;
const int Configuration::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Configuration::Configuration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Configuration)
}
Configuration::Configuration(const Configuration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcategory().size() > 0) {
    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsubcategory().size() > 0) {
    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  strlatestversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlatestversion().size() > 0) {
    strlatestversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlatestversion_);
  }
  strdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdescription().size() > 0) {
    strdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdescription_);
  }
  strforceversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strforceversion().size() > 0) {
    strforceversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strforceversion_);
  }
  strserveraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strserveraddress().size() > 0) {
    strserveraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserveraddress_);
  }
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfilename().size() > 0) {
    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  strfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfilepath().size() > 0) {
    strfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilepath_);
  }
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupdatedate().size() > 0) {
    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  ::memcpy(&uifilesize_, &from.uifilesize_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Configuration)
}

void Configuration::SharedCtor() {
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlatestversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strforceversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserveraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uifilesize_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

Configuration::~Configuration() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Configuration)
  SharedDtor();
}

void Configuration::SharedDtor() {
  strcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlatestversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strforceversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserveraddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Configuration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[9].descriptor;
}

const Configuration& Configuration::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Configuration* Configuration::New(::google::protobuf::Arena* arena) const {
  Configuration* n = new Configuration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Configuration::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Configuration)
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlatestversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strforceversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserveraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uifilesize_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
}

bool Configuration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Configuration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCategory = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcategory().data(), this->strcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSubCategory = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsubcategory().data(), this->strsubcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strSubCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLatestVersion = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlatestversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlatestversion().data(), this->strlatestversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strLatestVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDescription = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdescription()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdescription().data(), this->strdescription().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strDescription"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strForceVersion = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strforceversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strforceversion().data(), this->strforceversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strForceVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strServerAddress = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserveraddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strserveraddress().data(), this->strserveraddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strServerAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileName = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilename().data(), this->strfilename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strFileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiFileSize = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uifilesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFilePath = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilepath().data(), this->strfilepath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLeaseDuration = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uileaseduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUpdateDate = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupdatedate().data(), this->strupdatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strUpdateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Configuration.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Configuration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Configuration)
  return false;
#undef DO_
}

void Configuration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Configuration)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcategory(), output);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strSubCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strsubcategory(), output);
  }

  // string strLatestVersion = 3;
  if (this->strlatestversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlatestversion().data(), this->strlatestversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strLatestVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strlatestversion(), output);
  }

  // string strDescription = 4;
  if (this->strdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strDescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strdescription(), output);
  }

  // string strForceVersion = 5;
  if (this->strforceversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strforceversion().data(), this->strforceversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strForceVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strforceversion(), output);
  }

  // string strServerAddress = 6;
  if (this->strserveraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserveraddress().data(), this->strserveraddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strServerAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strserveraddress(), output);
  }

  // string strFileName = 7;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strfilename(), output);
  }

  // string strFileID = 8;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strfileid(), output);
  }

  // uint32 uiFileSize = 9;
  if (this->uifilesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uifilesize(), output);
  }

  // string strFilePath = 10;
  if (this->strfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilepath().data(), this->strfilepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strfilepath(), output);
  }

  // uint32 uiLeaseDuration = 11;
  if (this->uileaseduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->uileaseduration(), output);
  }

  // string strUpdateDate = 12;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strUpdateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->strupdatedate(), output);
  }

  // uint32 uiStatus = 13;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->uistatus(), output);
  }

  // string strExtend = 14;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Configuration)
}

::google::protobuf::uint8* Configuration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Configuration)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcategory(), target);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strSubCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strsubcategory(), target);
  }

  // string strLatestVersion = 3;
  if (this->strlatestversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlatestversion().data(), this->strlatestversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strLatestVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strlatestversion(), target);
  }

  // string strDescription = 4;
  if (this->strdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strDescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdescription(), target);
  }

  // string strForceVersion = 5;
  if (this->strforceversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strforceversion().data(), this->strforceversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strForceVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strforceversion(), target);
  }

  // string strServerAddress = 6;
  if (this->strserveraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserveraddress().data(), this->strserveraddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strServerAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strserveraddress(), target);
  }

  // string strFileName = 7;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strfilename(), target);
  }

  // string strFileID = 8;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strfileid(), target);
  }

  // uint32 uiFileSize = 9;
  if (this->uifilesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uifilesize(), target);
  }

  // string strFilePath = 10;
  if (this->strfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilepath().data(), this->strfilepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strfilepath(), target);
  }

  // uint32 uiLeaseDuration = 11;
  if (this->uileaseduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->uileaseduration(), target);
  }

  // string strUpdateDate = 12;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strUpdateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strupdatedate(), target);
  }

  // uint32 uiStatus = 13;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->uistatus(), target);
  }

  // string strExtend = 14;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Configuration.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Configuration)
  return target;
}

size_t Configuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Configuration)
  size_t total_size = 0;

  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcategory());
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsubcategory());
  }

  // string strLatestVersion = 3;
  if (this->strlatestversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlatestversion());
  }

  // string strDescription = 4;
  if (this->strdescription().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdescription());
  }

  // string strForceVersion = 5;
  if (this->strforceversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strforceversion());
  }

  // string strServerAddress = 6;
  if (this->strserveraddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strserveraddress());
  }

  // string strFileName = 7;
  if (this->strfilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilename());
  }

  // string strFileID = 8;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strFilePath = 10;
  if (this->strfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilepath());
  }

  // string strUpdateDate = 12;
  if (this->strupdatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupdatedate());
  }

  // string strExtend = 14;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // uint32 uiFileSize = 9;
  if (this->uifilesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uifilesize());
  }

  // uint32 uiLeaseDuration = 11;
  if (this->uileaseduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uileaseduration());
  }

  // uint32 uiStatus = 13;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  const Configuration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Configuration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Configuration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Configuration)
    MergeFrom(*source);
  }
}

void Configuration::MergeFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcategory().size() > 0) {

    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  if (from.strsubcategory().size() > 0) {

    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  if (from.strlatestversion().size() > 0) {

    strlatestversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlatestversion_);
  }
  if (from.strdescription().size() > 0) {

    strdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdescription_);
  }
  if (from.strforceversion().size() > 0) {

    strforceversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strforceversion_);
  }
  if (from.strserveraddress().size() > 0) {

    strserveraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserveraddress_);
  }
  if (from.strfilename().size() > 0) {

    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.strfilepath().size() > 0) {

    strfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilepath_);
  }
  if (from.strupdatedate().size() > 0) {

    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.uifilesize() != 0) {
    set_uifilesize(from.uifilesize());
  }
  if (from.uileaseduration() != 0) {
    set_uileaseduration(from.uileaseduration());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void Configuration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration::CopyFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration::IsInitialized() const {
  return true;
}

void Configuration::Swap(Configuration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Configuration::InternalSwap(Configuration* other) {
  strcategory_.Swap(&other->strcategory_);
  strsubcategory_.Swap(&other->strsubcategory_);
  strlatestversion_.Swap(&other->strlatestversion_);
  strdescription_.Swap(&other->strdescription_);
  strforceversion_.Swap(&other->strforceversion_);
  strserveraddress_.Swap(&other->strserveraddress_);
  strfilename_.Swap(&other->strfilename_);
  strfileid_.Swap(&other->strfileid_);
  strfilepath_.Swap(&other->strfilepath_);
  strupdatedate_.Swap(&other->strupdatedate_);
  strextend_.Swap(&other->strextend_);
  std::swap(uifilesize_, other->uifilesize_);
  std::swap(uileaseduration_, other->uileaseduration_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Configuration::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Configuration

// string strCategory = 1;
void Configuration::clear_strcategory() {
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strCategory)
  return strcategory_.GetNoArena();
}
void Configuration::set_strcategory(const ::std::string& value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strCategory)
}
#if LANG_CXX11
void Configuration::set_strcategory(::std::string&& value) {
  
  strcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strCategory)
}
#endif
void Configuration::set_strcategory(const char* value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strCategory)
}
void Configuration::set_strcategory(const char* value, size_t size) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strCategory)
}
::std::string* Configuration::mutable_strcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strCategory)
  return strcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strCategory)
  
  return strcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strcategory(::std::string* strcategory) {
  if (strcategory != NULL) {
    
  } else {
    
  }
  strcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strCategory)
}

// string strSubCategory = 2;
void Configuration::clear_strsubcategory() {
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strsubcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strSubCategory)
  return strsubcategory_.GetNoArena();
}
void Configuration::set_strsubcategory(const ::std::string& value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strSubCategory)
}
#if LANG_CXX11
void Configuration::set_strsubcategory(::std::string&& value) {
  
  strsubcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strSubCategory)
}
#endif
void Configuration::set_strsubcategory(const char* value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strSubCategory)
}
void Configuration::set_strsubcategory(const char* value, size_t size) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strSubCategory)
}
::std::string* Configuration::mutable_strsubcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strSubCategory)
  return strsubcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strsubcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strSubCategory)
  
  return strsubcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strsubcategory(::std::string* strsubcategory) {
  if (strsubcategory != NULL) {
    
  } else {
    
  }
  strsubcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsubcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strSubCategory)
}

// string strLatestVersion = 3;
void Configuration::clear_strlatestversion() {
  strlatestversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strlatestversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strLatestVersion)
  return strlatestversion_.GetNoArena();
}
void Configuration::set_strlatestversion(const ::std::string& value) {
  
  strlatestversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strLatestVersion)
}
#if LANG_CXX11
void Configuration::set_strlatestversion(::std::string&& value) {
  
  strlatestversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strLatestVersion)
}
#endif
void Configuration::set_strlatestversion(const char* value) {
  
  strlatestversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strLatestVersion)
}
void Configuration::set_strlatestversion(const char* value, size_t size) {
  
  strlatestversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strLatestVersion)
}
::std::string* Configuration::mutable_strlatestversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strLatestVersion)
  return strlatestversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strlatestversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strLatestVersion)
  
  return strlatestversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strlatestversion(::std::string* strlatestversion) {
  if (strlatestversion != NULL) {
    
  } else {
    
  }
  strlatestversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlatestversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strLatestVersion)
}

// string strDescription = 4;
void Configuration::clear_strdescription() {
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strdescription() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strDescription)
  return strdescription_.GetNoArena();
}
void Configuration::set_strdescription(const ::std::string& value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strDescription)
}
#if LANG_CXX11
void Configuration::set_strdescription(::std::string&& value) {
  
  strdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strDescription)
}
#endif
void Configuration::set_strdescription(const char* value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strDescription)
}
void Configuration::set_strdescription(const char* value, size_t size) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strDescription)
}
::std::string* Configuration::mutable_strdescription() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strDescription)
  return strdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strdescription() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strDescription)
  
  return strdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription != NULL) {
    
  } else {
    
  }
  strdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdescription);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strDescription)
}

// string strForceVersion = 5;
void Configuration::clear_strforceversion() {
  strforceversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strforceversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strForceVersion)
  return strforceversion_.GetNoArena();
}
void Configuration::set_strforceversion(const ::std::string& value) {
  
  strforceversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strForceVersion)
}
#if LANG_CXX11
void Configuration::set_strforceversion(::std::string&& value) {
  
  strforceversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strForceVersion)
}
#endif
void Configuration::set_strforceversion(const char* value) {
  
  strforceversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strForceVersion)
}
void Configuration::set_strforceversion(const char* value, size_t size) {
  
  strforceversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strForceVersion)
}
::std::string* Configuration::mutable_strforceversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strForceVersion)
  return strforceversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strforceversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strForceVersion)
  
  return strforceversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strforceversion(::std::string* strforceversion) {
  if (strforceversion != NULL) {
    
  } else {
    
  }
  strforceversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strforceversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strForceVersion)
}

// string strServerAddress = 6;
void Configuration::clear_strserveraddress() {
  strserveraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strserveraddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strServerAddress)
  return strserveraddress_.GetNoArena();
}
void Configuration::set_strserveraddress(const ::std::string& value) {
  
  strserveraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strServerAddress)
}
#if LANG_CXX11
void Configuration::set_strserveraddress(::std::string&& value) {
  
  strserveraddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strServerAddress)
}
#endif
void Configuration::set_strserveraddress(const char* value) {
  
  strserveraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strServerAddress)
}
void Configuration::set_strserveraddress(const char* value, size_t size) {
  
  strserveraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strServerAddress)
}
::std::string* Configuration::mutable_strserveraddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strServerAddress)
  return strserveraddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strserveraddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strServerAddress)
  
  return strserveraddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strserveraddress(::std::string* strserveraddress) {
  if (strserveraddress != NULL) {
    
  } else {
    
  }
  strserveraddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserveraddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strServerAddress)
}

// string strFileName = 7;
void Configuration::clear_strfilename() {
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strfilename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strFileName)
  return strfilename_.GetNoArena();
}
void Configuration::set_strfilename(const ::std::string& value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strFileName)
}
#if LANG_CXX11
void Configuration::set_strfilename(::std::string&& value) {
  
  strfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strFileName)
}
#endif
void Configuration::set_strfilename(const char* value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strFileName)
}
void Configuration::set_strfilename(const char* value, size_t size) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strFileName)
}
::std::string* Configuration::mutable_strfilename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strFileName)
  return strfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strfilename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strFileName)
  
  return strfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strfilename(::std::string* strfilename) {
  if (strfilename != NULL) {
    
  } else {
    
  }
  strfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strFileName)
}

// string strFileID = 8;
void Configuration::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strFileID)
  return strfileid_.GetNoArena();
}
void Configuration::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strFileID)
}
#if LANG_CXX11
void Configuration::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strFileID)
}
#endif
void Configuration::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strFileID)
}
void Configuration::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strFileID)
}
::std::string* Configuration::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strFileID)
}

// uint32 uiFileSize = 9;
void Configuration::clear_uifilesize() {
  uifilesize_ = 0u;
}
::google::protobuf::uint32 Configuration::uifilesize() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.uiFileSize)
  return uifilesize_;
}
void Configuration::set_uifilesize(::google::protobuf::uint32 value) {
  
  uifilesize_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.uiFileSize)
}

// string strFilePath = 10;
void Configuration::clear_strfilepath() {
  strfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strfilepath() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strFilePath)
  return strfilepath_.GetNoArena();
}
void Configuration::set_strfilepath(const ::std::string& value) {
  
  strfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strFilePath)
}
#if LANG_CXX11
void Configuration::set_strfilepath(::std::string&& value) {
  
  strfilepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strFilePath)
}
#endif
void Configuration::set_strfilepath(const char* value) {
  
  strfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strFilePath)
}
void Configuration::set_strfilepath(const char* value, size_t size) {
  
  strfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strFilePath)
}
::std::string* Configuration::mutable_strfilepath() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strFilePath)
  return strfilepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strfilepath() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strFilePath)
  
  return strfilepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strfilepath(::std::string* strfilepath) {
  if (strfilepath != NULL) {
    
  } else {
    
  }
  strfilepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilepath);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strFilePath)
}

// uint32 uiLeaseDuration = 11;
void Configuration::clear_uileaseduration() {
  uileaseduration_ = 0u;
}
::google::protobuf::uint32 Configuration::uileaseduration() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.uiLeaseDuration)
  return uileaseduration_;
}
void Configuration::set_uileaseduration(::google::protobuf::uint32 value) {
  
  uileaseduration_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.uiLeaseDuration)
}

// string strUpdateDate = 12;
void Configuration::clear_strupdatedate() {
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strupdatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strUpdateDate)
  return strupdatedate_.GetNoArena();
}
void Configuration::set_strupdatedate(const ::std::string& value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strUpdateDate)
}
#if LANG_CXX11
void Configuration::set_strupdatedate(::std::string&& value) {
  
  strupdatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strUpdateDate)
}
#endif
void Configuration::set_strupdatedate(const char* value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strUpdateDate)
}
void Configuration::set_strupdatedate(const char* value, size_t size) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strUpdateDate)
}
::std::string* Configuration::mutable_strupdatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strUpdateDate)
  return strupdatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strupdatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strUpdateDate)
  
  return strupdatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strupdatedate(::std::string* strupdatedate) {
  if (strupdatedate != NULL) {
    
  } else {
    
  }
  strupdatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strUpdateDate)
}

// uint32 uiStatus = 13;
void Configuration::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 Configuration::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.uiStatus)
  return uistatus_;
}
void Configuration::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.uiStatus)
}

// string strExtend = 14;
void Configuration::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Configuration::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Configuration.strExtend)
  return strextend_.GetNoArena();
}
void Configuration::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Configuration.strExtend)
}
#if LANG_CXX11
void Configuration::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Configuration.strExtend)
}
#endif
void Configuration::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Configuration.strExtend)
}
void Configuration::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Configuration.strExtend)
}
::std::string* Configuration::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Configuration.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Configuration::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Configuration.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Configuration::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Configuration.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoorbellParameter::kStrDoorbellNameFieldNumber;
const int DoorbellParameter::kStrSerialNumberFieldNumber;
const int DoorbellParameter::kStrDoorbellP2PidFieldNumber;
const int DoorbellParameter::kStrBatteryCapacityFieldNumber;
const int DoorbellParameter::kStrChargingStateFieldNumber;
const int DoorbellParameter::kStrWifiSignalFieldNumber;
const int DoorbellParameter::kStrVolumeLevelFieldNumber;
const int DoorbellParameter::kStrVersionNumberFieldNumber;
const int DoorbellParameter::kStrChannelNumberFieldNumber;
const int DoorbellParameter::kStrCodingTypeFieldNumber;
const int DoorbellParameter::kStrPIRAlarmSwtichFieldNumber;
const int DoorbellParameter::kStrDoorbellSwitchFieldNumber;
const int DoorbellParameter::kStrPIRAlarmLevelFieldNumber;
const int DoorbellParameter::kStrPIRIneffectiveTimeFieldNumber;
const int DoorbellParameter::kStrCurrentWifiFieldNumber;
const int DoorbellParameter::kStrSubCategoryFieldNumber;
const int DoorbellParameter::kStrDisturbModeFieldNumber;
const int DoorbellParameter::kStrAntiTheftSwitchFieldNumber;
const int DoorbellParameter::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoorbellParameter::DoorbellParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DoorbellParameter)
}
DoorbellParameter::DoorbellParameter(const DoorbellParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdoorbellname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdoorbellname().size() > 0) {
    strdoorbellname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdoorbellname_);
  }
  strserialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strserialnumber().size() > 0) {
    strserialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserialnumber_);
  }
  strdoorbellp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdoorbellp2pid().size() > 0) {
    strdoorbellp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdoorbellp2pid_);
  }
  strbatterycapacity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbatterycapacity().size() > 0) {
    strbatterycapacity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbatterycapacity_);
  }
  strchargingstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strchargingstate().size() > 0) {
    strchargingstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchargingstate_);
  }
  strwifisignal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strwifisignal().size() > 0) {
    strwifisignal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strwifisignal_);
  }
  strvolumelevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvolumelevel().size() > 0) {
    strvolumelevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvolumelevel_);
  }
  strversionnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversionnumber().size() > 0) {
    strversionnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversionnumber_);
  }
  strchannelnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strchannelnumber().size() > 0) {
    strchannelnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannelnumber_);
  }
  strcodingtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcodingtype().size() > 0) {
    strcodingtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcodingtype_);
  }
  strpiralarmswtich_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpiralarmswtich().size() > 0) {
    strpiralarmswtich_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpiralarmswtich_);
  }
  strdoorbellswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdoorbellswitch().size() > 0) {
    strdoorbellswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdoorbellswitch_);
  }
  strpiralarmlevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpiralarmlevel().size() > 0) {
    strpiralarmlevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpiralarmlevel_);
  }
  strpirineffectivetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpirineffectivetime().size() > 0) {
    strpirineffectivetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpirineffectivetime_);
  }
  strcurrentwifi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcurrentwifi().size() > 0) {
    strcurrentwifi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcurrentwifi_);
  }
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsubcategory().size() > 0) {
    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  strdisturbmode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdisturbmode().size() > 0) {
    strdisturbmode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdisturbmode_);
  }
  strantitheftswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strantitheftswitch().size() > 0) {
    strantitheftswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strantitheftswitch_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DoorbellParameter)
}

void DoorbellParameter::SharedCtor() {
  strdoorbellname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdoorbellp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbatterycapacity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchargingstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwifisignal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvolumelevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversionnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcodingtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpiralarmswtich_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdoorbellswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpiralarmlevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpirineffectivetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentwifi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdisturbmode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strantitheftswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DoorbellParameter::~DoorbellParameter() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DoorbellParameter)
  SharedDtor();
}

void DoorbellParameter::SharedDtor() {
  strdoorbellname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdoorbellp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbatterycapacity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchargingstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwifisignal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvolumelevel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversionnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcodingtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpiralarmswtich_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdoorbellswitch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpiralarmlevel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpirineffectivetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentwifi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdisturbmode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strantitheftswitch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DoorbellParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoorbellParameter::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[10].descriptor;
}

const DoorbellParameter& DoorbellParameter::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DoorbellParameter* DoorbellParameter::New(::google::protobuf::Arena* arena) const {
  DoorbellParameter* n = new DoorbellParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoorbellParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DoorbellParameter)
  strdoorbellname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserialnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdoorbellp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbatterycapacity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchargingstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwifisignal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvolumelevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversionnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcodingtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpiralarmswtich_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdoorbellswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpiralarmlevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpirineffectivetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentwifi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdisturbmode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strantitheftswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DoorbellParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DoorbellParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDoorbellName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdoorbellname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdoorbellname().data(), this->strdoorbellname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strDoorbellName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSerialNumber = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserialnumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strserialnumber().data(), this->strserialnumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strSerialNumber"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDoorbellP2Pid = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdoorbellp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdoorbellp2pid().data(), this->strdoorbellp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strDoorbellP2Pid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBatteryCapacity = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbatterycapacity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbatterycapacity().data(), this->strbatterycapacity().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strBatteryCapacity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strChargingState = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchargingstate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strchargingstate().data(), this->strchargingstate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strChargingState"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strWifiSignal = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strwifisignal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strwifisignal().data(), this->strwifisignal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strWifiSignal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVolumeLevel = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvolumelevel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvolumelevel().data(), this->strvolumelevel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strVolumeLevel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVersionNumber = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversionnumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversionnumber().data(), this->strversionnumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strVersionNumber"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strChannelNumber = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchannelnumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strchannelnumber().data(), this->strchannelnumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strChannelNumber"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCodingType = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcodingtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcodingtype().data(), this->strcodingtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strCodingType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPIRAlarmSwtich = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpiralarmswtich()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpiralarmswtich().data(), this->strpiralarmswtich().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strPIRAlarmSwtich"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDoorbellSwitch = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdoorbellswitch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdoorbellswitch().data(), this->strdoorbellswitch().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strDoorbellSwitch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPIRAlarmLevel = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpiralarmlevel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpiralarmlevel().data(), this->strpiralarmlevel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strPIRAlarmLevel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPIRIneffectiveTime = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpirineffectivetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpirineffectivetime().data(), this->strpirineffectivetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strPIRIneffectiveTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCurrentWifi = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcurrentwifi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcurrentwifi().data(), this->strcurrentwifi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strCurrentWifi"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSubCategory = 16;
      case 16: {
        if (tag == 130u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsubcategory().data(), this->strsubcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strSubCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDisturbMode = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdisturbmode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdisturbmode().data(), this->strdisturbmode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strDisturbMode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAntiTheftSwitch = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strantitheftswitch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strantitheftswitch().data(), this->strantitheftswitch().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strAntiTheftSwitch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DoorbellParameter.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DoorbellParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DoorbellParameter)
  return false;
#undef DO_
}

void DoorbellParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DoorbellParameter)
  // string strDoorbellName = 1;
  if (this->strdoorbellname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdoorbellname().data(), this->strdoorbellname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDoorbellName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdoorbellname(), output);
  }

  // string strSerialNumber = 2;
  if (this->strserialnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strSerialNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strserialnumber(), output);
  }

  // string strDoorbellP2Pid = 3;
  if (this->strdoorbellp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdoorbellp2pid().data(), this->strdoorbellp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDoorbellP2Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdoorbellp2pid(), output);
  }

  // string strBatteryCapacity = 4;
  if (this->strbatterycapacity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbatterycapacity().data(), this->strbatterycapacity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strBatteryCapacity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strbatterycapacity(), output);
  }

  // string strChargingState = 5;
  if (this->strchargingstate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchargingstate().data(), this->strchargingstate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strChargingState");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strchargingstate(), output);
  }

  // string strWifiSignal = 6;
  if (this->strwifisignal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strwifisignal().data(), this->strwifisignal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strWifiSignal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strwifisignal(), output);
  }

  // string strVolumeLevel = 7;
  if (this->strvolumelevel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvolumelevel().data(), this->strvolumelevel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strVolumeLevel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strvolumelevel(), output);
  }

  // string strVersionNumber = 8;
  if (this->strversionnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversionnumber().data(), this->strversionnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strVersionNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strversionnumber(), output);
  }

  // string strChannelNumber = 9;
  if (this->strchannelnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannelnumber().data(), this->strchannelnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strChannelNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->strchannelnumber(), output);
  }

  // string strCodingType = 10;
  if (this->strcodingtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcodingtype().data(), this->strcodingtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strCodingType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strcodingtype(), output);
  }

  // string strPIRAlarmSwtich = 11;
  if (this->strpiralarmswtich().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpiralarmswtich().data(), this->strpiralarmswtich().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strPIRAlarmSwtich");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->strpiralarmswtich(), output);
  }

  // string strDoorbellSwitch = 12;
  if (this->strdoorbellswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdoorbellswitch().data(), this->strdoorbellswitch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDoorbellSwitch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->strdoorbellswitch(), output);
  }

  // string strPIRAlarmLevel = 13;
  if (this->strpiralarmlevel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpiralarmlevel().data(), this->strpiralarmlevel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strPIRAlarmLevel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strpiralarmlevel(), output);
  }

  // string strPIRIneffectiveTime = 14;
  if (this->strpirineffectivetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpirineffectivetime().data(), this->strpirineffectivetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strPIRIneffectiveTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->strpirineffectivetime(), output);
  }

  // string strCurrentWifi = 15;
  if (this->strcurrentwifi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcurrentwifi().data(), this->strcurrentwifi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strCurrentWifi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->strcurrentwifi(), output);
  }

  // string strSubCategory = 16;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strSubCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->strsubcategory(), output);
  }

  // string strDisturbMode = 17;
  if (this->strdisturbmode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdisturbmode().data(), this->strdisturbmode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDisturbMode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->strdisturbmode(), output);
  }

  // string strAntiTheftSwitch = 18;
  if (this->strantitheftswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strantitheftswitch().data(), this->strantitheftswitch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strAntiTheftSwitch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->strantitheftswitch(), output);
  }

  // string strExtend = 19;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DoorbellParameter)
}

::google::protobuf::uint8* DoorbellParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DoorbellParameter)
  // string strDoorbellName = 1;
  if (this->strdoorbellname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdoorbellname().data(), this->strdoorbellname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDoorbellName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdoorbellname(), target);
  }

  // string strSerialNumber = 2;
  if (this->strserialnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strSerialNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strserialnumber(), target);
  }

  // string strDoorbellP2Pid = 3;
  if (this->strdoorbellp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdoorbellp2pid().data(), this->strdoorbellp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDoorbellP2Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdoorbellp2pid(), target);
  }

  // string strBatteryCapacity = 4;
  if (this->strbatterycapacity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbatterycapacity().data(), this->strbatterycapacity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strBatteryCapacity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strbatterycapacity(), target);
  }

  // string strChargingState = 5;
  if (this->strchargingstate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchargingstate().data(), this->strchargingstate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strChargingState");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strchargingstate(), target);
  }

  // string strWifiSignal = 6;
  if (this->strwifisignal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strwifisignal().data(), this->strwifisignal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strWifiSignal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strwifisignal(), target);
  }

  // string strVolumeLevel = 7;
  if (this->strvolumelevel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvolumelevel().data(), this->strvolumelevel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strVolumeLevel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strvolumelevel(), target);
  }

  // string strVersionNumber = 8;
  if (this->strversionnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversionnumber().data(), this->strversionnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strVersionNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strversionnumber(), target);
  }

  // string strChannelNumber = 9;
  if (this->strchannelnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannelnumber().data(), this->strchannelnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strChannelNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strchannelnumber(), target);
  }

  // string strCodingType = 10;
  if (this->strcodingtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcodingtype().data(), this->strcodingtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strCodingType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strcodingtype(), target);
  }

  // string strPIRAlarmSwtich = 11;
  if (this->strpiralarmswtich().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpiralarmswtich().data(), this->strpiralarmswtich().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strPIRAlarmSwtich");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strpiralarmswtich(), target);
  }

  // string strDoorbellSwitch = 12;
  if (this->strdoorbellswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdoorbellswitch().data(), this->strdoorbellswitch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDoorbellSwitch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strdoorbellswitch(), target);
  }

  // string strPIRAlarmLevel = 13;
  if (this->strpiralarmlevel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpiralarmlevel().data(), this->strpiralarmlevel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strPIRAlarmLevel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strpiralarmlevel(), target);
  }

  // string strPIRIneffectiveTime = 14;
  if (this->strpirineffectivetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpirineffectivetime().data(), this->strpirineffectivetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strPIRIneffectiveTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strpirineffectivetime(), target);
  }

  // string strCurrentWifi = 15;
  if (this->strcurrentwifi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcurrentwifi().data(), this->strcurrentwifi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strCurrentWifi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strcurrentwifi(), target);
  }

  // string strSubCategory = 16;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strSubCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strsubcategory(), target);
  }

  // string strDisturbMode = 17;
  if (this->strdisturbmode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdisturbmode().data(), this->strdisturbmode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strDisturbMode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strdisturbmode(), target);
  }

  // string strAntiTheftSwitch = 18;
  if (this->strantitheftswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strantitheftswitch().data(), this->strantitheftswitch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strAntiTheftSwitch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strantitheftswitch(), target);
  }

  // string strExtend = 19;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DoorbellParameter.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DoorbellParameter)
  return target;
}

size_t DoorbellParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DoorbellParameter)
  size_t total_size = 0;

  // string strDoorbellName = 1;
  if (this->strdoorbellname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdoorbellname());
  }

  // string strSerialNumber = 2;
  if (this->strserialnumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strserialnumber());
  }

  // string strDoorbellP2Pid = 3;
  if (this->strdoorbellp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdoorbellp2pid());
  }

  // string strBatteryCapacity = 4;
  if (this->strbatterycapacity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbatterycapacity());
  }

  // string strChargingState = 5;
  if (this->strchargingstate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strchargingstate());
  }

  // string strWifiSignal = 6;
  if (this->strwifisignal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strwifisignal());
  }

  // string strVolumeLevel = 7;
  if (this->strvolumelevel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvolumelevel());
  }

  // string strVersionNumber = 8;
  if (this->strversionnumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversionnumber());
  }

  // string strChannelNumber = 9;
  if (this->strchannelnumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strchannelnumber());
  }

  // string strCodingType = 10;
  if (this->strcodingtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcodingtype());
  }

  // string strPIRAlarmSwtich = 11;
  if (this->strpiralarmswtich().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpiralarmswtich());
  }

  // string strDoorbellSwitch = 12;
  if (this->strdoorbellswitch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdoorbellswitch());
  }

  // string strPIRAlarmLevel = 13;
  if (this->strpiralarmlevel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpiralarmlevel());
  }

  // string strPIRIneffectiveTime = 14;
  if (this->strpirineffectivetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpirineffectivetime());
  }

  // string strCurrentWifi = 15;
  if (this->strcurrentwifi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcurrentwifi());
  }

  // string strSubCategory = 16;
  if (this->strsubcategory().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsubcategory());
  }

  // string strDisturbMode = 17;
  if (this->strdisturbmode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdisturbmode());
  }

  // string strAntiTheftSwitch = 18;
  if (this->strantitheftswitch().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strantitheftswitch());
  }

  // string strExtend = 19;
  if (this->strextend().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoorbellParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DoorbellParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const DoorbellParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoorbellParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DoorbellParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DoorbellParameter)
    MergeFrom(*source);
  }
}

void DoorbellParameter::MergeFrom(const DoorbellParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DoorbellParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdoorbellname().size() > 0) {

    strdoorbellname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdoorbellname_);
  }
  if (from.strserialnumber().size() > 0) {

    strserialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserialnumber_);
  }
  if (from.strdoorbellp2pid().size() > 0) {

    strdoorbellp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdoorbellp2pid_);
  }
  if (from.strbatterycapacity().size() > 0) {

    strbatterycapacity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbatterycapacity_);
  }
  if (from.strchargingstate().size() > 0) {

    strchargingstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchargingstate_);
  }
  if (from.strwifisignal().size() > 0) {

    strwifisignal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strwifisignal_);
  }
  if (from.strvolumelevel().size() > 0) {

    strvolumelevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvolumelevel_);
  }
  if (from.strversionnumber().size() > 0) {

    strversionnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversionnumber_);
  }
  if (from.strchannelnumber().size() > 0) {

    strchannelnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannelnumber_);
  }
  if (from.strcodingtype().size() > 0) {

    strcodingtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcodingtype_);
  }
  if (from.strpiralarmswtich().size() > 0) {

    strpiralarmswtich_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpiralarmswtich_);
  }
  if (from.strdoorbellswitch().size() > 0) {

    strdoorbellswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdoorbellswitch_);
  }
  if (from.strpiralarmlevel().size() > 0) {

    strpiralarmlevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpiralarmlevel_);
  }
  if (from.strpirineffectivetime().size() > 0) {

    strpirineffectivetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpirineffectivetime_);
  }
  if (from.strcurrentwifi().size() > 0) {

    strcurrentwifi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcurrentwifi_);
  }
  if (from.strsubcategory().size() > 0) {

    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  if (from.strdisturbmode().size() > 0) {

    strdisturbmode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdisturbmode_);
  }
  if (from.strantitheftswitch().size() > 0) {

    strantitheftswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strantitheftswitch_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
}

void DoorbellParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DoorbellParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoorbellParameter::CopyFrom(const DoorbellParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DoorbellParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoorbellParameter::IsInitialized() const {
  return true;
}

void DoorbellParameter::Swap(DoorbellParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoorbellParameter::InternalSwap(DoorbellParameter* other) {
  strdoorbellname_.Swap(&other->strdoorbellname_);
  strserialnumber_.Swap(&other->strserialnumber_);
  strdoorbellp2pid_.Swap(&other->strdoorbellp2pid_);
  strbatterycapacity_.Swap(&other->strbatterycapacity_);
  strchargingstate_.Swap(&other->strchargingstate_);
  strwifisignal_.Swap(&other->strwifisignal_);
  strvolumelevel_.Swap(&other->strvolumelevel_);
  strversionnumber_.Swap(&other->strversionnumber_);
  strchannelnumber_.Swap(&other->strchannelnumber_);
  strcodingtype_.Swap(&other->strcodingtype_);
  strpiralarmswtich_.Swap(&other->strpiralarmswtich_);
  strdoorbellswitch_.Swap(&other->strdoorbellswitch_);
  strpiralarmlevel_.Swap(&other->strpiralarmlevel_);
  strpirineffectivetime_.Swap(&other->strpirineffectivetime_);
  strcurrentwifi_.Swap(&other->strcurrentwifi_);
  strsubcategory_.Swap(&other->strsubcategory_);
  strdisturbmode_.Swap(&other->strdisturbmode_);
  strantitheftswitch_.Swap(&other->strantitheftswitch_);
  strextend_.Swap(&other->strextend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoorbellParameter::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoorbellParameter

// string strDoorbellName = 1;
void DoorbellParameter::clear_strdoorbellname() {
  strdoorbellname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strdoorbellname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strDoorbellName)
  return strdoorbellname_.GetNoArena();
}
void DoorbellParameter::set_strdoorbellname(const ::std::string& value) {
  
  strdoorbellname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strDoorbellName)
}
#if LANG_CXX11
void DoorbellParameter::set_strdoorbellname(::std::string&& value) {
  
  strdoorbellname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strDoorbellName)
}
#endif
void DoorbellParameter::set_strdoorbellname(const char* value) {
  
  strdoorbellname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strDoorbellName)
}
void DoorbellParameter::set_strdoorbellname(const char* value, size_t size) {
  
  strdoorbellname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strDoorbellName)
}
::std::string* DoorbellParameter::mutable_strdoorbellname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strDoorbellName)
  return strdoorbellname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strdoorbellname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strDoorbellName)
  
  return strdoorbellname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strdoorbellname(::std::string* strdoorbellname) {
  if (strdoorbellname != NULL) {
    
  } else {
    
  }
  strdoorbellname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdoorbellname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strDoorbellName)
}

// string strSerialNumber = 2;
void DoorbellParameter::clear_strserialnumber() {
  strserialnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strserialnumber() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strSerialNumber)
  return strserialnumber_.GetNoArena();
}
void DoorbellParameter::set_strserialnumber(const ::std::string& value) {
  
  strserialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strSerialNumber)
}
#if LANG_CXX11
void DoorbellParameter::set_strserialnumber(::std::string&& value) {
  
  strserialnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strSerialNumber)
}
#endif
void DoorbellParameter::set_strserialnumber(const char* value) {
  
  strserialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strSerialNumber)
}
void DoorbellParameter::set_strserialnumber(const char* value, size_t size) {
  
  strserialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strSerialNumber)
}
::std::string* DoorbellParameter::mutable_strserialnumber() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strSerialNumber)
  return strserialnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strserialnumber() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strSerialNumber)
  
  return strserialnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strserialnumber(::std::string* strserialnumber) {
  if (strserialnumber != NULL) {
    
  } else {
    
  }
  strserialnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserialnumber);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strSerialNumber)
}

// string strDoorbellP2Pid = 3;
void DoorbellParameter::clear_strdoorbellp2pid() {
  strdoorbellp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strdoorbellp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
  return strdoorbellp2pid_.GetNoArena();
}
void DoorbellParameter::set_strdoorbellp2pid(const ::std::string& value) {
  
  strdoorbellp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
}
#if LANG_CXX11
void DoorbellParameter::set_strdoorbellp2pid(::std::string&& value) {
  
  strdoorbellp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
}
#endif
void DoorbellParameter::set_strdoorbellp2pid(const char* value) {
  
  strdoorbellp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
}
void DoorbellParameter::set_strdoorbellp2pid(const char* value, size_t size) {
  
  strdoorbellp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
}
::std::string* DoorbellParameter::mutable_strdoorbellp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
  return strdoorbellp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strdoorbellp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
  
  return strdoorbellp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strdoorbellp2pid(::std::string* strdoorbellp2pid) {
  if (strdoorbellp2pid != NULL) {
    
  } else {
    
  }
  strdoorbellp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdoorbellp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strDoorbellP2Pid)
}

// string strBatteryCapacity = 4;
void DoorbellParameter::clear_strbatterycapacity() {
  strbatterycapacity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strbatterycapacity() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strBatteryCapacity)
  return strbatterycapacity_.GetNoArena();
}
void DoorbellParameter::set_strbatterycapacity(const ::std::string& value) {
  
  strbatterycapacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strBatteryCapacity)
}
#if LANG_CXX11
void DoorbellParameter::set_strbatterycapacity(::std::string&& value) {
  
  strbatterycapacity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strBatteryCapacity)
}
#endif
void DoorbellParameter::set_strbatterycapacity(const char* value) {
  
  strbatterycapacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strBatteryCapacity)
}
void DoorbellParameter::set_strbatterycapacity(const char* value, size_t size) {
  
  strbatterycapacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strBatteryCapacity)
}
::std::string* DoorbellParameter::mutable_strbatterycapacity() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strBatteryCapacity)
  return strbatterycapacity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strbatterycapacity() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strBatteryCapacity)
  
  return strbatterycapacity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strbatterycapacity(::std::string* strbatterycapacity) {
  if (strbatterycapacity != NULL) {
    
  } else {
    
  }
  strbatterycapacity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbatterycapacity);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strBatteryCapacity)
}

// string strChargingState = 5;
void DoorbellParameter::clear_strchargingstate() {
  strchargingstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strchargingstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strChargingState)
  return strchargingstate_.GetNoArena();
}
void DoorbellParameter::set_strchargingstate(const ::std::string& value) {
  
  strchargingstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strChargingState)
}
#if LANG_CXX11
void DoorbellParameter::set_strchargingstate(::std::string&& value) {
  
  strchargingstate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strChargingState)
}
#endif
void DoorbellParameter::set_strchargingstate(const char* value) {
  
  strchargingstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strChargingState)
}
void DoorbellParameter::set_strchargingstate(const char* value, size_t size) {
  
  strchargingstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strChargingState)
}
::std::string* DoorbellParameter::mutable_strchargingstate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strChargingState)
  return strchargingstate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strchargingstate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strChargingState)
  
  return strchargingstate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strchargingstate(::std::string* strchargingstate) {
  if (strchargingstate != NULL) {
    
  } else {
    
  }
  strchargingstate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchargingstate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strChargingState)
}

// string strWifiSignal = 6;
void DoorbellParameter::clear_strwifisignal() {
  strwifisignal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strwifisignal() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strWifiSignal)
  return strwifisignal_.GetNoArena();
}
void DoorbellParameter::set_strwifisignal(const ::std::string& value) {
  
  strwifisignal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strWifiSignal)
}
#if LANG_CXX11
void DoorbellParameter::set_strwifisignal(::std::string&& value) {
  
  strwifisignal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strWifiSignal)
}
#endif
void DoorbellParameter::set_strwifisignal(const char* value) {
  
  strwifisignal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strWifiSignal)
}
void DoorbellParameter::set_strwifisignal(const char* value, size_t size) {
  
  strwifisignal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strWifiSignal)
}
::std::string* DoorbellParameter::mutable_strwifisignal() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strWifiSignal)
  return strwifisignal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strwifisignal() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strWifiSignal)
  
  return strwifisignal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strwifisignal(::std::string* strwifisignal) {
  if (strwifisignal != NULL) {
    
  } else {
    
  }
  strwifisignal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strwifisignal);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strWifiSignal)
}

// string strVolumeLevel = 7;
void DoorbellParameter::clear_strvolumelevel() {
  strvolumelevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strvolumelevel() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strVolumeLevel)
  return strvolumelevel_.GetNoArena();
}
void DoorbellParameter::set_strvolumelevel(const ::std::string& value) {
  
  strvolumelevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strVolumeLevel)
}
#if LANG_CXX11
void DoorbellParameter::set_strvolumelevel(::std::string&& value) {
  
  strvolumelevel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strVolumeLevel)
}
#endif
void DoorbellParameter::set_strvolumelevel(const char* value) {
  
  strvolumelevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strVolumeLevel)
}
void DoorbellParameter::set_strvolumelevel(const char* value, size_t size) {
  
  strvolumelevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strVolumeLevel)
}
::std::string* DoorbellParameter::mutable_strvolumelevel() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strVolumeLevel)
  return strvolumelevel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strvolumelevel() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strVolumeLevel)
  
  return strvolumelevel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strvolumelevel(::std::string* strvolumelevel) {
  if (strvolumelevel != NULL) {
    
  } else {
    
  }
  strvolumelevel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvolumelevel);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strVolumeLevel)
}

// string strVersionNumber = 8;
void DoorbellParameter::clear_strversionnumber() {
  strversionnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strversionnumber() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strVersionNumber)
  return strversionnumber_.GetNoArena();
}
void DoorbellParameter::set_strversionnumber(const ::std::string& value) {
  
  strversionnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strVersionNumber)
}
#if LANG_CXX11
void DoorbellParameter::set_strversionnumber(::std::string&& value) {
  
  strversionnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strVersionNumber)
}
#endif
void DoorbellParameter::set_strversionnumber(const char* value) {
  
  strversionnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strVersionNumber)
}
void DoorbellParameter::set_strversionnumber(const char* value, size_t size) {
  
  strversionnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strVersionNumber)
}
::std::string* DoorbellParameter::mutable_strversionnumber() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strVersionNumber)
  return strversionnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strversionnumber() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strVersionNumber)
  
  return strversionnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strversionnumber(::std::string* strversionnumber) {
  if (strversionnumber != NULL) {
    
  } else {
    
  }
  strversionnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversionnumber);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strVersionNumber)
}

// string strChannelNumber = 9;
void DoorbellParameter::clear_strchannelnumber() {
  strchannelnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strchannelnumber() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strChannelNumber)
  return strchannelnumber_.GetNoArena();
}
void DoorbellParameter::set_strchannelnumber(const ::std::string& value) {
  
  strchannelnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strChannelNumber)
}
#if LANG_CXX11
void DoorbellParameter::set_strchannelnumber(::std::string&& value) {
  
  strchannelnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strChannelNumber)
}
#endif
void DoorbellParameter::set_strchannelnumber(const char* value) {
  
  strchannelnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strChannelNumber)
}
void DoorbellParameter::set_strchannelnumber(const char* value, size_t size) {
  
  strchannelnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strChannelNumber)
}
::std::string* DoorbellParameter::mutable_strchannelnumber() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strChannelNumber)
  return strchannelnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strchannelnumber() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strChannelNumber)
  
  return strchannelnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strchannelnumber(::std::string* strchannelnumber) {
  if (strchannelnumber != NULL) {
    
  } else {
    
  }
  strchannelnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchannelnumber);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strChannelNumber)
}

// string strCodingType = 10;
void DoorbellParameter::clear_strcodingtype() {
  strcodingtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strcodingtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strCodingType)
  return strcodingtype_.GetNoArena();
}
void DoorbellParameter::set_strcodingtype(const ::std::string& value) {
  
  strcodingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strCodingType)
}
#if LANG_CXX11
void DoorbellParameter::set_strcodingtype(::std::string&& value) {
  
  strcodingtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strCodingType)
}
#endif
void DoorbellParameter::set_strcodingtype(const char* value) {
  
  strcodingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strCodingType)
}
void DoorbellParameter::set_strcodingtype(const char* value, size_t size) {
  
  strcodingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strCodingType)
}
::std::string* DoorbellParameter::mutable_strcodingtype() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strCodingType)
  return strcodingtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strcodingtype() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strCodingType)
  
  return strcodingtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strcodingtype(::std::string* strcodingtype) {
  if (strcodingtype != NULL) {
    
  } else {
    
  }
  strcodingtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcodingtype);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strCodingType)
}

// string strPIRAlarmSwtich = 11;
void DoorbellParameter::clear_strpiralarmswtich() {
  strpiralarmswtich_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strpiralarmswtich() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
  return strpiralarmswtich_.GetNoArena();
}
void DoorbellParameter::set_strpiralarmswtich(const ::std::string& value) {
  
  strpiralarmswtich_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
}
#if LANG_CXX11
void DoorbellParameter::set_strpiralarmswtich(::std::string&& value) {
  
  strpiralarmswtich_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
}
#endif
void DoorbellParameter::set_strpiralarmswtich(const char* value) {
  
  strpiralarmswtich_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
}
void DoorbellParameter::set_strpiralarmswtich(const char* value, size_t size) {
  
  strpiralarmswtich_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
}
::std::string* DoorbellParameter::mutable_strpiralarmswtich() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
  return strpiralarmswtich_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strpiralarmswtich() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
  
  return strpiralarmswtich_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strpiralarmswtich(::std::string* strpiralarmswtich) {
  if (strpiralarmswtich != NULL) {
    
  } else {
    
  }
  strpiralarmswtich_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpiralarmswtich);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strPIRAlarmSwtich)
}

// string strDoorbellSwitch = 12;
void DoorbellParameter::clear_strdoorbellswitch() {
  strdoorbellswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strdoorbellswitch() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
  return strdoorbellswitch_.GetNoArena();
}
void DoorbellParameter::set_strdoorbellswitch(const ::std::string& value) {
  
  strdoorbellswitch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
}
#if LANG_CXX11
void DoorbellParameter::set_strdoorbellswitch(::std::string&& value) {
  
  strdoorbellswitch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
}
#endif
void DoorbellParameter::set_strdoorbellswitch(const char* value) {
  
  strdoorbellswitch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
}
void DoorbellParameter::set_strdoorbellswitch(const char* value, size_t size) {
  
  strdoorbellswitch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
}
::std::string* DoorbellParameter::mutable_strdoorbellswitch() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
  return strdoorbellswitch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strdoorbellswitch() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
  
  return strdoorbellswitch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strdoorbellswitch(::std::string* strdoorbellswitch) {
  if (strdoorbellswitch != NULL) {
    
  } else {
    
  }
  strdoorbellswitch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdoorbellswitch);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strDoorbellSwitch)
}

// string strPIRAlarmLevel = 13;
void DoorbellParameter::clear_strpiralarmlevel() {
  strpiralarmlevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strpiralarmlevel() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
  return strpiralarmlevel_.GetNoArena();
}
void DoorbellParameter::set_strpiralarmlevel(const ::std::string& value) {
  
  strpiralarmlevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
}
#if LANG_CXX11
void DoorbellParameter::set_strpiralarmlevel(::std::string&& value) {
  
  strpiralarmlevel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
}
#endif
void DoorbellParameter::set_strpiralarmlevel(const char* value) {
  
  strpiralarmlevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
}
void DoorbellParameter::set_strpiralarmlevel(const char* value, size_t size) {
  
  strpiralarmlevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
}
::std::string* DoorbellParameter::mutable_strpiralarmlevel() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
  return strpiralarmlevel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strpiralarmlevel() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
  
  return strpiralarmlevel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strpiralarmlevel(::std::string* strpiralarmlevel) {
  if (strpiralarmlevel != NULL) {
    
  } else {
    
  }
  strpiralarmlevel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpiralarmlevel);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strPIRAlarmLevel)
}

// string strPIRIneffectiveTime = 14;
void DoorbellParameter::clear_strpirineffectivetime() {
  strpirineffectivetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strpirineffectivetime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
  return strpirineffectivetime_.GetNoArena();
}
void DoorbellParameter::set_strpirineffectivetime(const ::std::string& value) {
  
  strpirineffectivetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
}
#if LANG_CXX11
void DoorbellParameter::set_strpirineffectivetime(::std::string&& value) {
  
  strpirineffectivetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
}
#endif
void DoorbellParameter::set_strpirineffectivetime(const char* value) {
  
  strpirineffectivetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
}
void DoorbellParameter::set_strpirineffectivetime(const char* value, size_t size) {
  
  strpirineffectivetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
}
::std::string* DoorbellParameter::mutable_strpirineffectivetime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
  return strpirineffectivetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strpirineffectivetime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
  
  return strpirineffectivetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strpirineffectivetime(::std::string* strpirineffectivetime) {
  if (strpirineffectivetime != NULL) {
    
  } else {
    
  }
  strpirineffectivetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpirineffectivetime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strPIRIneffectiveTime)
}

// string strCurrentWifi = 15;
void DoorbellParameter::clear_strcurrentwifi() {
  strcurrentwifi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strcurrentwifi() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strCurrentWifi)
  return strcurrentwifi_.GetNoArena();
}
void DoorbellParameter::set_strcurrentwifi(const ::std::string& value) {
  
  strcurrentwifi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strCurrentWifi)
}
#if LANG_CXX11
void DoorbellParameter::set_strcurrentwifi(::std::string&& value) {
  
  strcurrentwifi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strCurrentWifi)
}
#endif
void DoorbellParameter::set_strcurrentwifi(const char* value) {
  
  strcurrentwifi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strCurrentWifi)
}
void DoorbellParameter::set_strcurrentwifi(const char* value, size_t size) {
  
  strcurrentwifi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strCurrentWifi)
}
::std::string* DoorbellParameter::mutable_strcurrentwifi() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strCurrentWifi)
  return strcurrentwifi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strcurrentwifi() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strCurrentWifi)
  
  return strcurrentwifi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strcurrentwifi(::std::string* strcurrentwifi) {
  if (strcurrentwifi != NULL) {
    
  } else {
    
  }
  strcurrentwifi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcurrentwifi);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strCurrentWifi)
}

// string strSubCategory = 16;
void DoorbellParameter::clear_strsubcategory() {
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strsubcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strSubCategory)
  return strsubcategory_.GetNoArena();
}
void DoorbellParameter::set_strsubcategory(const ::std::string& value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strSubCategory)
}
#if LANG_CXX11
void DoorbellParameter::set_strsubcategory(::std::string&& value) {
  
  strsubcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strSubCategory)
}
#endif
void DoorbellParameter::set_strsubcategory(const char* value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strSubCategory)
}
void DoorbellParameter::set_strsubcategory(const char* value, size_t size) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strSubCategory)
}
::std::string* DoorbellParameter::mutable_strsubcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strSubCategory)
  return strsubcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strsubcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strSubCategory)
  
  return strsubcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strsubcategory(::std::string* strsubcategory) {
  if (strsubcategory != NULL) {
    
  } else {
    
  }
  strsubcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsubcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strSubCategory)
}

// string strDisturbMode = 17;
void DoorbellParameter::clear_strdisturbmode() {
  strdisturbmode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strdisturbmode() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strDisturbMode)
  return strdisturbmode_.GetNoArena();
}
void DoorbellParameter::set_strdisturbmode(const ::std::string& value) {
  
  strdisturbmode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strDisturbMode)
}
#if LANG_CXX11
void DoorbellParameter::set_strdisturbmode(::std::string&& value) {
  
  strdisturbmode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strDisturbMode)
}
#endif
void DoorbellParameter::set_strdisturbmode(const char* value) {
  
  strdisturbmode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strDisturbMode)
}
void DoorbellParameter::set_strdisturbmode(const char* value, size_t size) {
  
  strdisturbmode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strDisturbMode)
}
::std::string* DoorbellParameter::mutable_strdisturbmode() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strDisturbMode)
  return strdisturbmode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strdisturbmode() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strDisturbMode)
  
  return strdisturbmode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strdisturbmode(::std::string* strdisturbmode) {
  if (strdisturbmode != NULL) {
    
  } else {
    
  }
  strdisturbmode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdisturbmode);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strDisturbMode)
}

// string strAntiTheftSwitch = 18;
void DoorbellParameter::clear_strantitheftswitch() {
  strantitheftswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strantitheftswitch() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
  return strantitheftswitch_.GetNoArena();
}
void DoorbellParameter::set_strantitheftswitch(const ::std::string& value) {
  
  strantitheftswitch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
}
#if LANG_CXX11
void DoorbellParameter::set_strantitheftswitch(::std::string&& value) {
  
  strantitheftswitch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
}
#endif
void DoorbellParameter::set_strantitheftswitch(const char* value) {
  
  strantitheftswitch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
}
void DoorbellParameter::set_strantitheftswitch(const char* value, size_t size) {
  
  strantitheftswitch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
}
::std::string* DoorbellParameter::mutable_strantitheftswitch() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
  return strantitheftswitch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strantitheftswitch() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
  
  return strantitheftswitch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strantitheftswitch(::std::string* strantitheftswitch) {
  if (strantitheftswitch != NULL) {
    
  } else {
    
  }
  strantitheftswitch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strantitheftswitch);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strAntiTheftSwitch)
}

// string strExtend = 19;
void DoorbellParameter::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DoorbellParameter::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DoorbellParameter.strExtend)
  return strextend_.GetNoArena();
}
void DoorbellParameter::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DoorbellParameter.strExtend)
}
#if LANG_CXX11
void DoorbellParameter::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DoorbellParameter.strExtend)
}
#endif
void DoorbellParameter::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DoorbellParameter.strExtend)
}
void DoorbellParameter::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DoorbellParameter.strExtend)
}
::std::string* DoorbellParameter::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DoorbellParameter.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DoorbellParameter::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DoorbellParameter.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DoorbellParameter::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DoorbellParameter.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceEvent::kStrDeviceIDFieldNumber;
const int DeviceEvent::kUiDeviceTypeFieldNumber;
const int DeviceEvent::kStrEventIDFieldNumber;
const int DeviceEvent::kUiEventTypeFieldNumber;
const int DeviceEvent::kUiEventStateFieldNumber;
const int DeviceEvent::kStrFileUrlFieldNumber;
const int DeviceEvent::kStrEventTimeFieldNumber;
const int DeviceEvent::kUiReadStateFieldNumber;
const int DeviceEvent::kStrThumbnailUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceEvent::DeviceEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeviceEvent)
}
DeviceEvent::DeviceEvent(const DeviceEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.streventid().size() > 0) {
    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
  strfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileurl().size() > 0) {
    strfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileurl_);
  }
  streventtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.streventtime().size() > 0) {
    streventtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventtime_);
  }
  strthumbnailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strthumbnailurl().size() > 0) {
    strthumbnailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strthumbnailurl_);
  }
  ::memcpy(&uidevicetype_, &from.uidevicetype_,
    reinterpret_cast<char*>(&uireadstate_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uireadstate_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeviceEvent)
}

void DeviceEvent::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strthumbnailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uireadstate_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uireadstate_));
  _cached_size_ = 0;
}

DeviceEvent::~DeviceEvent() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeviceEvent)
  SharedDtor();
}

void DeviceEvent::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strthumbnailurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceEvent::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[11].descriptor;
}

const DeviceEvent& DeviceEvent::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceEvent* DeviceEvent::New(::google::protobuf::Arena* arena) const {
  DeviceEvent* n = new DeviceEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeviceEvent)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strthumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uireadstate_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uireadstate_));
}

bool DeviceEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeviceEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEvent.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEventID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streventid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streventid().data(), this->streventid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEvent.strEventID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventState = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileUrl = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileurl().data(), this->strfileurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEvent.strFileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEventTime = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streventtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streventtime().data(), this->streventtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEvent.strEventTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiReadState = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uireadstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strThumbnailUrl = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strthumbnailurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strthumbnailurl().data(), this->strthumbnailurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEvent.strThumbnailUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeviceEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeviceEvent)
  return false;
#undef DO_
}

void DeviceEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeviceEvent)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uidevicetype(), output);
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strEventID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->streventid(), output);
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uieventtype(), output);
  }

  // uint32 uiEventState = 5;
  if (this->uieventstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uieventstate(), output);
  }

  // string strFileUrl = 6;
  if (this->strfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileurl().data(), this->strfileurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strFileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strfileurl(), output);
  }

  // string strEventTime = 7;
  if (this->streventtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventtime().data(), this->streventtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strEventTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->streventtime(), output);
  }

  // uint32 uiReadState = 8;
  if (this->uireadstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uireadstate(), output);
  }

  // string strThumbnailUrl = 9;
  if (this->strthumbnailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strthumbnailurl().data(), this->strthumbnailurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strThumbnailUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->strthumbnailurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeviceEvent)
}

::google::protobuf::uint8* DeviceEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeviceEvent)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uidevicetype(), target);
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strEventID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->streventid(), target);
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uieventtype(), target);
  }

  // uint32 uiEventState = 5;
  if (this->uieventstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uieventstate(), target);
  }

  // string strFileUrl = 6;
  if (this->strfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileurl().data(), this->strfileurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strFileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strfileurl(), target);
  }

  // string strEventTime = 7;
  if (this->streventtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventtime().data(), this->streventtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strEventTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->streventtime(), target);
  }

  // uint32 uiReadState = 8;
  if (this->uireadstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uireadstate(), target);
  }

  // string strThumbnailUrl = 9;
  if (this->strthumbnailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strthumbnailurl().data(), this->strthumbnailurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEvent.strThumbnailUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strthumbnailurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeviceEvent)
  return target;
}

size_t DeviceEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeviceEvent)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streventid());
  }

  // string strFileUrl = 6;
  if (this->strfileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileurl());
  }

  // string strEventTime = 7;
  if (this->streventtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streventtime());
  }

  // string strThumbnailUrl = 9;
  if (this->strthumbnailurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strthumbnailurl());
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventtype());
  }

  // uint32 uiEventState = 5;
  if (this->uieventstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventstate());
  }

  // uint32 uiReadState = 8;
  if (this->uireadstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uireadstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeviceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeviceEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeviceEvent)
    MergeFrom(*source);
  }
}

void DeviceEvent::MergeFrom(const DeviceEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeviceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.streventid().size() > 0) {

    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
  if (from.strfileurl().size() > 0) {

    strfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileurl_);
  }
  if (from.streventtime().size() > 0) {

    streventtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventtime_);
  }
  if (from.strthumbnailurl().size() > 0) {

    strthumbnailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strthumbnailurl_);
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
  if (from.uieventtype() != 0) {
    set_uieventtype(from.uieventtype());
  }
  if (from.uieventstate() != 0) {
    set_uieventstate(from.uieventstate());
  }
  if (from.uireadstate() != 0) {
    set_uireadstate(from.uireadstate());
  }
}

void DeviceEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeviceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceEvent::CopyFrom(const DeviceEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeviceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceEvent::IsInitialized() const {
  return true;
}

void DeviceEvent::Swap(DeviceEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceEvent::InternalSwap(DeviceEvent* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  streventid_.Swap(&other->streventid_);
  strfileurl_.Swap(&other->strfileurl_);
  streventtime_.Swap(&other->streventtime_);
  strthumbnailurl_.Swap(&other->strthumbnailurl_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(uieventtype_, other->uieventtype_);
  std::swap(uieventstate_, other->uieventstate_);
  std::swap(uireadstate_, other->uireadstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceEvent::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceEvent

// string strDeviceID = 1;
void DeviceEvent::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEvent::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void DeviceEvent::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.strDeviceID)
}
#if LANG_CXX11
void DeviceEvent::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEvent.strDeviceID)
}
#endif
void DeviceEvent::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEvent.strDeviceID)
}
void DeviceEvent::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEvent.strDeviceID)
}
::std::string* DeviceEvent::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEvent.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEvent::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEvent.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEvent::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEvent.strDeviceID)
}

// uint32 uiDeviceType = 2;
void DeviceEvent::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 DeviceEvent::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.uiDeviceType)
  return uidevicetype_;
}
void DeviceEvent::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.uiDeviceType)
}

// string strEventID = 3;
void DeviceEvent::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEvent::streventid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.strEventID)
  return streventid_.GetNoArena();
}
void DeviceEvent::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.strEventID)
}
#if LANG_CXX11
void DeviceEvent::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEvent.strEventID)
}
#endif
void DeviceEvent::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEvent.strEventID)
}
void DeviceEvent::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEvent.strEventID)
}
::std::string* DeviceEvent::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEvent.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEvent::release_streventid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEvent.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEvent::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEvent.strEventID)
}

// uint32 uiEventType = 4;
void DeviceEvent::clear_uieventtype() {
  uieventtype_ = 0u;
}
::google::protobuf::uint32 DeviceEvent::uieventtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.uiEventType)
  return uieventtype_;
}
void DeviceEvent::set_uieventtype(::google::protobuf::uint32 value) {
  
  uieventtype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.uiEventType)
}

// uint32 uiEventState = 5;
void DeviceEvent::clear_uieventstate() {
  uieventstate_ = 0u;
}
::google::protobuf::uint32 DeviceEvent::uieventstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.uiEventState)
  return uieventstate_;
}
void DeviceEvent::set_uieventstate(::google::protobuf::uint32 value) {
  
  uieventstate_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.uiEventState)
}

// string strFileUrl = 6;
void DeviceEvent::clear_strfileurl() {
  strfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEvent::strfileurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.strFileUrl)
  return strfileurl_.GetNoArena();
}
void DeviceEvent::set_strfileurl(const ::std::string& value) {
  
  strfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.strFileUrl)
}
#if LANG_CXX11
void DeviceEvent::set_strfileurl(::std::string&& value) {
  
  strfileurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEvent.strFileUrl)
}
#endif
void DeviceEvent::set_strfileurl(const char* value) {
  
  strfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEvent.strFileUrl)
}
void DeviceEvent::set_strfileurl(const char* value, size_t size) {
  
  strfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEvent.strFileUrl)
}
::std::string* DeviceEvent::mutable_strfileurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEvent.strFileUrl)
  return strfileurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEvent::release_strfileurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEvent.strFileUrl)
  
  return strfileurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEvent::set_allocated_strfileurl(::std::string* strfileurl) {
  if (strfileurl != NULL) {
    
  } else {
    
  }
  strfileurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEvent.strFileUrl)
}

// string strEventTime = 7;
void DeviceEvent::clear_streventtime() {
  streventtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEvent::streventtime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.strEventTime)
  return streventtime_.GetNoArena();
}
void DeviceEvent::set_streventtime(const ::std::string& value) {
  
  streventtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.strEventTime)
}
#if LANG_CXX11
void DeviceEvent::set_streventtime(::std::string&& value) {
  
  streventtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEvent.strEventTime)
}
#endif
void DeviceEvent::set_streventtime(const char* value) {
  
  streventtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEvent.strEventTime)
}
void DeviceEvent::set_streventtime(const char* value, size_t size) {
  
  streventtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEvent.strEventTime)
}
::std::string* DeviceEvent::mutable_streventtime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEvent.strEventTime)
  return streventtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEvent::release_streventtime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEvent.strEventTime)
  
  return streventtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEvent::set_allocated_streventtime(::std::string* streventtime) {
  if (streventtime != NULL) {
    
  } else {
    
  }
  streventtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventtime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEvent.strEventTime)
}

// uint32 uiReadState = 8;
void DeviceEvent::clear_uireadstate() {
  uireadstate_ = 0u;
}
::google::protobuf::uint32 DeviceEvent::uireadstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.uiReadState)
  return uireadstate_;
}
void DeviceEvent::set_uireadstate(::google::protobuf::uint32 value) {
  
  uireadstate_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.uiReadState)
}

// string strThumbnailUrl = 9;
void DeviceEvent::clear_strthumbnailurl() {
  strthumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEvent::strthumbnailurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEvent.strThumbnailUrl)
  return strthumbnailurl_.GetNoArena();
}
void DeviceEvent::set_strthumbnailurl(const ::std::string& value) {
  
  strthumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEvent.strThumbnailUrl)
}
#if LANG_CXX11
void DeviceEvent::set_strthumbnailurl(::std::string&& value) {
  
  strthumbnailurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEvent.strThumbnailUrl)
}
#endif
void DeviceEvent::set_strthumbnailurl(const char* value) {
  
  strthumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEvent.strThumbnailUrl)
}
void DeviceEvent::set_strthumbnailurl(const char* value, size_t size) {
  
  strthumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEvent.strThumbnailUrl)
}
::std::string* DeviceEvent::mutable_strthumbnailurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEvent.strThumbnailUrl)
  return strthumbnailurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEvent::release_strthumbnailurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEvent.strThumbnailUrl)
  
  return strthumbnailurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEvent::set_allocated_strthumbnailurl(::std::string* strthumbnailurl) {
  if (strthumbnailurl != NULL) {
    
  } else {
    
  }
  strthumbnailurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strthumbnailurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEvent.strThumbnailUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageDetail::kUiDomainIDFieldNumber;
const int StorageDetail::kStrObjectIDFieldNumber;
const int StorageDetail::kUiObjectTypeFieldNumber;
const int StorageDetail::kStrStorageNameFieldNumber;
const int StorageDetail::kUiStorageTypeFieldNumber;
const int StorageDetail::kUiOverlapTypeFieldNumber;
const int StorageDetail::kUiStorageTimeUpLimitFieldNumber;
const int StorageDetail::kUiStorageTimeDownLimitFieldNumber;
const int StorageDetail::kUiSizeOfSpaceUsedFieldNumber;
const int StorageDetail::kUiStorageUnitTypeFieldNumber;
const int StorageDetail::kStrBeginDateFieldNumber;
const int StorageDetail::kStrEndDateFieldNumber;
const int StorageDetail::kStrExtendFieldNumber;
const int StorageDetail::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageDetail::StorageDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageDetail)
}
StorageDetail::StorageDetail(const StorageDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strobjectid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strobjectid().size() > 0) {
    strobjectid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strobjectid_);
  }
  strstoragename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strstoragename().size() > 0) {
    strstoragename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstoragename_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  ::memcpy(&uidomainid_, &from.uidomainid_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uidomainid_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageDetail)
}

void StorageDetail::SharedCtor() {
  strobjectid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstoragename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidomainid_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uidomainid_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

StorageDetail::~StorageDetail() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageDetail)
  SharedDtor();
}

void StorageDetail::SharedDtor() {
  strobjectid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstoragename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageDetail::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[12].descriptor;
}

const StorageDetail& StorageDetail::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageDetail* StorageDetail::New(::google::protobuf::Arena* arena) const {
  StorageDetail* n = new StorageDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageDetail)
  strobjectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstoragename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidomainid_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uidomainid_) + sizeof(uistatus_));
}

bool StorageDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiDomainID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidomainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strObjectID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strobjectid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strobjectid().data(), this->strobjectid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageDetail.strObjectID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiObjectType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiobjecttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strStorageName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstoragename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strstoragename().data(), this->strstoragename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageDetail.strStorageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageType = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiOverlapType = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uioverlaptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageTimeUpLimit = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetimeuplimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageTimeDownLimit = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetimedownlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiSizeOfSpaceUsed = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uisizeofspaceused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageUnitType = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistorageunittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBeginDate = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageDetail.strBeginDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndDate = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageDetail.strEndDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageDetail.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 14;
      case 14: {
        if (tag == 112u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageDetail)
  return false;
#undef DO_
}

void StorageDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageDetail)
  // uint32 uiDomainID = 1;
  if (this->uidomainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uidomainid(), output);
  }

  // string strObjectID = 2;
  if (this->strobjectid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strobjectid().data(), this->strobjectid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strObjectID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strobjectid(), output);
  }

  // uint32 uiObjectType = 3;
  if (this->uiobjecttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uiobjecttype(), output);
  }

  // string strStorageName = 4;
  if (this->strstoragename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstoragename().data(), this->strstoragename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strStorageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strstoragename(), output);
  }

  // uint32 uiStorageType = 5;
  if (this->uistoragetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uistoragetype(), output);
  }

  // uint32 uiOverlapType = 6;
  if (this->uioverlaptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uioverlaptype(), output);
  }

  // uint32 uiStorageTimeUpLimit = 7;
  if (this->uistoragetimeuplimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uistoragetimeuplimit(), output);
  }

  // uint32 uiStorageTimeDownLimit = 8;
  if (this->uistoragetimedownlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uistoragetimedownlimit(), output);
  }

  // uint32 uiSizeOfSpaceUsed = 9;
  if (this->uisizeofspaceused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uisizeofspaceused(), output);
  }

  // uint32 uiStorageUnitType = 10;
  if (this->uistorageunittype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->uistorageunittype(), output);
  }

  // string strBeginDate = 11;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strBeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->strbegindate(), output);
  }

  // string strEndDate = 12;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->strenddate(), output);
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strextend(), output);
  }

  // uint32 uiStatus = 14;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageDetail)
}

::google::protobuf::uint8* StorageDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageDetail)
  // uint32 uiDomainID = 1;
  if (this->uidomainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uidomainid(), target);
  }

  // string strObjectID = 2;
  if (this->strobjectid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strobjectid().data(), this->strobjectid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strObjectID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strobjectid(), target);
  }

  // uint32 uiObjectType = 3;
  if (this->uiobjecttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uiobjecttype(), target);
  }

  // string strStorageName = 4;
  if (this->strstoragename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstoragename().data(), this->strstoragename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strStorageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strstoragename(), target);
  }

  // uint32 uiStorageType = 5;
  if (this->uistoragetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uistoragetype(), target);
  }

  // uint32 uiOverlapType = 6;
  if (this->uioverlaptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uioverlaptype(), target);
  }

  // uint32 uiStorageTimeUpLimit = 7;
  if (this->uistoragetimeuplimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uistoragetimeuplimit(), target);
  }

  // uint32 uiStorageTimeDownLimit = 8;
  if (this->uistoragetimedownlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uistoragetimedownlimit(), target);
  }

  // uint32 uiSizeOfSpaceUsed = 9;
  if (this->uisizeofspaceused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uisizeofspaceused(), target);
  }

  // uint32 uiStorageUnitType = 10;
  if (this->uistorageunittype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->uistorageunittype(), target);
  }

  // string strBeginDate = 11;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strBeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strbegindate(), target);
  }

  // string strEndDate = 12;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strenddate(), target);
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageDetail.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strextend(), target);
  }

  // uint32 uiStatus = 14;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageDetail)
  return target;
}

size_t StorageDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageDetail)
  size_t total_size = 0;

  // string strObjectID = 2;
  if (this->strobjectid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strobjectid());
  }

  // string strStorageName = 4;
  if (this->strstoragename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strstoragename());
  }

  // string strBeginDate = 11;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEndDate = 12;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // uint32 uiDomainID = 1;
  if (this->uidomainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidomainid());
  }

  // uint32 uiObjectType = 3;
  if (this->uiobjecttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiobjecttype());
  }

  // uint32 uiStorageType = 5;
  if (this->uistoragetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetype());
  }

  // uint32 uiOverlapType = 6;
  if (this->uioverlaptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uioverlaptype());
  }

  // uint32 uiStorageTimeUpLimit = 7;
  if (this->uistoragetimeuplimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetimeuplimit());
  }

  // uint32 uiStorageTimeDownLimit = 8;
  if (this->uistoragetimedownlimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetimedownlimit());
  }

  // uint32 uiSizeOfSpaceUsed = 9;
  if (this->uisizeofspaceused() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uisizeofspaceused());
  }

  // uint32 uiStorageUnitType = 10;
  if (this->uistorageunittype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistorageunittype());
  }

  // uint32 uiStatus = 14;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageDetail)
    MergeFrom(*source);
  }
}

void StorageDetail::MergeFrom(const StorageDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strobjectid().size() > 0) {

    strobjectid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strobjectid_);
  }
  if (from.strstoragename().size() > 0) {

    strstoragename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstoragename_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.uidomainid() != 0) {
    set_uidomainid(from.uidomainid());
  }
  if (from.uiobjecttype() != 0) {
    set_uiobjecttype(from.uiobjecttype());
  }
  if (from.uistoragetype() != 0) {
    set_uistoragetype(from.uistoragetype());
  }
  if (from.uioverlaptype() != 0) {
    set_uioverlaptype(from.uioverlaptype());
  }
  if (from.uistoragetimeuplimit() != 0) {
    set_uistoragetimeuplimit(from.uistoragetimeuplimit());
  }
  if (from.uistoragetimedownlimit() != 0) {
    set_uistoragetimedownlimit(from.uistoragetimedownlimit());
  }
  if (from.uisizeofspaceused() != 0) {
    set_uisizeofspaceused(from.uisizeofspaceused());
  }
  if (from.uistorageunittype() != 0) {
    set_uistorageunittype(from.uistorageunittype());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void StorageDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageDetail::CopyFrom(const StorageDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageDetail::IsInitialized() const {
  return true;
}

void StorageDetail::Swap(StorageDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageDetail::InternalSwap(StorageDetail* other) {
  strobjectid_.Swap(&other->strobjectid_);
  strstoragename_.Swap(&other->strstoragename_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  strextend_.Swap(&other->strextend_);
  std::swap(uidomainid_, other->uidomainid_);
  std::swap(uiobjecttype_, other->uiobjecttype_);
  std::swap(uistoragetype_, other->uistoragetype_);
  std::swap(uioverlaptype_, other->uioverlaptype_);
  std::swap(uistoragetimeuplimit_, other->uistoragetimeuplimit_);
  std::swap(uistoragetimedownlimit_, other->uistoragetimedownlimit_);
  std::swap(uisizeofspaceused_, other->uisizeofspaceused_);
  std::swap(uistorageunittype_, other->uistorageunittype_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageDetail::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageDetail

// uint32 uiDomainID = 1;
void StorageDetail::clear_uidomainid() {
  uidomainid_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uidomainid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiDomainID)
  return uidomainid_;
}
void StorageDetail::set_uidomainid(::google::protobuf::uint32 value) {
  
  uidomainid_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiDomainID)
}

// string strObjectID = 2;
void StorageDetail::clear_strobjectid() {
  strobjectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageDetail::strobjectid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.strObjectID)
  return strobjectid_.GetNoArena();
}
void StorageDetail::set_strobjectid(const ::std::string& value) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.strObjectID)
}
#if LANG_CXX11
void StorageDetail::set_strobjectid(::std::string&& value) {
  
  strobjectid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageDetail.strObjectID)
}
#endif
void StorageDetail::set_strobjectid(const char* value) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageDetail.strObjectID)
}
void StorageDetail::set_strobjectid(const char* value, size_t size) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageDetail.strObjectID)
}
::std::string* StorageDetail::mutable_strobjectid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageDetail.strObjectID)
  return strobjectid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageDetail::release_strobjectid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageDetail.strObjectID)
  
  return strobjectid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageDetail::set_allocated_strobjectid(::std::string* strobjectid) {
  if (strobjectid != NULL) {
    
  } else {
    
  }
  strobjectid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strobjectid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageDetail.strObjectID)
}

// uint32 uiObjectType = 3;
void StorageDetail::clear_uiobjecttype() {
  uiobjecttype_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uiobjecttype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiObjectType)
  return uiobjecttype_;
}
void StorageDetail::set_uiobjecttype(::google::protobuf::uint32 value) {
  
  uiobjecttype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiObjectType)
}

// string strStorageName = 4;
void StorageDetail::clear_strstoragename() {
  strstoragename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageDetail::strstoragename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.strStorageName)
  return strstoragename_.GetNoArena();
}
void StorageDetail::set_strstoragename(const ::std::string& value) {
  
  strstoragename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.strStorageName)
}
#if LANG_CXX11
void StorageDetail::set_strstoragename(::std::string&& value) {
  
  strstoragename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageDetail.strStorageName)
}
#endif
void StorageDetail::set_strstoragename(const char* value) {
  
  strstoragename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageDetail.strStorageName)
}
void StorageDetail::set_strstoragename(const char* value, size_t size) {
  
  strstoragename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageDetail.strStorageName)
}
::std::string* StorageDetail::mutable_strstoragename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageDetail.strStorageName)
  return strstoragename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageDetail::release_strstoragename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageDetail.strStorageName)
  
  return strstoragename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageDetail::set_allocated_strstoragename(::std::string* strstoragename) {
  if (strstoragename != NULL) {
    
  } else {
    
  }
  strstoragename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstoragename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageDetail.strStorageName)
}

// uint32 uiStorageType = 5;
void StorageDetail::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiStorageType)
  return uistoragetype_;
}
void StorageDetail::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiStorageType)
}

// uint32 uiOverlapType = 6;
void StorageDetail::clear_uioverlaptype() {
  uioverlaptype_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uioverlaptype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiOverlapType)
  return uioverlaptype_;
}
void StorageDetail::set_uioverlaptype(::google::protobuf::uint32 value) {
  
  uioverlaptype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiOverlapType)
}

// uint32 uiStorageTimeUpLimit = 7;
void StorageDetail::clear_uistoragetimeuplimit() {
  uistoragetimeuplimit_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uistoragetimeuplimit() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiStorageTimeUpLimit)
  return uistoragetimeuplimit_;
}
void StorageDetail::set_uistoragetimeuplimit(::google::protobuf::uint32 value) {
  
  uistoragetimeuplimit_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiStorageTimeUpLimit)
}

// uint32 uiStorageTimeDownLimit = 8;
void StorageDetail::clear_uistoragetimedownlimit() {
  uistoragetimedownlimit_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uistoragetimedownlimit() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiStorageTimeDownLimit)
  return uistoragetimedownlimit_;
}
void StorageDetail::set_uistoragetimedownlimit(::google::protobuf::uint32 value) {
  
  uistoragetimedownlimit_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiStorageTimeDownLimit)
}

// uint32 uiSizeOfSpaceUsed = 9;
void StorageDetail::clear_uisizeofspaceused() {
  uisizeofspaceused_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uisizeofspaceused() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiSizeOfSpaceUsed)
  return uisizeofspaceused_;
}
void StorageDetail::set_uisizeofspaceused(::google::protobuf::uint32 value) {
  
  uisizeofspaceused_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiSizeOfSpaceUsed)
}

// uint32 uiStorageUnitType = 10;
void StorageDetail::clear_uistorageunittype() {
  uistorageunittype_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uistorageunittype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiStorageUnitType)
  return uistorageunittype_;
}
void StorageDetail::set_uistorageunittype(::google::protobuf::uint32 value) {
  
  uistorageunittype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiStorageUnitType)
}

// string strBeginDate = 11;
void StorageDetail::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageDetail::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.strBeginDate)
  return strbegindate_.GetNoArena();
}
void StorageDetail::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.strBeginDate)
}
#if LANG_CXX11
void StorageDetail::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageDetail.strBeginDate)
}
#endif
void StorageDetail::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageDetail.strBeginDate)
}
void StorageDetail::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageDetail.strBeginDate)
}
::std::string* StorageDetail::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageDetail.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageDetail::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageDetail.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageDetail::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageDetail.strBeginDate)
}

// string strEndDate = 12;
void StorageDetail::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageDetail::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.strEndDate)
  return strenddate_.GetNoArena();
}
void StorageDetail::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.strEndDate)
}
#if LANG_CXX11
void StorageDetail::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageDetail.strEndDate)
}
#endif
void StorageDetail::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageDetail.strEndDate)
}
void StorageDetail::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageDetail.strEndDate)
}
::std::string* StorageDetail::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageDetail.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageDetail::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageDetail.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageDetail::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageDetail.strEndDate)
}

// string strExtend = 13;
void StorageDetail::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageDetail::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.strExtend)
  return strextend_.GetNoArena();
}
void StorageDetail::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.strExtend)
}
#if LANG_CXX11
void StorageDetail::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageDetail.strExtend)
}
#endif
void StorageDetail::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageDetail.strExtend)
}
void StorageDetail::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageDetail.strExtend)
}
::std::string* StorageDetail::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageDetail.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageDetail::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageDetail.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageDetail::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageDetail.strExtend)
}

// uint32 uiStatus = 14;
void StorageDetail::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 StorageDetail::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageDetail.uiStatus)
  return uistatus_;
}
void StorageDetail::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageDetail.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceCapacity::kUiDevTypeFieldNumber;
const int DeviceCapacity::kStrCapacityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceCapacity::DeviceCapacity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeviceCapacity)
}
DeviceCapacity::DeviceCapacity(const DeviceCapacity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strcapacitylist_(from.strcapacitylist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uidevtype_ = from.uidevtype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeviceCapacity)
}

void DeviceCapacity::SharedCtor() {
  uidevtype_ = 0u;
  _cached_size_ = 0;
}

DeviceCapacity::~DeviceCapacity() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeviceCapacity)
  SharedDtor();
}

void DeviceCapacity::SharedDtor() {
}

void DeviceCapacity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceCapacity::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[13].descriptor;
}

const DeviceCapacity& DeviceCapacity::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceCapacity* DeviceCapacity::New(::google::protobuf::Arena* arena) const {
  DeviceCapacity* n = new DeviceCapacity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceCapacity::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeviceCapacity)
  strcapacitylist_.Clear();
  uidevtype_ = 0u;
}

bool DeviceCapacity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeviceCapacity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiDevType = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strCapacityList = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strcapacitylist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcapacitylist(this->strcapacitylist_size() - 1).data(),
            this->strcapacitylist(this->strcapacitylist_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceCapacity.strCapacityList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeviceCapacity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeviceCapacity)
  return false;
#undef DO_
}

void DeviceCapacity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeviceCapacity)
  // uint32 uiDevType = 1;
  if (this->uidevtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uidevtype(), output);
  }

  // repeated string strCapacityList = 2;
  for (int i = 0; i < this->strcapacitylist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcapacitylist(i).data(), this->strcapacitylist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceCapacity.strCapacityList");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strcapacitylist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeviceCapacity)
}

::google::protobuf::uint8* DeviceCapacity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeviceCapacity)
  // uint32 uiDevType = 1;
  if (this->uidevtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uidevtype(), target);
  }

  // repeated string strCapacityList = 2;
  for (int i = 0; i < this->strcapacitylist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcapacitylist(i).data(), this->strcapacitylist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceCapacity.strCapacityList");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strcapacitylist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeviceCapacity)
  return target;
}

size_t DeviceCapacity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeviceCapacity)
  size_t total_size = 0;

  // repeated string strCapacityList = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strcapacitylist_size());
  for (int i = 0; i < this->strcapacitylist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strcapacitylist(i));
  }

  // uint32 uiDevType = 1;
  if (this->uidevtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceCapacity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeviceCapacity)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceCapacity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceCapacity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeviceCapacity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeviceCapacity)
    MergeFrom(*source);
  }
}

void DeviceCapacity::MergeFrom(const DeviceCapacity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeviceCapacity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcapacitylist_.MergeFrom(from.strcapacitylist_);
  if (from.uidevtype() != 0) {
    set_uidevtype(from.uidevtype());
  }
}

void DeviceCapacity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeviceCapacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceCapacity::CopyFrom(const DeviceCapacity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeviceCapacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceCapacity::IsInitialized() const {
  return true;
}

void DeviceCapacity::Swap(DeviceCapacity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceCapacity::InternalSwap(DeviceCapacity* other) {
  strcapacitylist_.UnsafeArenaSwap(&other->strcapacitylist_);
  std::swap(uidevtype_, other->uidevtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceCapacity::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceCapacity

// uint32 uiDevType = 1;
void DeviceCapacity::clear_uidevtype() {
  uidevtype_ = 0u;
}
::google::protobuf::uint32 DeviceCapacity::uidevtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceCapacity.uiDevType)
  return uidevtype_;
}
void DeviceCapacity::set_uidevtype(::google::protobuf::uint32 value) {
  
  uidevtype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceCapacity.uiDevType)
}

// repeated string strCapacityList = 2;
int DeviceCapacity::strcapacitylist_size() const {
  return strcapacitylist_.size();
}
void DeviceCapacity::clear_strcapacitylist() {
  strcapacitylist_.Clear();
}
const ::std::string& DeviceCapacity::strcapacitylist(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceCapacity.strCapacityList)
  return strcapacitylist_.Get(index);
}
::std::string* DeviceCapacity::mutable_strcapacitylist(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceCapacity.strCapacityList)
  return strcapacitylist_.Mutable(index);
}
void DeviceCapacity::set_strcapacitylist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceCapacity.strCapacityList)
  strcapacitylist_.Mutable(index)->assign(value);
}
void DeviceCapacity::set_strcapacitylist(int index, const char* value) {
  strcapacitylist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceCapacity.strCapacityList)
}
void DeviceCapacity::set_strcapacitylist(int index, const char* value, size_t size) {
  strcapacitylist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceCapacity.strCapacityList)
}
::std::string* DeviceCapacity::add_strcapacitylist() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeviceCapacity.strCapacityList)
  return strcapacitylist_.Add();
}
void DeviceCapacity::add_strcapacitylist(const ::std::string& value) {
  strcapacitylist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeviceCapacity.strCapacityList)
}
void DeviceCapacity::add_strcapacitylist(const char* value) {
  strcapacitylist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeviceCapacity.strCapacityList)
}
void DeviceCapacity::add_strcapacitylist(const char* value, size_t size) {
  strcapacitylist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeviceCapacity.strCapacityList)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeviceCapacity::strcapacitylist() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeviceCapacity.strCapacityList)
  return strcapacitylist_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DeviceCapacity::mutable_strcapacitylist() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeviceCapacity.strCapacityList)
  return &strcapacitylist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressReq_DEV::kStrDevIDFieldNumber;
const int GetAccessAddressReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressReq_DEV::GetAccessAddressReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressReq_DEV)
}
GetAccessAddressReq_DEV::GetAccessAddressReq_DEV(const GetAccessAddressReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressReq_DEV)
}

void GetAccessAddressReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressReq_DEV::~GetAccessAddressReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressReq_DEV)
  SharedDtor();
}

void GetAccessAddressReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[14].descriptor;
}

const GetAccessAddressReq_DEV& GetAccessAddressReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressReq_DEV* GetAccessAddressReq_DEV::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressReq_DEV* n = new GetAccessAddressReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressReq_DEV)
  return false;
#undef DO_
}

void GetAccessAddressReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressReq_DEV)
}

::google::protobuf::uint8* GetAccessAddressReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressReq_DEV)
  return target;
}

size_t GetAccessAddressReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressReq_DEV)
    MergeFrom(*source);
  }
}

void GetAccessAddressReq_DEV::MergeFrom(const GetAccessAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressReq_DEV::CopyFrom(const GetAccessAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressReq_DEV::IsInitialized() const {
  return true;
}

void GetAccessAddressReq_DEV::Swap(GetAccessAddressReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressReq_DEV::InternalSwap(GetAccessAddressReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressReq_DEV

// string strDevID = 1;
void GetAccessAddressReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void GetAccessAddressReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
#if LANG_CXX11
void GetAccessAddressReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
#endif
void GetAccessAddressReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
void GetAccessAddressReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
::std::string* GetAccessAddressReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}

// string strValue = 2;
void GetAccessAddressReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
#if LANG_CXX11
void GetAccessAddressReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
#endif
void GetAccessAddressReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
void GetAccessAddressReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
::std::string* GetAccessAddressReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressRsp_DEV::kStrAccessAddressFieldNumber;
const int GetAccessAddressRsp_DEV::kStrAccessPortFieldNumber;
const int GetAccessAddressRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressRsp_DEV::GetAccessAddressRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressRsp_DEV)
}
GetAccessAddressRsp_DEV::GetAccessAddressRsp_DEV(const GetAccessAddressRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessaddress().size() > 0) {
    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessport().size() > 0) {
    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressRsp_DEV)
}

void GetAccessAddressRsp_DEV::SharedCtor() {
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressRsp_DEV::~GetAccessAddressRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressRsp_DEV)
  SharedDtor();
}

void GetAccessAddressRsp_DEV::SharedDtor() {
  straccessaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[15].descriptor;
}

const GetAccessAddressRsp_DEV& GetAccessAddressRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressRsp_DEV* GetAccessAddressRsp_DEV::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressRsp_DEV* n = new GetAccessAddressRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressRsp_DEV)
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessaddress().data(), this->straccessaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAccessPort = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessport().data(), this->straccessport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressRsp_DEV)
  return false;
#undef DO_
}

void GetAccessAddressRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressRsp_DEV)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessaddress(), output);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->straccessport(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressRsp_DEV)
}

::google::protobuf::uint8* GetAccessAddressRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressRsp_DEV)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessaddress(), target);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->straccessport(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressRsp_DEV)
  return target;
}

size_t GetAccessAddressRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressRsp_DEV)
  size_t total_size = 0;

  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessaddress());
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessport());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressRsp_DEV)
    MergeFrom(*source);
  }
}

void GetAccessAddressRsp_DEV::MergeFrom(const GetAccessAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessaddress().size() > 0) {

    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  if (from.straccessport().size() > 0) {

    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressRsp_DEV::CopyFrom(const GetAccessAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressRsp_DEV::IsInitialized() const {
  return true;
}

void GetAccessAddressRsp_DEV::Swap(GetAccessAddressRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressRsp_DEV::InternalSwap(GetAccessAddressRsp_DEV* other) {
  straccessaddress_.Swap(&other->straccessaddress_);
  straccessport_.Swap(&other->straccessport_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressRsp_DEV

// string strAccessAddress = 1;
void GetAccessAddressRsp_DEV::clear_straccessaddress() {
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_DEV::straccessaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  return straccessaddress_.GetNoArena();
}
void GetAccessAddressRsp_DEV::set_straccessaddress(const ::std::string& value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
#if LANG_CXX11
void GetAccessAddressRsp_DEV::set_straccessaddress(::std::string&& value) {
  
  straccessaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
#endif
void GetAccessAddressRsp_DEV::set_straccessaddress(const char* value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
void GetAccessAddressRsp_DEV::set_straccessaddress(const char* value, size_t size) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
::std::string* GetAccessAddressRsp_DEV::mutable_straccessaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  return straccessaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_DEV::release_straccessaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  
  return straccessaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_DEV::set_allocated_straccessaddress(::std::string* straccessaddress) {
  if (straccessaddress != NULL) {
    
  } else {
    
  }
  straccessaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}

// string strAccessPort = 2;
void GetAccessAddressRsp_DEV::clear_straccessport() {
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_DEV::straccessport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  return straccessport_.GetNoArena();
}
void GetAccessAddressRsp_DEV::set_straccessport(const ::std::string& value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
#if LANG_CXX11
void GetAccessAddressRsp_DEV::set_straccessport(::std::string&& value) {
  
  straccessport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
#endif
void GetAccessAddressRsp_DEV::set_straccessport(const char* value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
void GetAccessAddressRsp_DEV::set_straccessport(const char* value, size_t size) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
::std::string* GetAccessAddressRsp_DEV::mutable_straccessport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  return straccessport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_DEV::release_straccessport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  
  return straccessport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_DEV::set_allocated_straccessport(::std::string* straccessport) {
  if (straccessport != NULL) {
    
  } else {
    
  }
  straccessport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}

// string strValue = 3;
void GetAccessAddressRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
#if LANG_CXX11
void GetAccessAddressRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
#endif
void GetAccessAddressRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
void GetAccessAddressRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
::std::string* GetAccessAddressRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq_DEV::kStrDevIDFieldNumber;
const int LoginReq_DEV::kStrPasswordFieldNumber;
const int LoginReq_DEV::kUiDeviceTypeFieldNumber;
const int LoginReq_DEV::kUiP2PSupplierFieldNumber;
const int LoginReq_DEV::kStrP2PIDFieldNumber;
const int LoginReq_DEV::kStrP2PServerFieldNumber;
const int LoginReq_DEV::kUiP2PBuildinFieldNumber;
const int LoginReq_DEV::kStrUserNameFieldNumber;
const int LoginReq_DEV::kStrUserPasswordFieldNumber;
const int LoginReq_DEV::kStrDistributorFieldNumber;
const int LoginReq_DEV::kStrOtherPropertyFieldNumber;
const int LoginReq_DEV::kStrDomainNameFieldNumber;
const int LoginReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq_DEV::LoginReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginReq_DEV)
}
LoginReq_DEV::LoginReq_DEV(const LoginReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpassword().size() > 0) {
    strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pserver().size() > 0) {
    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  struserpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserpassword().size() > 0) {
    struserpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserpassword_);
  }
  strdistributor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdistributor().size() > 0) {
    strdistributor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdistributor_);
  }
  strotherproperty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strotherproperty().size() > 0) {
    strotherproperty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strotherproperty_);
  }
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  ::memcpy(&uidevicetype_, &from.uidevicetype_,
    reinterpret_cast<char*>(&uip2pbuildin_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uip2pbuildin_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginReq_DEV)
}

void LoginReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdistributor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strotherproperty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uip2pbuildin_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uip2pbuildin_));
  _cached_size_ = 0;
}

LoginReq_DEV::~LoginReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginReq_DEV)
  SharedDtor();
}

void LoginReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdistributor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strotherproperty_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[16].descriptor;
}

const LoginReq_DEV& LoginReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq_DEV* LoginReq_DEV::New(::google::protobuf::Arena* arena) const {
  LoginReq_DEV* n = new LoginReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdistributor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strotherproperty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uip2pbuildin_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uip2pbuildin_));
}

bool LoginReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPassword = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpassword().data(), this->strpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiP2pSupplier = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uip2psupplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pServer = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pserver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pserver().data(), this->strp2pserver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strP2pServer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiP2pBuildin = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uip2pbuildin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserName = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserPassword = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserpassword().data(), this->struserpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strUserPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDistributor = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdistributor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdistributor().data(), this->strdistributor().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strDistributor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strOtherProperty = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strotherproperty()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strotherproperty().data(), this->strotherproperty().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strOtherProperty"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDomainName = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginReq_DEV)
  return false;
#undef DO_
}

void LoginReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strPassword = 2;
  if (this->strpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strpassword(), output);
  }

  // uint32 uiDeviceType = 3;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uidevicetype(), output);
  }

  // uint32 uiP2pSupplier = 4;
  if (this->uip2psupplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uip2psupplier(), output);
  }

  // string strP2pID = 5;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strp2pid(), output);
  }

  // string strP2pServer = 6;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strP2pServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strp2pserver(), output);
  }

  // uint32 uiP2pBuildin = 7;
  if (this->uip2pbuildin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uip2pbuildin(), output);
  }

  // string strUserName = 8;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strusername(), output);
  }

  // string strUserPassword = 9;
  if (this->struserpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserpassword().data(), this->struserpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strUserPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->struserpassword(), output);
  }

  // string strDistributor = 10;
  if (this->strdistributor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdistributor().data(), this->strdistributor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDistributor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strdistributor(), output);
  }

  // string strOtherProperty = 11;
  if (this->strotherproperty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strotherproperty().data(), this->strotherproperty().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strOtherProperty");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->strotherproperty(), output);
  }

  // string strDomainName = 12;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->strdomainname(), output);
  }

  // string strValue = 13;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginReq_DEV)
}

::google::protobuf::uint8* LoginReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strPassword = 2;
  if (this->strpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strpassword(), target);
  }

  // uint32 uiDeviceType = 3;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uidevicetype(), target);
  }

  // uint32 uiP2pSupplier = 4;
  if (this->uip2psupplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uip2psupplier(), target);
  }

  // string strP2pID = 5;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strp2pid(), target);
  }

  // string strP2pServer = 6;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strP2pServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strp2pserver(), target);
  }

  // uint32 uiP2pBuildin = 7;
  if (this->uip2pbuildin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uip2pbuildin(), target);
  }

  // string strUserName = 8;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strusername(), target);
  }

  // string strUserPassword = 9;
  if (this->struserpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserpassword().data(), this->struserpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strUserPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->struserpassword(), target);
  }

  // string strDistributor = 10;
  if (this->strdistributor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdistributor().data(), this->strdistributor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDistributor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strdistributor(), target);
  }

  // string strOtherProperty = 11;
  if (this->strotherproperty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strotherproperty().data(), this->strotherproperty().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strOtherProperty");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strotherproperty(), target);
  }

  // string strDomainName = 12;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strdomainname(), target);
  }

  // string strValue = 13;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginReq_DEV)
  return target;
}

size_t LoginReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strPassword = 2;
  if (this->strpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpassword());
  }

  // string strP2pID = 5;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // string strP2pServer = 6;
  if (this->strp2pserver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pserver());
  }

  // string strUserName = 8;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strUserPassword = 9;
  if (this->struserpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserpassword());
  }

  // string strDistributor = 10;
  if (this->strdistributor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdistributor());
  }

  // string strOtherProperty = 11;
  if (this->strotherproperty().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strotherproperty());
  }

  // string strDomainName = 12;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  // string strValue = 13;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiDeviceType = 3;
  if (this->uidevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  // uint32 uiP2pSupplier = 4;
  if (this->uip2psupplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uip2psupplier());
  }

  // uint32 uiP2pBuildin = 7;
  if (this->uip2pbuildin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uip2pbuildin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginReq_DEV)
    MergeFrom(*source);
  }
}

void LoginReq_DEV::MergeFrom(const LoginReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strpassword().size() > 0) {

    strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.strp2pserver().size() > 0) {

    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.struserpassword().size() > 0) {

    struserpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserpassword_);
  }
  if (from.strdistributor().size() > 0) {

    strdistributor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdistributor_);
  }
  if (from.strotherproperty().size() > 0) {

    strotherproperty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strotherproperty_);
  }
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
  if (from.uip2psupplier() != 0) {
    set_uip2psupplier(from.uip2psupplier());
  }
  if (from.uip2pbuildin() != 0) {
    set_uip2pbuildin(from.uip2pbuildin());
  }
}

void LoginReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq_DEV::CopyFrom(const LoginReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq_DEV::IsInitialized() const {
  return true;
}

void LoginReq_DEV::Swap(LoginReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq_DEV::InternalSwap(LoginReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strpassword_.Swap(&other->strpassword_);
  strp2pid_.Swap(&other->strp2pid_);
  strp2pserver_.Swap(&other->strp2pserver_);
  strusername_.Swap(&other->strusername_);
  struserpassword_.Swap(&other->struserpassword_);
  strdistributor_.Swap(&other->strdistributor_);
  strotherproperty_.Swap(&other->strotherproperty_);
  strdomainname_.Swap(&other->strdomainname_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(uip2psupplier_, other->uip2psupplier_);
  std::swap(uip2pbuildin_, other->uip2pbuildin_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq_DEV

// string strDevID = 1;
void LoginReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void LoginReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strDevID)
}
#if LANG_CXX11
void LoginReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strDevID)
}
#endif
void LoginReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strDevID)
}
void LoginReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strDevID)
}
::std::string* LoginReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strDevID)
}

// string strPassword = 2;
void LoginReq_DEV::clear_strpassword() {
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strPassword)
  return strpassword_.GetNoArena();
}
void LoginReq_DEV::set_strpassword(const ::std::string& value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strPassword)
}
#if LANG_CXX11
void LoginReq_DEV::set_strpassword(::std::string&& value) {
  
  strpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strPassword)
}
#endif
void LoginReq_DEV::set_strpassword(const char* value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strPassword)
}
void LoginReq_DEV::set_strpassword(const char* value, size_t size) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strPassword)
}
::std::string* LoginReq_DEV::mutable_strpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strPassword)
  return strpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strPassword)
  
  return strpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strpassword(::std::string* strpassword) {
  if (strpassword != NULL) {
    
  } else {
    
  }
  strpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strPassword)
}

// uint32 uiDeviceType = 3;
void LoginReq_DEV::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 LoginReq_DEV::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.uiDeviceType)
  return uidevicetype_;
}
void LoginReq_DEV::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.uiDeviceType)
}

// uint32 uiP2pSupplier = 4;
void LoginReq_DEV::clear_uip2psupplier() {
  uip2psupplier_ = 0u;
}
::google::protobuf::uint32 LoginReq_DEV::uip2psupplier() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.uiP2pSupplier)
  return uip2psupplier_;
}
void LoginReq_DEV::set_uip2psupplier(::google::protobuf::uint32 value) {
  
  uip2psupplier_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.uiP2pSupplier)
}

// string strP2pID = 5;
void LoginReq_DEV::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strP2pID)
  return strp2pid_.GetNoArena();
}
void LoginReq_DEV::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strP2pID)
}
#if LANG_CXX11
void LoginReq_DEV::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strP2pID)
}
#endif
void LoginReq_DEV::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strP2pID)
}
void LoginReq_DEV::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strP2pID)
}
::std::string* LoginReq_DEV::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strP2pID)
}

// string strP2pServer = 6;
void LoginReq_DEV::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strP2pServer)
  return strp2pserver_.GetNoArena();
}
void LoginReq_DEV::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strP2pServer)
}
#if LANG_CXX11
void LoginReq_DEV::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strP2pServer)
}
#endif
void LoginReq_DEV::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strP2pServer)
}
void LoginReq_DEV::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strP2pServer)
}
::std::string* LoginReq_DEV::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strP2pServer)
}

// uint32 uiP2pBuildin = 7;
void LoginReq_DEV::clear_uip2pbuildin() {
  uip2pbuildin_ = 0u;
}
::google::protobuf::uint32 LoginReq_DEV::uip2pbuildin() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.uiP2pBuildin)
  return uip2pbuildin_;
}
void LoginReq_DEV::set_uip2pbuildin(::google::protobuf::uint32 value) {
  
  uip2pbuildin_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.uiP2pBuildin)
}

// string strUserName = 8;
void LoginReq_DEV::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strUserName)
  return strusername_.GetNoArena();
}
void LoginReq_DEV::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strUserName)
}
#if LANG_CXX11
void LoginReq_DEV::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strUserName)
}
#endif
void LoginReq_DEV::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strUserName)
}
void LoginReq_DEV::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strUserName)
}
::std::string* LoginReq_DEV::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strUserName)
}

// string strUserPassword = 9;
void LoginReq_DEV::clear_struserpassword() {
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::struserpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strUserPassword)
  return struserpassword_.GetNoArena();
}
void LoginReq_DEV::set_struserpassword(const ::std::string& value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strUserPassword)
}
#if LANG_CXX11
void LoginReq_DEV::set_struserpassword(::std::string&& value) {
  
  struserpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strUserPassword)
}
#endif
void LoginReq_DEV::set_struserpassword(const char* value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strUserPassword)
}
void LoginReq_DEV::set_struserpassword(const char* value, size_t size) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strUserPassword)
}
::std::string* LoginReq_DEV::mutable_struserpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strUserPassword)
  return struserpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_struserpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strUserPassword)
  
  return struserpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_struserpassword(::std::string* struserpassword) {
  if (struserpassword != NULL) {
    
  } else {
    
  }
  struserpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strUserPassword)
}

// string strDistributor = 10;
void LoginReq_DEV::clear_strdistributor() {
  strdistributor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strdistributor() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strDistributor)
  return strdistributor_.GetNoArena();
}
void LoginReq_DEV::set_strdistributor(const ::std::string& value) {
  
  strdistributor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strDistributor)
}
#if LANG_CXX11
void LoginReq_DEV::set_strdistributor(::std::string&& value) {
  
  strdistributor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strDistributor)
}
#endif
void LoginReq_DEV::set_strdistributor(const char* value) {
  
  strdistributor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strDistributor)
}
void LoginReq_DEV::set_strdistributor(const char* value, size_t size) {
  
  strdistributor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strDistributor)
}
::std::string* LoginReq_DEV::mutable_strdistributor() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strDistributor)
  return strdistributor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strdistributor() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strDistributor)
  
  return strdistributor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strdistributor(::std::string* strdistributor) {
  if (strdistributor != NULL) {
    
  } else {
    
  }
  strdistributor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdistributor);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strDistributor)
}

// string strOtherProperty = 11;
void LoginReq_DEV::clear_strotherproperty() {
  strotherproperty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strotherproperty() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strOtherProperty)
  return strotherproperty_.GetNoArena();
}
void LoginReq_DEV::set_strotherproperty(const ::std::string& value) {
  
  strotherproperty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strOtherProperty)
}
#if LANG_CXX11
void LoginReq_DEV::set_strotherproperty(::std::string&& value) {
  
  strotherproperty_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strOtherProperty)
}
#endif
void LoginReq_DEV::set_strotherproperty(const char* value) {
  
  strotherproperty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strOtherProperty)
}
void LoginReq_DEV::set_strotherproperty(const char* value, size_t size) {
  
  strotherproperty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strOtherProperty)
}
::std::string* LoginReq_DEV::mutable_strotherproperty() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strOtherProperty)
  return strotherproperty_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strotherproperty() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strOtherProperty)
  
  return strotherproperty_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strotherproperty(::std::string* strotherproperty) {
  if (strotherproperty != NULL) {
    
  } else {
    
  }
  strotherproperty_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strotherproperty);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strOtherProperty)
}

// string strDomainName = 12;
void LoginReq_DEV::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strDomainName)
  return strdomainname_.GetNoArena();
}
void LoginReq_DEV::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strDomainName)
}
#if LANG_CXX11
void LoginReq_DEV::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strDomainName)
}
#endif
void LoginReq_DEV::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strDomainName)
}
void LoginReq_DEV::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strDomainName)
}
::std::string* LoginReq_DEV::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strDomainName)
}

// string strValue = 13;
void LoginReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LoginReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strValue)
}
#if LANG_CXX11
void LoginReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strValue)
}
#endif
void LoginReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strValue)
}
void LoginReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strValue)
}
::std::string* LoginReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp_DEV::LoginRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginRsp_DEV)
}
LoginRsp_DEV::LoginRsp_DEV(const LoginRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginRsp_DEV)
}

void LoginRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRsp_DEV::~LoginRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginRsp_DEV)
  SharedDtor();
}

void LoginRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[17].descriptor;
}

const LoginRsp_DEV& LoginRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRsp_DEV* LoginRsp_DEV::New(::google::protobuf::Arena* arena) const {
  LoginRsp_DEV* n = new LoginRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginRsp_DEV)
  return false;
#undef DO_
}

void LoginRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginRsp_DEV)
  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginRsp_DEV)
}

::google::protobuf::uint8* LoginRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginRsp_DEV)
  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginRsp_DEV)
  return target;
}

size_t LoginRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginRsp_DEV)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginRsp_DEV)
    MergeFrom(*source);
  }
}

void LoginRsp_DEV::MergeFrom(const LoginRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp_DEV::CopyFrom(const LoginRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp_DEV::IsInitialized() const {
  return true;
}

void LoginRsp_DEV::Swap(LoginRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp_DEV::InternalSwap(LoginRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp_DEV

// string strValue = 2;
void LoginRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LoginRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_DEV.strValue)
}
#if LANG_CXX11
void LoginRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_DEV.strValue)
}
#endif
void LoginRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_DEV.strValue)
}
void LoginRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_DEV.strValue)
}
::std::string* LoginRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq_DEV::kStrDevIDFieldNumber;
const int LogoutReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq_DEV::LogoutReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutReq_DEV)
}
LogoutReq_DEV::LogoutReq_DEV(const LogoutReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutReq_DEV)
}

void LogoutReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutReq_DEV::~LogoutReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutReq_DEV)
  SharedDtor();
}

void LogoutReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[18].descriptor;
}

const LogoutReq_DEV& LogoutReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq_DEV* LogoutReq_DEV::New(::google::protobuf::Arena* arena) const {
  LogoutReq_DEV* n = new LogoutReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogoutReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutReq_DEV)
  return false;
#undef DO_
}

void LogoutReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutReq_DEV)
}

::google::protobuf::uint8* LogoutReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutReq_DEV)
  return target;
}

size_t LogoutReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutReq_DEV)
    MergeFrom(*source);
  }
}

void LogoutReq_DEV::MergeFrom(const LogoutReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LogoutReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq_DEV::CopyFrom(const LogoutReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq_DEV::IsInitialized() const {
  return true;
}

void LogoutReq_DEV::Swap(LogoutReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq_DEV::InternalSwap(LogoutReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq_DEV

// string strDevID = 1;
void LogoutReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void LogoutReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_DEV.strDevID)
}
#if LANG_CXX11
void LogoutReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_DEV.strDevID)
}
#endif
void LogoutReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_DEV.strDevID)
}
void LogoutReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_DEV.strDevID)
}
::std::string* LogoutReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_DEV.strDevID)
}

// string strValue = 2;
void LogoutReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LogoutReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_DEV.strValue)
}
#if LANG_CXX11
void LogoutReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_DEV.strValue)
}
#endif
void LogoutReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_DEV.strValue)
}
void LogoutReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_DEV.strValue)
}
::std::string* LogoutReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRsp_DEV::LogoutRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutRsp_DEV)
}
LogoutRsp_DEV::LogoutRsp_DEV(const LogoutRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutRsp_DEV)
}

void LogoutRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutRsp_DEV::~LogoutRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutRsp_DEV)
  SharedDtor();
}

void LogoutRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[19].descriptor;
}

const LogoutRsp_DEV& LogoutRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutRsp_DEV* LogoutRsp_DEV::New(::google::protobuf::Arena* arena) const {
  LogoutRsp_DEV* n = new LogoutRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogoutRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutRsp_DEV)
  return false;
#undef DO_
}

void LogoutRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutRsp_DEV)
}

::google::protobuf::uint8* LogoutRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutRsp_DEV)
  return target;
}

size_t LogoutRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutRsp_DEV)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutRsp_DEV)
    MergeFrom(*source);
  }
}

void LogoutRsp_DEV::MergeFrom(const LogoutRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LogoutRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRsp_DEV::CopyFrom(const LogoutRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRsp_DEV::IsInitialized() const {
  return true;
}

void LogoutRsp_DEV::Swap(LogoutRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRsp_DEV::InternalSwap(LogoutRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutRsp_DEV

// string strValue = 1;
void LogoutRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LogoutRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutRsp_DEV.strValue)
}
#if LANG_CXX11
void LogoutRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutRsp_DEV.strValue)
}
#endif
void LogoutRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutRsp_DEV.strValue)
}
void LogoutRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutRsp_DEV.strValue)
}
::std::string* LogoutRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandReq_DEV::kStrDevIDFieldNumber;
const int ShakehandReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandReq_DEV::ShakehandReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandReq_DEV)
}
ShakehandReq_DEV::ShakehandReq_DEV(const ShakehandReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandReq_DEV)
}

void ShakehandReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandReq_DEV::~ShakehandReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandReq_DEV)
  SharedDtor();
}

void ShakehandReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[20].descriptor;
}

const ShakehandReq_DEV& ShakehandReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandReq_DEV* ShakehandReq_DEV::New(::google::protobuf::Arena* arena) const {
  ShakehandReq_DEV* n = new ShakehandReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandReq_DEV)
  return false;
#undef DO_
}

void ShakehandReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandReq_DEV)
}

::google::protobuf::uint8* ShakehandReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandReq_DEV)
  return target;
}

size_t ShakehandReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandReq_DEV)
    MergeFrom(*source);
  }
}

void ShakehandReq_DEV::MergeFrom(const ShakehandReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandReq_DEV::CopyFrom(const ShakehandReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandReq_DEV::IsInitialized() const {
  return true;
}

void ShakehandReq_DEV::Swap(ShakehandReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandReq_DEV::InternalSwap(ShakehandReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandReq_DEV

// string strDevID = 1;
void ShakehandReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void ShakehandReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_DEV.strDevID)
}
#if LANG_CXX11
void ShakehandReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_DEV.strDevID)
}
#endif
void ShakehandReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_DEV.strDevID)
}
void ShakehandReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_DEV.strDevID)
}
::std::string* ShakehandReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_DEV.strDevID)
}

// string strValue = 3;
void ShakehandReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_DEV.strValue)
}
#if LANG_CXX11
void ShakehandReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_DEV.strValue)
}
#endif
void ShakehandReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_DEV.strValue)
}
void ShakehandReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_DEV.strValue)
}
::std::string* ShakehandReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandRsp_DEV::ShakehandRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandRsp_DEV)
}
ShakehandRsp_DEV::ShakehandRsp_DEV(const ShakehandRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandRsp_DEV)
}

void ShakehandRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandRsp_DEV::~ShakehandRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandRsp_DEV)
  SharedDtor();
}

void ShakehandRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[21].descriptor;
}

const ShakehandRsp_DEV& ShakehandRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandRsp_DEV* ShakehandRsp_DEV::New(::google::protobuf::Arena* arena) const {
  ShakehandRsp_DEV* n = new ShakehandRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandRsp_DEV)
  return false;
#undef DO_
}

void ShakehandRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandRsp_DEV)
}

::google::protobuf::uint8* ShakehandRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandRsp_DEV)
  return target;
}

size_t ShakehandRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandRsp_DEV)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandRsp_DEV)
    MergeFrom(*source);
  }
}

void ShakehandRsp_DEV::MergeFrom(const ShakehandRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandRsp_DEV::CopyFrom(const ShakehandRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandRsp_DEV::IsInitialized() const {
  return true;
}

void ShakehandRsp_DEV::Swap(ShakehandRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandRsp_DEV::InternalSwap(ShakehandRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandRsp_DEV

// string strValue = 1;
void ShakehandRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandRsp_DEV.strValue)
}
#if LANG_CXX11
void ShakehandRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandRsp_DEV.strValue)
}
#endif
void ShakehandRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandRsp_DEV.strValue)
}
void ShakehandRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandRsp_DEV.strValue)
}
::std::string* ShakehandRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoReq_DEV::kStrDevIDFieldNumber;
const int ConfigInfoReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoReq_DEV::ConfigInfoReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoReq_DEV)
}
ConfigInfoReq_DEV::ConfigInfoReq_DEV(const ConfigInfoReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoReq_DEV)
}

void ConfigInfoReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoReq_DEV::~ConfigInfoReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoReq_DEV)
  SharedDtor();
}

void ConfigInfoReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[22].descriptor;
}

const ConfigInfoReq_DEV& ConfigInfoReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoReq_DEV* ConfigInfoReq_DEV::New(::google::protobuf::Arena* arena) const {
  ConfigInfoReq_DEV* n = new ConfigInfoReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoReq_DEV)
  return false;
#undef DO_
}

void ConfigInfoReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoReq_DEV)
}

::google::protobuf::uint8* ConfigInfoReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoReq_DEV)
  return target;
}

size_t ConfigInfoReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoReq_DEV)
    MergeFrom(*source);
  }
}

void ConfigInfoReq_DEV::MergeFrom(const ConfigInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoReq_DEV::CopyFrom(const ConfigInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoReq_DEV::IsInitialized() const {
  return true;
}

void ConfigInfoReq_DEV::Swap(ConfigInfoReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoReq_DEV::InternalSwap(ConfigInfoReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoReq_DEV

// string strDevID = 1;
void ConfigInfoReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void ConfigInfoReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
#if LANG_CXX11
void ConfigInfoReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
#endif
void ConfigInfoReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
void ConfigInfoReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
::std::string* ConfigInfoReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}

// string strValue = 2;
void ConfigInfoReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
#if LANG_CXX11
void ConfigInfoReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
#endif
void ConfigInfoReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
void ConfigInfoReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
::std::string* ConfigInfoReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoRsp_DEV::kStrConfigInfoFieldNumber;
const int ConfigInfoRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoRsp_DEV::ConfigInfoRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoRsp_DEV)
}
ConfigInfoRsp_DEV::ConfigInfoRsp_DEV(const ConfigInfoRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strconfiginfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strconfiginfo().size() > 0) {
    strconfiginfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strconfiginfo_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoRsp_DEV)
}

void ConfigInfoRsp_DEV::SharedCtor() {
  strconfiginfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoRsp_DEV::~ConfigInfoRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoRsp_DEV)
  SharedDtor();
}

void ConfigInfoRsp_DEV::SharedDtor() {
  strconfiginfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[23].descriptor;
}

const ConfigInfoRsp_DEV& ConfigInfoRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoRsp_DEV* ConfigInfoRsp_DEV::New(::google::protobuf::Arena* arena) const {
  ConfigInfoRsp_DEV* n = new ConfigInfoRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoRsp_DEV)
  strconfiginfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strConfigInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strconfiginfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strconfiginfo().data(), this->strconfiginfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoRsp_DEV)
  return false;
#undef DO_
}

void ConfigInfoRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoRsp_DEV)
  // string strConfigInfo = 1;
  if (this->strconfiginfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strconfiginfo().data(), this->strconfiginfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strconfiginfo(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoRsp_DEV)
}

::google::protobuf::uint8* ConfigInfoRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoRsp_DEV)
  // string strConfigInfo = 1;
  if (this->strconfiginfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strconfiginfo().data(), this->strconfiginfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strconfiginfo(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoRsp_DEV)
  return target;
}

size_t ConfigInfoRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoRsp_DEV)
  size_t total_size = 0;

  // string strConfigInfo = 1;
  if (this->strconfiginfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strconfiginfo());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoRsp_DEV)
    MergeFrom(*source);
  }
}

void ConfigInfoRsp_DEV::MergeFrom(const ConfigInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strconfiginfo().size() > 0) {

    strconfiginfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strconfiginfo_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoRsp_DEV::CopyFrom(const ConfigInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoRsp_DEV::IsInitialized() const {
  return true;
}

void ConfigInfoRsp_DEV::Swap(ConfigInfoRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoRsp_DEV::InternalSwap(ConfigInfoRsp_DEV* other) {
  strconfiginfo_.Swap(&other->strconfiginfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoRsp_DEV

// string strConfigInfo = 1;
void ConfigInfoRsp_DEV::clear_strconfiginfo() {
  strconfiginfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp_DEV::strconfiginfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  return strconfiginfo_.GetNoArena();
}
void ConfigInfoRsp_DEV::set_strconfiginfo(const ::std::string& value) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
#if LANG_CXX11
void ConfigInfoRsp_DEV::set_strconfiginfo(::std::string&& value) {
  
  strconfiginfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
#endif
void ConfigInfoRsp_DEV::set_strconfiginfo(const char* value) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
void ConfigInfoRsp_DEV::set_strconfiginfo(const char* value, size_t size) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
::std::string* ConfigInfoRsp_DEV::mutable_strconfiginfo() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  return strconfiginfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp_DEV::release_strconfiginfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  
  return strconfiginfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp_DEV::set_allocated_strconfiginfo(::std::string* strconfiginfo) {
  if (strconfiginfo != NULL) {
    
  } else {
    
  }
  strconfiginfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconfiginfo);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}

// string strValue = 2;
void ConfigInfoRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
#if LANG_CXX11
void ConfigInfoRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
#endif
void ConfigInfoRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
void ConfigInfoRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
::std::string* ConfigInfoRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressReq_DEV::kStrDevIDFieldNumber;
const int StorageAddressReq_DEV::kUiStorageTypeFieldNumber;
const int StorageAddressReq_DEV::kUiStorageActionFieldNumber;
const int StorageAddressReq_DEV::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressReq_DEV::StorageAddressReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressReq_DEV)
}
StorageAddressReq_DEV::StorageAddressReq_DEV(const StorageAddressReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  ::memcpy(&uistoragetype_, &from.uistoragetype_,
    reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressReq_DEV)
}

void StorageAddressReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  _cached_size_ = 0;
}

StorageAddressReq_DEV::~StorageAddressReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressReq_DEV)
  SharedDtor();
}

void StorageAddressReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[24].descriptor;
}

const StorageAddressReq_DEV& StorageAddressReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressReq_DEV* StorageAddressReq_DEV::New(::google::protobuf::Arena* arena) const {
  StorageAddressReq_DEV* n = new StorageAddressReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
}

bool StorageAddressReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageAction = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistorageaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_DEV.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressReq_DEV)
  return false;
#undef DO_
}

void StorageAddressReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uistoragetype(), output);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uistorageaction(), output);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strfileid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressReq_DEV)
}

::google::protobuf::uint8* StorageAddressReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uistoragetype(), target);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uistorageaction(), target);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strfileid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressReq_DEV)
  return target;
}

size_t StorageAddressReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetype());
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistorageaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressReq_DEV)
    MergeFrom(*source);
  }
}

void StorageAddressReq_DEV::MergeFrom(const StorageAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.uistoragetype() != 0) {
    set_uistoragetype(from.uistoragetype());
  }
  if (from.uistorageaction() != 0) {
    set_uistorageaction(from.uistorageaction());
  }
}

void StorageAddressReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressReq_DEV::CopyFrom(const StorageAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressReq_DEV::IsInitialized() const {
  return true;
}

void StorageAddressReq_DEV::Swap(StorageAddressReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressReq_DEV::InternalSwap(StorageAddressReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strfileid_.Swap(&other->strfileid_);
  std::swap(uistoragetype_, other->uistoragetype_);
  std::swap(uistorageaction_, other->uistorageaction_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressReq_DEV

// string strDevID = 1;
void StorageAddressReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void StorageAddressReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
#if LANG_CXX11
void StorageAddressReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
#endif
void StorageAddressReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
void StorageAddressReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
::std::string* StorageAddressReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_DEV.strDevID)
}

// uint32 uiStorageType = 2;
void StorageAddressReq_DEV::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_DEV::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.uiStorageType)
  return uistoragetype_;
}
void StorageAddressReq_DEV::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.uiStorageType)
}

// uint32 uiStorageAction = 3;
void StorageAddressReq_DEV::clear_uistorageaction() {
  uistorageaction_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_DEV::uistorageaction() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.uiStorageAction)
  return uistorageaction_;
}
void StorageAddressReq_DEV::set_uistorageaction(::google::protobuf::uint32 value) {
  
  uistorageaction_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.uiStorageAction)
}

// string strFileID = 4;
void StorageAddressReq_DEV::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_DEV::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.strFileID)
  return strfileid_.GetNoArena();
}
void StorageAddressReq_DEV::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
#if LANG_CXX11
void StorageAddressReq_DEV::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
#endif
void StorageAddressReq_DEV::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
void StorageAddressReq_DEV::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
::std::string* StorageAddressReq_DEV::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_DEV.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_DEV::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_DEV.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_DEV::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_DEV.strFileID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressRsp_DEV::kStrAddressFieldNumber;
const int StorageAddressRsp_DEV::kUiPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressRsp_DEV::StorageAddressRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressRsp_DEV)
}
StorageAddressRsp_DEV::StorageAddressRsp_DEV(const StorageAddressRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straddress().size() > 0) {
    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  uiport_ = from.uiport_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressRsp_DEV)
}

void StorageAddressRsp_DEV::SharedCtor() {
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
  _cached_size_ = 0;
}

StorageAddressRsp_DEV::~StorageAddressRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressRsp_DEV)
  SharedDtor();
}

void StorageAddressRsp_DEV::SharedDtor() {
  straddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[25].descriptor;
}

const StorageAddressRsp_DEV& StorageAddressRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressRsp_DEV* StorageAddressRsp_DEV::New(::google::protobuf::Arena* arena) const {
  StorageAddressRsp_DEV* n = new StorageAddressRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressRsp_DEV)
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
}

bool StorageAddressRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressRsp_DEV.strAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiPort = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressRsp_DEV)
  return false;
#undef DO_
}

void StorageAddressRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressRsp_DEV)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_DEV.strAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straddress(), output);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiport(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressRsp_DEV)
}

::google::protobuf::uint8* StorageAddressRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressRsp_DEV)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_DEV.strAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straddress(), target);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressRsp_DEV)
  return target;
}

size_t StorageAddressRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressRsp_DEV)
  size_t total_size = 0;

  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straddress());
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressRsp_DEV)
    MergeFrom(*source);
  }
}

void StorageAddressRsp_DEV::MergeFrom(const StorageAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straddress().size() > 0) {

    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  if (from.uiport() != 0) {
    set_uiport(from.uiport());
  }
}

void StorageAddressRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressRsp_DEV::CopyFrom(const StorageAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressRsp_DEV::IsInitialized() const {
  return true;
}

void StorageAddressRsp_DEV::Swap(StorageAddressRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressRsp_DEV::InternalSwap(StorageAddressRsp_DEV* other) {
  straddress_.Swap(&other->straddress_);
  std::swap(uiport_, other->uiport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressRsp_DEV

// string strAddress = 1;
void StorageAddressRsp_DEV::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressRsp_DEV::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  return straddress_.GetNoArena();
}
void StorageAddressRsp_DEV::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
#if LANG_CXX11
void StorageAddressRsp_DEV::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
#endif
void StorageAddressRsp_DEV::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
void StorageAddressRsp_DEV::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
::std::string* StorageAddressRsp_DEV::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressRsp_DEV::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressRsp_DEV::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}

// uint32 uiPort = 2;
void StorageAddressRsp_DEV::clear_uiport() {
  uiport_ = 0u;
}
::google::protobuf::uint32 StorageAddressRsp_DEV::uiport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_DEV.uiPort)
  return uiport_;
}
void StorageAddressRsp_DEV::set_uiport(::google::protobuf::uint32 value) {
  
  uiport_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_DEV.uiPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoReq_DEV::kStrDevIDFieldNumber;
const int P2pInfoReq_DEV::kStrDevIpAddressFieldNumber;
const int P2pInfoReq_DEV::kUiP2PSupplierFieldNumber;
const int P2pInfoReq_DEV::kStrDomainNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoReq_DEV::P2pInfoReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoReq_DEV)
}
P2pInfoReq_DEV::P2pInfoReq_DEV(const P2pInfoReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevipaddress().size() > 0) {
    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  uip2psupplier_ = from.uip2psupplier_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoReq_DEV)
}

void P2pInfoReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uip2psupplier_ = 0u;
  _cached_size_ = 0;
}

P2pInfoReq_DEV::~P2pInfoReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoReq_DEV)
  SharedDtor();
}

void P2pInfoReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[26].descriptor;
}

const P2pInfoReq_DEV& P2pInfoReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoReq_DEV* P2pInfoReq_DEV::New(::google::protobuf::Arena* arena) const {
  P2pInfoReq_DEV* n = new P2pInfoReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uip2psupplier_ = 0u;
}

bool P2pInfoReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevIpAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevipaddress().data(), this->strdevipaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_DEV.strDevIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiP2pSupplier = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uip2psupplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDomainName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_DEV.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoReq_DEV)
  return false;
#undef DO_
}

void P2pInfoReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevipaddress(), output);
  }

  // uint32 uiP2pSupplier = 3;
  if (this->uip2psupplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uip2psupplier(), output);
  }

  // string strDomainName = 4;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strdomainname(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoReq_DEV)
}

::google::protobuf::uint8* P2pInfoReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevipaddress(), target);
  }

  // uint32 uiP2pSupplier = 3;
  if (this->uip2psupplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uip2psupplier(), target);
  }

  // string strDomainName = 4;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdomainname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoReq_DEV)
  return target;
}

size_t P2pInfoReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevipaddress());
  }

  // string strDomainName = 4;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  // uint32 uiP2pSupplier = 3;
  if (this->uip2psupplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uip2psupplier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoReq_DEV)
    MergeFrom(*source);
  }
}

void P2pInfoReq_DEV::MergeFrom(const P2pInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strdevipaddress().size() > 0) {

    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  if (from.uip2psupplier() != 0) {
    set_uip2psupplier(from.uip2psupplier());
  }
}

void P2pInfoReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoReq_DEV::CopyFrom(const P2pInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoReq_DEV::IsInitialized() const {
  return true;
}

void P2pInfoReq_DEV::Swap(P2pInfoReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoReq_DEV::InternalSwap(P2pInfoReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strdevipaddress_.Swap(&other->strdevipaddress_);
  strdomainname_.Swap(&other->strdomainname_);
  std::swap(uip2psupplier_, other->uip2psupplier_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoReq_DEV

// string strDevID = 1;
void P2pInfoReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void P2pInfoReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
#if LANG_CXX11
void P2pInfoReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
#endif
void P2pInfoReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
void P2pInfoReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
::std::string* P2pInfoReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDevID)
}

// string strDevIpAddress = 2;
void P2pInfoReq_DEV::clear_strdevipaddress() {
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_DEV::strdevipaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  return strdevipaddress_.GetNoArena();
}
void P2pInfoReq_DEV::set_strdevipaddress(const ::std::string& value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
#if LANG_CXX11
void P2pInfoReq_DEV::set_strdevipaddress(::std::string&& value) {
  
  strdevipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
#endif
void P2pInfoReq_DEV::set_strdevipaddress(const char* value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
void P2pInfoReq_DEV::set_strdevipaddress(const char* value, size_t size) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
::std::string* P2pInfoReq_DEV::mutable_strdevipaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  return strdevipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_DEV::release_strdevipaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  
  return strdevipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_DEV::set_allocated_strdevipaddress(::std::string* strdevipaddress) {
  if (strdevipaddress != NULL) {
    
  } else {
    
  }
  strdevipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevipaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}

// uint32 uiP2pSupplier = 3;
void P2pInfoReq_DEV::clear_uip2psupplier() {
  uip2psupplier_ = 0u;
}
::google::protobuf::uint32 P2pInfoReq_DEV::uip2psupplier() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.uiP2pSupplier)
  return uip2psupplier_;
}
void P2pInfoReq_DEV::set_uip2psupplier(::google::protobuf::uint32 value) {
  
  uip2psupplier_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.uiP2pSupplier)
}

// string strDomainName = 4;
void P2pInfoReq_DEV::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_DEV::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDomainName)
  return strdomainname_.GetNoArena();
}
void P2pInfoReq_DEV::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDomainName)
}
#if LANG_CXX11
void P2pInfoReq_DEV::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDomainName)
}
#endif
void P2pInfoReq_DEV::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDomainName)
}
void P2pInfoReq_DEV::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDomainName)
}
::std::string* P2pInfoReq_DEV::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_DEV::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_DEV::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDomainName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoRsp_DEV::kStrP2PServerFieldNumber;
const int P2pInfoRsp_DEV::kStrP2PIDFieldNumber;
const int P2pInfoRsp_DEV::kUiLeaseFieldNumber;
const int P2pInfoRsp_DEV::kStrLicenseKeyFieldNumber;
const int P2pInfoRsp_DEV::kStrPushIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoRsp_DEV::P2pInfoRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoRsp_DEV)
}
P2pInfoRsp_DEV::P2pInfoRsp_DEV(const P2pInfoRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pserver().size() > 0) {
    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  strlicensekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlicensekey().size() > 0) {
    strlicensekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensekey_);
  }
  strpushid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpushid().size() > 0) {
    strpushid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpushid_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoRsp_DEV)
}

void P2pInfoRsp_DEV::SharedCtor() {
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpushid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

P2pInfoRsp_DEV::~P2pInfoRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoRsp_DEV)
  SharedDtor();
}

void P2pInfoRsp_DEV::SharedDtor() {
  strp2pserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensekey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpushid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[27].descriptor;
}

const P2pInfoRsp_DEV& P2pInfoRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoRsp_DEV* P2pInfoRsp_DEV::New(::google::protobuf::Arena* arena) const {
  P2pInfoRsp_DEV* n = new P2pInfoRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoRsp_DEV)
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpushid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool P2pInfoRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strP2pServer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pserver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pserver().data(), this->strp2pserver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_DEV.strP2pServer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_DEV.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLicenseKey = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlicensekey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlicensekey().data(), this->strlicensekey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_DEV.strLicenseKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPushID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpushid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpushid().data(), this->strpushid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_DEV.strPushID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoRsp_DEV)
  return false;
#undef DO_
}

void P2pInfoRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoRsp_DEV)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strp2pserver(), output);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strp2pid(), output);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uilease(), output);
  }

  // string strLicenseKey = 4;
  if (this->strlicensekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensekey().data(), this->strlicensekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strLicenseKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strlicensekey(), output);
  }

  // string strPushID = 5;
  if (this->strpushid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpushid().data(), this->strpushid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strPushID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strpushid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoRsp_DEV)
}

::google::protobuf::uint8* P2pInfoRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoRsp_DEV)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strp2pserver(), target);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strp2pid(), target);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uilease(), target);
  }

  // string strLicenseKey = 4;
  if (this->strlicensekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensekey().data(), this->strlicensekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strLicenseKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strlicensekey(), target);
  }

  // string strPushID = 5;
  if (this->strpushid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpushid().data(), this->strpushid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strPushID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strpushid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoRsp_DEV)
  return target;
}

size_t P2pInfoRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoRsp_DEV)
  size_t total_size = 0;

  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pserver());
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // string strLicenseKey = 4;
  if (this->strlicensekey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlicensekey());
  }

  // string strPushID = 5;
  if (this->strpushid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpushid());
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoRsp_DEV)
    MergeFrom(*source);
  }
}

void P2pInfoRsp_DEV::MergeFrom(const P2pInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strp2pserver().size() > 0) {

    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.strlicensekey().size() > 0) {

    strlicensekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensekey_);
  }
  if (from.strpushid().size() > 0) {

    strpushid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpushid_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void P2pInfoRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoRsp_DEV::CopyFrom(const P2pInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoRsp_DEV::IsInitialized() const {
  return true;
}

void P2pInfoRsp_DEV::Swap(P2pInfoRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoRsp_DEV::InternalSwap(P2pInfoRsp_DEV* other) {
  strp2pserver_.Swap(&other->strp2pserver_);
  strp2pid_.Swap(&other->strp2pid_);
  strlicensekey_.Swap(&other->strlicensekey_);
  strpushid_.Swap(&other->strpushid_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoRsp_DEV

// string strP2pServer = 1;
void P2pInfoRsp_DEV::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_DEV::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  return strp2pserver_.GetNoArena();
}
void P2pInfoRsp_DEV::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
#if LANG_CXX11
void P2pInfoRsp_DEV::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
#endif
void P2pInfoRsp_DEV::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
void P2pInfoRsp_DEV::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
::std::string* P2pInfoRsp_DEV::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_DEV::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_DEV::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}

// string strP2pID = 2;
void P2pInfoRsp_DEV::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_DEV::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  return strp2pid_.GetNoArena();
}
void P2pInfoRsp_DEV::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
#if LANG_CXX11
void P2pInfoRsp_DEV::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
#endif
void P2pInfoRsp_DEV::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
void P2pInfoRsp_DEV::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
::std::string* P2pInfoRsp_DEV::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_DEV::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_DEV::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}

// uint32 uiLease = 3;
void P2pInfoRsp_DEV::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 P2pInfoRsp_DEV::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.uiLease)
  return uilease_;
}
void P2pInfoRsp_DEV::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.uiLease)
}

// string strLicenseKey = 4;
void P2pInfoRsp_DEV::clear_strlicensekey() {
  strlicensekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_DEV::strlicensekey() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
  return strlicensekey_.GetNoArena();
}
void P2pInfoRsp_DEV::set_strlicensekey(const ::std::string& value) {
  
  strlicensekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
}
#if LANG_CXX11
void P2pInfoRsp_DEV::set_strlicensekey(::std::string&& value) {
  
  strlicensekey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
}
#endif
void P2pInfoRsp_DEV::set_strlicensekey(const char* value) {
  
  strlicensekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
}
void P2pInfoRsp_DEV::set_strlicensekey(const char* value, size_t size) {
  
  strlicensekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
}
::std::string* P2pInfoRsp_DEV::mutable_strlicensekey() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
  return strlicensekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_DEV::release_strlicensekey() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
  
  return strlicensekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_DEV::set_allocated_strlicensekey(::std::string* strlicensekey) {
  if (strlicensekey != NULL) {
    
  } else {
    
  }
  strlicensekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlicensekey);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strLicenseKey)
}

// string strPushID = 5;
void P2pInfoRsp_DEV::clear_strpushid() {
  strpushid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_DEV::strpushid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strPushID)
  return strpushid_.GetNoArena();
}
void P2pInfoRsp_DEV::set_strpushid(const ::std::string& value) {
  
  strpushid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strPushID)
}
#if LANG_CXX11
void P2pInfoRsp_DEV::set_strpushid(::std::string&& value) {
  
  strpushid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strPushID)
}
#endif
void P2pInfoRsp_DEV::set_strpushid(const char* value) {
  
  strpushid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strPushID)
}
void P2pInfoRsp_DEV::set_strpushid(const char* value, size_t size) {
  
  strpushid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strPushID)
}
::std::string* P2pInfoRsp_DEV::mutable_strpushid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strPushID)
  return strpushid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_DEV::release_strpushid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strPushID)
  
  return strpushid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_DEV::set_allocated_strpushid(::std::string* strpushid) {
  if (strpushid != NULL) {
    
  } else {
    
  }
  strpushid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpushid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strPushID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFileReq_DEV::kStrDevIDFieldNumber;
const int AddFileReq_DEV::kFileInfoFieldNumber;
const int AddFileReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFileReq_DEV::AddFileReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFileReq_DEV)
}
AddFileReq_DEV::AddFileReq_DEV(const AddFileReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileinfo_(from.fileinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFileReq_DEV)
}

void AddFileReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFileReq_DEV::~AddFileReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFileReq_DEV)
  SharedDtor();
}

void AddFileReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFileReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFileReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[28].descriptor;
}

const AddFileReq_DEV& AddFileReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFileReq_DEV* AddFileReq_DEV::New(::google::protobuf::Arena* arena) const {
  AddFileReq_DEV* n = new AddFileReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFileReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFileReq_DEV)
  fileinfo_.Clear();
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFileReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFileReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.File fileInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFileReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFileReq_DEV)
  return false;
#undef DO_
}

void AddFileReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFileReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileinfo(i), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFileReq_DEV)
}

::google::protobuf::uint8* AddFileReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFileReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileinfo(i), false, target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFileReq_DEV)
  return target;
}

size_t AddFileReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFileReq_DEV)
  size_t total_size = 0;

  // repeated .Interactive.Message.File fileInfo = 2;
  {
    unsigned int count = this->fileinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfo(i));
    }
  }

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFileReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFileReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFileReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFileReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFileReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFileReq_DEV)
    MergeFrom(*source);
  }
}

void AddFileReq_DEV::MergeFrom(const AddFileReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFileReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileinfo_.MergeFrom(from.fileinfo_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddFileReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFileReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFileReq_DEV::CopyFrom(const AddFileReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFileReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFileReq_DEV::IsInitialized() const {
  return true;
}

void AddFileReq_DEV::Swap(AddFileReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFileReq_DEV::InternalSwap(AddFileReq_DEV* other) {
  fileinfo_.UnsafeArenaSwap(&other->fileinfo_);
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFileReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFileReq_DEV

// string strDevID = 1;
void AddFileReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFileReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void AddFileReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileReq_DEV.strDevID)
}
#if LANG_CXX11
void AddFileReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileReq_DEV.strDevID)
}
#endif
void AddFileReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileReq_DEV.strDevID)
}
void AddFileReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileReq_DEV.strDevID)
}
::std::string* AddFileReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFileReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFileReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileReq_DEV.strDevID)
}

// repeated .Interactive.Message.File fileInfo = 2;
int AddFileReq_DEV::fileinfo_size() const {
  return fileinfo_.size();
}
void AddFileReq_DEV::clear_fileinfo() {
  fileinfo_.Clear();
}
const ::Interactive::Message::File& AddFileReq_DEV::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Get(index);
}
::Interactive::Message::File* AddFileReq_DEV::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Mutable(index);
}
::Interactive::Message::File* AddFileReq_DEV::add_fileinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
AddFileReq_DEV::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.AddFileReq_DEV.fileInfo)
  return &fileinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
AddFileReq_DEV::fileinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_;
}

// string strValue = 3;
void AddFileReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFileReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void AddFileReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileReq_DEV.strValue)
}
#if LANG_CXX11
void AddFileReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileReq_DEV.strValue)
}
#endif
void AddFileReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileReq_DEV.strValue)
}
void AddFileReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileReq_DEV.strValue)
}
::std::string* AddFileReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFileReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFileReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFileRsp_DEV::kStrValueFieldNumber;
const int AddFileRsp_DEV::kStrFileIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFileRsp_DEV::AddFileRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFileRsp_DEV)
}
AddFileRsp_DEV::AddFileRsp_DEV(const AddFileRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileidfailed_(from.strfileidfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFileRsp_DEV)
}

void AddFileRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFileRsp_DEV::~AddFileRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFileRsp_DEV)
  SharedDtor();
}

void AddFileRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFileRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFileRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[29].descriptor;
}

const AddFileRsp_DEV& AddFileRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFileRsp_DEV* AddFileRsp_DEV::New(::google::protobuf::Arena* arena) const {
  AddFileRsp_DEV* n = new AddFileRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFileRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFileRsp_DEV)
  strfileidfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFileRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFileRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileidfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileidfailed(this->strfileidfailed_size() - 1).data(),
            this->strfileidfailed(this->strfileidfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileRsp_DEV.strFileIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFileRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFileRsp_DEV)
  return false;
#undef DO_
}

void AddFileRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFileRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strFileIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileidfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFileRsp_DEV)
}

::google::protobuf::uint8* AddFileRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFileRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strFileIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileidfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFileRsp_DEV)
  return target;
}

size_t AddFileRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFileRsp_DEV)
  size_t total_size = 0;

  // repeated string strFileIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileidfailed_size());
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileidfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFileRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFileRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFileRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFileRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFileRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFileRsp_DEV)
    MergeFrom(*source);
  }
}

void AddFileRsp_DEV::MergeFrom(const AddFileRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFileRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileidfailed_.MergeFrom(from.strfileidfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddFileRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFileRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFileRsp_DEV::CopyFrom(const AddFileRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFileRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFileRsp_DEV::IsInitialized() const {
  return true;
}

void AddFileRsp_DEV::Swap(AddFileRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFileRsp_DEV::InternalSwap(AddFileRsp_DEV* other) {
  strfileidfailed_.UnsafeArenaSwap(&other->strfileidfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFileRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFileRsp_DEV

// string strValue = 1;
void AddFileRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFileRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void AddFileRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileRsp_DEV.strValue)
}
#if LANG_CXX11
void AddFileRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileRsp_DEV.strValue)
}
#endif
void AddFileRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileRsp_DEV.strValue)
}
void AddFileRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileRsp_DEV.strValue)
}
::std::string* AddFileRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFileRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFileRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileRsp_DEV.strValue)
}

// repeated string strFileIDFailed = 2;
int AddFileRsp_DEV::strfileidfailed_size() const {
  return strfileidfailed_.size();
}
void AddFileRsp_DEV::clear_strfileidfailed() {
  strfileidfailed_.Clear();
}
const ::std::string& AddFileRsp_DEV::strfileidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Get(index);
}
::std::string* AddFileRsp_DEV::mutable_strfileidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Mutable(index);
}
void AddFileRsp_DEV::set_strfileidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  strfileidfailed_.Mutable(index)->assign(value);
}
void AddFileRsp_DEV::set_strfileidfailed(int index, const char* value) {
  strfileidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
void AddFileRsp_DEV::set_strfileidfailed(int index, const char* value, size_t size) {
  strfileidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
::std::string* AddFileRsp_DEV::add_strfileidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Add();
}
void AddFileRsp_DEV::add_strfileidfailed(const ::std::string& value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
void AddFileRsp_DEV::add_strfileidfailed(const char* value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
void AddFileRsp_DEV::add_strfileidfailed(const char* value, size_t size) {
  strfileidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddFileRsp_DEV::strfileidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AddFileRsp_DEV::mutable_strfileidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return &strfileidfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryTimeZoneReq_DEV::kStrDevIDFieldNumber;
const int QueryTimeZoneReq_DEV::kStrDevIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryTimeZoneReq_DEV::QueryTimeZoneReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryTimeZoneReq_DEV)
}
QueryTimeZoneReq_DEV::QueryTimeZoneReq_DEV(const QueryTimeZoneReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevipaddress().size() > 0) {
    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryTimeZoneReq_DEV)
}

void QueryTimeZoneReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryTimeZoneReq_DEV::~QueryTimeZoneReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryTimeZoneReq_DEV)
  SharedDtor();
}

void QueryTimeZoneReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryTimeZoneReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryTimeZoneReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[30].descriptor;
}

const QueryTimeZoneReq_DEV& QueryTimeZoneReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryTimeZoneReq_DEV* QueryTimeZoneReq_DEV::New(::google::protobuf::Arena* arena) const {
  QueryTimeZoneReq_DEV* n = new QueryTimeZoneReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryTimeZoneReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryTimeZoneReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryTimeZoneReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryTimeZoneReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryTimeZoneReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevIpAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevipaddress().data(), this->strdevipaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryTimeZoneReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryTimeZoneReq_DEV)
  return false;
#undef DO_
}

void QueryTimeZoneReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryTimeZoneReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevipaddress(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryTimeZoneReq_DEV)
}

::google::protobuf::uint8* QueryTimeZoneReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryTimeZoneReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevipaddress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryTimeZoneReq_DEV)
  return target;
}

size_t QueryTimeZoneReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryTimeZoneReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevipaddress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryTimeZoneReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryTimeZoneReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryTimeZoneReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryTimeZoneReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryTimeZoneReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryTimeZoneReq_DEV)
    MergeFrom(*source);
  }
}

void QueryTimeZoneReq_DEV::MergeFrom(const QueryTimeZoneReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryTimeZoneReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strdevipaddress().size() > 0) {

    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
}

void QueryTimeZoneReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryTimeZoneReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryTimeZoneReq_DEV::CopyFrom(const QueryTimeZoneReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryTimeZoneReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTimeZoneReq_DEV::IsInitialized() const {
  return true;
}

void QueryTimeZoneReq_DEV::Swap(QueryTimeZoneReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryTimeZoneReq_DEV::InternalSwap(QueryTimeZoneReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strdevipaddress_.Swap(&other->strdevipaddress_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryTimeZoneReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryTimeZoneReq_DEV

// string strDevID = 1;
void QueryTimeZoneReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryTimeZoneReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void QueryTimeZoneReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
}
#if LANG_CXX11
void QueryTimeZoneReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
}
#endif
void QueryTimeZoneReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
}
void QueryTimeZoneReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
}
::std::string* QueryTimeZoneReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryTimeZoneReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryTimeZoneReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryTimeZoneReq_DEV.strDevID)
}

// string strDevIpAddress = 2;
void QueryTimeZoneReq_DEV::clear_strdevipaddress() {
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryTimeZoneReq_DEV::strdevipaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
  return strdevipaddress_.GetNoArena();
}
void QueryTimeZoneReq_DEV::set_strdevipaddress(const ::std::string& value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
}
#if LANG_CXX11
void QueryTimeZoneReq_DEV::set_strdevipaddress(::std::string&& value) {
  
  strdevipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
}
#endif
void QueryTimeZoneReq_DEV::set_strdevipaddress(const char* value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
}
void QueryTimeZoneReq_DEV::set_strdevipaddress(const char* value, size_t size) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
}
::std::string* QueryTimeZoneReq_DEV::mutable_strdevipaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
  return strdevipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryTimeZoneReq_DEV::release_strdevipaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
  
  return strdevipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryTimeZoneReq_DEV::set_allocated_strdevipaddress(::std::string* strdevipaddress) {
  if (strdevipaddress != NULL) {
    
  } else {
    
  }
  strdevipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevipaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryTimeZoneReq_DEV.strDevIpAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryTimeZoneRsp_DEV::kStrCountryCodeFieldNumber;
const int QueryTimeZoneRsp_DEV::kStrCountryNameEnFieldNumber;
const int QueryTimeZoneRsp_DEV::kStrCountryNameZhFieldNumber;
const int QueryTimeZoneRsp_DEV::kStrTimeZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryTimeZoneRsp_DEV::QueryTimeZoneRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryTimeZoneRsp_DEV)
}
QueryTimeZoneRsp_DEV::QueryTimeZoneRsp_DEV(const QueryTimeZoneRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcountrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcountrycode().size() > 0) {
    strcountrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcountrycode_);
  }
  strcountrynameen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcountrynameen().size() > 0) {
    strcountrynameen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcountrynameen_);
  }
  strcountrynamezh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcountrynamezh().size() > 0) {
    strcountrynamezh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcountrynamezh_);
  }
  strtimezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strtimezone().size() > 0) {
    strtimezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strtimezone_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryTimeZoneRsp_DEV)
}

void QueryTimeZoneRsp_DEV::SharedCtor() {
  strcountrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcountrynameen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcountrynamezh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtimezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryTimeZoneRsp_DEV::~QueryTimeZoneRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryTimeZoneRsp_DEV)
  SharedDtor();
}

void QueryTimeZoneRsp_DEV::SharedDtor() {
  strcountrycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcountrynameen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcountrynamezh_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtimezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryTimeZoneRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryTimeZoneRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[31].descriptor;
}

const QueryTimeZoneRsp_DEV& QueryTimeZoneRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryTimeZoneRsp_DEV* QueryTimeZoneRsp_DEV::New(::google::protobuf::Arena* arena) const {
  QueryTimeZoneRsp_DEV* n = new QueryTimeZoneRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryTimeZoneRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  strcountrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcountrynameen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcountrynamezh_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtimezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryTimeZoneRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCountryCode = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcountrycode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcountrycode().data(), this->strcountrycode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCountryNameEn = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcountrynameen()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcountrynameen().data(), this->strcountrynameen().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCountryNameZh = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcountrynamezh()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcountrynamezh().data(), this->strcountrynamezh().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strTimeZone = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtimezone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strtimezone().data(), this->strtimezone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryTimeZoneRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryTimeZoneRsp_DEV)
  return false;
#undef DO_
}

void QueryTimeZoneRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  // string strCountryCode = 1;
  if (this->strcountrycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcountrycode().data(), this->strcountrycode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcountrycode(), output);
  }

  // string strCountryNameEn = 2;
  if (this->strcountrynameen().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcountrynameen().data(), this->strcountrynameen().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcountrynameen(), output);
  }

  // string strCountryNameZh = 3;
  if (this->strcountrynamezh().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcountrynamezh().data(), this->strcountrynamezh().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strcountrynamezh(), output);
  }

  // string strTimeZone = 4;
  if (this->strtimezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strtimezone().data(), this->strtimezone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strtimezone(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryTimeZoneRsp_DEV)
}

::google::protobuf::uint8* QueryTimeZoneRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  // string strCountryCode = 1;
  if (this->strcountrycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcountrycode().data(), this->strcountrycode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcountrycode(), target);
  }

  // string strCountryNameEn = 2;
  if (this->strcountrynameen().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcountrynameen().data(), this->strcountrynameen().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcountrynameen(), target);
  }

  // string strCountryNameZh = 3;
  if (this->strcountrynamezh().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcountrynamezh().data(), this->strcountrynamezh().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcountrynamezh(), target);
  }

  // string strTimeZone = 4;
  if (this->strtimezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strtimezone().data(), this->strtimezone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strtimezone(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryTimeZoneRsp_DEV)
  return target;
}

size_t QueryTimeZoneRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  size_t total_size = 0;

  // string strCountryCode = 1;
  if (this->strcountrycode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcountrycode());
  }

  // string strCountryNameEn = 2;
  if (this->strcountrynameen().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcountrynameen());
  }

  // string strCountryNameZh = 3;
  if (this->strcountrynamezh().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcountrynamezh());
  }

  // string strTimeZone = 4;
  if (this->strtimezone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strtimezone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryTimeZoneRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryTimeZoneRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryTimeZoneRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryTimeZoneRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryTimeZoneRsp_DEV)
    MergeFrom(*source);
  }
}

void QueryTimeZoneRsp_DEV::MergeFrom(const QueryTimeZoneRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcountrycode().size() > 0) {

    strcountrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcountrycode_);
  }
  if (from.strcountrynameen().size() > 0) {

    strcountrynameen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcountrynameen_);
  }
  if (from.strcountrynamezh().size() > 0) {

    strcountrynamezh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcountrynamezh_);
  }
  if (from.strtimezone().size() > 0) {

    strtimezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strtimezone_);
  }
}

void QueryTimeZoneRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryTimeZoneRsp_DEV::CopyFrom(const QueryTimeZoneRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryTimeZoneRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTimeZoneRsp_DEV::IsInitialized() const {
  return true;
}

void QueryTimeZoneRsp_DEV::Swap(QueryTimeZoneRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryTimeZoneRsp_DEV::InternalSwap(QueryTimeZoneRsp_DEV* other) {
  strcountrycode_.Swap(&other->strcountrycode_);
  strcountrynameen_.Swap(&other->strcountrynameen_);
  strcountrynamezh_.Swap(&other->strcountrynamezh_);
  strtimezone_.Swap(&other->strtimezone_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryTimeZoneRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryTimeZoneRsp_DEV

// string strCountryCode = 1;
void QueryTimeZoneRsp_DEV::clear_strcountrycode() {
  strcountrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryTimeZoneRsp_DEV::strcountrycode() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
  return strcountrycode_.GetNoArena();
}
void QueryTimeZoneRsp_DEV::set_strcountrycode(const ::std::string& value) {
  
  strcountrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
}
#if LANG_CXX11
void QueryTimeZoneRsp_DEV::set_strcountrycode(::std::string&& value) {
  
  strcountrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
}
#endif
void QueryTimeZoneRsp_DEV::set_strcountrycode(const char* value) {
  
  strcountrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
}
void QueryTimeZoneRsp_DEV::set_strcountrycode(const char* value, size_t size) {
  
  strcountrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
}
::std::string* QueryTimeZoneRsp_DEV::mutable_strcountrycode() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
  return strcountrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryTimeZoneRsp_DEV::release_strcountrycode() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
  
  return strcountrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryTimeZoneRsp_DEV::set_allocated_strcountrycode(::std::string* strcountrycode) {
  if (strcountrycode != NULL) {
    
  } else {
    
  }
  strcountrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcountrycode);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryCode)
}

// string strCountryNameEn = 2;
void QueryTimeZoneRsp_DEV::clear_strcountrynameen() {
  strcountrynameen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryTimeZoneRsp_DEV::strcountrynameen() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
  return strcountrynameen_.GetNoArena();
}
void QueryTimeZoneRsp_DEV::set_strcountrynameen(const ::std::string& value) {
  
  strcountrynameen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
}
#if LANG_CXX11
void QueryTimeZoneRsp_DEV::set_strcountrynameen(::std::string&& value) {
  
  strcountrynameen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
}
#endif
void QueryTimeZoneRsp_DEV::set_strcountrynameen(const char* value) {
  
  strcountrynameen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
}
void QueryTimeZoneRsp_DEV::set_strcountrynameen(const char* value, size_t size) {
  
  strcountrynameen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
}
::std::string* QueryTimeZoneRsp_DEV::mutable_strcountrynameen() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
  return strcountrynameen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryTimeZoneRsp_DEV::release_strcountrynameen() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
  
  return strcountrynameen_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryTimeZoneRsp_DEV::set_allocated_strcountrynameen(::std::string* strcountrynameen) {
  if (strcountrynameen != NULL) {
    
  } else {
    
  }
  strcountrynameen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcountrynameen);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameEn)
}

// string strCountryNameZh = 3;
void QueryTimeZoneRsp_DEV::clear_strcountrynamezh() {
  strcountrynamezh_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryTimeZoneRsp_DEV::strcountrynamezh() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
  return strcountrynamezh_.GetNoArena();
}
void QueryTimeZoneRsp_DEV::set_strcountrynamezh(const ::std::string& value) {
  
  strcountrynamezh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
}
#if LANG_CXX11
void QueryTimeZoneRsp_DEV::set_strcountrynamezh(::std::string&& value) {
  
  strcountrynamezh_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
}
#endif
void QueryTimeZoneRsp_DEV::set_strcountrynamezh(const char* value) {
  
  strcountrynamezh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
}
void QueryTimeZoneRsp_DEV::set_strcountrynamezh(const char* value, size_t size) {
  
  strcountrynamezh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
}
::std::string* QueryTimeZoneRsp_DEV::mutable_strcountrynamezh() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
  return strcountrynamezh_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryTimeZoneRsp_DEV::release_strcountrynamezh() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
  
  return strcountrynamezh_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryTimeZoneRsp_DEV::set_allocated_strcountrynamezh(::std::string* strcountrynamezh) {
  if (strcountrynamezh != NULL) {
    
  } else {
    
  }
  strcountrynamezh_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcountrynamezh);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryTimeZoneRsp_DEV.strCountryNameZh)
}

// string strTimeZone = 4;
void QueryTimeZoneRsp_DEV::clear_strtimezone() {
  strtimezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryTimeZoneRsp_DEV::strtimezone() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
  return strtimezone_.GetNoArena();
}
void QueryTimeZoneRsp_DEV::set_strtimezone(const ::std::string& value) {
  
  strtimezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
}
#if LANG_CXX11
void QueryTimeZoneRsp_DEV::set_strtimezone(::std::string&& value) {
  
  strtimezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
}
#endif
void QueryTimeZoneRsp_DEV::set_strtimezone(const char* value) {
  
  strtimezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
}
void QueryTimeZoneRsp_DEV::set_strtimezone(const char* value, size_t size) {
  
  strtimezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
}
::std::string* QueryTimeZoneRsp_DEV::mutable_strtimezone() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
  return strtimezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryTimeZoneRsp_DEV::release_strtimezone() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
  
  return strtimezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryTimeZoneRsp_DEV::set_allocated_strtimezone(::std::string* strtimezone) {
  if (strtimezone != NULL) {
    
  } else {
    
  }
  strtimezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtimezone);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryTimeZoneRsp_DEV.strTimeZone)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAccessDomainNameReq_DEV::kStrDevIpAddressFieldNumber;
const int QueryAccessDomainNameReq_DEV::kStrDevIDFieldNumber;
const int QueryAccessDomainNameReq_DEV::kUiBusinessTypeFieldNumber;
const int QueryAccessDomainNameReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAccessDomainNameReq_DEV::QueryAccessDomainNameReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAccessDomainNameReq_DEV)
}
QueryAccessDomainNameReq_DEV::QueryAccessDomainNameReq_DEV(const QueryAccessDomainNameReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevipaddress().size() > 0) {
    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibusinesstype_ = from.uibusinesstype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAccessDomainNameReq_DEV)
}

void QueryAccessDomainNameReq_DEV::SharedCtor() {
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
  _cached_size_ = 0;
}

QueryAccessDomainNameReq_DEV::~QueryAccessDomainNameReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAccessDomainNameReq_DEV)
  SharedDtor();
}

void QueryAccessDomainNameReq_DEV::SharedDtor() {
  strdevipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAccessDomainNameReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAccessDomainNameReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[32].descriptor;
}

const QueryAccessDomainNameReq_DEV& QueryAccessDomainNameReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAccessDomainNameReq_DEV* QueryAccessDomainNameReq_DEV::New(::google::protobuf::Arena* arena) const {
  QueryAccessDomainNameReq_DEV* n = new QueryAccessDomainNameReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAccessDomainNameReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
}

bool QueryAccessDomainNameReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevIpAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevipaddress().data(), this->strdevipaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBusinessType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAccessDomainNameReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAccessDomainNameReq_DEV)
  return false;
#undef DO_
}

void QueryAccessDomainNameReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  // string strDevIpAddress = 1;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevipaddress(), output);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevid(), output);
  }

  // uint32 uiBusinessType = 3;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uibusinesstype(), output);
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAccessDomainNameReq_DEV)
}

::google::protobuf::uint8* QueryAccessDomainNameReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  // string strDevIpAddress = 1;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevipaddress(), target);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevid(), target);
  }

  // uint32 uiBusinessType = 3;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uibusinesstype(), target);
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAccessDomainNameReq_DEV)
  return target;
}

size_t QueryAccessDomainNameReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  size_t total_size = 0;

  // string strDevIpAddress = 1;
  if (this->strdevipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevipaddress());
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBusinessType = 3;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAccessDomainNameReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAccessDomainNameReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAccessDomainNameReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAccessDomainNameReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAccessDomainNameReq_DEV)
    MergeFrom(*source);
  }
}

void QueryAccessDomainNameReq_DEV::MergeFrom(const QueryAccessDomainNameReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevipaddress().size() > 0) {

    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
}

void QueryAccessDomainNameReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAccessDomainNameReq_DEV::CopyFrom(const QueryAccessDomainNameReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAccessDomainNameReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccessDomainNameReq_DEV::IsInitialized() const {
  return true;
}

void QueryAccessDomainNameReq_DEV::Swap(QueryAccessDomainNameReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAccessDomainNameReq_DEV::InternalSwap(QueryAccessDomainNameReq_DEV* other) {
  strdevipaddress_.Swap(&other->strdevipaddress_);
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAccessDomainNameReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAccessDomainNameReq_DEV

// string strDevIpAddress = 1;
void QueryAccessDomainNameReq_DEV::clear_strdevipaddress() {
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameReq_DEV::strdevipaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
  return strdevipaddress_.GetNoArena();
}
void QueryAccessDomainNameReq_DEV::set_strdevipaddress(const ::std::string& value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
}
#if LANG_CXX11
void QueryAccessDomainNameReq_DEV::set_strdevipaddress(::std::string&& value) {
  
  strdevipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
}
#endif
void QueryAccessDomainNameReq_DEV::set_strdevipaddress(const char* value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
}
void QueryAccessDomainNameReq_DEV::set_strdevipaddress(const char* value, size_t size) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
}
::std::string* QueryAccessDomainNameReq_DEV::mutable_strdevipaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
  return strdevipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameReq_DEV::release_strdevipaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
  
  return strdevipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameReq_DEV::set_allocated_strdevipaddress(::std::string* strdevipaddress) {
  if (strdevipaddress != NULL) {
    
  } else {
    
  }
  strdevipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevipaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevIpAddress)
}

// string strDevID = 2;
void QueryAccessDomainNameReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void QueryAccessDomainNameReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
}
#if LANG_CXX11
void QueryAccessDomainNameReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
}
#endif
void QueryAccessDomainNameReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
}
void QueryAccessDomainNameReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
}
::std::string* QueryAccessDomainNameReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameReq_DEV.strDevID)
}

// uint32 uiBusinessType = 3;
void QueryAccessDomainNameReq_DEV::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 QueryAccessDomainNameReq_DEV::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_DEV.uiBusinessType)
  return uibusinesstype_;
}
void QueryAccessDomainNameReq_DEV::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_DEV.uiBusinessType)
}

// string strValue = 4;
void QueryAccessDomainNameReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void QueryAccessDomainNameReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
}
#if LANG_CXX11
void QueryAccessDomainNameReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
}
#endif
void QueryAccessDomainNameReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
}
void QueryAccessDomainNameReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
}
::std::string* QueryAccessDomainNameReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAccessDomainNameRsp_DEV::kStrDomainNameFieldNumber;
const int QueryAccessDomainNameRsp_DEV::kUiLeaseFieldNumber;
const int QueryAccessDomainNameRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAccessDomainNameRsp_DEV::QueryAccessDomainNameRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAccessDomainNameRsp_DEV)
}
QueryAccessDomainNameRsp_DEV::QueryAccessDomainNameRsp_DEV(const QueryAccessDomainNameRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAccessDomainNameRsp_DEV)
}

void QueryAccessDomainNameRsp_DEV::SharedCtor() {
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

QueryAccessDomainNameRsp_DEV::~QueryAccessDomainNameRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  SharedDtor();
}

void QueryAccessDomainNameRsp_DEV::SharedDtor() {
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAccessDomainNameRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAccessDomainNameRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[33].descriptor;
}

const QueryAccessDomainNameRsp_DEV& QueryAccessDomainNameRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAccessDomainNameRsp_DEV* QueryAccessDomainNameRsp_DEV::New(::google::protobuf::Arena* arena) const {
  QueryAccessDomainNameRsp_DEV* n = new QueryAccessDomainNameRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAccessDomainNameRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool QueryAccessDomainNameRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDomainName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  return false;
#undef DO_
}

void QueryAccessDomainNameRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdomainname(), output);
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uilease(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAccessDomainNameRsp_DEV)
}

::google::protobuf::uint8* QueryAccessDomainNameRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdomainname(), target);
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uilease(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  return target;
}

size_t QueryAccessDomainNameRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  size_t total_size = 0;

  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAccessDomainNameRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAccessDomainNameRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAccessDomainNameRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAccessDomainNameRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAccessDomainNameRsp_DEV)
    MergeFrom(*source);
  }
}

void QueryAccessDomainNameRsp_DEV::MergeFrom(const QueryAccessDomainNameRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void QueryAccessDomainNameRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAccessDomainNameRsp_DEV::CopyFrom(const QueryAccessDomainNameRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAccessDomainNameRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccessDomainNameRsp_DEV::IsInitialized() const {
  return true;
}

void QueryAccessDomainNameRsp_DEV::Swap(QueryAccessDomainNameRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAccessDomainNameRsp_DEV::InternalSwap(QueryAccessDomainNameRsp_DEV* other) {
  strdomainname_.Swap(&other->strdomainname_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAccessDomainNameRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAccessDomainNameRsp_DEV

// string strDomainName = 1;
void QueryAccessDomainNameRsp_DEV::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameRsp_DEV::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
  return strdomainname_.GetNoArena();
}
void QueryAccessDomainNameRsp_DEV::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
}
#if LANG_CXX11
void QueryAccessDomainNameRsp_DEV::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
}
#endif
void QueryAccessDomainNameRsp_DEV::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
}
void QueryAccessDomainNameRsp_DEV::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
}
::std::string* QueryAccessDomainNameRsp_DEV::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameRsp_DEV::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameRsp_DEV::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameRsp_DEV.strDomainName)
}

// uint32 uiLease = 2;
void QueryAccessDomainNameRsp_DEV::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 QueryAccessDomainNameRsp_DEV::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameRsp_DEV.uiLease)
  return uilease_;
}
void QueryAccessDomainNameRsp_DEV::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameRsp_DEV.uiLease)
}

// string strValue = 3;
void QueryAccessDomainNameRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void QueryAccessDomainNameRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
}
#if LANG_CXX11
void QueryAccessDomainNameRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
}
#endif
void QueryAccessDomainNameRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
}
void QueryAccessDomainNameRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
}
::std::string* QueryAccessDomainNameRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUpgradeSiteReq_DEV::kStrDevIDFieldNumber;
const int QueryUpgradeSiteReq_DEV::kStrDevIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUpgradeSiteReq_DEV::QueryUpgradeSiteReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUpgradeSiteReq_DEV)
}
QueryUpgradeSiteReq_DEV::QueryUpgradeSiteReq_DEV(const QueryUpgradeSiteReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevipaddress().size() > 0) {
    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUpgradeSiteReq_DEV)
}

void QueryUpgradeSiteReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUpgradeSiteReq_DEV::~QueryUpgradeSiteReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUpgradeSiteReq_DEV)
  SharedDtor();
}

void QueryUpgradeSiteReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUpgradeSiteReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUpgradeSiteReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[34].descriptor;
}

const QueryUpgradeSiteReq_DEV& QueryUpgradeSiteReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUpgradeSiteReq_DEV* QueryUpgradeSiteReq_DEV::New(::google::protobuf::Arena* arena) const {
  QueryUpgradeSiteReq_DEV* n = new QueryUpgradeSiteReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUpgradeSiteReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryUpgradeSiteReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevIpAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevipaddress().data(), this->strdevipaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUpgradeSiteReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUpgradeSiteReq_DEV)
  return false;
#undef DO_
}

void QueryUpgradeSiteReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevipaddress(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUpgradeSiteReq_DEV)
}

::google::protobuf::uint8* QueryUpgradeSiteReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevipaddress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUpgradeSiteReq_DEV)
  return target;
}

size_t QueryUpgradeSiteReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevipaddress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUpgradeSiteReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUpgradeSiteReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUpgradeSiteReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUpgradeSiteReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUpgradeSiteReq_DEV)
    MergeFrom(*source);
  }
}

void QueryUpgradeSiteReq_DEV::MergeFrom(const QueryUpgradeSiteReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strdevipaddress().size() > 0) {

    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
}

void QueryUpgradeSiteReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUpgradeSiteReq_DEV::CopyFrom(const QueryUpgradeSiteReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUpgradeSiteReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUpgradeSiteReq_DEV::IsInitialized() const {
  return true;
}

void QueryUpgradeSiteReq_DEV::Swap(QueryUpgradeSiteReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUpgradeSiteReq_DEV::InternalSwap(QueryUpgradeSiteReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strdevipaddress_.Swap(&other->strdevipaddress_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUpgradeSiteReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUpgradeSiteReq_DEV

// string strDevID = 1;
void QueryUpgradeSiteReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUpgradeSiteReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void QueryUpgradeSiteReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
}
#if LANG_CXX11
void QueryUpgradeSiteReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
}
#endif
void QueryUpgradeSiteReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
}
void QueryUpgradeSiteReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
}
::std::string* QueryUpgradeSiteReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUpgradeSiteReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUpgradeSiteReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevID)
}

// string strDevIpAddress = 2;
void QueryUpgradeSiteReq_DEV::clear_strdevipaddress() {
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUpgradeSiteReq_DEV::strdevipaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
  return strdevipaddress_.GetNoArena();
}
void QueryUpgradeSiteReq_DEV::set_strdevipaddress(const ::std::string& value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
}
#if LANG_CXX11
void QueryUpgradeSiteReq_DEV::set_strdevipaddress(::std::string&& value) {
  
  strdevipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
}
#endif
void QueryUpgradeSiteReq_DEV::set_strdevipaddress(const char* value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
}
void QueryUpgradeSiteReq_DEV::set_strdevipaddress(const char* value, size_t size) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
}
::std::string* QueryUpgradeSiteReq_DEV::mutable_strdevipaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
  return strdevipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUpgradeSiteReq_DEV::release_strdevipaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
  
  return strdevipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUpgradeSiteReq_DEV::set_allocated_strdevipaddress(::std::string* strdevipaddress) {
  if (strdevipaddress != NULL) {
    
  } else {
    
  }
  strdevipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevipaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUpgradeSiteReq_DEV.strDevIpAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUpgradeSiteRsp_DEV::kStrUpgradeSiteUrlFieldNumber;
const int QueryUpgradeSiteRsp_DEV::kUiLeaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUpgradeSiteRsp_DEV::QueryUpgradeSiteRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUpgradeSiteRsp_DEV)
}
QueryUpgradeSiteRsp_DEV::QueryUpgradeSiteRsp_DEV(const QueryUpgradeSiteRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strupgradesiteurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupgradesiteurl().size() > 0) {
    strupgradesiteurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupgradesiteurl_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUpgradeSiteRsp_DEV)
}

void QueryUpgradeSiteRsp_DEV::SharedCtor() {
  strupgradesiteurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

QueryUpgradeSiteRsp_DEV::~QueryUpgradeSiteRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  SharedDtor();
}

void QueryUpgradeSiteRsp_DEV::SharedDtor() {
  strupgradesiteurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUpgradeSiteRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUpgradeSiteRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[35].descriptor;
}

const QueryUpgradeSiteRsp_DEV& QueryUpgradeSiteRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUpgradeSiteRsp_DEV* QueryUpgradeSiteRsp_DEV::New(::google::protobuf::Arena* arena) const {
  QueryUpgradeSiteRsp_DEV* n = new QueryUpgradeSiteRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUpgradeSiteRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  strupgradesiteurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool QueryUpgradeSiteRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUpgradeSiteUrl = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupgradesiteurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupgradesiteurl().data(), this->strupgradesiteurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  return false;
#undef DO_
}

void QueryUpgradeSiteRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  // string strUpgradeSiteUrl = 1;
  if (this->strupgradesiteurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupgradesiteurl().data(), this->strupgradesiteurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strupgradesiteurl(), output);
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uilease(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUpgradeSiteRsp_DEV)
}

::google::protobuf::uint8* QueryUpgradeSiteRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  // string strUpgradeSiteUrl = 1;
  if (this->strupgradesiteurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupgradesiteurl().data(), this->strupgradesiteurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strupgradesiteurl(), target);
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uilease(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  return target;
}

size_t QueryUpgradeSiteRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  size_t total_size = 0;

  // string strUpgradeSiteUrl = 1;
  if (this->strupgradesiteurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupgradesiteurl());
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUpgradeSiteRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUpgradeSiteRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUpgradeSiteRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUpgradeSiteRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUpgradeSiteRsp_DEV)
    MergeFrom(*source);
  }
}

void QueryUpgradeSiteRsp_DEV::MergeFrom(const QueryUpgradeSiteRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strupgradesiteurl().size() > 0) {

    strupgradesiteurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupgradesiteurl_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void QueryUpgradeSiteRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUpgradeSiteRsp_DEV::CopyFrom(const QueryUpgradeSiteRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUpgradeSiteRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUpgradeSiteRsp_DEV::IsInitialized() const {
  return true;
}

void QueryUpgradeSiteRsp_DEV::Swap(QueryUpgradeSiteRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUpgradeSiteRsp_DEV::InternalSwap(QueryUpgradeSiteRsp_DEV* other) {
  strupgradesiteurl_.Swap(&other->strupgradesiteurl_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUpgradeSiteRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUpgradeSiteRsp_DEV

// string strUpgradeSiteUrl = 1;
void QueryUpgradeSiteRsp_DEV::clear_strupgradesiteurl() {
  strupgradesiteurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUpgradeSiteRsp_DEV::strupgradesiteurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
  return strupgradesiteurl_.GetNoArena();
}
void QueryUpgradeSiteRsp_DEV::set_strupgradesiteurl(const ::std::string& value) {
  
  strupgradesiteurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
}
#if LANG_CXX11
void QueryUpgradeSiteRsp_DEV::set_strupgradesiteurl(::std::string&& value) {
  
  strupgradesiteurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
}
#endif
void QueryUpgradeSiteRsp_DEV::set_strupgradesiteurl(const char* value) {
  
  strupgradesiteurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
}
void QueryUpgradeSiteRsp_DEV::set_strupgradesiteurl(const char* value, size_t size) {
  
  strupgradesiteurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
}
::std::string* QueryUpgradeSiteRsp_DEV::mutable_strupgradesiteurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
  return strupgradesiteurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUpgradeSiteRsp_DEV::release_strupgradesiteurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
  
  return strupgradesiteurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUpgradeSiteRsp_DEV::set_allocated_strupgradesiteurl(::std::string* strupgradesiteurl) {
  if (strupgradesiteurl != NULL) {
    
  } else {
    
  }
  strupgradesiteurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupgradesiteurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUpgradeSiteRsp_DEV.strUpgradeSiteUrl)
}

// uint32 uiLease = 2;
void QueryUpgradeSiteRsp_DEV::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 QueryUpgradeSiteRsp_DEV::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUpgradeSiteRsp_DEV.uiLease)
  return uilease_;
}
void QueryUpgradeSiteRsp_DEV::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUpgradeSiteRsp_DEV.uiLease)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFirmwareUpgradeReq_DEV::kStrCategoryFieldNumber;
const int QueryFirmwareUpgradeReq_DEV::kStrSubCategoryFieldNumber;
const int QueryFirmwareUpgradeReq_DEV::kStrCurrentVersionFieldNumber;
const int QueryFirmwareUpgradeReq_DEV::kStrDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFirmwareUpgradeReq_DEV::QueryFirmwareUpgradeReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
}
QueryFirmwareUpgradeReq_DEV::QueryFirmwareUpgradeReq_DEV(const QueryFirmwareUpgradeReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcategory().size() > 0) {
    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsubcategory().size() > 0) {
    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  strcurrentversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcurrentversion().size() > 0) {
    strcurrentversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcurrentversion_);
  }
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
}

void QueryFirmwareUpgradeReq_DEV::SharedCtor() {
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryFirmwareUpgradeReq_DEV::~QueryFirmwareUpgradeReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  SharedDtor();
}

void QueryFirmwareUpgradeReq_DEV::SharedDtor() {
  strcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFirmwareUpgradeReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFirmwareUpgradeReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[36].descriptor;
}

const QueryFirmwareUpgradeReq_DEV& QueryFirmwareUpgradeReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFirmwareUpgradeReq_DEV* QueryFirmwareUpgradeReq_DEV::New(::google::protobuf::Arena* arena) const {
  QueryFirmwareUpgradeReq_DEV* n = new QueryFirmwareUpgradeReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFirmwareUpgradeReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryFirmwareUpgradeReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCategory = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcategory().data(), this->strcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSubCategory = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsubcategory().data(), this->strsubcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCurrentVersion = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcurrentversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcurrentversion().data(), this->strcurrentversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  return false;
#undef DO_
}

void QueryFirmwareUpgradeReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcategory(), output);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strsubcategory(), output);
  }

  // string strCurrentVersion = 3;
  if (this->strcurrentversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcurrentversion().data(), this->strcurrentversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strcurrentversion(), output);
  }

  // string strDeviceID = 4;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strdeviceid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
}

::google::protobuf::uint8* QueryFirmwareUpgradeReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcategory(), target);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strsubcategory(), target);
  }

  // string strCurrentVersion = 3;
  if (this->strcurrentversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcurrentversion().data(), this->strcurrentversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcurrentversion(), target);
  }

  // string strDeviceID = 4;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdeviceid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  return target;
}

size_t QueryFirmwareUpgradeReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  size_t total_size = 0;

  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcategory());
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsubcategory());
  }

  // string strCurrentVersion = 3;
  if (this->strcurrentversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcurrentversion());
  }

  // string strDeviceID = 4;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFirmwareUpgradeReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFirmwareUpgradeReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFirmwareUpgradeReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
    MergeFrom(*source);
  }
}

void QueryFirmwareUpgradeReq_DEV::MergeFrom(const QueryFirmwareUpgradeReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcategory().size() > 0) {

    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  if (from.strsubcategory().size() > 0) {

    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  if (from.strcurrentversion().size() > 0) {

    strcurrentversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcurrentversion_);
  }
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
}

void QueryFirmwareUpgradeReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFirmwareUpgradeReq_DEV::CopyFrom(const QueryFirmwareUpgradeReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFirmwareUpgradeReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFirmwareUpgradeReq_DEV::IsInitialized() const {
  return true;
}

void QueryFirmwareUpgradeReq_DEV::Swap(QueryFirmwareUpgradeReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFirmwareUpgradeReq_DEV::InternalSwap(QueryFirmwareUpgradeReq_DEV* other) {
  strcategory_.Swap(&other->strcategory_);
  strsubcategory_.Swap(&other->strsubcategory_);
  strcurrentversion_.Swap(&other->strcurrentversion_);
  strdeviceid_.Swap(&other->strdeviceid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFirmwareUpgradeReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFirmwareUpgradeReq_DEV

// string strCategory = 1;
void QueryFirmwareUpgradeReq_DEV::clear_strcategory() {
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeReq_DEV::strcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
  return strcategory_.GetNoArena();
}
void QueryFirmwareUpgradeReq_DEV::set_strcategory(const ::std::string& value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
}
#if LANG_CXX11
void QueryFirmwareUpgradeReq_DEV::set_strcategory(::std::string&& value) {
  
  strcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
}
#endif
void QueryFirmwareUpgradeReq_DEV::set_strcategory(const char* value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
}
void QueryFirmwareUpgradeReq_DEV::set_strcategory(const char* value, size_t size) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
}
::std::string* QueryFirmwareUpgradeReq_DEV::mutable_strcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
  return strcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeReq_DEV::release_strcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
  
  return strcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeReq_DEV::set_allocated_strcategory(::std::string* strcategory) {
  if (strcategory != NULL) {
    
  } else {
    
  }
  strcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCategory)
}

// string strSubCategory = 2;
void QueryFirmwareUpgradeReq_DEV::clear_strsubcategory() {
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeReq_DEV::strsubcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
  return strsubcategory_.GetNoArena();
}
void QueryFirmwareUpgradeReq_DEV::set_strsubcategory(const ::std::string& value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
}
#if LANG_CXX11
void QueryFirmwareUpgradeReq_DEV::set_strsubcategory(::std::string&& value) {
  
  strsubcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
}
#endif
void QueryFirmwareUpgradeReq_DEV::set_strsubcategory(const char* value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
}
void QueryFirmwareUpgradeReq_DEV::set_strsubcategory(const char* value, size_t size) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
}
::std::string* QueryFirmwareUpgradeReq_DEV::mutable_strsubcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
  return strsubcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeReq_DEV::release_strsubcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
  
  return strsubcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeReq_DEV::set_allocated_strsubcategory(::std::string* strsubcategory) {
  if (strsubcategory != NULL) {
    
  } else {
    
  }
  strsubcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsubcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strSubCategory)
}

// string strCurrentVersion = 3;
void QueryFirmwareUpgradeReq_DEV::clear_strcurrentversion() {
  strcurrentversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeReq_DEV::strcurrentversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
  return strcurrentversion_.GetNoArena();
}
void QueryFirmwareUpgradeReq_DEV::set_strcurrentversion(const ::std::string& value) {
  
  strcurrentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
}
#if LANG_CXX11
void QueryFirmwareUpgradeReq_DEV::set_strcurrentversion(::std::string&& value) {
  
  strcurrentversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
}
#endif
void QueryFirmwareUpgradeReq_DEV::set_strcurrentversion(const char* value) {
  
  strcurrentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
}
void QueryFirmwareUpgradeReq_DEV::set_strcurrentversion(const char* value, size_t size) {
  
  strcurrentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
}
::std::string* QueryFirmwareUpgradeReq_DEV::mutable_strcurrentversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
  return strcurrentversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeReq_DEV::release_strcurrentversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
  
  return strcurrentversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeReq_DEV::set_allocated_strcurrentversion(::std::string* strcurrentversion) {
  if (strcurrentversion != NULL) {
    
  } else {
    
  }
  strcurrentversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcurrentversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strCurrentVersion)
}

// string strDeviceID = 4;
void QueryFirmwareUpgradeReq_DEV::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeReq_DEV::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void QueryFirmwareUpgradeReq_DEV::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
}
#if LANG_CXX11
void QueryFirmwareUpgradeReq_DEV::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
}
#endif
void QueryFirmwareUpgradeReq_DEV::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
}
void QueryFirmwareUpgradeReq_DEV::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
}
::std::string* QueryFirmwareUpgradeReq_DEV::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeReq_DEV::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeReq_DEV::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeReq_DEV.strDeviceID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFirmwareUpgradeRsp_DEV::kUiNewVersionValidFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kStrFirmwareNameFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kStrFirmwarePathFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kUiFirmwareSizeFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kStrVersionFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kStrDescriptionFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kUiForceUpgradeFieldNumber;
const int QueryFirmwareUpgradeRsp_DEV::kStrUpdateDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFirmwareUpgradeRsp_DEV::QueryFirmwareUpgradeRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
}
QueryFirmwareUpgradeRsp_DEV::QueryFirmwareUpgradeRsp_DEV(const QueryFirmwareUpgradeRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfirmwarename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfirmwarename().size() > 0) {
    strfirmwarename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfirmwarename_);
  }
  strfirmwarepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfirmwarepath().size() > 0) {
    strfirmwarepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfirmwarepath_);
  }
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  strdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdescription().size() > 0) {
    strdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdescription_);
  }
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupdatedate().size() > 0) {
    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  ::memcpy(&uinewversionvalid_, &from.uinewversionvalid_,
    reinterpret_cast<char*>(&uiforceupgrade_) -
    reinterpret_cast<char*>(&uinewversionvalid_) + sizeof(uiforceupgrade_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
}

void QueryFirmwareUpgradeRsp_DEV::SharedCtor() {
  strfirmwarename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfirmwarepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uinewversionvalid_, 0, reinterpret_cast<char*>(&uiforceupgrade_) -
    reinterpret_cast<char*>(&uinewversionvalid_) + sizeof(uiforceupgrade_));
  _cached_size_ = 0;
}

QueryFirmwareUpgradeRsp_DEV::~QueryFirmwareUpgradeRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  SharedDtor();
}

void QueryFirmwareUpgradeRsp_DEV::SharedDtor() {
  strfirmwarename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfirmwarepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFirmwareUpgradeRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFirmwareUpgradeRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[37].descriptor;
}

const QueryFirmwareUpgradeRsp_DEV& QueryFirmwareUpgradeRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFirmwareUpgradeRsp_DEV* QueryFirmwareUpgradeRsp_DEV::New(::google::protobuf::Arena* arena) const {
  QueryFirmwareUpgradeRsp_DEV* n = new QueryFirmwareUpgradeRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFirmwareUpgradeRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  strfirmwarename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfirmwarepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uinewversionvalid_, 0, reinterpret_cast<char*>(&uiforceupgrade_) -
    reinterpret_cast<char*>(&uinewversionvalid_) + sizeof(uiforceupgrade_));
}

bool QueryFirmwareUpgradeRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiNewVersionValid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uinewversionvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFirmwareName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfirmwarename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfirmwarename().data(), this->strfirmwarename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFirmwarePath = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfirmwarepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfirmwarepath().data(), this->strfirmwarepath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiFirmwareSize = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uifirmwaresize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVersion = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDescription = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdescription()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdescription().data(), this->strdescription().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiForceUpgrade = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiforceupgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUpdateDate = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupdatedate().data(), this->strupdatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  return false;
#undef DO_
}

void QueryFirmwareUpgradeRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  // uint32 uiNewVersionValid = 1;
  if (this->uinewversionvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uinewversionvalid(), output);
  }

  // string strFirmwareName = 2;
  if (this->strfirmwarename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfirmwarename().data(), this->strfirmwarename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strfirmwarename(), output);
  }

  // string strFirmwarePath = 3;
  if (this->strfirmwarepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfirmwarepath().data(), this->strfirmwarepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strfirmwarepath(), output);
  }

  // uint32 uiFirmwareSize = 4;
  if (this->uifirmwaresize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uifirmwaresize(), output);
  }

  // string strVersion = 5;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strversion(), output);
  }

  // string strDescription = 6;
  if (this->strdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strdescription(), output);
  }

  // uint32 uiForceUpgrade = 7;
  if (this->uiforceupgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uiforceupgrade(), output);
  }

  // string strUpdateDate = 8;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strupdatedate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
}

::google::protobuf::uint8* QueryFirmwareUpgradeRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  // uint32 uiNewVersionValid = 1;
  if (this->uinewversionvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uinewversionvalid(), target);
  }

  // string strFirmwareName = 2;
  if (this->strfirmwarename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfirmwarename().data(), this->strfirmwarename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strfirmwarename(), target);
  }

  // string strFirmwarePath = 3;
  if (this->strfirmwarepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfirmwarepath().data(), this->strfirmwarepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strfirmwarepath(), target);
  }

  // uint32 uiFirmwareSize = 4;
  if (this->uifirmwaresize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uifirmwaresize(), target);
  }

  // string strVersion = 5;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strversion(), target);
  }

  // string strDescription = 6;
  if (this->strdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strdescription(), target);
  }

  // uint32 uiForceUpgrade = 7;
  if (this->uiforceupgrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uiforceupgrade(), target);
  }

  // string strUpdateDate = 8;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strupdatedate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  return target;
}

size_t QueryFirmwareUpgradeRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  size_t total_size = 0;

  // string strFirmwareName = 2;
  if (this->strfirmwarename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfirmwarename());
  }

  // string strFirmwarePath = 3;
  if (this->strfirmwarepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfirmwarepath());
  }

  // string strVersion = 5;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  // string strDescription = 6;
  if (this->strdescription().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdescription());
  }

  // string strUpdateDate = 8;
  if (this->strupdatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupdatedate());
  }

  // uint32 uiNewVersionValid = 1;
  if (this->uinewversionvalid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uinewversionvalid());
  }

  // uint32 uiFirmwareSize = 4;
  if (this->uifirmwaresize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uifirmwaresize());
  }

  // uint32 uiForceUpgrade = 7;
  if (this->uiforceupgrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiforceupgrade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFirmwareUpgradeRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFirmwareUpgradeRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFirmwareUpgradeRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
    MergeFrom(*source);
  }
}

void QueryFirmwareUpgradeRsp_DEV::MergeFrom(const QueryFirmwareUpgradeRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strfirmwarename().size() > 0) {

    strfirmwarename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfirmwarename_);
  }
  if (from.strfirmwarepath().size() > 0) {

    strfirmwarepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfirmwarepath_);
  }
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  if (from.strdescription().size() > 0) {

    strdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdescription_);
  }
  if (from.strupdatedate().size() > 0) {

    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  if (from.uinewversionvalid() != 0) {
    set_uinewversionvalid(from.uinewversionvalid());
  }
  if (from.uifirmwaresize() != 0) {
    set_uifirmwaresize(from.uifirmwaresize());
  }
  if (from.uiforceupgrade() != 0) {
    set_uiforceupgrade(from.uiforceupgrade());
  }
}

void QueryFirmwareUpgradeRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFirmwareUpgradeRsp_DEV::CopyFrom(const QueryFirmwareUpgradeRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFirmwareUpgradeRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFirmwareUpgradeRsp_DEV::IsInitialized() const {
  return true;
}

void QueryFirmwareUpgradeRsp_DEV::Swap(QueryFirmwareUpgradeRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFirmwareUpgradeRsp_DEV::InternalSwap(QueryFirmwareUpgradeRsp_DEV* other) {
  strfirmwarename_.Swap(&other->strfirmwarename_);
  strfirmwarepath_.Swap(&other->strfirmwarepath_);
  strversion_.Swap(&other->strversion_);
  strdescription_.Swap(&other->strdescription_);
  strupdatedate_.Swap(&other->strupdatedate_);
  std::swap(uinewversionvalid_, other->uinewversionvalid_);
  std::swap(uifirmwaresize_, other->uifirmwaresize_);
  std::swap(uiforceupgrade_, other->uiforceupgrade_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFirmwareUpgradeRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[37];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFirmwareUpgradeRsp_DEV

// uint32 uiNewVersionValid = 1;
void QueryFirmwareUpgradeRsp_DEV::clear_uinewversionvalid() {
  uinewversionvalid_ = 0u;
}
::google::protobuf::uint32 QueryFirmwareUpgradeRsp_DEV::uinewversionvalid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.uiNewVersionValid)
  return uinewversionvalid_;
}
void QueryFirmwareUpgradeRsp_DEV::set_uinewversionvalid(::google::protobuf::uint32 value) {
  
  uinewversionvalid_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.uiNewVersionValid)
}

// string strFirmwareName = 2;
void QueryFirmwareUpgradeRsp_DEV::clear_strfirmwarename() {
  strfirmwarename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeRsp_DEV::strfirmwarename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
  return strfirmwarename_.GetNoArena();
}
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarename(const ::std::string& value) {
  
  strfirmwarename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
}
#if LANG_CXX11
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarename(::std::string&& value) {
  
  strfirmwarename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
}
#endif
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarename(const char* value) {
  
  strfirmwarename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
}
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarename(const char* value, size_t size) {
  
  strfirmwarename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
}
::std::string* QueryFirmwareUpgradeRsp_DEV::mutable_strfirmwarename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
  return strfirmwarename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeRsp_DEV::release_strfirmwarename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
  
  return strfirmwarename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeRsp_DEV::set_allocated_strfirmwarename(::std::string* strfirmwarename) {
  if (strfirmwarename != NULL) {
    
  } else {
    
  }
  strfirmwarename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfirmwarename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwareName)
}

// string strFirmwarePath = 3;
void QueryFirmwareUpgradeRsp_DEV::clear_strfirmwarepath() {
  strfirmwarepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeRsp_DEV::strfirmwarepath() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
  return strfirmwarepath_.GetNoArena();
}
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarepath(const ::std::string& value) {
  
  strfirmwarepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
}
#if LANG_CXX11
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarepath(::std::string&& value) {
  
  strfirmwarepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
}
#endif
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarepath(const char* value) {
  
  strfirmwarepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
}
void QueryFirmwareUpgradeRsp_DEV::set_strfirmwarepath(const char* value, size_t size) {
  
  strfirmwarepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
}
::std::string* QueryFirmwareUpgradeRsp_DEV::mutable_strfirmwarepath() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
  return strfirmwarepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeRsp_DEV::release_strfirmwarepath() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
  
  return strfirmwarepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeRsp_DEV::set_allocated_strfirmwarepath(::std::string* strfirmwarepath) {
  if (strfirmwarepath != NULL) {
    
  } else {
    
  }
  strfirmwarepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfirmwarepath);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strFirmwarePath)
}

// uint32 uiFirmwareSize = 4;
void QueryFirmwareUpgradeRsp_DEV::clear_uifirmwaresize() {
  uifirmwaresize_ = 0u;
}
::google::protobuf::uint32 QueryFirmwareUpgradeRsp_DEV::uifirmwaresize() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.uiFirmwareSize)
  return uifirmwaresize_;
}
void QueryFirmwareUpgradeRsp_DEV::set_uifirmwaresize(::google::protobuf::uint32 value) {
  
  uifirmwaresize_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.uiFirmwareSize)
}

// string strVersion = 5;
void QueryFirmwareUpgradeRsp_DEV::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeRsp_DEV::strversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
  return strversion_.GetNoArena();
}
void QueryFirmwareUpgradeRsp_DEV::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
}
#if LANG_CXX11
void QueryFirmwareUpgradeRsp_DEV::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
}
#endif
void QueryFirmwareUpgradeRsp_DEV::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
}
void QueryFirmwareUpgradeRsp_DEV::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
}
::std::string* QueryFirmwareUpgradeRsp_DEV::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeRsp_DEV::release_strversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeRsp_DEV::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strVersion)
}

// string strDescription = 6;
void QueryFirmwareUpgradeRsp_DEV::clear_strdescription() {
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeRsp_DEV::strdescription() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
  return strdescription_.GetNoArena();
}
void QueryFirmwareUpgradeRsp_DEV::set_strdescription(const ::std::string& value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
}
#if LANG_CXX11
void QueryFirmwareUpgradeRsp_DEV::set_strdescription(::std::string&& value) {
  
  strdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
}
#endif
void QueryFirmwareUpgradeRsp_DEV::set_strdescription(const char* value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
}
void QueryFirmwareUpgradeRsp_DEV::set_strdescription(const char* value, size_t size) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
}
::std::string* QueryFirmwareUpgradeRsp_DEV::mutable_strdescription() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
  return strdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeRsp_DEV::release_strdescription() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
  
  return strdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeRsp_DEV::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription != NULL) {
    
  } else {
    
  }
  strdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdescription);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strDescription)
}

// uint32 uiForceUpgrade = 7;
void QueryFirmwareUpgradeRsp_DEV::clear_uiforceupgrade() {
  uiforceupgrade_ = 0u;
}
::google::protobuf::uint32 QueryFirmwareUpgradeRsp_DEV::uiforceupgrade() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.uiForceUpgrade)
  return uiforceupgrade_;
}
void QueryFirmwareUpgradeRsp_DEV::set_uiforceupgrade(::google::protobuf::uint32 value) {
  
  uiforceupgrade_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.uiForceUpgrade)
}

// string strUpdateDate = 8;
void QueryFirmwareUpgradeRsp_DEV::clear_strupdatedate() {
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFirmwareUpgradeRsp_DEV::strupdatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
  return strupdatedate_.GetNoArena();
}
void QueryFirmwareUpgradeRsp_DEV::set_strupdatedate(const ::std::string& value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
}
#if LANG_CXX11
void QueryFirmwareUpgradeRsp_DEV::set_strupdatedate(::std::string&& value) {
  
  strupdatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
}
#endif
void QueryFirmwareUpgradeRsp_DEV::set_strupdatedate(const char* value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
}
void QueryFirmwareUpgradeRsp_DEV::set_strupdatedate(const char* value, size_t size) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
}
::std::string* QueryFirmwareUpgradeRsp_DEV::mutable_strupdatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
  return strupdatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFirmwareUpgradeRsp_DEV::release_strupdatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
  
  return strupdatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFirmwareUpgradeRsp_DEV::set_allocated_strupdatedate(::std::string* strupdatedate) {
  if (strupdatedate != NULL) {
    
  } else {
    
  }
  strupdatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFirmwareUpgradeRsp_DEV.strUpdateDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDevicePropertyReq_DEV::kStrDeviceIDFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrDomainNameFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrCorpIDFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrDeviceNameFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrDeviceIPFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrWebPortFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrCtrlPortFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrProtocolFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrModelFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrPostFrequencyFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrVersionFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrDeviceStatusFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrServerIPFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrServerPortFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrTransferFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrMobilePortFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrChannelCountFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrP2PIDFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrDeviceIP2FieldNumber;
const int ModifyDevicePropertyReq_DEV::kUiDeviceTypeFieldNumber;
const int ModifyDevicePropertyReq_DEV::kStrRequestSourceFieldNumber;
const int ModifyDevicePropertyReq_DEV::kDoorbellParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDevicePropertyReq_DEV::ModifyDevicePropertyReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDevicePropertyReq_DEV)
}
ModifyDevicePropertyReq_DEV::ModifyDevicePropertyReq_DEV(const ModifyDevicePropertyReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  strcorpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcorpid().size() > 0) {
    strcorpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcorpid_);
  }
  strdevicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicename().size() > 0) {
    strdevicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicename_);
  }
  strdeviceip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceip().size() > 0) {
    strdeviceip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceip_);
  }
  strwebport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strwebport().size() > 0) {
    strwebport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strwebport_);
  }
  strctrlport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strctrlport().size() > 0) {
    strctrlport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strctrlport_);
  }
  strprotocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strprotocol().size() > 0) {
    strprotocol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strprotocol_);
  }
  strmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strmodel().size() > 0) {
    strmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmodel_);
  }
  strpostfrequency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpostfrequency().size() > 0) {
    strpostfrequency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpostfrequency_);
  }
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  strdevicestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicestatus().size() > 0) {
    strdevicestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicestatus_);
  }
  strserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strserverip().size() > 0) {
    strserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserverip_);
  }
  strserverport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strserverport().size() > 0) {
    strserverport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserverport_);
  }
  strtransfer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strtransfer().size() > 0) {
    strtransfer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strtransfer_);
  }
  strmobileport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strmobileport().size() > 0) {
    strmobileport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmobileport_);
  }
  strchannelcount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strchannelcount().size() > 0) {
    strchannelcount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannelcount_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  strdeviceip2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceip2().size() > 0) {
    strdeviceip2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceip2_);
  }
  strrequestsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strrequestsource().size() > 0) {
    strrequestsource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strrequestsource_);
  }
  if (from.has_doorbellparameter()) {
    doorbellparameter_ = new ::Interactive::Message::DoorbellParameter(*from.doorbellparameter_);
  } else {
    doorbellparameter_ = NULL;
  }
  uidevicetype_ = from.uidevicetype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDevicePropertyReq_DEV)
}

void ModifyDevicePropertyReq_DEV::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcorpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwebport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strctrlport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strprotocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpostfrequency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserverport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtransfer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmobileport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelcount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceip2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strrequestsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doorbellparameter_, 0, reinterpret_cast<char*>(&uidevicetype_) -
    reinterpret_cast<char*>(&doorbellparameter_) + sizeof(uidevicetype_));
  _cached_size_ = 0;
}

ModifyDevicePropertyReq_DEV::~ModifyDevicePropertyReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDevicePropertyReq_DEV)
  SharedDtor();
}

void ModifyDevicePropertyReq_DEV::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcorpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwebport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strctrlport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strprotocol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpostfrequency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicestatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserverport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtransfer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmobileport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelcount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceip2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strrequestsource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete doorbellparameter_;
  }
}

void ModifyDevicePropertyReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDevicePropertyReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[38].descriptor;
}

const ModifyDevicePropertyReq_DEV& ModifyDevicePropertyReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDevicePropertyReq_DEV* ModifyDevicePropertyReq_DEV::New(::google::protobuf::Arena* arena) const {
  ModifyDevicePropertyReq_DEV* n = new ModifyDevicePropertyReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDevicePropertyReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcorpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwebport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strctrlport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strprotocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpostfrequency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strserverport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtransfer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmobileport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelcount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceip2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strrequestsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && doorbellparameter_ != NULL) {
    delete doorbellparameter_;
  }
  doorbellparameter_ = NULL;
  uidevicetype_ = 0u;
}

bool ModifyDevicePropertyReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDomainName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCorpID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcorpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcorpid().data(), this->strcorpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicename().data(), this->strdevicename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceIP = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceip().data(), this->strdeviceip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strWebPort = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strwebport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strwebport().data(), this->strwebport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCtrlPort = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strctrlport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strctrlport().data(), this->strctrlport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strProtocol = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strprotocol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strprotocol().data(), this->strprotocol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strModel = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strmodel().data(), this->strmodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strModel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPostFrequency = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpostfrequency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpostfrequency().data(), this->strpostfrequency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVersion = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceStatus = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicestatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicestatus().data(), this->strdevicestatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strServerIP = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strserverip().data(), this->strserverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strServerPort = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserverport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strserverport().data(), this->strserverport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strTransfer = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtransfer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strtransfer().data(), this->strtransfer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strMobilePort = 16;
      case 16: {
        if (tag == 130u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmobileport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strmobileport().data(), this->strmobileport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strChannelCount = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchannelcount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strchannelcount().data(), this->strchannelcount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceIP2 = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceip2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceip2().data(), this->strdeviceip2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 20;
      case 20: {
        if (tag == 160u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRequestSource = 21;
      case 21: {
        if (tag == 170u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrequestsource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strrequestsource().data(), this->strrequestsource().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DoorbellParameter doorbellParameter = 22;
      case 22: {
        if (tag == 178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doorbellparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDevicePropertyReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDevicePropertyReq_DEV)
  return false;
#undef DO_
}

void ModifyDevicePropertyReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // string strDomainName = 2;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdomainname(), output);
  }

  // string strCorpID = 3;
  if (this->strcorpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcorpid().data(), this->strcorpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strcorpid(), output);
  }

  // string strDeviceName = 4;
  if (this->strdevicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicename().data(), this->strdevicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strdevicename(), output);
  }

  // string strDeviceIP = 5;
  if (this->strdeviceip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceip().data(), this->strdeviceip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strdeviceip(), output);
  }

  // string strWebPort = 6;
  if (this->strwebport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strwebport().data(), this->strwebport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strwebport(), output);
  }

  // string strCtrlPort = 7;
  if (this->strctrlport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strctrlport().data(), this->strctrlport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strctrlport(), output);
  }

  // string strProtocol = 8;
  if (this->strprotocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strprotocol().data(), this->strprotocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strprotocol(), output);
  }

  // string strModel = 9;
  if (this->strmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmodel().data(), this->strmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->strmodel(), output);
  }

  // string strPostFrequency = 10;
  if (this->strpostfrequency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpostfrequency().data(), this->strpostfrequency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strpostfrequency(), output);
  }

  // string strVersion = 11;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->strversion(), output);
  }

  // string strDeviceStatus = 12;
  if (this->strdevicestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicestatus().data(), this->strdevicestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->strdevicestatus(), output);
  }

  // string strServerIP = 13;
  if (this->strserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserverip().data(), this->strserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strserverip(), output);
  }

  // string strServerPort = 14;
  if (this->strserverport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserverport().data(), this->strserverport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->strserverport(), output);
  }

  // string strTransfer = 15;
  if (this->strtransfer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strtransfer().data(), this->strtransfer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->strtransfer(), output);
  }

  // string strMobilePort = 16;
  if (this->strmobileport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmobileport().data(), this->strmobileport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->strmobileport(), output);
  }

  // string strChannelCount = 17;
  if (this->strchannelcount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannelcount().data(), this->strchannelcount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->strchannelcount(), output);
  }

  // string strP2pID = 18;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->strp2pid(), output);
  }

  // string strDeviceIP2 = 19;
  if (this->strdeviceip2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceip2().data(), this->strdeviceip2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->strdeviceip2(), output);
  }

  // uint32 uiDeviceType = 20;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->uidevicetype(), output);
  }

  // string strRequestSource = 21;
  if (this->strrequestsource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strrequestsource().data(), this->strrequestsource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->strrequestsource(), output);
  }

  // .Interactive.Message.DoorbellParameter doorbellParameter = 22;
  if (this->has_doorbellparameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->doorbellparameter_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDevicePropertyReq_DEV)
}

::google::protobuf::uint8* ModifyDevicePropertyReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // string strDomainName = 2;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdomainname(), target);
  }

  // string strCorpID = 3;
  if (this->strcorpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcorpid().data(), this->strcorpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcorpid(), target);
  }

  // string strDeviceName = 4;
  if (this->strdevicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicename().data(), this->strdevicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdevicename(), target);
  }

  // string strDeviceIP = 5;
  if (this->strdeviceip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceip().data(), this->strdeviceip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strdeviceip(), target);
  }

  // string strWebPort = 6;
  if (this->strwebport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strwebport().data(), this->strwebport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strwebport(), target);
  }

  // string strCtrlPort = 7;
  if (this->strctrlport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strctrlport().data(), this->strctrlport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strctrlport(), target);
  }

  // string strProtocol = 8;
  if (this->strprotocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strprotocol().data(), this->strprotocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strprotocol(), target);
  }

  // string strModel = 9;
  if (this->strmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmodel().data(), this->strmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strmodel(), target);
  }

  // string strPostFrequency = 10;
  if (this->strpostfrequency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpostfrequency().data(), this->strpostfrequency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strpostfrequency(), target);
  }

  // string strVersion = 11;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strversion(), target);
  }

  // string strDeviceStatus = 12;
  if (this->strdevicestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicestatus().data(), this->strdevicestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strdevicestatus(), target);
  }

  // string strServerIP = 13;
  if (this->strserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserverip().data(), this->strserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strserverip(), target);
  }

  // string strServerPort = 14;
  if (this->strserverport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserverport().data(), this->strserverport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strserverport(), target);
  }

  // string strTransfer = 15;
  if (this->strtransfer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strtransfer().data(), this->strtransfer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strtransfer(), target);
  }

  // string strMobilePort = 16;
  if (this->strmobileport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmobileport().data(), this->strmobileport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strmobileport(), target);
  }

  // string strChannelCount = 17;
  if (this->strchannelcount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannelcount().data(), this->strchannelcount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strchannelcount(), target);
  }

  // string strP2pID = 18;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strp2pid(), target);
  }

  // string strDeviceIP2 = 19;
  if (this->strdeviceip2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceip2().data(), this->strdeviceip2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strdeviceip2(), target);
  }

  // uint32 uiDeviceType = 20;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->uidevicetype(), target);
  }

  // string strRequestSource = 21;
  if (this->strrequestsource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strrequestsource().data(), this->strrequestsource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->strrequestsource(), target);
  }

  // .Interactive.Message.DoorbellParameter doorbellParameter = 22;
  if (this->has_doorbellparameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->doorbellparameter_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDevicePropertyReq_DEV)
  return target;
}

size_t ModifyDevicePropertyReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strDomainName = 2;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  // string strCorpID = 3;
  if (this->strcorpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcorpid());
  }

  // string strDeviceName = 4;
  if (this->strdevicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicename());
  }

  // string strDeviceIP = 5;
  if (this->strdeviceip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceip());
  }

  // string strWebPort = 6;
  if (this->strwebport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strwebport());
  }

  // string strCtrlPort = 7;
  if (this->strctrlport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strctrlport());
  }

  // string strProtocol = 8;
  if (this->strprotocol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strprotocol());
  }

  // string strModel = 9;
  if (this->strmodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strmodel());
  }

  // string strPostFrequency = 10;
  if (this->strpostfrequency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpostfrequency());
  }

  // string strVersion = 11;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  // string strDeviceStatus = 12;
  if (this->strdevicestatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicestatus());
  }

  // string strServerIP = 13;
  if (this->strserverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strserverip());
  }

  // string strServerPort = 14;
  if (this->strserverport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strserverport());
  }

  // string strTransfer = 15;
  if (this->strtransfer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strtransfer());
  }

  // string strMobilePort = 16;
  if (this->strmobileport().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strmobileport());
  }

  // string strChannelCount = 17;
  if (this->strchannelcount().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strchannelcount());
  }

  // string strP2pID = 18;
  if (this->strp2pid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // string strDeviceIP2 = 19;
  if (this->strdeviceip2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceip2());
  }

  // string strRequestSource = 21;
  if (this->strrequestsource().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strrequestsource());
  }

  // .Interactive.Message.DoorbellParameter doorbellParameter = 22;
  if (this->has_doorbellparameter()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->doorbellparameter_);
  }

  // uint32 uiDeviceType = 20;
  if (this->uidevicetype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDevicePropertyReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDevicePropertyReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDevicePropertyReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDevicePropertyReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDevicePropertyReq_DEV)
    MergeFrom(*source);
  }
}

void ModifyDevicePropertyReq_DEV::MergeFrom(const ModifyDevicePropertyReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  if (from.strcorpid().size() > 0) {

    strcorpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcorpid_);
  }
  if (from.strdevicename().size() > 0) {

    strdevicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicename_);
  }
  if (from.strdeviceip().size() > 0) {

    strdeviceip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceip_);
  }
  if (from.strwebport().size() > 0) {

    strwebport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strwebport_);
  }
  if (from.strctrlport().size() > 0) {

    strctrlport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strctrlport_);
  }
  if (from.strprotocol().size() > 0) {

    strprotocol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strprotocol_);
  }
  if (from.strmodel().size() > 0) {

    strmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmodel_);
  }
  if (from.strpostfrequency().size() > 0) {

    strpostfrequency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpostfrequency_);
  }
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  if (from.strdevicestatus().size() > 0) {

    strdevicestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicestatus_);
  }
  if (from.strserverip().size() > 0) {

    strserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserverip_);
  }
  if (from.strserverport().size() > 0) {

    strserverport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserverport_);
  }
  if (from.strtransfer().size() > 0) {

    strtransfer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strtransfer_);
  }
  if (from.strmobileport().size() > 0) {

    strmobileport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmobileport_);
  }
  if (from.strchannelcount().size() > 0) {

    strchannelcount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannelcount_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.strdeviceip2().size() > 0) {

    strdeviceip2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceip2_);
  }
  if (from.strrequestsource().size() > 0) {

    strrequestsource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strrequestsource_);
  }
  if (from.has_doorbellparameter()) {
    mutable_doorbellparameter()->::Interactive::Message::DoorbellParameter::MergeFrom(from.doorbellparameter());
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
}

void ModifyDevicePropertyReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDevicePropertyReq_DEV::CopyFrom(const ModifyDevicePropertyReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDevicePropertyReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDevicePropertyReq_DEV::IsInitialized() const {
  return true;
}

void ModifyDevicePropertyReq_DEV::Swap(ModifyDevicePropertyReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDevicePropertyReq_DEV::InternalSwap(ModifyDevicePropertyReq_DEV* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  strdomainname_.Swap(&other->strdomainname_);
  strcorpid_.Swap(&other->strcorpid_);
  strdevicename_.Swap(&other->strdevicename_);
  strdeviceip_.Swap(&other->strdeviceip_);
  strwebport_.Swap(&other->strwebport_);
  strctrlport_.Swap(&other->strctrlport_);
  strprotocol_.Swap(&other->strprotocol_);
  strmodel_.Swap(&other->strmodel_);
  strpostfrequency_.Swap(&other->strpostfrequency_);
  strversion_.Swap(&other->strversion_);
  strdevicestatus_.Swap(&other->strdevicestatus_);
  strserverip_.Swap(&other->strserverip_);
  strserverport_.Swap(&other->strserverport_);
  strtransfer_.Swap(&other->strtransfer_);
  strmobileport_.Swap(&other->strmobileport_);
  strchannelcount_.Swap(&other->strchannelcount_);
  strp2pid_.Swap(&other->strp2pid_);
  strdeviceip2_.Swap(&other->strdeviceip2_);
  strrequestsource_.Swap(&other->strrequestsource_);
  std::swap(doorbellparameter_, other->doorbellparameter_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDevicePropertyReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[38];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDevicePropertyReq_DEV

// string strDeviceID = 1;
void ModifyDevicePropertyReq_DEV::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
}
void ModifyDevicePropertyReq_DEV::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceID)
}

// string strDomainName = 2;
void ModifyDevicePropertyReq_DEV::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
  return strdomainname_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
}
void ModifyDevicePropertyReq_DEV::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strDomainName)
}

// string strCorpID = 3;
void ModifyDevicePropertyReq_DEV::clear_strcorpid() {
  strcorpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strcorpid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
  return strcorpid_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strcorpid(const ::std::string& value) {
  
  strcorpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strcorpid(::std::string&& value) {
  
  strcorpid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strcorpid(const char* value) {
  
  strcorpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
}
void ModifyDevicePropertyReq_DEV::set_strcorpid(const char* value, size_t size) {
  
  strcorpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strcorpid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
  return strcorpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strcorpid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
  
  return strcorpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strcorpid(::std::string* strcorpid) {
  if (strcorpid != NULL) {
    
  } else {
    
  }
  strcorpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcorpid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strCorpID)
}

// string strDeviceName = 4;
void ModifyDevicePropertyReq_DEV::clear_strdevicename() {
  strdevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strdevicename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
  return strdevicename_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strdevicename(const ::std::string& value) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strdevicename(::std::string&& value) {
  
  strdevicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strdevicename(const char* value) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
}
void ModifyDevicePropertyReq_DEV::set_strdevicename(const char* value, size_t size) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strdevicename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
  return strdevicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strdevicename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
  
  return strdevicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strdevicename(::std::string* strdevicename) {
  if (strdevicename != NULL) {
    
  } else {
    
  }
  strdevicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceName)
}

// string strDeviceIP = 5;
void ModifyDevicePropertyReq_DEV::clear_strdeviceip() {
  strdeviceip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strdeviceip() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
  return strdeviceip_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strdeviceip(const ::std::string& value) {
  
  strdeviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strdeviceip(::std::string&& value) {
  
  strdeviceip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strdeviceip(const char* value) {
  
  strdeviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
}
void ModifyDevicePropertyReq_DEV::set_strdeviceip(const char* value, size_t size) {
  
  strdeviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strdeviceip() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
  return strdeviceip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strdeviceip() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
  
  return strdeviceip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strdeviceip(::std::string* strdeviceip) {
  if (strdeviceip != NULL) {
    
  } else {
    
  }
  strdeviceip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceip);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP)
}

// string strWebPort = 6;
void ModifyDevicePropertyReq_DEV::clear_strwebport() {
  strwebport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strwebport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
  return strwebport_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strwebport(const ::std::string& value) {
  
  strwebport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strwebport(::std::string&& value) {
  
  strwebport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strwebport(const char* value) {
  
  strwebport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
}
void ModifyDevicePropertyReq_DEV::set_strwebport(const char* value, size_t size) {
  
  strwebport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strwebport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
  return strwebport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strwebport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
  
  return strwebport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strwebport(::std::string* strwebport) {
  if (strwebport != NULL) {
    
  } else {
    
  }
  strwebport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strwebport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strWebPort)
}

// string strCtrlPort = 7;
void ModifyDevicePropertyReq_DEV::clear_strctrlport() {
  strctrlport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strctrlport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
  return strctrlport_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strctrlport(const ::std::string& value) {
  
  strctrlport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strctrlport(::std::string&& value) {
  
  strctrlport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strctrlport(const char* value) {
  
  strctrlport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
}
void ModifyDevicePropertyReq_DEV::set_strctrlport(const char* value, size_t size) {
  
  strctrlport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strctrlport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
  return strctrlport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strctrlport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
  
  return strctrlport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strctrlport(::std::string* strctrlport) {
  if (strctrlport != NULL) {
    
  } else {
    
  }
  strctrlport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strctrlport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strCtrlPort)
}

// string strProtocol = 8;
void ModifyDevicePropertyReq_DEV::clear_strprotocol() {
  strprotocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strprotocol() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
  return strprotocol_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strprotocol(const ::std::string& value) {
  
  strprotocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strprotocol(::std::string&& value) {
  
  strprotocol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strprotocol(const char* value) {
  
  strprotocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
}
void ModifyDevicePropertyReq_DEV::set_strprotocol(const char* value, size_t size) {
  
  strprotocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strprotocol() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
  return strprotocol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strprotocol() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
  
  return strprotocol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strprotocol(::std::string* strprotocol) {
  if (strprotocol != NULL) {
    
  } else {
    
  }
  strprotocol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strprotocol);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strProtocol)
}

// string strModel = 9;
void ModifyDevicePropertyReq_DEV::clear_strmodel() {
  strmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strmodel() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
  return strmodel_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strmodel(const ::std::string& value) {
  
  strmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strmodel(::std::string&& value) {
  
  strmodel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strmodel(const char* value) {
  
  strmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
}
void ModifyDevicePropertyReq_DEV::set_strmodel(const char* value, size_t size) {
  
  strmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strmodel() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
  return strmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strmodel() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
  
  return strmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strmodel(::std::string* strmodel) {
  if (strmodel != NULL) {
    
  } else {
    
  }
  strmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmodel);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strModel)
}

// string strPostFrequency = 10;
void ModifyDevicePropertyReq_DEV::clear_strpostfrequency() {
  strpostfrequency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strpostfrequency() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
  return strpostfrequency_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strpostfrequency(const ::std::string& value) {
  
  strpostfrequency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strpostfrequency(::std::string&& value) {
  
  strpostfrequency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strpostfrequency(const char* value) {
  
  strpostfrequency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
}
void ModifyDevicePropertyReq_DEV::set_strpostfrequency(const char* value, size_t size) {
  
  strpostfrequency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strpostfrequency() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
  return strpostfrequency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strpostfrequency() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
  
  return strpostfrequency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strpostfrequency(::std::string* strpostfrequency) {
  if (strpostfrequency != NULL) {
    
  } else {
    
  }
  strpostfrequency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpostfrequency);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strPostFrequency)
}

// string strVersion = 11;
void ModifyDevicePropertyReq_DEV::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
  return strversion_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
}
void ModifyDevicePropertyReq_DEV::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strVersion)
}

// string strDeviceStatus = 12;
void ModifyDevicePropertyReq_DEV::clear_strdevicestatus() {
  strdevicestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strdevicestatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
  return strdevicestatus_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strdevicestatus(const ::std::string& value) {
  
  strdevicestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strdevicestatus(::std::string&& value) {
  
  strdevicestatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strdevicestatus(const char* value) {
  
  strdevicestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
}
void ModifyDevicePropertyReq_DEV::set_strdevicestatus(const char* value, size_t size) {
  
  strdevicestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strdevicestatus() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
  return strdevicestatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strdevicestatus() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
  
  return strdevicestatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strdevicestatus(::std::string* strdevicestatus) {
  if (strdevicestatus != NULL) {
    
  } else {
    
  }
  strdevicestatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicestatus);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceStatus)
}

// string strServerIP = 13;
void ModifyDevicePropertyReq_DEV::clear_strserverip() {
  strserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strserverip() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
  return strserverip_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strserverip(const ::std::string& value) {
  
  strserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strserverip(::std::string&& value) {
  
  strserverip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strserverip(const char* value) {
  
  strserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
}
void ModifyDevicePropertyReq_DEV::set_strserverip(const char* value, size_t size) {
  
  strserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strserverip() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
  return strserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strserverip() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
  
  return strserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strserverip(::std::string* strserverip) {
  if (strserverip != NULL) {
    
  } else {
    
  }
  strserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserverip);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerIP)
}

// string strServerPort = 14;
void ModifyDevicePropertyReq_DEV::clear_strserverport() {
  strserverport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strserverport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
  return strserverport_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strserverport(const ::std::string& value) {
  
  strserverport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strserverport(::std::string&& value) {
  
  strserverport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strserverport(const char* value) {
  
  strserverport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
}
void ModifyDevicePropertyReq_DEV::set_strserverport(const char* value, size_t size) {
  
  strserverport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strserverport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
  return strserverport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strserverport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
  
  return strserverport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strserverport(::std::string* strserverport) {
  if (strserverport != NULL) {
    
  } else {
    
  }
  strserverport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserverport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strServerPort)
}

// string strTransfer = 15;
void ModifyDevicePropertyReq_DEV::clear_strtransfer() {
  strtransfer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strtransfer() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
  return strtransfer_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strtransfer(const ::std::string& value) {
  
  strtransfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strtransfer(::std::string&& value) {
  
  strtransfer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strtransfer(const char* value) {
  
  strtransfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
}
void ModifyDevicePropertyReq_DEV::set_strtransfer(const char* value, size_t size) {
  
  strtransfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strtransfer() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
  return strtransfer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strtransfer() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
  
  return strtransfer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strtransfer(::std::string* strtransfer) {
  if (strtransfer != NULL) {
    
  } else {
    
  }
  strtransfer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtransfer);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strTransfer)
}

// string strMobilePort = 16;
void ModifyDevicePropertyReq_DEV::clear_strmobileport() {
  strmobileport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strmobileport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
  return strmobileport_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strmobileport(const ::std::string& value) {
  
  strmobileport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strmobileport(::std::string&& value) {
  
  strmobileport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strmobileport(const char* value) {
  
  strmobileport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
}
void ModifyDevicePropertyReq_DEV::set_strmobileport(const char* value, size_t size) {
  
  strmobileport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strmobileport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
  return strmobileport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strmobileport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
  
  return strmobileport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strmobileport(::std::string* strmobileport) {
  if (strmobileport != NULL) {
    
  } else {
    
  }
  strmobileport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmobileport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strMobilePort)
}

// string strChannelCount = 17;
void ModifyDevicePropertyReq_DEV::clear_strchannelcount() {
  strchannelcount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strchannelcount() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
  return strchannelcount_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strchannelcount(const ::std::string& value) {
  
  strchannelcount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strchannelcount(::std::string&& value) {
  
  strchannelcount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strchannelcount(const char* value) {
  
  strchannelcount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
}
void ModifyDevicePropertyReq_DEV::set_strchannelcount(const char* value, size_t size) {
  
  strchannelcount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strchannelcount() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
  return strchannelcount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strchannelcount() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
  
  return strchannelcount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strchannelcount(::std::string* strchannelcount) {
  if (strchannelcount != NULL) {
    
  } else {
    
  }
  strchannelcount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchannelcount);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strChannelCount)
}

// string strP2pID = 18;
void ModifyDevicePropertyReq_DEV::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
  return strp2pid_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
}
void ModifyDevicePropertyReq_DEV::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strP2pID)
}

// string strDeviceIP2 = 19;
void ModifyDevicePropertyReq_DEV::clear_strdeviceip2() {
  strdeviceip2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strdeviceip2() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
  return strdeviceip2_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strdeviceip2(const ::std::string& value) {
  
  strdeviceip2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strdeviceip2(::std::string&& value) {
  
  strdeviceip2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strdeviceip2(const char* value) {
  
  strdeviceip2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
}
void ModifyDevicePropertyReq_DEV::set_strdeviceip2(const char* value, size_t size) {
  
  strdeviceip2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strdeviceip2() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
  return strdeviceip2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strdeviceip2() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
  
  return strdeviceip2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strdeviceip2(::std::string* strdeviceip2) {
  if (strdeviceip2 != NULL) {
    
  } else {
    
  }
  strdeviceip2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceip2);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strDeviceIP2)
}

// uint32 uiDeviceType = 20;
void ModifyDevicePropertyReq_DEV::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 ModifyDevicePropertyReq_DEV::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.uiDeviceType)
  return uidevicetype_;
}
void ModifyDevicePropertyReq_DEV::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.uiDeviceType)
}

// string strRequestSource = 21;
void ModifyDevicePropertyReq_DEV::clear_strrequestsource() {
  strrequestsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyReq_DEV::strrequestsource() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
  return strrequestsource_.GetNoArena();
}
void ModifyDevicePropertyReq_DEV::set_strrequestsource(const ::std::string& value) {
  
  strrequestsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
}
#if LANG_CXX11
void ModifyDevicePropertyReq_DEV::set_strrequestsource(::std::string&& value) {
  
  strrequestsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
}
#endif
void ModifyDevicePropertyReq_DEV::set_strrequestsource(const char* value) {
  
  strrequestsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
}
void ModifyDevicePropertyReq_DEV::set_strrequestsource(const char* value, size_t size) {
  
  strrequestsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
}
::std::string* ModifyDevicePropertyReq_DEV::mutable_strrequestsource() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
  return strrequestsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyReq_DEV::release_strrequestsource() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
  
  return strrequestsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyReq_DEV::set_allocated_strrequestsource(::std::string* strrequestsource) {
  if (strrequestsource != NULL) {
    
  } else {
    
  }
  strrequestsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strrequestsource);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.strRequestSource)
}

// .Interactive.Message.DoorbellParameter doorbellParameter = 22;
bool ModifyDevicePropertyReq_DEV::has_doorbellparameter() const {
  return this != internal_default_instance() && doorbellparameter_ != NULL;
}
void ModifyDevicePropertyReq_DEV::clear_doorbellparameter() {
  if (GetArenaNoVirtual() == NULL && doorbellparameter_ != NULL) delete doorbellparameter_;
  doorbellparameter_ = NULL;
}
const ::Interactive::Message::DoorbellParameter& ModifyDevicePropertyReq_DEV::doorbellparameter() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyReq_DEV.doorbellParameter)
  return doorbellparameter_ != NULL ? *doorbellparameter_
                         : *::Interactive::Message::DoorbellParameter::internal_default_instance();
}
::Interactive::Message::DoorbellParameter* ModifyDevicePropertyReq_DEV::mutable_doorbellparameter() {
  
  if (doorbellparameter_ == NULL) {
    doorbellparameter_ = new ::Interactive::Message::DoorbellParameter;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyReq_DEV.doorbellParameter)
  return doorbellparameter_;
}
::Interactive::Message::DoorbellParameter* ModifyDevicePropertyReq_DEV::release_doorbellparameter() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyReq_DEV.doorbellParameter)
  
  ::Interactive::Message::DoorbellParameter* temp = doorbellparameter_;
  doorbellparameter_ = NULL;
  return temp;
}
void ModifyDevicePropertyReq_DEV::set_allocated_doorbellparameter(::Interactive::Message::DoorbellParameter* doorbellparameter) {
  delete doorbellparameter_;
  doorbellparameter_ = doorbellparameter;
  if (doorbellparameter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyReq_DEV.doorbellParameter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDevicePropertyRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDevicePropertyRsp_DEV::ModifyDevicePropertyRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDevicePropertyRsp_DEV)
}
ModifyDevicePropertyRsp_DEV::ModifyDevicePropertyRsp_DEV(const ModifyDevicePropertyRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDevicePropertyRsp_DEV)
}

void ModifyDevicePropertyRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyDevicePropertyRsp_DEV::~ModifyDevicePropertyRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  SharedDtor();
}

void ModifyDevicePropertyRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyDevicePropertyRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDevicePropertyRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[39].descriptor;
}

const ModifyDevicePropertyRsp_DEV& ModifyDevicePropertyRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDevicePropertyRsp_DEV* ModifyDevicePropertyRsp_DEV::New(::google::protobuf::Arena* arena) const {
  ModifyDevicePropertyRsp_DEV* n = new ModifyDevicePropertyRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDevicePropertyRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyDevicePropertyRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  return false;
#undef DO_
}

void ModifyDevicePropertyRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDevicePropertyRsp_DEV)
}

::google::protobuf::uint8* ModifyDevicePropertyRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  return target;
}

size_t ModifyDevicePropertyRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDevicePropertyRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDevicePropertyRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDevicePropertyRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDevicePropertyRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDevicePropertyRsp_DEV)
    MergeFrom(*source);
  }
}

void ModifyDevicePropertyRsp_DEV::MergeFrom(const ModifyDevicePropertyRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyDevicePropertyRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDevicePropertyRsp_DEV::CopyFrom(const ModifyDevicePropertyRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDevicePropertyRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDevicePropertyRsp_DEV::IsInitialized() const {
  return true;
}

void ModifyDevicePropertyRsp_DEV::Swap(ModifyDevicePropertyRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDevicePropertyRsp_DEV::InternalSwap(ModifyDevicePropertyRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDevicePropertyRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[39];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDevicePropertyRsp_DEV

// string strValue = 1;
void ModifyDevicePropertyRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevicePropertyRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ModifyDevicePropertyRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
}
#if LANG_CXX11
void ModifyDevicePropertyRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
}
#endif
void ModifyDevicePropertyRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
}
void ModifyDevicePropertyRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
}
::std::string* ModifyDevicePropertyRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevicePropertyRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevicePropertyRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevicePropertyRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceParameterReq_DEV::kStrDeviceIDFieldNumber;
const int QueryDeviceParameterReq_DEV::kUiDeviceTypeFieldNumber;
const int QueryDeviceParameterReq_DEV::kStrQueryTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceParameterReq_DEV::QueryDeviceParameterReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceParameterReq_DEV)
}
QueryDeviceParameterReq_DEV::QueryDeviceParameterReq_DEV(const QueryDeviceParameterReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strquerytype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strquerytype().size() > 0) {
    strquerytype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strquerytype_);
  }
  uidevicetype_ = from.uidevicetype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceParameterReq_DEV)
}

void QueryDeviceParameterReq_DEV::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strquerytype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidevicetype_ = 0u;
  _cached_size_ = 0;
}

QueryDeviceParameterReq_DEV::~QueryDeviceParameterReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceParameterReq_DEV)
  SharedDtor();
}

void QueryDeviceParameterReq_DEV::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strquerytype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDeviceParameterReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceParameterReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[40].descriptor;
}

const QueryDeviceParameterReq_DEV& QueryDeviceParameterReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceParameterReq_DEV* QueryDeviceParameterReq_DEV::New(::google::protobuf::Arena* arena) const {
  QueryDeviceParameterReq_DEV* n = new QueryDeviceParameterReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceParameterReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strquerytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidevicetype_ = 0u;
}

bool QueryDeviceParameterReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strQueryType = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strquerytype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strquerytype().data(), this->strquerytype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceParameterReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceParameterReq_DEV)
  return false;
#undef DO_
}

void QueryDeviceParameterReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uidevicetype(), output);
  }

  // string strQueryType = 3;
  if (this->strquerytype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strquerytype().data(), this->strquerytype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strquerytype(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceParameterReq_DEV)
}

::google::protobuf::uint8* QueryDeviceParameterReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uidevicetype(), target);
  }

  // string strQueryType = 3;
  if (this->strquerytype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strquerytype().data(), this->strquerytype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strquerytype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceParameterReq_DEV)
  return target;
}

size_t QueryDeviceParameterReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strQueryType = 3;
  if (this->strquerytype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strquerytype());
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceParameterReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceParameterReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceParameterReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceParameterReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceParameterReq_DEV)
    MergeFrom(*source);
  }
}

void QueryDeviceParameterReq_DEV::MergeFrom(const QueryDeviceParameterReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strquerytype().size() > 0) {

    strquerytype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strquerytype_);
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
}

void QueryDeviceParameterReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceParameterReq_DEV::CopyFrom(const QueryDeviceParameterReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceParameterReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceParameterReq_DEV::IsInitialized() const {
  return true;
}

void QueryDeviceParameterReq_DEV::Swap(QueryDeviceParameterReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceParameterReq_DEV::InternalSwap(QueryDeviceParameterReq_DEV* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  strquerytype_.Swap(&other->strquerytype_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceParameterReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[40];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceParameterReq_DEV

// string strDeviceID = 1;
void QueryDeviceParameterReq_DEV::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceParameterReq_DEV::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void QueryDeviceParameterReq_DEV::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
}
#if LANG_CXX11
void QueryDeviceParameterReq_DEV::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
}
#endif
void QueryDeviceParameterReq_DEV::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
}
void QueryDeviceParameterReq_DEV::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
}
::std::string* QueryDeviceParameterReq_DEV::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceParameterReq_DEV::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceParameterReq_DEV::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceParameterReq_DEV.strDeviceID)
}

// uint32 uiDeviceType = 2;
void QueryDeviceParameterReq_DEV::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 QueryDeviceParameterReq_DEV::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceParameterReq_DEV.uiDeviceType)
  return uidevicetype_;
}
void QueryDeviceParameterReq_DEV::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceParameterReq_DEV.uiDeviceType)
}

// string strQueryType = 3;
void QueryDeviceParameterReq_DEV::clear_strquerytype() {
  strquerytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceParameterReq_DEV::strquerytype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
  return strquerytype_.GetNoArena();
}
void QueryDeviceParameterReq_DEV::set_strquerytype(const ::std::string& value) {
  
  strquerytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
}
#if LANG_CXX11
void QueryDeviceParameterReq_DEV::set_strquerytype(::std::string&& value) {
  
  strquerytype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
}
#endif
void QueryDeviceParameterReq_DEV::set_strquerytype(const char* value) {
  
  strquerytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
}
void QueryDeviceParameterReq_DEV::set_strquerytype(const char* value, size_t size) {
  
  strquerytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
}
::std::string* QueryDeviceParameterReq_DEV::mutable_strquerytype() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
  return strquerytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceParameterReq_DEV::release_strquerytype() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
  
  return strquerytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceParameterReq_DEV::set_allocated_strquerytype(::std::string* strquerytype) {
  if (strquerytype != NULL) {
    
  } else {
    
  }
  strquerytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strquerytype);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceParameterReq_DEV.strQueryType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceParameterRsp_DEV::kDoorbellParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceParameterRsp_DEV::QueryDeviceParameterRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceParameterRsp_DEV)
}
QueryDeviceParameterRsp_DEV::QueryDeviceParameterRsp_DEV(const QueryDeviceParameterRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_doorbellparameter()) {
    doorbellparameter_ = new ::Interactive::Message::DoorbellParameter(*from.doorbellparameter_);
  } else {
    doorbellparameter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceParameterRsp_DEV)
}

void QueryDeviceParameterRsp_DEV::SharedCtor() {
  doorbellparameter_ = NULL;
  _cached_size_ = 0;
}

QueryDeviceParameterRsp_DEV::~QueryDeviceParameterRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceParameterRsp_DEV)
  SharedDtor();
}

void QueryDeviceParameterRsp_DEV::SharedDtor() {
  if (this != internal_default_instance()) {
    delete doorbellparameter_;
  }
}

void QueryDeviceParameterRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceParameterRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[41].descriptor;
}

const QueryDeviceParameterRsp_DEV& QueryDeviceParameterRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceParameterRsp_DEV* QueryDeviceParameterRsp_DEV::New(::google::protobuf::Arena* arena) const {
  QueryDeviceParameterRsp_DEV* n = new QueryDeviceParameterRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceParameterRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  if (GetArenaNoVirtual() == NULL && doorbellparameter_ != NULL) {
    delete doorbellparameter_;
  }
  doorbellparameter_ = NULL;
}

bool QueryDeviceParameterRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.DoorbellParameter doorbellParameter = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doorbellparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceParameterRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceParameterRsp_DEV)
  return false;
#undef DO_
}

void QueryDeviceParameterRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  // .Interactive.Message.DoorbellParameter doorbellParameter = 1;
  if (this->has_doorbellparameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->doorbellparameter_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceParameterRsp_DEV)
}

::google::protobuf::uint8* QueryDeviceParameterRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  // .Interactive.Message.DoorbellParameter doorbellParameter = 1;
  if (this->has_doorbellparameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->doorbellparameter_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceParameterRsp_DEV)
  return target;
}

size_t QueryDeviceParameterRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  size_t total_size = 0;

  // .Interactive.Message.DoorbellParameter doorbellParameter = 1;
  if (this->has_doorbellparameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->doorbellparameter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceParameterRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceParameterRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceParameterRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceParameterRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceParameterRsp_DEV)
    MergeFrom(*source);
  }
}

void QueryDeviceParameterRsp_DEV::MergeFrom(const QueryDeviceParameterRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_doorbellparameter()) {
    mutable_doorbellparameter()->::Interactive::Message::DoorbellParameter::MergeFrom(from.doorbellparameter());
  }
}

void QueryDeviceParameterRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceParameterRsp_DEV::CopyFrom(const QueryDeviceParameterRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceParameterRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceParameterRsp_DEV::IsInitialized() const {
  return true;
}

void QueryDeviceParameterRsp_DEV::Swap(QueryDeviceParameterRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceParameterRsp_DEV::InternalSwap(QueryDeviceParameterRsp_DEV* other) {
  std::swap(doorbellparameter_, other->doorbellparameter_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceParameterRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[41];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceParameterRsp_DEV

// .Interactive.Message.DoorbellParameter doorbellParameter = 1;
bool QueryDeviceParameterRsp_DEV::has_doorbellparameter() const {
  return this != internal_default_instance() && doorbellparameter_ != NULL;
}
void QueryDeviceParameterRsp_DEV::clear_doorbellparameter() {
  if (GetArenaNoVirtual() == NULL && doorbellparameter_ != NULL) delete doorbellparameter_;
  doorbellparameter_ = NULL;
}
const ::Interactive::Message::DoorbellParameter& QueryDeviceParameterRsp_DEV::doorbellparameter() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceParameterRsp_DEV.doorbellParameter)
  return doorbellparameter_ != NULL ? *doorbellparameter_
                         : *::Interactive::Message::DoorbellParameter::internal_default_instance();
}
::Interactive::Message::DoorbellParameter* QueryDeviceParameterRsp_DEV::mutable_doorbellparameter() {
  
  if (doorbellparameter_ == NULL) {
    doorbellparameter_ = new ::Interactive::Message::DoorbellParameter;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceParameterRsp_DEV.doorbellParameter)
  return doorbellparameter_;
}
::Interactive::Message::DoorbellParameter* QueryDeviceParameterRsp_DEV::release_doorbellparameter() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceParameterRsp_DEV.doorbellParameter)
  
  ::Interactive::Message::DoorbellParameter* temp = doorbellparameter_;
  doorbellparameter_ = NULL;
  return temp;
}
void QueryDeviceParameterRsp_DEV::set_allocated_doorbellparameter(::Interactive::Message::DoorbellParameter* doorbellparameter) {
  delete doorbellparameter_;
  doorbellparameter_ = doorbellparameter;
  if (doorbellparameter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceParameterRsp_DEV.doorbellParameter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryPlatformPushStatusReq_DEV::kStrDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryPlatformPushStatusReq_DEV::QueryPlatformPushStatusReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryPlatformPushStatusReq_DEV)
}
QueryPlatformPushStatusReq_DEV::QueryPlatformPushStatusReq_DEV(const QueryPlatformPushStatusReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryPlatformPushStatusReq_DEV)
}

void QueryPlatformPushStatusReq_DEV::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryPlatformPushStatusReq_DEV::~QueryPlatformPushStatusReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  SharedDtor();
}

void QueryPlatformPushStatusReq_DEV::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryPlatformPushStatusReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryPlatformPushStatusReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[42].descriptor;
}

const QueryPlatformPushStatusReq_DEV& QueryPlatformPushStatusReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryPlatformPushStatusReq_DEV* QueryPlatformPushStatusReq_DEV::New(::google::protobuf::Arena* arena) const {
  QueryPlatformPushStatusReq_DEV* n = new QueryPlatformPushStatusReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryPlatformPushStatusReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryPlatformPushStatusReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  return false;
#undef DO_
}

void QueryPlatformPushStatusReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryPlatformPushStatusReq_DEV)
}

::google::protobuf::uint8* QueryPlatformPushStatusReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  return target;
}

size_t QueryPlatformPushStatusReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryPlatformPushStatusReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryPlatformPushStatusReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryPlatformPushStatusReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryPlatformPushStatusReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryPlatformPushStatusReq_DEV)
    MergeFrom(*source);
  }
}

void QueryPlatformPushStatusReq_DEV::MergeFrom(const QueryPlatformPushStatusReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
}

void QueryPlatformPushStatusReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryPlatformPushStatusReq_DEV::CopyFrom(const QueryPlatformPushStatusReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryPlatformPushStatusReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPlatformPushStatusReq_DEV::IsInitialized() const {
  return true;
}

void QueryPlatformPushStatusReq_DEV::Swap(QueryPlatformPushStatusReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryPlatformPushStatusReq_DEV::InternalSwap(QueryPlatformPushStatusReq_DEV* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryPlatformPushStatusReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[42];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryPlatformPushStatusReq_DEV

// string strDeviceID = 1;
void QueryPlatformPushStatusReq_DEV::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryPlatformPushStatusReq_DEV::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void QueryPlatformPushStatusReq_DEV::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
}
#if LANG_CXX11
void QueryPlatformPushStatusReq_DEV::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
}
#endif
void QueryPlatformPushStatusReq_DEV::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
}
void QueryPlatformPushStatusReq_DEV::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
}
::std::string* QueryPlatformPushStatusReq_DEV::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryPlatformPushStatusReq_DEV::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryPlatformPushStatusReq_DEV::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryPlatformPushStatusReq_DEV.strDeviceID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryPlatformPushStatusRsp_DEV::kStrStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryPlatformPushStatusRsp_DEV::QueryPlatformPushStatusRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
}
QueryPlatformPushStatusRsp_DEV::QueryPlatformPushStatusRsp_DEV(const QueryPlatformPushStatusRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strstatus().size() > 0) {
    strstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstatus_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
}

void QueryPlatformPushStatusRsp_DEV::SharedCtor() {
  strstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryPlatformPushStatusRsp_DEV::~QueryPlatformPushStatusRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  SharedDtor();
}

void QueryPlatformPushStatusRsp_DEV::SharedDtor() {
  strstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryPlatformPushStatusRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryPlatformPushStatusRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[43].descriptor;
}

const QueryPlatformPushStatusRsp_DEV& QueryPlatformPushStatusRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryPlatformPushStatusRsp_DEV* QueryPlatformPushStatusRsp_DEV::New(::google::protobuf::Arena* arena) const {
  QueryPlatformPushStatusRsp_DEV* n = new QueryPlatformPushStatusRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryPlatformPushStatusRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  strstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryPlatformPushStatusRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strstatus().data(), this->strstatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  return false;
#undef DO_
}

void QueryPlatformPushStatusRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  // string strStatus = 1;
  if (this->strstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstatus().data(), this->strstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strstatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
}

::google::protobuf::uint8* QueryPlatformPushStatusRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  // string strStatus = 1;
  if (this->strstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstatus().data(), this->strstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strstatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  return target;
}

size_t QueryPlatformPushStatusRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  size_t total_size = 0;

  // string strStatus = 1;
  if (this->strstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryPlatformPushStatusRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryPlatformPushStatusRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryPlatformPushStatusRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
    MergeFrom(*source);
  }
}

void QueryPlatformPushStatusRsp_DEV::MergeFrom(const QueryPlatformPushStatusRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strstatus().size() > 0) {

    strstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstatus_);
  }
}

void QueryPlatformPushStatusRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryPlatformPushStatusRsp_DEV::CopyFrom(const QueryPlatformPushStatusRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryPlatformPushStatusRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPlatformPushStatusRsp_DEV::IsInitialized() const {
  return true;
}

void QueryPlatformPushStatusRsp_DEV::Swap(QueryPlatformPushStatusRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryPlatformPushStatusRsp_DEV::InternalSwap(QueryPlatformPushStatusRsp_DEV* other) {
  strstatus_.Swap(&other->strstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryPlatformPushStatusRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[43];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryPlatformPushStatusRsp_DEV

// string strStatus = 1;
void QueryPlatformPushStatusRsp_DEV::clear_strstatus() {
  strstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryPlatformPushStatusRsp_DEV::strstatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
  return strstatus_.GetNoArena();
}
void QueryPlatformPushStatusRsp_DEV::set_strstatus(const ::std::string& value) {
  
  strstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
}
#if LANG_CXX11
void QueryPlatformPushStatusRsp_DEV::set_strstatus(::std::string&& value) {
  
  strstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
}
#endif
void QueryPlatformPushStatusRsp_DEV::set_strstatus(const char* value) {
  
  strstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
}
void QueryPlatformPushStatusRsp_DEV::set_strstatus(const char* value, size_t size) {
  
  strstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
}
::std::string* QueryPlatformPushStatusRsp_DEV::mutable_strstatus() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
  return strstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryPlatformPushStatusRsp_DEV::release_strstatus() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
  
  return strstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryPlatformPushStatusRsp_DEV::set_allocated_strstatus(::std::string* strstatus) {
  if (strstatus != NULL) {
    
  } else {
    
  }
  strstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstatus);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryPlatformPushStatusRsp_DEV.strStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceEventReportReq_DEV::kStrDeviceIDFieldNumber;
const int DeviceEventReportReq_DEV::kUiDeviceTypeFieldNumber;
const int DeviceEventReportReq_DEV::kUiEventTypeFieldNumber;
const int DeviceEventReportReq_DEV::kUiEventStateFieldNumber;
const int DeviceEventReportReq_DEV::kStrFileIDFieldNumber;
const int DeviceEventReportReq_DEV::kStrEventTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceEventReportReq_DEV::DeviceEventReportReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeviceEventReportReq_DEV)
}
DeviceEventReportReq_DEV::DeviceEventReportReq_DEV(const DeviceEventReportReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  streventtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.streventtime().size() > 0) {
    streventtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventtime_);
  }
  ::memcpy(&uidevicetype_, &from.uidevicetype_,
    reinterpret_cast<char*>(&uieventstate_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uieventstate_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeviceEventReportReq_DEV)
}

void DeviceEventReportReq_DEV::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uieventstate_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uieventstate_));
  _cached_size_ = 0;
}

DeviceEventReportReq_DEV::~DeviceEventReportReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeviceEventReportReq_DEV)
  SharedDtor();
}

void DeviceEventReportReq_DEV::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceEventReportReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceEventReportReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[44].descriptor;
}

const DeviceEventReportReq_DEV& DeviceEventReportReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceEventReportReq_DEV* DeviceEventReportReq_DEV::New(::google::protobuf::Arena* arena) const {
  DeviceEventReportReq_DEV* n = new DeviceEventReportReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceEventReportReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeviceEventReportReq_DEV)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uieventstate_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uieventstate_));
}

bool DeviceEventReportReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeviceEventReportReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEventReportReq_DEV.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventState = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEventReportReq_DEV.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEventTime = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streventtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streventtime().data(), this->streventtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEventReportReq_DEV.strEventTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeviceEventReportReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeviceEventReportReq_DEV)
  return false;
#undef DO_
}

void DeviceEventReportReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeviceEventReportReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportReq_DEV.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uidevicetype(), output);
  }

  // uint32 uiEventType = 3;
  if (this->uieventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uieventtype(), output);
  }

  // uint32 uiEventState = 4;
  if (this->uieventstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uieventstate(), output);
  }

  // string strFileID = 5;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportReq_DEV.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strfileid(), output);
  }

  // string strEventTime = 6;
  if (this->streventtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventtime().data(), this->streventtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportReq_DEV.strEventTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->streventtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeviceEventReportReq_DEV)
}

::google::protobuf::uint8* DeviceEventReportReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeviceEventReportReq_DEV)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportReq_DEV.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uidevicetype(), target);
  }

  // uint32 uiEventType = 3;
  if (this->uieventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uieventtype(), target);
  }

  // uint32 uiEventState = 4;
  if (this->uieventstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uieventstate(), target);
  }

  // string strFileID = 5;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportReq_DEV.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strfileid(), target);
  }

  // string strEventTime = 6;
  if (this->streventtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventtime().data(), this->streventtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportReq_DEV.strEventTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->streventtime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeviceEventReportReq_DEV)
  return target;
}

size_t DeviceEventReportReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeviceEventReportReq_DEV)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strFileID = 5;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strEventTime = 6;
  if (this->streventtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streventtime());
  }

  // uint32 uiDeviceType = 2;
  if (this->uidevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  // uint32 uiEventType = 3;
  if (this->uieventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventtype());
  }

  // uint32 uiEventState = 4;
  if (this->uieventstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceEventReportReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeviceEventReportReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceEventReportReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceEventReportReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeviceEventReportReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeviceEventReportReq_DEV)
    MergeFrom(*source);
  }
}

void DeviceEventReportReq_DEV::MergeFrom(const DeviceEventReportReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeviceEventReportReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.streventtime().size() > 0) {

    streventtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventtime_);
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
  if (from.uieventtype() != 0) {
    set_uieventtype(from.uieventtype());
  }
  if (from.uieventstate() != 0) {
    set_uieventstate(from.uieventstate());
  }
}

void DeviceEventReportReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeviceEventReportReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceEventReportReq_DEV::CopyFrom(const DeviceEventReportReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeviceEventReportReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceEventReportReq_DEV::IsInitialized() const {
  return true;
}

void DeviceEventReportReq_DEV::Swap(DeviceEventReportReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceEventReportReq_DEV::InternalSwap(DeviceEventReportReq_DEV* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  strfileid_.Swap(&other->strfileid_);
  streventtime_.Swap(&other->streventtime_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(uieventtype_, other->uieventtype_);
  std::swap(uieventstate_, other->uieventstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceEventReportReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[44];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceEventReportReq_DEV

// string strDeviceID = 1;
void DeviceEventReportReq_DEV::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEventReportReq_DEV::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void DeviceEventReportReq_DEV::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
}
#if LANG_CXX11
void DeviceEventReportReq_DEV::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
}
#endif
void DeviceEventReportReq_DEV::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
}
void DeviceEventReportReq_DEV::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
}
::std::string* DeviceEventReportReq_DEV::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEventReportReq_DEV::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEventReportReq_DEV::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEventReportReq_DEV.strDeviceID)
}

// uint32 uiDeviceType = 2;
void DeviceEventReportReq_DEV::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 DeviceEventReportReq_DEV::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportReq_DEV.uiDeviceType)
  return uidevicetype_;
}
void DeviceEventReportReq_DEV::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportReq_DEV.uiDeviceType)
}

// uint32 uiEventType = 3;
void DeviceEventReportReq_DEV::clear_uieventtype() {
  uieventtype_ = 0u;
}
::google::protobuf::uint32 DeviceEventReportReq_DEV::uieventtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportReq_DEV.uiEventType)
  return uieventtype_;
}
void DeviceEventReportReq_DEV::set_uieventtype(::google::protobuf::uint32 value) {
  
  uieventtype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportReq_DEV.uiEventType)
}

// uint32 uiEventState = 4;
void DeviceEventReportReq_DEV::clear_uieventstate() {
  uieventstate_ = 0u;
}
::google::protobuf::uint32 DeviceEventReportReq_DEV::uieventstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportReq_DEV.uiEventState)
  return uieventstate_;
}
void DeviceEventReportReq_DEV::set_uieventstate(::google::protobuf::uint32 value) {
  
  uieventstate_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportReq_DEV.uiEventState)
}

// string strFileID = 5;
void DeviceEventReportReq_DEV::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEventReportReq_DEV::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
  return strfileid_.GetNoArena();
}
void DeviceEventReportReq_DEV::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
}
#if LANG_CXX11
void DeviceEventReportReq_DEV::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
}
#endif
void DeviceEventReportReq_DEV::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
}
void DeviceEventReportReq_DEV::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
}
::std::string* DeviceEventReportReq_DEV::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEventReportReq_DEV::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEventReportReq_DEV::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEventReportReq_DEV.strFileID)
}

// string strEventTime = 6;
void DeviceEventReportReq_DEV::clear_streventtime() {
  streventtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEventReportReq_DEV::streventtime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
  return streventtime_.GetNoArena();
}
void DeviceEventReportReq_DEV::set_streventtime(const ::std::string& value) {
  
  streventtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
}
#if LANG_CXX11
void DeviceEventReportReq_DEV::set_streventtime(::std::string&& value) {
  
  streventtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
}
#endif
void DeviceEventReportReq_DEV::set_streventtime(const char* value) {
  
  streventtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
}
void DeviceEventReportReq_DEV::set_streventtime(const char* value, size_t size) {
  
  streventtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
}
::std::string* DeviceEventReportReq_DEV::mutable_streventtime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
  return streventtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEventReportReq_DEV::release_streventtime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
  
  return streventtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEventReportReq_DEV::set_allocated_streventtime(::std::string* streventtime) {
  if (streventtime != NULL) {
    
  } else {
    
  }
  streventtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventtime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEventReportReq_DEV.strEventTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceEventReportRsp_DEV::kStrEventIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceEventReportRsp_DEV::DeviceEventReportRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeviceEventReportRsp_DEV)
}
DeviceEventReportRsp_DEV::DeviceEventReportRsp_DEV(const DeviceEventReportRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.streventid().size() > 0) {
    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeviceEventReportRsp_DEV)
}

void DeviceEventReportRsp_DEV::SharedCtor() {
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeviceEventReportRsp_DEV::~DeviceEventReportRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeviceEventReportRsp_DEV)
  SharedDtor();
}

void DeviceEventReportRsp_DEV::SharedDtor() {
  streventid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceEventReportRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceEventReportRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[45].descriptor;
}

const DeviceEventReportRsp_DEV& DeviceEventReportRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceEventReportRsp_DEV* DeviceEventReportRsp_DEV::New(::google::protobuf::Arena* arena) const {
  DeviceEventReportRsp_DEV* n = new DeviceEventReportRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceEventReportRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeviceEventReportRsp_DEV)
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeviceEventReportRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeviceEventReportRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strEventID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streventid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streventid().data(), this->streventid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeviceEventReportRsp_DEV.strEventID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeviceEventReportRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeviceEventReportRsp_DEV)
  return false;
#undef DO_
}

void DeviceEventReportRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeviceEventReportRsp_DEV)
  // string strEventID = 1;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportRsp_DEV.strEventID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->streventid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeviceEventReportRsp_DEV)
}

::google::protobuf::uint8* DeviceEventReportRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeviceEventReportRsp_DEV)
  // string strEventID = 1;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeviceEventReportRsp_DEV.strEventID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->streventid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeviceEventReportRsp_DEV)
  return target;
}

size_t DeviceEventReportRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeviceEventReportRsp_DEV)
  size_t total_size = 0;

  // string strEventID = 1;
  if (this->streventid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streventid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceEventReportRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeviceEventReportRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceEventReportRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceEventReportRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeviceEventReportRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeviceEventReportRsp_DEV)
    MergeFrom(*source);
  }
}

void DeviceEventReportRsp_DEV::MergeFrom(const DeviceEventReportRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeviceEventReportRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.streventid().size() > 0) {

    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
}

void DeviceEventReportRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeviceEventReportRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceEventReportRsp_DEV::CopyFrom(const DeviceEventReportRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeviceEventReportRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceEventReportRsp_DEV::IsInitialized() const {
  return true;
}

void DeviceEventReportRsp_DEV::Swap(DeviceEventReportRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceEventReportRsp_DEV::InternalSwap(DeviceEventReportRsp_DEV* other) {
  streventid_.Swap(&other->streventid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceEventReportRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[45];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceEventReportRsp_DEV

// string strEventID = 1;
void DeviceEventReportRsp_DEV::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceEventReportRsp_DEV::streventid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
  return streventid_.GetNoArena();
}
void DeviceEventReportRsp_DEV::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
}
#if LANG_CXX11
void DeviceEventReportRsp_DEV::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
}
#endif
void DeviceEventReportRsp_DEV::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
}
void DeviceEventReportRsp_DEV::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
}
::std::string* DeviceEventReportRsp_DEV::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceEventReportRsp_DEV::release_streventid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceEventReportRsp_DEV::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeviceEventReportRsp_DEV.strEventID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPreHandlerReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPreHandlerReq_USR::MsgPreHandlerReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.MsgPreHandlerReq_USR)
}
MsgPreHandlerReq_USR::MsgPreHandlerReq_USR(const MsgPreHandlerReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.MsgPreHandlerReq_USR)
}

void MsgPreHandlerReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgPreHandlerReq_USR::~MsgPreHandlerReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.MsgPreHandlerReq_USR)
  SharedDtor();
}

void MsgPreHandlerReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgPreHandlerReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPreHandlerReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[46].descriptor;
}

const MsgPreHandlerReq_USR& MsgPreHandlerReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgPreHandlerReq_USR* MsgPreHandlerReq_USR::New(::google::protobuf::Arena* arena) const {
  MsgPreHandlerReq_USR* n = new MsgPreHandlerReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgPreHandlerReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.MsgPreHandlerReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgPreHandlerReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.MsgPreHandlerReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.MsgPreHandlerReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.MsgPreHandlerReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.MsgPreHandlerReq_USR)
  return false;
#undef DO_
}

void MsgPreHandlerReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.MsgPreHandlerReq_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.MsgPreHandlerReq_USR)
}

::google::protobuf::uint8* MsgPreHandlerReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.MsgPreHandlerReq_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.MsgPreHandlerReq_USR)
  return target;
}

size_t MsgPreHandlerReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.MsgPreHandlerReq_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPreHandlerReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPreHandlerReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPreHandlerReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.MsgPreHandlerReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.MsgPreHandlerReq_USR)
    MergeFrom(*source);
  }
}

void MsgPreHandlerReq_USR::MergeFrom(const MsgPreHandlerReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void MsgPreHandlerReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPreHandlerReq_USR::CopyFrom(const MsgPreHandlerReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPreHandlerReq_USR::IsInitialized() const {
  return true;
}

void MsgPreHandlerReq_USR::Swap(MsgPreHandlerReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPreHandlerReq_USR::InternalSwap(MsgPreHandlerReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgPreHandlerReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[46];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgPreHandlerReq_USR

// string strValue = 1;
void MsgPreHandlerReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgPreHandlerReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void MsgPreHandlerReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
#if LANG_CXX11
void MsgPreHandlerReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
#endif
void MsgPreHandlerReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
void MsgPreHandlerReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
::std::string* MsgPreHandlerReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgPreHandlerReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgPreHandlerReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPreHandlerRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPreHandlerRsp_USR::MsgPreHandlerRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.MsgPreHandlerRsp_USR)
}
MsgPreHandlerRsp_USR::MsgPreHandlerRsp_USR(const MsgPreHandlerRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.MsgPreHandlerRsp_USR)
}

void MsgPreHandlerRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgPreHandlerRsp_USR::~MsgPreHandlerRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.MsgPreHandlerRsp_USR)
  SharedDtor();
}

void MsgPreHandlerRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgPreHandlerRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPreHandlerRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[47].descriptor;
}

const MsgPreHandlerRsp_USR& MsgPreHandlerRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgPreHandlerRsp_USR* MsgPreHandlerRsp_USR::New(::google::protobuf::Arena* arena) const {
  MsgPreHandlerRsp_USR* n = new MsgPreHandlerRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgPreHandlerRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.MsgPreHandlerRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgPreHandlerRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.MsgPreHandlerRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.MsgPreHandlerRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.MsgPreHandlerRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.MsgPreHandlerRsp_USR)
  return false;
#undef DO_
}

void MsgPreHandlerRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.MsgPreHandlerRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.MsgPreHandlerRsp_USR)
}

::google::protobuf::uint8* MsgPreHandlerRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.MsgPreHandlerRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.MsgPreHandlerRsp_USR)
  return target;
}

size_t MsgPreHandlerRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.MsgPreHandlerRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPreHandlerRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPreHandlerRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPreHandlerRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.MsgPreHandlerRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.MsgPreHandlerRsp_USR)
    MergeFrom(*source);
  }
}

void MsgPreHandlerRsp_USR::MergeFrom(const MsgPreHandlerRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void MsgPreHandlerRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPreHandlerRsp_USR::CopyFrom(const MsgPreHandlerRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPreHandlerRsp_USR::IsInitialized() const {
  return true;
}

void MsgPreHandlerRsp_USR::Swap(MsgPreHandlerRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPreHandlerRsp_USR::InternalSwap(MsgPreHandlerRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgPreHandlerRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[47];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgPreHandlerRsp_USR

// string strValue = 1;
void MsgPreHandlerRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgPreHandlerRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void MsgPreHandlerRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
#if LANG_CXX11
void MsgPreHandlerRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
#endif
void MsgPreHandlerRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
void MsgPreHandlerRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
::std::string* MsgPreHandlerRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgPreHandlerRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgPreHandlerRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressReq_USR::kStrSerializeIDFieldNumber;
const int GetAccessAddressReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressReq_USR::GetAccessAddressReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressReq_USR)
}
GetAccessAddressReq_USR::GetAccessAddressReq_USR(const GetAccessAddressReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strserializeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strserializeid().size() > 0) {
    strserializeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserializeid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressReq_USR)
}

void GetAccessAddressReq_USR::SharedCtor() {
  strserializeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressReq_USR::~GetAccessAddressReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressReq_USR)
  SharedDtor();
}

void GetAccessAddressReq_USR::SharedDtor() {
  strserializeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[48].descriptor;
}

const GetAccessAddressReq_USR& GetAccessAddressReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressReq_USR* GetAccessAddressReq_USR::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressReq_USR* n = new GetAccessAddressReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressReq_USR)
  strserializeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strSerializeID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserializeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strserializeid().data(), this->strserializeid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_USR.strSerializeID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressReq_USR)
  return false;
#undef DO_
}

void GetAccessAddressReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressReq_USR)
  // string strSerializeID = 1;
  if (this->strserializeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserializeid().data(), this->strserializeid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strSerializeID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strserializeid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressReq_USR)
}

::google::protobuf::uint8* GetAccessAddressReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressReq_USR)
  // string strSerializeID = 1;
  if (this->strserializeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserializeid().data(), this->strserializeid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strSerializeID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strserializeid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressReq_USR)
  return target;
}

size_t GetAccessAddressReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressReq_USR)
  size_t total_size = 0;

  // string strSerializeID = 1;
  if (this->strserializeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strserializeid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressReq_USR)
    MergeFrom(*source);
  }
}

void GetAccessAddressReq_USR::MergeFrom(const GetAccessAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strserializeid().size() > 0) {

    strserializeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserializeid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressReq_USR::CopyFrom(const GetAccessAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressReq_USR::IsInitialized() const {
  return true;
}

void GetAccessAddressReq_USR::Swap(GetAccessAddressReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressReq_USR::InternalSwap(GetAccessAddressReq_USR* other) {
  strserializeid_.Swap(&other->strserializeid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[48];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressReq_USR

// string strSerializeID = 1;
void GetAccessAddressReq_USR::clear_strserializeid() {
  strserializeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_USR::strserializeid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  return strserializeid_.GetNoArena();
}
void GetAccessAddressReq_USR::set_strserializeid(const ::std::string& value) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
#if LANG_CXX11
void GetAccessAddressReq_USR::set_strserializeid(::std::string&& value) {
  
  strserializeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
#endif
void GetAccessAddressReq_USR::set_strserializeid(const char* value) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
void GetAccessAddressReq_USR::set_strserializeid(const char* value, size_t size) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
::std::string* GetAccessAddressReq_USR::mutable_strserializeid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  return strserializeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_USR::release_strserializeid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  
  return strserializeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_USR::set_allocated_strserializeid(::std::string* strserializeid) {
  if (strserializeid != NULL) {
    
  } else {
    
  }
  strserializeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserializeid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}

// string strValue = 2;
void GetAccessAddressReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
#if LANG_CXX11
void GetAccessAddressReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
#endif
void GetAccessAddressReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
void GetAccessAddressReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
::std::string* GetAccessAddressReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressRsp_USR::kStrAccessAddressFieldNumber;
const int GetAccessAddressRsp_USR::kStrAccessPortFieldNumber;
const int GetAccessAddressRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressRsp_USR::GetAccessAddressRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressRsp_USR)
}
GetAccessAddressRsp_USR::GetAccessAddressRsp_USR(const GetAccessAddressRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessaddress().size() > 0) {
    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessport().size() > 0) {
    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressRsp_USR)
}

void GetAccessAddressRsp_USR::SharedCtor() {
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressRsp_USR::~GetAccessAddressRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressRsp_USR)
  SharedDtor();
}

void GetAccessAddressRsp_USR::SharedDtor() {
  straccessaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[49].descriptor;
}

const GetAccessAddressRsp_USR& GetAccessAddressRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressRsp_USR* GetAccessAddressRsp_USR::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressRsp_USR* n = new GetAccessAddressRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressRsp_USR)
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessaddress().data(), this->straccessaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAccessPort = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessport().data(), this->straccessport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_USR.strAccessPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressRsp_USR)
  return false;
#undef DO_
}

void GetAccessAddressRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressRsp_USR)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessaddress(), output);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->straccessport(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressRsp_USR)
}

::google::protobuf::uint8* GetAccessAddressRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressRsp_USR)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessaddress(), target);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->straccessport(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressRsp_USR)
  return target;
}

size_t GetAccessAddressRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressRsp_USR)
  size_t total_size = 0;

  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessaddress());
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessport());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressRsp_USR)
    MergeFrom(*source);
  }
}

void GetAccessAddressRsp_USR::MergeFrom(const GetAccessAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessaddress().size() > 0) {

    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  if (from.straccessport().size() > 0) {

    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressRsp_USR::CopyFrom(const GetAccessAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressRsp_USR::IsInitialized() const {
  return true;
}

void GetAccessAddressRsp_USR::Swap(GetAccessAddressRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressRsp_USR::InternalSwap(GetAccessAddressRsp_USR* other) {
  straccessaddress_.Swap(&other->straccessaddress_);
  straccessport_.Swap(&other->straccessport_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[49];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressRsp_USR

// string strAccessAddress = 1;
void GetAccessAddressRsp_USR::clear_straccessaddress() {
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_USR::straccessaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  return straccessaddress_.GetNoArena();
}
void GetAccessAddressRsp_USR::set_straccessaddress(const ::std::string& value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
#if LANG_CXX11
void GetAccessAddressRsp_USR::set_straccessaddress(::std::string&& value) {
  
  straccessaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
#endif
void GetAccessAddressRsp_USR::set_straccessaddress(const char* value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
void GetAccessAddressRsp_USR::set_straccessaddress(const char* value, size_t size) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
::std::string* GetAccessAddressRsp_USR::mutable_straccessaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  return straccessaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_USR::release_straccessaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  
  return straccessaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_USR::set_allocated_straccessaddress(::std::string* straccessaddress) {
  if (straccessaddress != NULL) {
    
  } else {
    
  }
  straccessaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}

// string strAccessPort = 2;
void GetAccessAddressRsp_USR::clear_straccessport() {
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_USR::straccessport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  return straccessport_.GetNoArena();
}
void GetAccessAddressRsp_USR::set_straccessport(const ::std::string& value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
#if LANG_CXX11
void GetAccessAddressRsp_USR::set_straccessport(::std::string&& value) {
  
  straccessport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
#endif
void GetAccessAddressRsp_USR::set_straccessport(const char* value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
void GetAccessAddressRsp_USR::set_straccessport(const char* value, size_t size) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
::std::string* GetAccessAddressRsp_USR::mutable_straccessport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  return straccessport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_USR::release_straccessport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  
  return straccessport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_USR::set_allocated_straccessport(::std::string* straccessport) {
  if (straccessport != NULL) {
    
  } else {
    
  }
  straccessport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}

// string strValue = 3;
void GetAccessAddressRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
#if LANG_CXX11
void GetAccessAddressRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
#endif
void GetAccessAddressRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
void GetAccessAddressRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
::std::string* GetAccessAddressRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterUserReq_USR::kUserInfoFieldNumber;
const int RegisterUserReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterUserReq_USR::RegisterUserReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RegisterUserReq_USR)
}
RegisterUserReq_USR::RegisterUserReq_USR(const RegisterUserReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RegisterUserReq_USR)
}

void RegisterUserReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

RegisterUserReq_USR::~RegisterUserReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RegisterUserReq_USR)
  SharedDtor();
}

void RegisterUserReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void RegisterUserReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterUserReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[50].descriptor;
}

const RegisterUserReq_USR& RegisterUserReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterUserReq_USR* RegisterUserReq_USR::New(::google::protobuf::Arena* arena) const {
  RegisterUserReq_USR* n = new RegisterUserReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterUserReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RegisterUserReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool RegisterUserReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RegisterUserReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterUserReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RegisterUserReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RegisterUserReq_USR)
  return false;
#undef DO_
}

void RegisterUserReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RegisterUserReq_USR)
}

::google::protobuf::uint8* RegisterUserReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RegisterUserReq_USR)
  return target;
}

size_t RegisterUserReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RegisterUserReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterUserReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterUserReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterUserReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RegisterUserReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RegisterUserReq_USR)
    MergeFrom(*source);
  }
}

void RegisterUserReq_USR::MergeFrom(const RegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void RegisterUserReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterUserReq_USR::CopyFrom(const RegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterUserReq_USR::IsInitialized() const {
  return true;
}

void RegisterUserReq_USR::Swap(RegisterUserReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterUserReq_USR::InternalSwap(RegisterUserReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterUserReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[50];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterUserReq_USR

// .Interactive.Message.User userInfo = 1;
bool RegisterUserReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void RegisterUserReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& RegisterUserReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* RegisterUserReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* RegisterUserReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void RegisterUserReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserReq_USR.userInfo)
}

// string strValue = 2;
void RegisterUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void RegisterUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserReq_USR.strValue)
}
#if LANG_CXX11
void RegisterUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserReq_USR.strValue)
}
#endif
void RegisterUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserReq_USR.strValue)
}
void RegisterUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserReq_USR.strValue)
}
::std::string* RegisterUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterUserRsp_USR::kStrUserIDFieldNumber;
const int RegisterUserRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterUserRsp_USR::RegisterUserRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RegisterUserRsp_USR)
}
RegisterUserRsp_USR::RegisterUserRsp_USR(const RegisterUserRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RegisterUserRsp_USR)
}

void RegisterUserRsp_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterUserRsp_USR::~RegisterUserRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RegisterUserRsp_USR)
  SharedDtor();
}

void RegisterUserRsp_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterUserRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterUserRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[51].descriptor;
}

const RegisterUserRsp_USR& RegisterUserRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterUserRsp_USR* RegisterUserRsp_USR::New(::google::protobuf::Arena* arena) const {
  RegisterUserRsp_USR* n = new RegisterUserRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterUserRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RegisterUserRsp_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegisterUserRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RegisterUserRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterUserRsp_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterUserRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RegisterUserRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RegisterUserRsp_USR)
  return false;
#undef DO_
}

void RegisterUserRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RegisterUserRsp_USR)
}

::google::protobuf::uint8* RegisterUserRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RegisterUserRsp_USR)
  return target;
}

size_t RegisterUserRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RegisterUserRsp_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterUserRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterUserRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterUserRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RegisterUserRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RegisterUserRsp_USR)
    MergeFrom(*source);
  }
}

void RegisterUserRsp_USR::MergeFrom(const RegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void RegisterUserRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterUserRsp_USR::CopyFrom(const RegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterUserRsp_USR::IsInitialized() const {
  return true;
}

void RegisterUserRsp_USR::Swap(RegisterUserRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterUserRsp_USR::InternalSwap(RegisterUserRsp_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterUserRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[51];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterUserRsp_USR

// string strUserID = 1;
void RegisterUserRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterUserRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
void RegisterUserRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
#if LANG_CXX11
void RegisterUserRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
#endif
void RegisterUserRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
void RegisterUserRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
::std::string* RegisterUserRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterUserRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterUserRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserRsp_USR.strUserID)
}

// string strValue = 2;
void RegisterUserRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterUserRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void RegisterUserRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserRsp_USR.strValue)
}
#if LANG_CXX11
void RegisterUserRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserRsp_USR.strValue)
}
#endif
void RegisterUserRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserRsp_USR.strValue)
}
void RegisterUserRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserRsp_USR.strValue)
}
::std::string* RegisterUserRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterUserRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterUserRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnRegisterUserReq_USR::kUserInfoFieldNumber;
const int UnRegisterUserReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnRegisterUserReq_USR::UnRegisterUserReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UnRegisterUserReq_USR)
}
UnRegisterUserReq_USR::UnRegisterUserReq_USR(const UnRegisterUserReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UnRegisterUserReq_USR)
}

void UnRegisterUserReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

UnRegisterUserReq_USR::~UnRegisterUserReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UnRegisterUserReq_USR)
  SharedDtor();
}

void UnRegisterUserReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void UnRegisterUserReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnRegisterUserReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[52].descriptor;
}

const UnRegisterUserReq_USR& UnRegisterUserReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnRegisterUserReq_USR* UnRegisterUserReq_USR::New(::google::protobuf::Arena* arena) const {
  UnRegisterUserReq_USR* n = new UnRegisterUserReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnRegisterUserReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UnRegisterUserReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool UnRegisterUserReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UnRegisterUserReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnRegisterUserReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UnRegisterUserReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UnRegisterUserReq_USR)
  return false;
#undef DO_
}

void UnRegisterUserReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UnRegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UnRegisterUserReq_USR)
}

::google::protobuf::uint8* UnRegisterUserReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UnRegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UnRegisterUserReq_USR)
  return target;
}

size_t UnRegisterUserReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UnRegisterUserReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnRegisterUserReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UnRegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UnRegisterUserReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnRegisterUserReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UnRegisterUserReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UnRegisterUserReq_USR)
    MergeFrom(*source);
  }
}

void UnRegisterUserReq_USR::MergeFrom(const UnRegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UnRegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void UnRegisterUserReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UnRegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnRegisterUserReq_USR::CopyFrom(const UnRegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UnRegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnRegisterUserReq_USR::IsInitialized() const {
  return true;
}

void UnRegisterUserReq_USR::Swap(UnRegisterUserReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnRegisterUserReq_USR::InternalSwap(UnRegisterUserReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnRegisterUserReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[52];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnRegisterUserReq_USR

// .Interactive.Message.User userInfo = 1;
bool UnRegisterUserReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void UnRegisterUserReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& UnRegisterUserReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* UnRegisterUserReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* UnRegisterUserReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void UnRegisterUserReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserReq_USR.userInfo)
}

// string strValue = 2;
void UnRegisterUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnRegisterUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void UnRegisterUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
#if LANG_CXX11
void UnRegisterUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
#endif
void UnRegisterUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
void UnRegisterUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
::std::string* UnRegisterUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnRegisterUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnRegisterUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnRegisterUserRsp_USR::kStrUserIDFieldNumber;
const int UnRegisterUserRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnRegisterUserRsp_USR::UnRegisterUserRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UnRegisterUserRsp_USR)
}
UnRegisterUserRsp_USR::UnRegisterUserRsp_USR(const UnRegisterUserRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UnRegisterUserRsp_USR)
}

void UnRegisterUserRsp_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnRegisterUserRsp_USR::~UnRegisterUserRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UnRegisterUserRsp_USR)
  SharedDtor();
}

void UnRegisterUserRsp_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnRegisterUserRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnRegisterUserRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[53].descriptor;
}

const UnRegisterUserRsp_USR& UnRegisterUserRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnRegisterUserRsp_USR* UnRegisterUserRsp_USR::New(::google::protobuf::Arena* arena) const {
  UnRegisterUserRsp_USR* n = new UnRegisterUserRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnRegisterUserRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UnRegisterUserRsp_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UnRegisterUserRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UnRegisterUserRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnRegisterUserRsp_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnRegisterUserRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UnRegisterUserRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UnRegisterUserRsp_USR)
  return false;
#undef DO_
}

void UnRegisterUserRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UnRegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UnRegisterUserRsp_USR)
}

::google::protobuf::uint8* UnRegisterUserRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UnRegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UnRegisterUserRsp_USR)
  return target;
}

size_t UnRegisterUserRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UnRegisterUserRsp_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnRegisterUserRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UnRegisterUserRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnRegisterUserRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UnRegisterUserRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UnRegisterUserRsp_USR)
    MergeFrom(*source);
  }
}

void UnRegisterUserRsp_USR::MergeFrom(const UnRegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void UnRegisterUserRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnRegisterUserRsp_USR::CopyFrom(const UnRegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnRegisterUserRsp_USR::IsInitialized() const {
  return true;
}

void UnRegisterUserRsp_USR::Swap(UnRegisterUserRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnRegisterUserRsp_USR::InternalSwap(UnRegisterUserRsp_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnRegisterUserRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[53];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnRegisterUserRsp_USR

// string strUserID = 1;
void UnRegisterUserRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnRegisterUserRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
void UnRegisterUserRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
#if LANG_CXX11
void UnRegisterUserRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
#endif
void UnRegisterUserRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
void UnRegisterUserRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
::std::string* UnRegisterUserRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnRegisterUserRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnRegisterUserRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}

// string strValue = 2;
void UnRegisterUserRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnRegisterUserRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void UnRegisterUserRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
#if LANG_CXX11
void UnRegisterUserRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
#endif
void UnRegisterUserRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
void UnRegisterUserRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
::std::string* UnRegisterUserRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnRegisterUserRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnRegisterUserRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUsrInfoReq_USR::kStrUserIDFieldNumber;
const int QueryUsrInfoReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUsrInfoReq_USR::QueryUsrInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUsrInfoReq_USR)
}
QueryUsrInfoReq_USR::QueryUsrInfoReq_USR(const QueryUsrInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUsrInfoReq_USR)
}

void QueryUsrInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUsrInfoReq_USR::~QueryUsrInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUsrInfoReq_USR)
  SharedDtor();
}

void QueryUsrInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUsrInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUsrInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[54].descriptor;
}

const QueryUsrInfoReq_USR& QueryUsrInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUsrInfoReq_USR* QueryUsrInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryUsrInfoReq_USR* n = new QueryUsrInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUsrInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUsrInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryUsrInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUsrInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUsrInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUsrInfoReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUsrInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUsrInfoReq_USR)
  return false;
#undef DO_
}

void QueryUsrInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUsrInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUsrInfoReq_USR)
}

::google::protobuf::uint8* QueryUsrInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUsrInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUsrInfoReq_USR)
  return target;
}

size_t QueryUsrInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUsrInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUsrInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUsrInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUsrInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUsrInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUsrInfoReq_USR)
    MergeFrom(*source);
  }
}

void QueryUsrInfoReq_USR::MergeFrom(const QueryUsrInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryUsrInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUsrInfoReq_USR::CopyFrom(const QueryUsrInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUsrInfoReq_USR::IsInitialized() const {
  return true;
}

void QueryUsrInfoReq_USR::Swap(QueryUsrInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUsrInfoReq_USR::InternalSwap(QueryUsrInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUsrInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[54];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUsrInfoReq_USR

// string strUserID = 1;
void QueryUsrInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUsrInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryUsrInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
#if LANG_CXX11
void QueryUsrInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
#endif
void QueryUsrInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
void QueryUsrInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
::std::string* QueryUsrInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUsrInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUsrInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}

// string strValue = 2;
void QueryUsrInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUsrInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUsrInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
#if LANG_CXX11
void QueryUsrInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
#endif
void QueryUsrInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
void QueryUsrInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
::std::string* QueryUsrInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUsrInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUsrInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUsrInfoRsp_USR::kUserInfoFieldNumber;
const int QueryUsrInfoRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUsrInfoRsp_USR::QueryUsrInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUsrInfoRsp_USR)
}
QueryUsrInfoRsp_USR::QueryUsrInfoRsp_USR(const QueryUsrInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUsrInfoRsp_USR)
}

void QueryUsrInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

QueryUsrInfoRsp_USR::~QueryUsrInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUsrInfoRsp_USR)
  SharedDtor();
}

void QueryUsrInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void QueryUsrInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUsrInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[55].descriptor;
}

const QueryUsrInfoRsp_USR& QueryUsrInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUsrInfoRsp_USR* QueryUsrInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryUsrInfoRsp_USR* n = new QueryUsrInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUsrInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUsrInfoRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool QueryUsrInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUsrInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUsrInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUsrInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUsrInfoRsp_USR)
  return false;
#undef DO_
}

void QueryUsrInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUsrInfoRsp_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUsrInfoRsp_USR)
}

::google::protobuf::uint8* QueryUsrInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUsrInfoRsp_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUsrInfoRsp_USR)
  return target;
}

size_t QueryUsrInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUsrInfoRsp_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUsrInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUsrInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUsrInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUsrInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUsrInfoRsp_USR)
    MergeFrom(*source);
  }
}

void QueryUsrInfoRsp_USR::MergeFrom(const QueryUsrInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void QueryUsrInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUsrInfoRsp_USR::CopyFrom(const QueryUsrInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUsrInfoRsp_USR::IsInitialized() const {
  return true;
}

void QueryUsrInfoRsp_USR::Swap(QueryUsrInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUsrInfoRsp_USR::InternalSwap(QueryUsrInfoRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUsrInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[55];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUsrInfoRsp_USR

// .Interactive.Message.User userInfo = 1;
bool QueryUsrInfoRsp_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void QueryUsrInfoRsp_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& QueryUsrInfoRsp_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* QueryUsrInfoRsp_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* QueryUsrInfoRsp_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void QueryUsrInfoRsp_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
}

// string strValue = 2;
void QueryUsrInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUsrInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUsrInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
#if LANG_CXX11
void QueryUsrInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
#endif
void QueryUsrInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
void QueryUsrInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
::std::string* QueryUsrInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUsrInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUsrInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyUserInfoReq_USR::kStrOldPwdFieldNumber;
const int ModifyUserInfoReq_USR::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyUserInfoReq_USR::ModifyUserInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyUserInfoReq_USR)
}
ModifyUserInfoReq_USR::ModifyUserInfoReq_USR(const ModifyUserInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stroldpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stroldpwd().size() > 0) {
    stroldpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stroldpwd_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyUserInfoReq_USR)
}

void ModifyUserInfoReq_USR::SharedCtor() {
  stroldpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

ModifyUserInfoReq_USR::~ModifyUserInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyUserInfoReq_USR)
  SharedDtor();
}

void ModifyUserInfoReq_USR::SharedDtor() {
  stroldpwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void ModifyUserInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyUserInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[56].descriptor;
}

const ModifyUserInfoReq_USR& ModifyUserInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyUserInfoReq_USR* ModifyUserInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  ModifyUserInfoReq_USR* n = new ModifyUserInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyUserInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyUserInfoReq_USR)
  stroldpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool ModifyUserInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyUserInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strOldPwd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stroldpwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stroldpwd().data(), this->stroldpwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyUserInfoReq_USR.strOldPwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.User userInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyUserInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyUserInfoReq_USR)
  return false;
#undef DO_
}

void ModifyUserInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyUserInfoReq_USR)
  // string strOldPwd = 1;
  if (this->stroldpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stroldpwd().data(), this->stroldpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyUserInfoReq_USR.strOldPwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stroldpwd(), output);
  }

  // .Interactive.Message.User userInfo = 2;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyUserInfoReq_USR)
}

::google::protobuf::uint8* ModifyUserInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyUserInfoReq_USR)
  // string strOldPwd = 1;
  if (this->stroldpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stroldpwd().data(), this->stroldpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyUserInfoReq_USR.strOldPwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stroldpwd(), target);
  }

  // .Interactive.Message.User userInfo = 2;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->userinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyUserInfoReq_USR)
  return target;
}

size_t ModifyUserInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyUserInfoReq_USR)
  size_t total_size = 0;

  // string strOldPwd = 1;
  if (this->stroldpwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stroldpwd());
  }

  // .Interactive.Message.User userInfo = 2;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyUserInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyUserInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyUserInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyUserInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyUserInfoReq_USR)
    MergeFrom(*source);
  }
}

void ModifyUserInfoReq_USR::MergeFrom(const ModifyUserInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.stroldpwd().size() > 0) {

    stroldpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stroldpwd_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void ModifyUserInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyUserInfoReq_USR::CopyFrom(const ModifyUserInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyUserInfoReq_USR::IsInitialized() const {
  return true;
}

void ModifyUserInfoReq_USR::Swap(ModifyUserInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyUserInfoReq_USR::InternalSwap(ModifyUserInfoReq_USR* other) {
  stroldpwd_.Swap(&other->stroldpwd_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyUserInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[56];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyUserInfoReq_USR

// string strOldPwd = 1;
void ModifyUserInfoReq_USR::clear_stroldpwd() {
  stroldpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyUserInfoReq_USR::stroldpwd() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
  return stroldpwd_.GetNoArena();
}
void ModifyUserInfoReq_USR::set_stroldpwd(const ::std::string& value) {
  
  stroldpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
}
#if LANG_CXX11
void ModifyUserInfoReq_USR::set_stroldpwd(::std::string&& value) {
  
  stroldpwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
}
#endif
void ModifyUserInfoReq_USR::set_stroldpwd(const char* value) {
  
  stroldpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
}
void ModifyUserInfoReq_USR::set_stroldpwd(const char* value, size_t size) {
  
  stroldpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
}
::std::string* ModifyUserInfoReq_USR::mutable_stroldpwd() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
  return stroldpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyUserInfoReq_USR::release_stroldpwd() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
  
  return stroldpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyUserInfoReq_USR::set_allocated_stroldpwd(::std::string* stroldpwd) {
  if (stroldpwd != NULL) {
    
  } else {
    
  }
  stroldpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stroldpwd);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoReq_USR.strOldPwd)
}

// .Interactive.Message.User userInfo = 2;
bool ModifyUserInfoReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void ModifyUserInfoReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& ModifyUserInfoReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* ModifyUserInfoReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* ModifyUserInfoReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void ModifyUserInfoReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyUserInfoRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyUserInfoRsp_USR::ModifyUserInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyUserInfoRsp_USR)
}
ModifyUserInfoRsp_USR::ModifyUserInfoRsp_USR(const ModifyUserInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyUserInfoRsp_USR)
}

void ModifyUserInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyUserInfoRsp_USR::~ModifyUserInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyUserInfoRsp_USR)
  SharedDtor();
}

void ModifyUserInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyUserInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyUserInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[57].descriptor;
}

const ModifyUserInfoRsp_USR& ModifyUserInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyUserInfoRsp_USR* ModifyUserInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  ModifyUserInfoRsp_USR* n = new ModifyUserInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyUserInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyUserInfoRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyUserInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyUserInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyUserInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyUserInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyUserInfoRsp_USR)
  return false;
#undef DO_
}

void ModifyUserInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyUserInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyUserInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyUserInfoRsp_USR)
}

::google::protobuf::uint8* ModifyUserInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyUserInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyUserInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyUserInfoRsp_USR)
  return target;
}

size_t ModifyUserInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyUserInfoRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyUserInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyUserInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyUserInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyUserInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyUserInfoRsp_USR)
    MergeFrom(*source);
  }
}

void ModifyUserInfoRsp_USR::MergeFrom(const ModifyUserInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyUserInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyUserInfoRsp_USR::CopyFrom(const ModifyUserInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyUserInfoRsp_USR::IsInitialized() const {
  return true;
}

void ModifyUserInfoRsp_USR::Swap(ModifyUserInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyUserInfoRsp_USR::InternalSwap(ModifyUserInfoRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyUserInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[57];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyUserInfoRsp_USR

// string strValue = 1;
void ModifyUserInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyUserInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyUserInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
#if LANG_CXX11
void ModifyUserInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
#endif
void ModifyUserInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
void ModifyUserInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
::std::string* ModifyUserInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyUserInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyUserInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrievePwdReq_USR::kStrUserNameFieldNumber;
const int RetrievePwdReq_USR::kStrEmailFieldNumber;
const int RetrievePwdReq_USR::kUiTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrievePwdReq_USR::RetrievePwdReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RetrievePwdReq_USR)
}
RetrievePwdReq_USR::RetrievePwdReq_USR(const RetrievePwdReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  stremail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stremail().size() > 0) {
    stremail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stremail_);
  }
  uitype_ = from.uitype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RetrievePwdReq_USR)
}

void RetrievePwdReq_USR::SharedCtor() {
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stremail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uitype_ = 0u;
  _cached_size_ = 0;
}

RetrievePwdReq_USR::~RetrievePwdReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RetrievePwdReq_USR)
  SharedDtor();
}

void RetrievePwdReq_USR::SharedDtor() {
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stremail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RetrievePwdReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetrievePwdReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[58].descriptor;
}

const RetrievePwdReq_USR& RetrievePwdReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RetrievePwdReq_USR* RetrievePwdReq_USR::New(::google::protobuf::Arena* arena) const {
  RetrievePwdReq_USR* n = new RetrievePwdReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrievePwdReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RetrievePwdReq_USR)
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stremail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uitype_ = 0u;
}

bool RetrievePwdReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RetrievePwdReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RetrievePwdReq_USR.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEmail = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stremail().data(), this->stremail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RetrievePwdReq_USR.strEmail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RetrievePwdReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RetrievePwdReq_USR)
  return false;
#undef DO_
}

void RetrievePwdReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RetrievePwdReq_USR)
  // string strUserName = 1;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RetrievePwdReq_USR.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strusername(), output);
  }

  // string strEmail = 2;
  if (this->stremail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stremail().data(), this->stremail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RetrievePwdReq_USR.strEmail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stremail(), output);
  }

  // uint32 uiType = 3;
  if (this->uitype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uitype(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RetrievePwdReq_USR)
}

::google::protobuf::uint8* RetrievePwdReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RetrievePwdReq_USR)
  // string strUserName = 1;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RetrievePwdReq_USR.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strusername(), target);
  }

  // string strEmail = 2;
  if (this->stremail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stremail().data(), this->stremail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RetrievePwdReq_USR.strEmail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stremail(), target);
  }

  // uint32 uiType = 3;
  if (this->uitype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uitype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RetrievePwdReq_USR)
  return target;
}

size_t RetrievePwdReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RetrievePwdReq_USR)
  size_t total_size = 0;

  // string strUserName = 1;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strEmail = 2;
  if (this->stremail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stremail());
  }

  // uint32 uiType = 3;
  if (this->uitype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrievePwdReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RetrievePwdReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RetrievePwdReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetrievePwdReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RetrievePwdReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RetrievePwdReq_USR)
    MergeFrom(*source);
  }
}

void RetrievePwdReq_USR::MergeFrom(const RetrievePwdReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RetrievePwdReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.stremail().size() > 0) {

    stremail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stremail_);
  }
  if (from.uitype() != 0) {
    set_uitype(from.uitype());
  }
}

void RetrievePwdReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RetrievePwdReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrievePwdReq_USR::CopyFrom(const RetrievePwdReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RetrievePwdReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrievePwdReq_USR::IsInitialized() const {
  return true;
}

void RetrievePwdReq_USR::Swap(RetrievePwdReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrievePwdReq_USR::InternalSwap(RetrievePwdReq_USR* other) {
  strusername_.Swap(&other->strusername_);
  stremail_.Swap(&other->stremail_);
  std::swap(uitype_, other->uitype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetrievePwdReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[58];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrievePwdReq_USR

// string strUserName = 1;
void RetrievePwdReq_USR::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RetrievePwdReq_USR::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RetrievePwdReq_USR.strUserName)
  return strusername_.GetNoArena();
}
void RetrievePwdReq_USR::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RetrievePwdReq_USR.strUserName)
}
#if LANG_CXX11
void RetrievePwdReq_USR::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RetrievePwdReq_USR.strUserName)
}
#endif
void RetrievePwdReq_USR::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RetrievePwdReq_USR.strUserName)
}
void RetrievePwdReq_USR::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RetrievePwdReq_USR.strUserName)
}
::std::string* RetrievePwdReq_USR::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RetrievePwdReq_USR.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievePwdReq_USR::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RetrievePwdReq_USR.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievePwdReq_USR::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RetrievePwdReq_USR.strUserName)
}

// string strEmail = 2;
void RetrievePwdReq_USR::clear_stremail() {
  stremail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RetrievePwdReq_USR::stremail() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RetrievePwdReq_USR.strEmail)
  return stremail_.GetNoArena();
}
void RetrievePwdReq_USR::set_stremail(const ::std::string& value) {
  
  stremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RetrievePwdReq_USR.strEmail)
}
#if LANG_CXX11
void RetrievePwdReq_USR::set_stremail(::std::string&& value) {
  
  stremail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RetrievePwdReq_USR.strEmail)
}
#endif
void RetrievePwdReq_USR::set_stremail(const char* value) {
  
  stremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RetrievePwdReq_USR.strEmail)
}
void RetrievePwdReq_USR::set_stremail(const char* value, size_t size) {
  
  stremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RetrievePwdReq_USR.strEmail)
}
::std::string* RetrievePwdReq_USR::mutable_stremail() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RetrievePwdReq_USR.strEmail)
  return stremail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievePwdReq_USR::release_stremail() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RetrievePwdReq_USR.strEmail)
  
  return stremail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievePwdReq_USR::set_allocated_stremail(::std::string* stremail) {
  if (stremail != NULL) {
    
  } else {
    
  }
  stremail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stremail);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RetrievePwdReq_USR.strEmail)
}

// uint32 uiType = 3;
void RetrievePwdReq_USR::clear_uitype() {
  uitype_ = 0u;
}
::google::protobuf::uint32 RetrievePwdReq_USR::uitype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RetrievePwdReq_USR.uiType)
  return uitype_;
}
void RetrievePwdReq_USR::set_uitype(::google::protobuf::uint32 value) {
  
  uitype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.RetrievePwdReq_USR.uiType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrievePwdRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrievePwdRsp_USR::RetrievePwdRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RetrievePwdRsp_USR)
}
RetrievePwdRsp_USR::RetrievePwdRsp_USR(const RetrievePwdRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RetrievePwdRsp_USR)
}

void RetrievePwdRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RetrievePwdRsp_USR::~RetrievePwdRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RetrievePwdRsp_USR)
  SharedDtor();
}

void RetrievePwdRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RetrievePwdRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetrievePwdRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[59].descriptor;
}

const RetrievePwdRsp_USR& RetrievePwdRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RetrievePwdRsp_USR* RetrievePwdRsp_USR::New(::google::protobuf::Arena* arena) const {
  RetrievePwdRsp_USR* n = new RetrievePwdRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrievePwdRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RetrievePwdRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RetrievePwdRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RetrievePwdRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RetrievePwdRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RetrievePwdRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RetrievePwdRsp_USR)
  return false;
#undef DO_
}

void RetrievePwdRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RetrievePwdRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RetrievePwdRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RetrievePwdRsp_USR)
}

::google::protobuf::uint8* RetrievePwdRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RetrievePwdRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RetrievePwdRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RetrievePwdRsp_USR)
  return target;
}

size_t RetrievePwdRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RetrievePwdRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrievePwdRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RetrievePwdRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RetrievePwdRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetrievePwdRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RetrievePwdRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RetrievePwdRsp_USR)
    MergeFrom(*source);
  }
}

void RetrievePwdRsp_USR::MergeFrom(const RetrievePwdRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RetrievePwdRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void RetrievePwdRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RetrievePwdRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrievePwdRsp_USR::CopyFrom(const RetrievePwdRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RetrievePwdRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrievePwdRsp_USR::IsInitialized() const {
  return true;
}

void RetrievePwdRsp_USR::Swap(RetrievePwdRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrievePwdRsp_USR::InternalSwap(RetrievePwdRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetrievePwdRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[59];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrievePwdRsp_USR

// string strValue = 1;
void RetrievePwdRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RetrievePwdRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RetrievePwdRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void RetrievePwdRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RetrievePwdRsp_USR.strValue)
}
#if LANG_CXX11
void RetrievePwdRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RetrievePwdRsp_USR.strValue)
}
#endif
void RetrievePwdRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RetrievePwdRsp_USR.strValue)
}
void RetrievePwdRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RetrievePwdRsp_USR.strValue)
}
::std::string* RetrievePwdRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RetrievePwdRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievePwdRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RetrievePwdRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievePwdRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RetrievePwdRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq_USR::kUserInfoFieldNumber;
const int LoginReq_USR::kUiTerminalTypeFieldNumber;
const int LoginReq_USR::kStrValueFieldNumber;
const int LoginReq_USR::kUiTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq_USR::LoginReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginReq_USR)
}
LoginReq_USR::LoginReq_USR(const LoginReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  ::memcpy(&uiterminaltype_, &from.uiterminaltype_,
    reinterpret_cast<char*>(&uitype_) -
    reinterpret_cast<char*>(&uiterminaltype_) + sizeof(uitype_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginReq_USR)
}

void LoginReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userinfo_, 0, reinterpret_cast<char*>(&uitype_) -
    reinterpret_cast<char*>(&userinfo_) + sizeof(uitype_));
  _cached_size_ = 0;
}

LoginReq_USR::~LoginReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginReq_USR)
  SharedDtor();
}

void LoginReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void LoginReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[60].descriptor;
}

const LoginReq_USR& LoginReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq_USR* LoginReq_USR::New(::google::protobuf::Arena* arena) const {
  LoginReq_USR* n = new LoginReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
  ::memset(&uiterminaltype_, 0, reinterpret_cast<char*>(&uitype_) -
    reinterpret_cast<char*>(&uiterminaltype_) + sizeof(uitype_));
}

bool LoginReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiTerminalType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiterminaltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginReq_USR)
  return false;
#undef DO_
}

void LoginReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // uint32 uiTerminalType = 2;
  if (this->uiterminaltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiterminaltype(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // uint32 uiType = 4;
  if (this->uitype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uitype(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginReq_USR)
}

::google::protobuf::uint8* LoginReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // uint32 uiTerminalType = 2;
  if (this->uiterminaltype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiterminaltype(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // uint32 uiType = 4;
  if (this->uitype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uitype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginReq_USR)
  return target;
}

size_t LoginReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginReq_USR)
  size_t total_size = 0;

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  // uint32 uiTerminalType = 2;
  if (this->uiterminaltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiterminaltype());
  }

  // uint32 uiType = 4;
  if (this->uitype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginReq_USR)
    MergeFrom(*source);
  }
}

void LoginReq_USR::MergeFrom(const LoginReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
  if (from.uiterminaltype() != 0) {
    set_uiterminaltype(from.uiterminaltype());
  }
  if (from.uitype() != 0) {
    set_uitype(from.uitype());
  }
}

void LoginReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq_USR::CopyFrom(const LoginReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq_USR::IsInitialized() const {
  return true;
}

void LoginReq_USR::Swap(LoginReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq_USR::InternalSwap(LoginReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(uiterminaltype_, other->uiterminaltype_);
  std::swap(uitype_, other->uitype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[60];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq_USR

// .Interactive.Message.User userInfo = 1;
bool LoginReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void LoginReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& LoginReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* LoginReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* LoginReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void LoginReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_USR.userInfo)
}

// uint32 uiTerminalType = 2;
void LoginReq_USR::clear_uiterminaltype() {
  uiterminaltype_ = 0u;
}
::google::protobuf::uint32 LoginReq_USR::uiterminaltype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.uiTerminalType)
  return uiterminaltype_;
}
void LoginReq_USR::set_uiterminaltype(::google::protobuf::uint32 value) {
  
  uiterminaltype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_USR.uiTerminalType)
}

// string strValue = 3;
void LoginReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void LoginReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_USR.strValue)
}
#if LANG_CXX11
void LoginReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_USR.strValue)
}
#endif
void LoginReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_USR.strValue)
}
void LoginReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_USR.strValue)
}
::std::string* LoginReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_USR.strValue)
}

// uint32 uiType = 4;
void LoginReq_USR::clear_uitype() {
  uitype_ = 0u;
}
::google::protobuf::uint32 LoginReq_USR::uitype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.uiType)
  return uitype_;
}
void LoginReq_USR::set_uitype(::google::protobuf::uint32 value) {
  
  uitype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_USR.uiType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp_USR::kStrUserIDFieldNumber;
const int LoginRsp_USR::kRelationInfoFieldNumber;
const int LoginRsp_USR::kStrValueFieldNumber;
const int LoginRsp_USR::kStrDevNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp_USR::LoginRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginRsp_USR)
}
LoginRsp_USR::LoginRsp_USR(const LoginRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      relationinfo_(from.relationinfo_),
      strdevname_(from.strdevname_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginRsp_USR)
}

void LoginRsp_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRsp_USR::~LoginRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginRsp_USR)
  SharedDtor();
}

void LoginRsp_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[61].descriptor;
}

const LoginRsp_USR& LoginRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRsp_USR* LoginRsp_USR::New(::google::protobuf::Arena* arena) const {
  LoginRsp_USR* n = new LoginRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginRsp_USR)
  relationinfo_.Clear();
  strdevname_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.Relation relationInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_relationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strDevName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdevname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevname(this->strdevname_size() - 1).data(),
            this->strdevname(this->strdevname_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_USR.strDevName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginRsp_USR)
  return false;
#undef DO_
}

void LoginRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated .Interactive.Message.Relation relationInfo = 2;
  for (unsigned int i = 0, n = this->relationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->relationinfo(i), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // repeated string strDevName = 4;
  for (int i = 0; i < this->strdevname_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname(i).data(), this->strdevname(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strDevName");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strdevname(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginRsp_USR)
}

::google::protobuf::uint8* LoginRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated .Interactive.Message.Relation relationInfo = 2;
  for (unsigned int i = 0, n = this->relationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->relationinfo(i), false, target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // repeated string strDevName = 4;
  for (int i = 0; i < this->strdevname_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname(i).data(), this->strdevname(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strDevName");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->strdevname(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginRsp_USR)
  return target;
}

size_t LoginRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Relation relationInfo = 2;
  {
    unsigned int count = this->relationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->relationinfo(i));
    }
  }

  // repeated string strDevName = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdevname_size());
  for (int i = 0; i < this->strdevname_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdevname(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginRsp_USR)
    MergeFrom(*source);
  }
}

void LoginRsp_USR::MergeFrom(const LoginRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationinfo_.MergeFrom(from.relationinfo_);
  strdevname_.MergeFrom(from.strdevname_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp_USR::CopyFrom(const LoginRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp_USR::IsInitialized() const {
  return true;
}

void LoginRsp_USR::Swap(LoginRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp_USR::InternalSwap(LoginRsp_USR* other) {
  relationinfo_.UnsafeArenaSwap(&other->relationinfo_);
  strdevname_.UnsafeArenaSwap(&other->strdevname_);
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[61];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp_USR

// string strUserID = 1;
void LoginRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
void LoginRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strUserID)
}
#if LANG_CXX11
void LoginRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_USR.strUserID)
}
#endif
void LoginRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strUserID)
}
void LoginRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strUserID)
}
::std::string* LoginRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_USR.strUserID)
}

// repeated .Interactive.Message.Relation relationInfo = 2;
int LoginRsp_USR::relationinfo_size() const {
  return relationinfo_.size();
}
void LoginRsp_USR::clear_relationinfo() {
  relationinfo_.Clear();
}
const ::Interactive::Message::Relation& LoginRsp_USR::relationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Get(index);
}
::Interactive::Message::Relation* LoginRsp_USR::mutable_relationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Mutable(index);
}
::Interactive::Message::Relation* LoginRsp_USR::add_relationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
LoginRsp_USR::mutable_relationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.LoginRsp_USR.relationInfo)
  return &relationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
LoginRsp_USR::relationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_;
}

// string strValue = 3;
void LoginRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void LoginRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strValue)
}
#if LANG_CXX11
void LoginRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_USR.strValue)
}
#endif
void LoginRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strValue)
}
void LoginRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strValue)
}
::std::string* LoginRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_USR.strValue)
}

// repeated string strDevName = 4;
int LoginRsp_USR::strdevname_size() const {
  return strdevname_.size();
}
void LoginRsp_USR::clear_strdevname() {
  strdevname_.Clear();
}
const ::std::string& LoginRsp_USR::strdevname(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strDevName)
  return strdevname_.Get(index);
}
::std::string* LoginRsp_USR::mutable_strdevname(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strDevName)
  return strdevname_.Mutable(index);
}
void LoginRsp_USR::set_strdevname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strDevName)
  strdevname_.Mutable(index)->assign(value);
}
void LoginRsp_USR::set_strdevname(int index, const char* value) {
  strdevname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strDevName)
}
void LoginRsp_USR::set_strdevname(int index, const char* value, size_t size) {
  strdevname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strDevName)
}
::std::string* LoginRsp_USR::add_strdevname() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.LoginRsp_USR.strDevName)
  return strdevname_.Add();
}
void LoginRsp_USR::add_strdevname(const ::std::string& value) {
  strdevname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.LoginRsp_USR.strDevName)
}
void LoginRsp_USR::add_strdevname(const char* value) {
  strdevname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.LoginRsp_USR.strDevName)
}
void LoginRsp_USR::add_strdevname(const char* value, size_t size) {
  strdevname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.LoginRsp_USR.strDevName)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
LoginRsp_USR::strdevname() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.LoginRsp_USR.strDevName)
  return strdevname_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
LoginRsp_USR::mutable_strdevname() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.LoginRsp_USR.strDevName)
  return &strdevname_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq_USR::kUserInfoFieldNumber;
const int LogoutReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq_USR::LogoutReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutReq_USR)
}
LogoutReq_USR::LogoutReq_USR(const LogoutReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutReq_USR)
}

void LogoutReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

LogoutReq_USR::~LogoutReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutReq_USR)
  SharedDtor();
}

void LogoutReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void LogoutReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[62].descriptor;
}

const LogoutReq_USR& LogoutReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq_USR* LogoutReq_USR::New(::google::protobuf::Arena* arena) const {
  LogoutReq_USR* n = new LogoutReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool LogoutReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutReq_USR)
  return false;
#undef DO_
}

void LogoutReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutReq_USR)
}

::google::protobuf::uint8* LogoutReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutReq_USR)
  return target;
}

size_t LogoutReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutReq_USR)
    MergeFrom(*source);
  }
}

void LogoutReq_USR::MergeFrom(const LogoutReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void LogoutReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq_USR::CopyFrom(const LogoutReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq_USR::IsInitialized() const {
  return true;
}

void LogoutReq_USR::Swap(LogoutReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq_USR::InternalSwap(LogoutReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[62];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq_USR

// .Interactive.Message.User userInfo = 1;
bool LogoutReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void LogoutReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& LogoutReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* LogoutReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* LogoutReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void LogoutReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_USR.userInfo)
}

// string strValue = 2;
void LogoutReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void LogoutReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_USR.strValue)
}
#if LANG_CXX11
void LogoutReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_USR.strValue)
}
#endif
void LogoutReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_USR.strValue)
}
void LogoutReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_USR.strValue)
}
::std::string* LogoutReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRsp_USR::LogoutRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutRsp_USR)
}
LogoutRsp_USR::LogoutRsp_USR(const LogoutRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutRsp_USR)
}

void LogoutRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutRsp_USR::~LogoutRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutRsp_USR)
  SharedDtor();
}

void LogoutRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[63].descriptor;
}

const LogoutRsp_USR& LogoutRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutRsp_USR* LogoutRsp_USR::New(::google::protobuf::Arena* arena) const {
  LogoutRsp_USR* n = new LogoutRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogoutRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutRsp_USR)
  return false;
#undef DO_
}

void LogoutRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutRsp_USR)
}

::google::protobuf::uint8* LogoutRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutRsp_USR)
  return target;
}

size_t LogoutRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutRsp_USR)
    MergeFrom(*source);
  }
}

void LogoutRsp_USR::MergeFrom(const LogoutRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LogoutRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRsp_USR::CopyFrom(const LogoutRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRsp_USR::IsInitialized() const {
  return true;
}

void LogoutRsp_USR::Swap(LogoutRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRsp_USR::InternalSwap(LogoutRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[63];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutRsp_USR

// string strValue = 1;
void LogoutRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void LogoutRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutRsp_USR.strValue)
}
#if LANG_CXX11
void LogoutRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutRsp_USR.strValue)
}
#endif
void LogoutRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutRsp_USR.strValue)
}
void LogoutRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutRsp_USR.strValue)
}
::std::string* LogoutRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandReq_USR::kStrUserIDFieldNumber;
const int ShakehandReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandReq_USR::ShakehandReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandReq_USR)
}
ShakehandReq_USR::ShakehandReq_USR(const ShakehandReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandReq_USR)
}

void ShakehandReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandReq_USR::~ShakehandReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandReq_USR)
  SharedDtor();
}

void ShakehandReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[64].descriptor;
}

const ShakehandReq_USR& ShakehandReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandReq_USR* ShakehandReq_USR::New(::google::protobuf::Arena* arena) const {
  ShakehandReq_USR* n = new ShakehandReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandReq_USR)
  return false;
#undef DO_
}

void ShakehandReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandReq_USR)
}

::google::protobuf::uint8* ShakehandReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandReq_USR)
  return target;
}

size_t ShakehandReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandReq_USR)
    MergeFrom(*source);
  }
}

void ShakehandReq_USR::MergeFrom(const ShakehandReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandReq_USR::CopyFrom(const ShakehandReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandReq_USR::IsInitialized() const {
  return true;
}

void ShakehandReq_USR::Swap(ShakehandReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandReq_USR::InternalSwap(ShakehandReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[64];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandReq_USR

// string strUserID = 1;
void ShakehandReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ShakehandReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_USR.strUserID)
}
#if LANG_CXX11
void ShakehandReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_USR.strUserID)
}
#endif
void ShakehandReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_USR.strUserID)
}
void ShakehandReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_USR.strUserID)
}
::std::string* ShakehandReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_USR.strUserID)
}

// string strValue = 2;
void ShakehandReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_USR.strValue)
}
#if LANG_CXX11
void ShakehandReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_USR.strValue)
}
#endif
void ShakehandReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_USR.strValue)
}
void ShakehandReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_USR.strValue)
}
::std::string* ShakehandReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandRsp_USR::ShakehandRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandRsp_USR)
}
ShakehandRsp_USR::ShakehandRsp_USR(const ShakehandRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandRsp_USR)
}

void ShakehandRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandRsp_USR::~ShakehandRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandRsp_USR)
  SharedDtor();
}

void ShakehandRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[65].descriptor;
}

const ShakehandRsp_USR& ShakehandRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandRsp_USR* ShakehandRsp_USR::New(::google::protobuf::Arena* arena) const {
  ShakehandRsp_USR* n = new ShakehandRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandRsp_USR)
  return false;
#undef DO_
}

void ShakehandRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandRsp_USR)
}

::google::protobuf::uint8* ShakehandRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandRsp_USR)
  return target;
}

size_t ShakehandRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandRsp_USR)
    MergeFrom(*source);
  }
}

void ShakehandRsp_USR::MergeFrom(const ShakehandRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandRsp_USR::CopyFrom(const ShakehandRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandRsp_USR::IsInitialized() const {
  return true;
}

void ShakehandRsp_USR::Swap(ShakehandRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandRsp_USR::InternalSwap(ShakehandRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[65];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandRsp_USR

// string strValue = 1;
void ShakehandRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandRsp_USR.strValue)
}
#if LANG_CXX11
void ShakehandRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandRsp_USR.strValue)
}
#endif
void ShakehandRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandRsp_USR.strValue)
}
void ShakehandRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandRsp_USR.strValue)
}
::std::string* ShakehandRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoReq_USR::kStrUserIDFieldNumber;
const int ConfigInfoReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoReq_USR::ConfigInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoReq_USR)
}
ConfigInfoReq_USR::ConfigInfoReq_USR(const ConfigInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoReq_USR)
}

void ConfigInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoReq_USR::~ConfigInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoReq_USR)
  SharedDtor();
}

void ConfigInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[66].descriptor;
}

const ConfigInfoReq_USR& ConfigInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoReq_USR* ConfigInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  ConfigInfoReq_USR* n = new ConfigInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoReq_USR)
  return false;
#undef DO_
}

void ConfigInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoReq_USR)
}

::google::protobuf::uint8* ConfigInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoReq_USR)
  return target;
}

size_t ConfigInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoReq_USR)
    MergeFrom(*source);
  }
}

void ConfigInfoReq_USR::MergeFrom(const ConfigInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoReq_USR::CopyFrom(const ConfigInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoReq_USR::IsInitialized() const {
  return true;
}

void ConfigInfoReq_USR::Swap(ConfigInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoReq_USR::InternalSwap(ConfigInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[66];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoReq_USR

// string strUserID = 1;
void ConfigInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ConfigInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
#if LANG_CXX11
void ConfigInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
#endif
void ConfigInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
void ConfigInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
::std::string* ConfigInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_USR.strUserID)
}

// string strValue = 2;
void ConfigInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_USR.strValue)
}
#if LANG_CXX11
void ConfigInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_USR.strValue)
}
#endif
void ConfigInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_USR.strValue)
}
void ConfigInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_USR.strValue)
}
::std::string* ConfigInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoRsp_USR::kStrValueFieldNumber;
const int ConfigInfoRsp_USR::kStrItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoRsp_USR::ConfigInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoRsp_USR)
}
ConfigInfoRsp_USR::ConfigInfoRsp_USR(const ConfigInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stritems_(from.stritems_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoRsp_USR)
}

void ConfigInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoRsp_USR::~ConfigInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoRsp_USR)
  SharedDtor();
}

void ConfigInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[67].descriptor;
}

const ConfigInfoRsp_USR& ConfigInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoRsp_USR* ConfigInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  ConfigInfoRsp_USR* n = new ConfigInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoRsp_USR)
  stritems_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strItems = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stritems()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stritems(this->stritems_size() - 1).data(),
            this->stritems(this->stritems_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_USR.strItems"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoRsp_USR)
  return false;
#undef DO_
}

void ConfigInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strItems = 2;
  for (int i = 0; i < this->stritems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stritems(i).data(), this->stritems(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strItems");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stritems(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoRsp_USR)
}

::google::protobuf::uint8* ConfigInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strItems = 2;
  for (int i = 0; i < this->stritems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stritems(i).data(), this->stritems(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strItems");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stritems(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoRsp_USR)
  return target;
}

size_t ConfigInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoRsp_USR)
  size_t total_size = 0;

  // repeated string strItems = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stritems_size());
  for (int i = 0; i < this->stritems_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stritems(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoRsp_USR)
    MergeFrom(*source);
  }
}

void ConfigInfoRsp_USR::MergeFrom(const ConfigInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stritems_.MergeFrom(from.stritems_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoRsp_USR::CopyFrom(const ConfigInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoRsp_USR::IsInitialized() const {
  return true;
}

void ConfigInfoRsp_USR::Swap(ConfigInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoRsp_USR::InternalSwap(ConfigInfoRsp_USR* other) {
  stritems_.UnsafeArenaSwap(&other->stritems_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[67];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoRsp_USR

// string strValue = 1;
void ConfigInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
#if LANG_CXX11
void ConfigInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
#endif
void ConfigInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
void ConfigInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
::std::string* ConfigInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_USR.strValue)
}

// repeated string strItems = 2;
int ConfigInfoRsp_USR::stritems_size() const {
  return stritems_.size();
}
void ConfigInfoRsp_USR::clear_stritems() {
  stritems_.Clear();
}
const ::std::string& ConfigInfoRsp_USR::stritems(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Get(index);
}
::std::string* ConfigInfoRsp_USR::mutable_stritems(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Mutable(index);
}
void ConfigInfoRsp_USR::set_stritems(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_USR.strItems)
  stritems_.Mutable(index)->assign(value);
}
void ConfigInfoRsp_USR::set_stritems(int index, const char* value) {
  stritems_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
void ConfigInfoRsp_USR::set_stritems(int index, const char* value, size_t size) {
  stritems_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
::std::string* ConfigInfoRsp_USR::add_stritems() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Add();
}
void ConfigInfoRsp_USR::add_stritems(const ::std::string& value) {
  stritems_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
void ConfigInfoRsp_USR::add_stritems(const char* value) {
  stritems_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
void ConfigInfoRsp_USR::add_stritems(const char* value, size_t size) {
  stritems_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigInfoRsp_USR::stritems() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigInfoRsp_USR::mutable_stritems() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return &stritems_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDevReq_USR::kStrUserIDFieldNumber;
const int AddDevReq_USR::kDevInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDevReq_USR::AddDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddDevReq_USR)
}
AddDevReq_USR::AddDevReq_USR(const AddDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    devinfo_ = new ::Interactive::Message::Device(*from.devinfo_);
  } else {
    devinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddDevReq_USR)
}

void AddDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_ = NULL;
  _cached_size_ = 0;
}

AddDevReq_USR::~AddDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddDevReq_USR)
  SharedDtor();
}

void AddDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete devinfo_;
  }
}

void AddDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[68].descriptor;
}

const AddDevReq_USR& AddDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDevReq_USR* AddDevReq_USR::New(::google::protobuf::Arena* arena) const {
  AddDevReq_USR* n = new AddDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddDevReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) {
    delete devinfo_;
  }
  devinfo_ = NULL;
}

bool AddDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Device devInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddDevReq_USR)
  return false;
#undef DO_
}

void AddDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->devinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddDevReq_USR)
}

::google::protobuf::uint8* AddDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->devinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddDevReq_USR)
  return target;
}

size_t AddDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddDevReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddDevReq_USR)
    MergeFrom(*source);
  }
}

void AddDevReq_USR::MergeFrom(const AddDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    mutable_devinfo()->::Interactive::Message::Device::MergeFrom(from.devinfo());
  }
}

void AddDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDevReq_USR::CopyFrom(const AddDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDevReq_USR::IsInitialized() const {
  return true;
}

void AddDevReq_USR::Swap(AddDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDevReq_USR::InternalSwap(AddDevReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(devinfo_, other->devinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[68];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDevReq_USR

// string strUserID = 1;
void AddDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void AddDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevReq_USR.strUserID)
}
#if LANG_CXX11
void AddDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevReq_USR.strUserID)
}
#endif
void AddDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevReq_USR.strUserID)
}
void AddDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevReq_USR.strUserID)
}
::std::string* AddDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevReq_USR.strUserID)
}

// .Interactive.Message.Device devInfo = 2;
bool AddDevReq_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
void AddDevReq_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
const ::Interactive::Message::Device& AddDevReq_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevReq_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* AddDevReq_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevReq_USR.devInfo)
  return devinfo_;
}
::Interactive::Message::Device* AddDevReq_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevReq_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
void AddDevReq_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevReq_USR.devInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDevRsp_USR::kStrDeviceIDFieldNumber;
const int AddDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDevRsp_USR::AddDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddDevRsp_USR)
}
AddDevRsp_USR::AddDevRsp_USR(const AddDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddDevRsp_USR)
}

void AddDevRsp_USR::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddDevRsp_USR::~AddDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddDevRsp_USR)
  SharedDtor();
}

void AddDevRsp_USR::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[69].descriptor;
}

const AddDevRsp_USR& AddDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDevRsp_USR* AddDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  AddDevRsp_USR* n = new AddDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddDevRsp_USR)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddDevRsp_USR.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddDevRsp_USR)
  return false;
#undef DO_
}

void AddDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddDevRsp_USR)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevRsp_USR.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddDevRsp_USR)
}

::google::protobuf::uint8* AddDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddDevRsp_USR)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevRsp_USR.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddDevRsp_USR)
  return target;
}

size_t AddDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddDevRsp_USR)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddDevRsp_USR)
    MergeFrom(*source);
  }
}

void AddDevRsp_USR::MergeFrom(const AddDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDevRsp_USR::CopyFrom(const AddDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDevRsp_USR::IsInitialized() const {
  return true;
}

void AddDevRsp_USR::Swap(AddDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDevRsp_USR::InternalSwap(AddDevRsp_USR* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[69];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDevRsp_USR

// string strDeviceID = 1;
void AddDevRsp_USR::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDevRsp_USR::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevRsp_USR.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void AddDevRsp_USR::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevRsp_USR.strDeviceID)
}
#if LANG_CXX11
void AddDevRsp_USR::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevRsp_USR.strDeviceID)
}
#endif
void AddDevRsp_USR::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevRsp_USR.strDeviceID)
}
void AddDevRsp_USR::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevRsp_USR.strDeviceID)
}
::std::string* AddDevRsp_USR::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevRsp_USR.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDevRsp_USR::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevRsp_USR.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDevRsp_USR::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevRsp_USR.strDeviceID)
}

// string strValue = 2;
void AddDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void AddDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevRsp_USR.strValue)
}
#if LANG_CXX11
void AddDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevRsp_USR.strValue)
}
#endif
void AddDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevRsp_USR.strValue)
}
void AddDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevRsp_USR.strValue)
}
::std::string* AddDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelDevReq_USR::kStrUserIDFieldNumber;
const int DelDevReq_USR::kStrDevIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelDevReq_USR::DelDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelDevReq_USR)
}
DelDevReq_USR::DelDevReq_USR(const DelDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strdevid_(from.strdevid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelDevReq_USR)
}

void DelDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelDevReq_USR::~DelDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelDevReq_USR)
  SharedDtor();
}

void DelDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[70].descriptor;
}

const DelDevReq_USR& DelDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelDevReq_USR* DelDevReq_USR::New(::google::protobuf::Arena* arena) const {
  DelDevReq_USR* n = new DelDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelDevReq_USR)
  strdevid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid(this->strdevid_size() - 1).data(),
            this->strdevid(this->strdevid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelDevReq_USR)
  return false;
#undef DO_
}

void DelDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strDevID = 2;
  for (int i = 0; i < this->strdevid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid(i).data(), this->strdevid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strdevid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelDevReq_USR)
}

::google::protobuf::uint8* DelDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strDevID = 2;
  for (int i = 0; i < this->strdevid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid(i).data(), this->strdevid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strDevID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strdevid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelDevReq_USR)
  return target;
}

size_t DelDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelDevReq_USR)
  size_t total_size = 0;

  // repeated string strDevID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdevid_size());
  for (int i = 0; i < this->strdevid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdevid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelDevReq_USR)
    MergeFrom(*source);
  }
}

void DelDevReq_USR::MergeFrom(const DelDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.MergeFrom(from.strdevid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DelDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelDevReq_USR::CopyFrom(const DelDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelDevReq_USR::IsInitialized() const {
  return true;
}

void DelDevReq_USR::Swap(DelDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelDevReq_USR::InternalSwap(DelDevReq_USR* other) {
  strdevid_.UnsafeArenaSwap(&other->strdevid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[70];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelDevReq_USR

// string strUserID = 1;
void DelDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DelDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevReq_USR.strUserID)
}
#if LANG_CXX11
void DelDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelDevReq_USR.strUserID)
}
#endif
void DelDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevReq_USR.strUserID)
}
void DelDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevReq_USR.strUserID)
}
::std::string* DelDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelDevReq_USR.strUserID)
}

// repeated string strDevID = 2;
int DelDevReq_USR::strdevid_size() const {
  return strdevid_.size();
}
void DelDevReq_USR::clear_strdevid() {
  strdevid_.Clear();
}
const ::std::string& DelDevReq_USR::strdevid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Get(index);
}
::std::string* DelDevReq_USR::mutable_strdevid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Mutable(index);
}
void DelDevReq_USR::set_strdevid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevReq_USR.strDevID)
  strdevid_.Mutable(index)->assign(value);
}
void DelDevReq_USR::set_strdevid(int index, const char* value) {
  strdevid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevReq_USR.strDevID)
}
void DelDevReq_USR::set_strdevid(int index, const char* value, size_t size) {
  strdevid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevReq_USR.strDevID)
}
::std::string* DelDevReq_USR::add_strdevid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Add();
}
void DelDevReq_USR::add_strdevid(const ::std::string& value) {
  strdevid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelDevReq_USR.strDevID)
}
void DelDevReq_USR::add_strdevid(const char* value) {
  strdevid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelDevReq_USR.strDevID)
}
void DelDevReq_USR::add_strdevid(const char* value, size_t size) {
  strdevid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelDevReq_USR.strDevID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelDevReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelDevReq_USR::mutable_strdevid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelDevReq_USR.strDevID)
  return &strdevid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelDevRsp_USR::kStrValueFieldNumber;
const int DelDevRsp_USR::kStrDevIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelDevRsp_USR::DelDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelDevRsp_USR)
}
DelDevRsp_USR::DelDevRsp_USR(const DelDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strdevidfailed_(from.strdevidfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelDevRsp_USR)
}

void DelDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelDevRsp_USR::~DelDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelDevRsp_USR)
  SharedDtor();
}

void DelDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[71].descriptor;
}

const DelDevRsp_USR& DelDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelDevRsp_USR* DelDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  DelDevRsp_USR* n = new DelDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelDevRsp_USR)
  strdevidfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strDevIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdevidfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevidfailed(this->strdevidfailed_size() - 1).data(),
            this->strdevidfailed(this->strdevidfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevRsp_USR.strDevIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelDevRsp_USR)
  return false;
#undef DO_
}

void DelDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strDevIDFailed = 2;
  for (int i = 0; i < this->strdevidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevidfailed(i).data(), this->strdevidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strDevIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strdevidfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelDevRsp_USR)
}

::google::protobuf::uint8* DelDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strDevIDFailed = 2;
  for (int i = 0; i < this->strdevidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevidfailed(i).data(), this->strdevidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strDevIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strdevidfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelDevRsp_USR)
  return target;
}

size_t DelDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelDevRsp_USR)
  size_t total_size = 0;

  // repeated string strDevIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdevidfailed_size());
  for (int i = 0; i < this->strdevidfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdevidfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelDevRsp_USR)
    MergeFrom(*source);
  }
}

void DelDevRsp_USR::MergeFrom(const DelDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevidfailed_.MergeFrom(from.strdevidfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DelDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelDevRsp_USR::CopyFrom(const DelDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelDevRsp_USR::IsInitialized() const {
  return true;
}

void DelDevRsp_USR::Swap(DelDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelDevRsp_USR::InternalSwap(DelDevRsp_USR* other) {
  strdevidfailed_.UnsafeArenaSwap(&other->strdevidfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[71];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelDevRsp_USR

// string strValue = 1;
void DelDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DelDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevRsp_USR.strValue)
}
#if LANG_CXX11
void DelDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelDevRsp_USR.strValue)
}
#endif
void DelDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevRsp_USR.strValue)
}
void DelDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevRsp_USR.strValue)
}
::std::string* DelDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelDevRsp_USR.strValue)
}

// repeated string strDevIDFailed = 2;
int DelDevRsp_USR::strdevidfailed_size() const {
  return strdevidfailed_.size();
}
void DelDevRsp_USR::clear_strdevidfailed() {
  strdevidfailed_.Clear();
}
const ::std::string& DelDevRsp_USR::strdevidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Get(index);
}
::std::string* DelDevRsp_USR::mutable_strdevidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Mutable(index);
}
void DelDevRsp_USR::set_strdevidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  strdevidfailed_.Mutable(index)->assign(value);
}
void DelDevRsp_USR::set_strdevidfailed(int index, const char* value) {
  strdevidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
void DelDevRsp_USR::set_strdevidfailed(int index, const char* value, size_t size) {
  strdevidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
::std::string* DelDevRsp_USR::add_strdevidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Add();
}
void DelDevRsp_USR::add_strdevidfailed(const ::std::string& value) {
  strdevidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
void DelDevRsp_USR::add_strdevidfailed(const char* value) {
  strdevidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
void DelDevRsp_USR::add_strdevidfailed(const char* value, size_t size) {
  strdevidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelDevRsp_USR::strdevidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelDevRsp_USR::mutable_strdevidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return &strdevidfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDevReq_USR::kStrUserIDFieldNumber;
const int ModifyDevReq_USR::kDevInfoFieldNumber;
const int ModifyDevReq_USR::kUiDeviceSharedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDevReq_USR::ModifyDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDevReq_USR)
}
ModifyDevReq_USR::ModifyDevReq_USR(const ModifyDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    devinfo_ = new ::Interactive::Message::Device(*from.devinfo_);
  } else {
    devinfo_ = NULL;
  }
  uideviceshared_ = from.uideviceshared_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDevReq_USR)
}

void ModifyDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&devinfo_, 0, reinterpret_cast<char*>(&uideviceshared_) -
    reinterpret_cast<char*>(&devinfo_) + sizeof(uideviceshared_));
  _cached_size_ = 0;
}

ModifyDevReq_USR::~ModifyDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDevReq_USR)
  SharedDtor();
}

void ModifyDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete devinfo_;
  }
}

void ModifyDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[72].descriptor;
}

const ModifyDevReq_USR& ModifyDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDevReq_USR* ModifyDevReq_USR::New(::google::protobuf::Arena* arena) const {
  ModifyDevReq_USR* n = new ModifyDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDevReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) {
    delete devinfo_;
  }
  devinfo_ = NULL;
  uideviceshared_ = 0u;
}

bool ModifyDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Device devInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceShared = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uideviceshared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDevReq_USR)
  return false;
#undef DO_
}

void ModifyDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->devinfo_, output);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uideviceshared(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDevReq_USR)
}

::google::protobuf::uint8* ModifyDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->devinfo_, false, target);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uideviceshared(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDevReq_USR)
  return target;
}

size_t ModifyDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDevReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devinfo_);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uideviceshared());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDevReq_USR)
    MergeFrom(*source);
  }
}

void ModifyDevReq_USR::MergeFrom(const ModifyDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    mutable_devinfo()->::Interactive::Message::Device::MergeFrom(from.devinfo());
  }
  if (from.uideviceshared() != 0) {
    set_uideviceshared(from.uideviceshared());
  }
}

void ModifyDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDevReq_USR::CopyFrom(const ModifyDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDevReq_USR::IsInitialized() const {
  return true;
}

void ModifyDevReq_USR::Swap(ModifyDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDevReq_USR::InternalSwap(ModifyDevReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(devinfo_, other->devinfo_);
  std::swap(uideviceshared_, other->uideviceshared_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[72];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDevReq_USR

// string strUserID = 1;
void ModifyDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ModifyDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevReq_USR.strUserID)
}
#if LANG_CXX11
void ModifyDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevReq_USR.strUserID)
}
#endif
void ModifyDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevReq_USR.strUserID)
}
void ModifyDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevReq_USR.strUserID)
}
::std::string* ModifyDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevReq_USR.strUserID)
}

// .Interactive.Message.Device devInfo = 2;
bool ModifyDevReq_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
void ModifyDevReq_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
const ::Interactive::Message::Device& ModifyDevReq_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* ModifyDevReq_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevReq_USR.devInfo)
  return devinfo_;
}
::Interactive::Message::Device* ModifyDevReq_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevReq_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
void ModifyDevReq_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevReq_USR.devInfo)
}

// uint32 uiDeviceShared = 3;
void ModifyDevReq_USR::clear_uideviceshared() {
  uideviceshared_ = 0u;
}
::google::protobuf::uint32 ModifyDevReq_USR::uideviceshared() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.uiDeviceShared)
  return uideviceshared_;
}
void ModifyDevReq_USR::set_uideviceshared(::google::protobuf::uint32 value) {
  
  uideviceshared_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevReq_USR.uiDeviceShared)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDevRsp_USR::ModifyDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDevRsp_USR)
}
ModifyDevRsp_USR::ModifyDevRsp_USR(const ModifyDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDevRsp_USR)
}

void ModifyDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyDevRsp_USR::~ModifyDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDevRsp_USR)
  SharedDtor();
}

void ModifyDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[73].descriptor;
}

const ModifyDevRsp_USR& ModifyDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDevRsp_USR* ModifyDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  ModifyDevRsp_USR* n = new ModifyDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDevRsp_USR)
  return false;
#undef DO_
}

void ModifyDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDevRsp_USR)
}

::google::protobuf::uint8* ModifyDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDevRsp_USR)
  return target;
}

size_t ModifyDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDevRsp_USR)
    MergeFrom(*source);
  }
}

void ModifyDevRsp_USR::MergeFrom(const ModifyDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDevRsp_USR::CopyFrom(const ModifyDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDevRsp_USR::IsInitialized() const {
  return true;
}

void ModifyDevRsp_USR::Swap(ModifyDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDevRsp_USR::InternalSwap(ModifyDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[73];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDevRsp_USR

// string strValue = 1;
void ModifyDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevRsp_USR.strValue)
}
#if LANG_CXX11
void ModifyDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevRsp_USR.strValue)
}
#endif
void ModifyDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevRsp_USR.strValue)
}
void ModifyDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevRsp_USR.strValue)
}
::std::string* ModifyDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevInfoReq_USR::kStrUserIDFieldNumber;
const int QueryDevInfoReq_USR::kStrDevIDFieldNumber;
const int QueryDevInfoReq_USR::kUiDeviceSharedFieldNumber;
const int QueryDevInfoReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevInfoReq_USR::QueryDevInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevInfoReq_USR)
}
QueryDevInfoReq_USR::QueryDevInfoReq_USR(const QueryDevInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uideviceshared_ = from.uideviceshared_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevInfoReq_USR)
}

void QueryDevInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uideviceshared_ = 0u;
  _cached_size_ = 0;
}

QueryDevInfoReq_USR::~QueryDevInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevInfoReq_USR)
  SharedDtor();
}

void QueryDevInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDevInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[74].descriptor;
}

const QueryDevInfoReq_USR& QueryDevInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevInfoReq_USR* QueryDevInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevInfoReq_USR* n = new QueryDevInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uideviceshared_ = 0u;
}

bool QueryDevInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceShared = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uideviceshared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevInfoReq_USR)
  return false;
#undef DO_
}

void QueryDevInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevid(), output);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uideviceshared(), output);
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevInfoReq_USR)
}

::google::protobuf::uint8* QueryDevInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevid(), target);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uideviceshared(), target);
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevInfoReq_USR)
  return target;
}

size_t QueryDevInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uideviceshared());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevInfoReq_USR)
    MergeFrom(*source);
  }
}

void QueryDevInfoReq_USR::MergeFrom(const QueryDevInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uideviceshared() != 0) {
    set_uideviceshared(from.uideviceshared());
  }
}

void QueryDevInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevInfoReq_USR::CopyFrom(const QueryDevInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevInfoReq_USR::IsInitialized() const {
  return true;
}

void QueryDevInfoReq_USR::Swap(QueryDevInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevInfoReq_USR::InternalSwap(QueryDevInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uideviceshared_, other->uideviceshared_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[74];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevInfoReq_USR

// string strUserID = 1;
void QueryDevInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryDevInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strUserID)
}
#if LANG_CXX11
void QueryDevInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strUserID)
}
#endif
void QueryDevInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strUserID)
}
void QueryDevInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strUserID)
}
::std::string* QueryDevInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strUserID)
}

// string strDevID = 2;
void QueryDevInfoReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void QueryDevInfoReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
#if LANG_CXX11
void QueryDevInfoReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
#endif
void QueryDevInfoReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
void QueryDevInfoReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
::std::string* QueryDevInfoReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}

// uint32 uiDeviceShared = 3;
void QueryDevInfoReq_USR::clear_uideviceshared() {
  uideviceshared_ = 0u;
}
::google::protobuf::uint32 QueryDevInfoReq_USR::uideviceshared() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.uiDeviceShared)
  return uideviceshared_;
}
void QueryDevInfoReq_USR::set_uideviceshared(::google::protobuf::uint32 value) {
  
  uideviceshared_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.uiDeviceShared)
}

// string strValue = 4;
void QueryDevInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryDevInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
#if LANG_CXX11
void QueryDevInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
#endif
void QueryDevInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
void QueryDevInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
::std::string* QueryDevInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevInfoRsp_USR::kDevInfoFieldNumber;
const int QueryDevInfoRsp_USR::kStrVersionFieldNumber;
const int QueryDevInfoRsp_USR::kStrOnlineStatusFieldNumber;
const int QueryDevInfoRsp_USR::kStrUpdateDateFieldNumber;
const int QueryDevInfoRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevInfoRsp_USR::QueryDevInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevInfoRsp_USR)
}
QueryDevInfoRsp_USR::QueryDevInfoRsp_USR(const QueryDevInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  stronlinestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stronlinestatus().size() > 0) {
    stronlinestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stronlinestatus_);
  }
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupdatedate().size() > 0) {
    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_devinfo()) {
    devinfo_ = new ::Interactive::Message::Device(*from.devinfo_);
  } else {
    devinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevInfoRsp_USR)
}

void QueryDevInfoRsp_USR::SharedCtor() {
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stronlinestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_ = NULL;
  _cached_size_ = 0;
}

QueryDevInfoRsp_USR::~QueryDevInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevInfoRsp_USR)
  SharedDtor();
}

void QueryDevInfoRsp_USR::SharedDtor() {
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stronlinestatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete devinfo_;
  }
}

void QueryDevInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[75].descriptor;
}

const QueryDevInfoRsp_USR& QueryDevInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevInfoRsp_USR* QueryDevInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevInfoRsp_USR* n = new QueryDevInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevInfoRsp_USR)
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stronlinestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) {
    delete devinfo_;
  }
  devinfo_ = NULL;
}

bool QueryDevInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Device devInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVersion = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoRsp_USR.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strOnlineStatus = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stronlinestatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stronlinestatus().data(), this->stronlinestatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUpdateDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupdatedate().data(), this->strupdatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevInfoRsp_USR)
  return false;
#undef DO_
}

void QueryDevInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevInfoRsp_USR)
  // .Interactive.Message.Device devInfo = 1;
  if (this->has_devinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->devinfo_, output);
  }

  // string strVersion = 2;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strversion(), output);
  }

  // string strOnlineStatus = 3;
  if (this->stronlinestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stronlinestatus().data(), this->stronlinestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stronlinestatus(), output);
  }

  // string strUpdateDate = 4;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strupdatedate(), output);
  }

  // string strValue = 5;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevInfoRsp_USR)
}

::google::protobuf::uint8* QueryDevInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevInfoRsp_USR)
  // .Interactive.Message.Device devInfo = 1;
  if (this->has_devinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->devinfo_, false, target);
  }

  // string strVersion = 2;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strversion(), target);
  }

  // string strOnlineStatus = 3;
  if (this->stronlinestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stronlinestatus().data(), this->stronlinestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stronlinestatus(), target);
  }

  // string strUpdateDate = 4;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strupdatedate(), target);
  }

  // string strValue = 5;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevInfoRsp_USR)
  return target;
}

size_t QueryDevInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevInfoRsp_USR)
  size_t total_size = 0;

  // string strVersion = 2;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  // string strOnlineStatus = 3;
  if (this->stronlinestatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stronlinestatus());
  }

  // string strUpdateDate = 4;
  if (this->strupdatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupdatedate());
  }

  // string strValue = 5;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.Device devInfo = 1;
  if (this->has_devinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevInfoRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDevInfoRsp_USR::MergeFrom(const QueryDevInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  if (from.stronlinestatus().size() > 0) {

    stronlinestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stronlinestatus_);
  }
  if (from.strupdatedate().size() > 0) {

    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_devinfo()) {
    mutable_devinfo()->::Interactive::Message::Device::MergeFrom(from.devinfo());
  }
}

void QueryDevInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevInfoRsp_USR::CopyFrom(const QueryDevInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevInfoRsp_USR::IsInitialized() const {
  return true;
}

void QueryDevInfoRsp_USR::Swap(QueryDevInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevInfoRsp_USR::InternalSwap(QueryDevInfoRsp_USR* other) {
  strversion_.Swap(&other->strversion_);
  stronlinestatus_.Swap(&other->stronlinestatus_);
  strupdatedate_.Swap(&other->strupdatedate_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(devinfo_, other->devinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[75];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevInfoRsp_USR

// .Interactive.Message.Device devInfo = 1;
bool QueryDevInfoRsp_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
void QueryDevInfoRsp_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
const ::Interactive::Message::Device& QueryDevInfoRsp_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* QueryDevInfoRsp_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  return devinfo_;
}
::Interactive::Message::Device* QueryDevInfoRsp_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
void QueryDevInfoRsp_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
}

// string strVersion = 2;
void QueryDevInfoRsp_USR::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoRsp_USR::strversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
  return strversion_.GetNoArena();
}
void QueryDevInfoRsp_USR::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
}
#if LANG_CXX11
void QueryDevInfoRsp_USR::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
}
#endif
void QueryDevInfoRsp_USR::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
}
void QueryDevInfoRsp_USR::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
}
::std::string* QueryDevInfoRsp_USR::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoRsp_USR::release_strversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoRsp_USR::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.strVersion)
}

// string strOnlineStatus = 3;
void QueryDevInfoRsp_USR::clear_stronlinestatus() {
  stronlinestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoRsp_USR::stronlinestatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
  return stronlinestatus_.GetNoArena();
}
void QueryDevInfoRsp_USR::set_stronlinestatus(const ::std::string& value) {
  
  stronlinestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
}
#if LANG_CXX11
void QueryDevInfoRsp_USR::set_stronlinestatus(::std::string&& value) {
  
  stronlinestatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
}
#endif
void QueryDevInfoRsp_USR::set_stronlinestatus(const char* value) {
  
  stronlinestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
}
void QueryDevInfoRsp_USR::set_stronlinestatus(const char* value, size_t size) {
  
  stronlinestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
}
::std::string* QueryDevInfoRsp_USR::mutable_stronlinestatus() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
  return stronlinestatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoRsp_USR::release_stronlinestatus() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
  
  return stronlinestatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoRsp_USR::set_allocated_stronlinestatus(::std::string* stronlinestatus) {
  if (stronlinestatus != NULL) {
    
  } else {
    
  }
  stronlinestatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stronlinestatus);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.strOnlineStatus)
}

// string strUpdateDate = 4;
void QueryDevInfoRsp_USR::clear_strupdatedate() {
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoRsp_USR::strupdatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
  return strupdatedate_.GetNoArena();
}
void QueryDevInfoRsp_USR::set_strupdatedate(const ::std::string& value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
}
#if LANG_CXX11
void QueryDevInfoRsp_USR::set_strupdatedate(::std::string&& value) {
  
  strupdatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
}
#endif
void QueryDevInfoRsp_USR::set_strupdatedate(const char* value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
}
void QueryDevInfoRsp_USR::set_strupdatedate(const char* value, size_t size) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
}
::std::string* QueryDevInfoRsp_USR::mutable_strupdatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
  return strupdatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoRsp_USR::release_strupdatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
  
  return strupdatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoRsp_USR::set_allocated_strupdatedate(::std::string* strupdatedate) {
  if (strupdatedate != NULL) {
    
  } else {
    
  }
  strupdatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.strUpdateDate)
}

// string strValue = 5;
void QueryDevInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryDevInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
#if LANG_CXX11
void QueryDevInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
#endif
void QueryDevInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
void QueryDevInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
::std::string* QueryDevInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevReq_USR::kStrUserIDFieldNumber;
const int QueryDevReq_USR::kUiBeginIndexFieldNumber;
const int QueryDevReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevReq_USR::QueryDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevReq_USR)
}
QueryDevReq_USR::QueryDevReq_USR(const QueryDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevReq_USR)
}

void QueryDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryDevReq_USR::~QueryDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevReq_USR)
  SharedDtor();
}

void QueryDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[76].descriptor;
}

const QueryDevReq_USR& QueryDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevReq_USR* QueryDevReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevReq_USR* n = new QueryDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
}

bool QueryDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevReq_USR)
  return false;
#undef DO_
}

void QueryDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uibeginindex(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevReq_USR)
}

::google::protobuf::uint8* QueryDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uibeginindex(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevReq_USR)
  return target;
}

size_t QueryDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevReq_USR)
    MergeFrom(*source);
  }
}

void QueryDevReq_USR::MergeFrom(const QueryDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevReq_USR::CopyFrom(const QueryDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevReq_USR::IsInitialized() const {
  return true;
}

void QueryDevReq_USR::Swap(QueryDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevReq_USR::InternalSwap(QueryDevReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[76];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevReq_USR

// string strUserID = 1;
void QueryDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.strUserID)
}
#if LANG_CXX11
void QueryDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevReq_USR.strUserID)
}
#endif
void QueryDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevReq_USR.strUserID)
}
void QueryDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevReq_USR.strUserID)
}
::std::string* QueryDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevReq_USR.strUserID)
}

// uint32 uiBeginIndex = 2;
void QueryDevReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryDevReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryDevReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.uiBeginIndex)
}

// string strValue = 3;
void QueryDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.strValue)
}
#if LANG_CXX11
void QueryDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevReq_USR.strValue)
}
#endif
void QueryDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevReq_USR.strValue)
}
void QueryDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevReq_USR.strValue)
}
::std::string* QueryDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevRsp_USR::kAllRelationInfoFieldNumber;
const int QueryDevRsp_USR::kStrDevNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevRsp_USR::QueryDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevRsp_USR)
}
QueryDevRsp_USR::QueryDevRsp_USR(const QueryDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allrelationinfo_(from.allrelationinfo_),
      strdevname_(from.strdevname_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevRsp_USR)
}

void QueryDevRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryDevRsp_USR::~QueryDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevRsp_USR)
  SharedDtor();
}

void QueryDevRsp_USR::SharedDtor() {
}

void QueryDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[77].descriptor;
}

const QueryDevRsp_USR& QueryDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevRsp_USR* QueryDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevRsp_USR* n = new QueryDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevRsp_USR)
  allrelationinfo_.Clear();
  strdevname_.Clear();
}

bool QueryDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Relation allRelationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_allrelationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string strDevName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdevname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevname(this->strdevname_size() - 1).data(),
            this->strdevname(this->strdevname_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevRsp_USR.strDevName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevRsp_USR)
  return false;
#undef DO_
}

void QueryDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->allrelationinfo(i), output);
  }

  // repeated string strDevName = 2;
  for (int i = 0; i < this->strdevname_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname(i).data(), this->strdevname(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevRsp_USR.strDevName");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strdevname(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevRsp_USR)
}

::google::protobuf::uint8* QueryDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->allrelationinfo(i), false, target);
  }

  // repeated string strDevName = 2;
  for (int i = 0; i < this->strdevname_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname(i).data(), this->strdevname(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevRsp_USR.strDevName");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strdevname(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevRsp_USR)
  return target;
}

size_t QueryDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  {
    unsigned int count = this->allrelationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->allrelationinfo(i));
    }
  }

  // repeated string strDevName = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdevname_size());
  for (int i = 0; i < this->strdevname_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdevname(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDevRsp_USR::MergeFrom(const QueryDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allrelationinfo_.MergeFrom(from.allrelationinfo_);
  strdevname_.MergeFrom(from.strdevname_);
}

void QueryDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevRsp_USR::CopyFrom(const QueryDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevRsp_USR::IsInitialized() const {
  return true;
}

void QueryDevRsp_USR::Swap(QueryDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevRsp_USR::InternalSwap(QueryDevRsp_USR* other) {
  allrelationinfo_.UnsafeArenaSwap(&other->allrelationinfo_);
  strdevname_.UnsafeArenaSwap(&other->strdevname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[77];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevRsp_USR

// repeated .Interactive.Message.Relation allRelationInfo = 1;
int QueryDevRsp_USR::allrelationinfo_size() const {
  return allrelationinfo_.size();
}
void QueryDevRsp_USR::clear_allrelationinfo() {
  allrelationinfo_.Clear();
}
const ::Interactive::Message::Relation& QueryDevRsp_USR::allrelationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Get(index);
}
::Interactive::Message::Relation* QueryDevRsp_USR::mutable_allrelationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Mutable(index);
}
::Interactive::Message::Relation* QueryDevRsp_USR::add_allrelationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
QueryDevRsp_USR::mutable_allrelationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return &allrelationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
QueryDevRsp_USR::allrelationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_;
}

// repeated string strDevName = 2;
int QueryDevRsp_USR::strdevname_size() const {
  return strdevname_.size();
}
void QueryDevRsp_USR::clear_strdevname() {
  strdevname_.Clear();
}
const ::std::string& QueryDevRsp_USR::strdevname(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevRsp_USR.strDevName)
  return strdevname_.Get(index);
}
::std::string* QueryDevRsp_USR::mutable_strdevname(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevRsp_USR.strDevName)
  return strdevname_.Mutable(index);
}
void QueryDevRsp_USR::set_strdevname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevRsp_USR.strDevName)
  strdevname_.Mutable(index)->assign(value);
}
void QueryDevRsp_USR::set_strdevname(int index, const char* value) {
  strdevname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevRsp_USR.strDevName)
}
void QueryDevRsp_USR::set_strdevname(int index, const char* value, size_t size) {
  strdevname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevRsp_USR.strDevName)
}
::std::string* QueryDevRsp_USR::add_strdevname() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.QueryDevRsp_USR.strDevName)
  return strdevname_.Add();
}
void QueryDevRsp_USR::add_strdevname(const ::std::string& value) {
  strdevname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryDevRsp_USR.strDevName)
}
void QueryDevRsp_USR::add_strdevname(const char* value) {
  strdevname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.QueryDevRsp_USR.strDevName)
}
void QueryDevRsp_USR::add_strdevname(const char* value, size_t size) {
  strdevname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.QueryDevRsp_USR.strDevName)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryDevRsp_USR::strdevname() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryDevRsp_USR.strDevName)
  return strdevname_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
QueryDevRsp_USR::mutable_strdevname() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryDevRsp_USR.strDevName)
  return &strdevname_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserReq_USR::kStrDevIDFieldNumber;
const int QueryUserReq_USR::kUiBeginIndexFieldNumber;
const int QueryUserReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserReq_USR::QueryUserReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUserReq_USR)
}
QueryUserReq_USR::QueryUserReq_USR(const QueryUserReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUserReq_USR)
}

void QueryUserReq_USR::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryUserReq_USR::~QueryUserReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUserReq_USR)
  SharedDtor();
}

void QueryUserReq_USR::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUserReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[78].descriptor;
}

const QueryUserReq_USR& QueryUserReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUserReq_USR* QueryUserReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryUserReq_USR* n = new QueryUserReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUserReq_USR)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
}

bool QueryUserReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUserReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUserReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUserReq_USR)
  return false;
#undef DO_
}

void QueryUserReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUserReq_USR)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uibeginindex(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUserReq_USR)
}

::google::protobuf::uint8* QueryUserReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUserReq_USR)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uibeginindex(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUserReq_USR)
  return target;
}

size_t QueryUserReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUserReq_USR)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUserReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUserReq_USR)
    MergeFrom(*source);
  }
}

void QueryUserReq_USR::MergeFrom(const QueryUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryUserReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserReq_USR::CopyFrom(const QueryUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserReq_USR::IsInitialized() const {
  return true;
}

void QueryUserReq_USR::Swap(QueryUserReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserReq_USR::InternalSwap(QueryUserReq_USR* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[78];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUserReq_USR

// string strDevID = 1;
void QueryUserReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void QueryUserReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.strDevID)
}
#if LANG_CXX11
void QueryUserReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserReq_USR.strDevID)
}
#endif
void QueryUserReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserReq_USR.strDevID)
}
void QueryUserReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserReq_USR.strDevID)
}
::std::string* QueryUserReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserReq_USR.strDevID)
}

// uint32 uiBeginIndex = 2;
void QueryUserReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryUserReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryUserReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.uiBeginIndex)
}

// string strValue = 3;
void QueryUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.strValue)
}
#if LANG_CXX11
void QueryUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserReq_USR.strValue)
}
#endif
void QueryUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserReq_USR.strValue)
}
void QueryUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserReq_USR.strValue)
}
::std::string* QueryUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserRsp_USR::kAllRelationInfoFieldNumber;
const int QueryUserRsp_USR::kStrUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserRsp_USR::QueryUserRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUserRsp_USR)
}
QueryUserRsp_USR::QueryUserRsp_USR(const QueryUserRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allrelationinfo_(from.allrelationinfo_),
      strusername_(from.strusername_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUserRsp_USR)
}

void QueryUserRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryUserRsp_USR::~QueryUserRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUserRsp_USR)
  SharedDtor();
}

void QueryUserRsp_USR::SharedDtor() {
}

void QueryUserRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[79].descriptor;
}

const QueryUserRsp_USR& QueryUserRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUserRsp_USR* QueryUserRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryUserRsp_USR* n = new QueryUserRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUserRsp_USR)
  allrelationinfo_.Clear();
  strusername_.Clear();
}

bool QueryUserRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUserRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Relation allRelationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_allrelationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string strUserName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername(this->strusername_size() - 1).data(),
            this->strusername(this->strusername_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserRsp_USR.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUserRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUserRsp_USR)
  return false;
#undef DO_
}

void QueryUserRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUserRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->allrelationinfo(i), output);
  }

  // repeated string strUserName = 2;
  for (int i = 0; i < this->strusername_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername(i).data(), this->strusername(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserRsp_USR.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strusername(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUserRsp_USR)
}

::google::protobuf::uint8* QueryUserRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUserRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->allrelationinfo(i), false, target);
  }

  // repeated string strUserName = 2;
  for (int i = 0; i < this->strusername_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername(i).data(), this->strusername(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserRsp_USR.strUserName");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strusername(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUserRsp_USR)
  return target;
}

size_t QueryUserRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUserRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  {
    unsigned int count = this->allrelationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->allrelationinfo(i));
    }
  }

  // repeated string strUserName = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strusername_size());
  for (int i = 0; i < this->strusername_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strusername(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUserRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUserRsp_USR)
    MergeFrom(*source);
  }
}

void QueryUserRsp_USR::MergeFrom(const QueryUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allrelationinfo_.MergeFrom(from.allrelationinfo_);
  strusername_.MergeFrom(from.strusername_);
}

void QueryUserRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserRsp_USR::CopyFrom(const QueryUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserRsp_USR::IsInitialized() const {
  return true;
}

void QueryUserRsp_USR::Swap(QueryUserRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserRsp_USR::InternalSwap(QueryUserRsp_USR* other) {
  allrelationinfo_.UnsafeArenaSwap(&other->allrelationinfo_);
  strusername_.UnsafeArenaSwap(&other->strusername_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[79];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUserRsp_USR

// repeated .Interactive.Message.Relation allRelationInfo = 1;
int QueryUserRsp_USR::allrelationinfo_size() const {
  return allrelationinfo_.size();
}
void QueryUserRsp_USR::clear_allrelationinfo() {
  allrelationinfo_.Clear();
}
const ::Interactive::Message::Relation& QueryUserRsp_USR::allrelationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Get(index);
}
::Interactive::Message::Relation* QueryUserRsp_USR::mutable_allrelationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Mutable(index);
}
::Interactive::Message::Relation* QueryUserRsp_USR::add_allrelationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
QueryUserRsp_USR::mutable_allrelationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return &allrelationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
QueryUserRsp_USR::allrelationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_;
}

// repeated string strUserName = 2;
int QueryUserRsp_USR::strusername_size() const {
  return strusername_.size();
}
void QueryUserRsp_USR::clear_strusername() {
  strusername_.Clear();
}
const ::std::string& QueryUserRsp_USR::strusername(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserRsp_USR.strUserName)
  return strusername_.Get(index);
}
::std::string* QueryUserRsp_USR::mutable_strusername(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserRsp_USR.strUserName)
  return strusername_.Mutable(index);
}
void QueryUserRsp_USR::set_strusername(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserRsp_USR.strUserName)
  strusername_.Mutable(index)->assign(value);
}
void QueryUserRsp_USR::set_strusername(int index, const char* value) {
  strusername_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserRsp_USR.strUserName)
}
void QueryUserRsp_USR::set_strusername(int index, const char* value, size_t size) {
  strusername_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserRsp_USR.strUserName)
}
::std::string* QueryUserRsp_USR::add_strusername() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.QueryUserRsp_USR.strUserName)
  return strusername_.Add();
}
void QueryUserRsp_USR::add_strusername(const ::std::string& value) {
  strusername_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryUserRsp_USR.strUserName)
}
void QueryUserRsp_USR::add_strusername(const char* value) {
  strusername_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.QueryUserRsp_USR.strUserName)
}
void QueryUserRsp_USR::add_strusername(const char* value, size_t size) {
  strusername_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.QueryUserRsp_USR.strUserName)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryUserRsp_USR::strusername() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryUserRsp_USR.strUserName)
  return strusername_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
QueryUserRsp_USR::mutable_strusername() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryUserRsp_USR.strUserName)
  return &strusername_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharingDevReq_USR::kRelationInfoFieldNumber;
const int SharingDevReq_USR::kStrUserNameFieldNumber;
const int SharingDevReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharingDevReq_USR::SharingDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.SharingDevReq_USR)
}
SharingDevReq_USR::SharingDevReq_USR(const SharingDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    relationinfo_ = new ::Interactive::Message::Relation(*from.relationinfo_);
  } else {
    relationinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.SharingDevReq_USR)
}

void SharingDevReq_USR::SharedCtor() {
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relationinfo_ = NULL;
  _cached_size_ = 0;
}

SharingDevReq_USR::~SharingDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.SharingDevReq_USR)
  SharedDtor();
}

void SharingDevReq_USR::SharedDtor() {
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete relationinfo_;
  }
}

void SharingDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SharingDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[80].descriptor;
}

const SharingDevReq_USR& SharingDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

SharingDevReq_USR* SharingDevReq_USR::New(::google::protobuf::Arena* arena) const {
  SharingDevReq_USR* n = new SharingDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharingDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.SharingDevReq_USR)
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) {
    delete relationinfo_;
  }
  relationinfo_ = NULL;
}

bool SharingDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.SharingDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Relation relationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relationinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.SharingDevReq_USR.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.SharingDevReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.SharingDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.SharingDevReq_USR)
  return false;
#undef DO_
}

void SharingDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.SharingDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->relationinfo_, output);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevReq_USR.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strusername(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.SharingDevReq_USR)
}

::google::protobuf::uint8* SharingDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.SharingDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->relationinfo_, false, target);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevReq_USR.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strusername(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.SharingDevReq_USR)
  return target;
}

size_t SharingDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.SharingDevReq_USR)
  size_t total_size = 0;

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->relationinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharingDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.SharingDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const SharingDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SharingDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.SharingDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.SharingDevReq_USR)
    MergeFrom(*source);
  }
}

void SharingDevReq_USR::MergeFrom(const SharingDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.SharingDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    mutable_relationinfo()->::Interactive::Message::Relation::MergeFrom(from.relationinfo());
  }
}

void SharingDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.SharingDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SharingDevReq_USR::CopyFrom(const SharingDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.SharingDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharingDevReq_USR::IsInitialized() const {
  return true;
}

void SharingDevReq_USR::Swap(SharingDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharingDevReq_USR::InternalSwap(SharingDevReq_USR* other) {
  strusername_.Swap(&other->strusername_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(relationinfo_, other->relationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SharingDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[80];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharingDevReq_USR

// .Interactive.Message.Relation relationInfo = 1;
bool SharingDevReq_USR::has_relationinfo() const {
  return this != internal_default_instance() && relationinfo_ != NULL;
}
void SharingDevReq_USR::clear_relationinfo() {
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) delete relationinfo_;
  relationinfo_ = NULL;
}
const ::Interactive::Message::Relation& SharingDevReq_USR::relationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.relationInfo)
  return relationinfo_ != NULL ? *relationinfo_
                         : *::Interactive::Message::Relation::internal_default_instance();
}
::Interactive::Message::Relation* SharingDevReq_USR::mutable_relationinfo() {
  
  if (relationinfo_ == NULL) {
    relationinfo_ = new ::Interactive::Message::Relation;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.relationInfo)
  return relationinfo_;
}
::Interactive::Message::Relation* SharingDevReq_USR::release_relationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.relationInfo)
  
  ::Interactive::Message::Relation* temp = relationinfo_;
  relationinfo_ = NULL;
  return temp;
}
void SharingDevReq_USR::set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo) {
  delete relationinfo_;
  relationinfo_ = relationinfo;
  if (relationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.relationInfo)
}

// string strUserName = 2;
void SharingDevReq_USR::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SharingDevReq_USR::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.strUserName)
  return strusername_.GetNoArena();
}
void SharingDevReq_USR::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevReq_USR.strUserName)
}
#if LANG_CXX11
void SharingDevReq_USR::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevReq_USR.strUserName)
}
#endif
void SharingDevReq_USR::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevReq_USR.strUserName)
}
void SharingDevReq_USR::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevReq_USR.strUserName)
}
::std::string* SharingDevReq_USR::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SharingDevReq_USR::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SharingDevReq_USR::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.strUserName)
}

// string strValue = 3;
void SharingDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SharingDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void SharingDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevReq_USR.strValue)
}
#if LANG_CXX11
void SharingDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevReq_USR.strValue)
}
#endif
void SharingDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevReq_USR.strValue)
}
void SharingDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevReq_USR.strValue)
}
::std::string* SharingDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SharingDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SharingDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharingDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharingDevRsp_USR::SharingDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.SharingDevRsp_USR)
}
SharingDevRsp_USR::SharingDevRsp_USR(const SharingDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.SharingDevRsp_USR)
}

void SharingDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SharingDevRsp_USR::~SharingDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.SharingDevRsp_USR)
  SharedDtor();
}

void SharingDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SharingDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SharingDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[81].descriptor;
}

const SharingDevRsp_USR& SharingDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

SharingDevRsp_USR* SharingDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  SharingDevRsp_USR* n = new SharingDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharingDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.SharingDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SharingDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.SharingDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.SharingDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.SharingDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.SharingDevRsp_USR)
  return false;
#undef DO_
}

void SharingDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.SharingDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.SharingDevRsp_USR)
}

::google::protobuf::uint8* SharingDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.SharingDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.SharingDevRsp_USR)
  return target;
}

size_t SharingDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.SharingDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharingDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.SharingDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const SharingDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SharingDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.SharingDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.SharingDevRsp_USR)
    MergeFrom(*source);
  }
}

void SharingDevRsp_USR::MergeFrom(const SharingDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.SharingDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void SharingDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.SharingDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SharingDevRsp_USR::CopyFrom(const SharingDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.SharingDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharingDevRsp_USR::IsInitialized() const {
  return true;
}

void SharingDevRsp_USR::Swap(SharingDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharingDevRsp_USR::InternalSwap(SharingDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SharingDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[81];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharingDevRsp_USR

// string strValue = 1;
void SharingDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SharingDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void SharingDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevRsp_USR.strValue)
}
#if LANG_CXX11
void SharingDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevRsp_USR.strValue)
}
#endif
void SharingDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevRsp_USR.strValue)
}
void SharingDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevRsp_USR.strValue)
}
::std::string* SharingDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SharingDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SharingDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSharedDevReq_USR::kRelationInfoFieldNumber;
const int CancelSharedDevReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSharedDevReq_USR::CancelSharedDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.CancelSharedDevReq_USR)
}
CancelSharedDevReq_USR::CancelSharedDevReq_USR(const CancelSharedDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    relationinfo_ = new ::Interactive::Message::Relation(*from.relationinfo_);
  } else {
    relationinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.CancelSharedDevReq_USR)
}

void CancelSharedDevReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relationinfo_ = NULL;
  _cached_size_ = 0;
}

CancelSharedDevReq_USR::~CancelSharedDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.CancelSharedDevReq_USR)
  SharedDtor();
}

void CancelSharedDevReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete relationinfo_;
  }
}

void CancelSharedDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelSharedDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[82].descriptor;
}

const CancelSharedDevReq_USR& CancelSharedDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelSharedDevReq_USR* CancelSharedDevReq_USR::New(::google::protobuf::Arena* arena) const {
  CancelSharedDevReq_USR* n = new CancelSharedDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelSharedDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.CancelSharedDevReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) {
    delete relationinfo_;
  }
  relationinfo_ = NULL;
}

bool CancelSharedDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.CancelSharedDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Relation relationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relationinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.CancelSharedDevReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.CancelSharedDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.CancelSharedDevReq_USR)
  return false;
#undef DO_
}

void CancelSharedDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.CancelSharedDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->relationinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.CancelSharedDevReq_USR)
}

::google::protobuf::uint8* CancelSharedDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.CancelSharedDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->relationinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.CancelSharedDevReq_USR)
  return target;
}

size_t CancelSharedDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.CancelSharedDevReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->relationinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelSharedDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.CancelSharedDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelSharedDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSharedDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.CancelSharedDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.CancelSharedDevReq_USR)
    MergeFrom(*source);
  }
}

void CancelSharedDevReq_USR::MergeFrom(const CancelSharedDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.CancelSharedDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    mutable_relationinfo()->::Interactive::Message::Relation::MergeFrom(from.relationinfo());
  }
}

void CancelSharedDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.CancelSharedDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSharedDevReq_USR::CopyFrom(const CancelSharedDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.CancelSharedDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSharedDevReq_USR::IsInitialized() const {
  return true;
}

void CancelSharedDevReq_USR::Swap(CancelSharedDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSharedDevReq_USR::InternalSwap(CancelSharedDevReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(relationinfo_, other->relationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelSharedDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[82];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSharedDevReq_USR

// .Interactive.Message.Relation relationInfo = 1;
bool CancelSharedDevReq_USR::has_relationinfo() const {
  return this != internal_default_instance() && relationinfo_ != NULL;
}
void CancelSharedDevReq_USR::clear_relationinfo() {
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) delete relationinfo_;
  relationinfo_ = NULL;
}
const ::Interactive::Message::Relation& CancelSharedDevReq_USR::relationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  return relationinfo_ != NULL ? *relationinfo_
                         : *::Interactive::Message::Relation::internal_default_instance();
}
::Interactive::Message::Relation* CancelSharedDevReq_USR::mutable_relationinfo() {
  
  if (relationinfo_ == NULL) {
    relationinfo_ = new ::Interactive::Message::Relation;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  return relationinfo_;
}
::Interactive::Message::Relation* CancelSharedDevReq_USR::release_relationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  
  ::Interactive::Message::Relation* temp = relationinfo_;
  relationinfo_ = NULL;
  return temp;
}
void CancelSharedDevReq_USR::set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo) {
  delete relationinfo_;
  relationinfo_ = relationinfo;
  if (relationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
}

// string strValue = 2;
void CancelSharedDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelSharedDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void CancelSharedDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
#if LANG_CXX11
void CancelSharedDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
#endif
void CancelSharedDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
void CancelSharedDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
::std::string* CancelSharedDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelSharedDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelSharedDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSharedDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSharedDevRsp_USR::CancelSharedDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.CancelSharedDevRsp_USR)
}
CancelSharedDevRsp_USR::CancelSharedDevRsp_USR(const CancelSharedDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.CancelSharedDevRsp_USR)
}

void CancelSharedDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelSharedDevRsp_USR::~CancelSharedDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.CancelSharedDevRsp_USR)
  SharedDtor();
}

void CancelSharedDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelSharedDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelSharedDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[83].descriptor;
}

const CancelSharedDevRsp_USR& CancelSharedDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelSharedDevRsp_USR* CancelSharedDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  CancelSharedDevRsp_USR* n = new CancelSharedDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelSharedDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.CancelSharedDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CancelSharedDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.CancelSharedDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.CancelSharedDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.CancelSharedDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.CancelSharedDevRsp_USR)
  return false;
#undef DO_
}

void CancelSharedDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.CancelSharedDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.CancelSharedDevRsp_USR)
}

::google::protobuf::uint8* CancelSharedDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.CancelSharedDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.CancelSharedDevRsp_USR)
  return target;
}

size_t CancelSharedDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.CancelSharedDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelSharedDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelSharedDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSharedDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.CancelSharedDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.CancelSharedDevRsp_USR)
    MergeFrom(*source);
  }
}

void CancelSharedDevRsp_USR::MergeFrom(const CancelSharedDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void CancelSharedDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSharedDevRsp_USR::CopyFrom(const CancelSharedDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSharedDevRsp_USR::IsInitialized() const {
  return true;
}

void CancelSharedDevRsp_USR::Swap(CancelSharedDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSharedDevRsp_USR::InternalSwap(CancelSharedDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelSharedDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[83];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSharedDevRsp_USR

// string strValue = 1;
void CancelSharedDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelSharedDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void CancelSharedDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
#if LANG_CXX11
void CancelSharedDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
#endif
void CancelSharedDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
void CancelSharedDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
::std::string* CancelSharedDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelSharedDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelSharedDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendsReq_USR::kStrUserIDFieldNumber;
const int AddFriendsReq_USR::kStrFriendUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendsReq_USR::AddFriendsReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFriendsReq_USR)
}
AddFriendsReq_USR::AddFriendsReq_USR(const AddFriendsReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strfrienduserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfrienduserid().size() > 0) {
    strfrienduserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfrienduserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFriendsReq_USR)
}

void AddFriendsReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfrienduserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFriendsReq_USR::~AddFriendsReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFriendsReq_USR)
  SharedDtor();
}

void AddFriendsReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfrienduserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFriendsReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendsReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[84].descriptor;
}

const AddFriendsReq_USR& AddFriendsReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendsReq_USR* AddFriendsReq_USR::New(::google::protobuf::Arena* arena) const {
  AddFriendsReq_USR* n = new AddFriendsReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendsReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFriendsReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfrienduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFriendsReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFriendsReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFriendsReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFriendUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfrienduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfrienduserid().data(), this->strfrienduserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFriendsReq_USR.strFriendUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFriendsReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFriendsReq_USR)
  return false;
#undef DO_
}

void AddFriendsReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strFriendUserID = 2;
  if (this->strfrienduserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid().data(), this->strfrienduserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strFriendUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strfrienduserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFriendsReq_USR)
}

::google::protobuf::uint8* AddFriendsReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strFriendUserID = 2;
  if (this->strfrienduserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid().data(), this->strfrienduserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strFriendUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strfrienduserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFriendsReq_USR)
  return target;
}

size_t AddFriendsReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFriendsReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strFriendUserID = 2;
  if (this->strfrienduserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfrienduserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendsReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendsReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendsReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFriendsReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFriendsReq_USR)
    MergeFrom(*source);
  }
}

void AddFriendsReq_USR::MergeFrom(const AddFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strfrienduserid().size() > 0) {

    strfrienduserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfrienduserid_);
  }
}

void AddFriendsReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendsReq_USR::CopyFrom(const AddFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendsReq_USR::IsInitialized() const {
  return true;
}

void AddFriendsReq_USR::Swap(AddFriendsReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendsReq_USR::InternalSwap(AddFriendsReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strfrienduserid_.Swap(&other->strfrienduserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendsReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[84];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendsReq_USR

// string strUserID = 1;
void AddFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void AddFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsReq_USR.strUserID)
}
#if LANG_CXX11
void AddFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsReq_USR.strUserID)
}
#endif
void AddFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsReq_USR.strUserID)
}
void AddFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsReq_USR.strUserID)
}
::std::string* AddFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsReq_USR.strUserID)
}

// string strFriendUserID = 2;
void AddFriendsReq_USR::clear_strfrienduserid() {
  strfrienduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFriendsReq_USR::strfrienduserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.GetNoArena();
}
void AddFriendsReq_USR::set_strfrienduserid(const ::std::string& value) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
#if LANG_CXX11
void AddFriendsReq_USR::set_strfrienduserid(::std::string&& value) {
  
  strfrienduserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
#endif
void AddFriendsReq_USR::set_strfrienduserid(const char* value) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
void AddFriendsReq_USR::set_strfrienduserid(const char* value, size_t size) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
::std::string* AddFriendsReq_USR::mutable_strfrienduserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFriendsReq_USR::release_strfrienduserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  
  return strfrienduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFriendsReq_USR::set_allocated_strfrienduserid(::std::string* strfrienduserid) {
  if (strfrienduserid != NULL) {
    
  } else {
    
  }
  strfrienduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfrienduserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendsRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendsRsp_USR::AddFriendsRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFriendsRsp_USR)
}
AddFriendsRsp_USR::AddFriendsRsp_USR(const AddFriendsRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFriendsRsp_USR)
}

void AddFriendsRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFriendsRsp_USR::~AddFriendsRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFriendsRsp_USR)
  SharedDtor();
}

void AddFriendsRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFriendsRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendsRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[85].descriptor;
}

const AddFriendsRsp_USR& AddFriendsRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendsRsp_USR* AddFriendsRsp_USR::New(::google::protobuf::Arena* arena) const {
  AddFriendsRsp_USR* n = new AddFriendsRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendsRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFriendsRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFriendsRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFriendsRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFriendsRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFriendsRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFriendsRsp_USR)
  return false;
#undef DO_
}

void AddFriendsRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFriendsRsp_USR)
}

::google::protobuf::uint8* AddFriendsRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFriendsRsp_USR)
  return target;
}

size_t AddFriendsRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFriendsRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendsRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendsRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendsRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFriendsRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFriendsRsp_USR)
    MergeFrom(*source);
  }
}

void AddFriendsRsp_USR::MergeFrom(const AddFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddFriendsRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendsRsp_USR::CopyFrom(const AddFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendsRsp_USR::IsInitialized() const {
  return true;
}

void AddFriendsRsp_USR::Swap(AddFriendsRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendsRsp_USR::InternalSwap(AddFriendsRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendsRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[85];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendsRsp_USR

// string strValue = 1;
void AddFriendsRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFriendsRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void AddFriendsRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsRsp_USR.strValue)
}
#if LANG_CXX11
void AddFriendsRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsRsp_USR.strValue)
}
#endif
void AddFriendsRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsRsp_USR.strValue)
}
void AddFriendsRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsRsp_USR.strValue)
}
::std::string* AddFriendsRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFriendsRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFriendsRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFriendsReq_USR::kStrUserIDFieldNumber;
const int DelFriendsReq_USR::kStrFriendUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFriendsReq_USR::DelFriendsReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelFriendsReq_USR)
}
DelFriendsReq_USR::DelFriendsReq_USR(const DelFriendsReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfrienduserid_(from.strfrienduserid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelFriendsReq_USR)
}

void DelFriendsReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelFriendsReq_USR::~DelFriendsReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelFriendsReq_USR)
  SharedDtor();
}

void DelFriendsReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelFriendsReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendsReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[86].descriptor;
}

const DelFriendsReq_USR& DelFriendsReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFriendsReq_USR* DelFriendsReq_USR::New(::google::protobuf::Arena* arena) const {
  DelFriendsReq_USR* n = new DelFriendsReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFriendsReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelFriendsReq_USR)
  strfrienduserid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelFriendsReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelFriendsReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFriendUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfrienduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfrienduserid(this->strfrienduserid_size() - 1).data(),
            this->strfrienduserid(this->strfrienduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsReq_USR.strFriendUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelFriendsReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelFriendsReq_USR)
  return false;
#undef DO_
}

void DelFriendsReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strFriendUserID = 2;
  for (int i = 0; i < this->strfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid(i).data(), this->strfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strFriendUserID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfrienduserid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelFriendsReq_USR)
}

::google::protobuf::uint8* DelFriendsReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strFriendUserID = 2;
  for (int i = 0; i < this->strfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid(i).data(), this->strfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strFriendUserID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfrienduserid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelFriendsReq_USR)
  return target;
}

size_t DelFriendsReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelFriendsReq_USR)
  size_t total_size = 0;

  // repeated string strFriendUserID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfrienduserid_size());
  for (int i = 0; i < this->strfrienduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfrienduserid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendsReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFriendsReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFriendsReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelFriendsReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelFriendsReq_USR)
    MergeFrom(*source);
  }
}

void DelFriendsReq_USR::MergeFrom(const DelFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfrienduserid_.MergeFrom(from.strfrienduserid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DelFriendsReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendsReq_USR::CopyFrom(const DelFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendsReq_USR::IsInitialized() const {
  return true;
}

void DelFriendsReq_USR::Swap(DelFriendsReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFriendsReq_USR::InternalSwap(DelFriendsReq_USR* other) {
  strfrienduserid_.UnsafeArenaSwap(&other->strfrienduserid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFriendsReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[86];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFriendsReq_USR

// string strUserID = 1;
void DelFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DelFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsReq_USR.strUserID)
}
#if LANG_CXX11
void DelFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelFriendsReq_USR.strUserID)
}
#endif
void DelFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsReq_USR.strUserID)
}
void DelFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsReq_USR.strUserID)
}
::std::string* DelFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelFriendsReq_USR.strUserID)
}

// repeated string strFriendUserID = 2;
int DelFriendsReq_USR::strfrienduserid_size() const {
  return strfrienduserid_.size();
}
void DelFriendsReq_USR::clear_strfrienduserid() {
  strfrienduserid_.Clear();
}
const ::std::string& DelFriendsReq_USR::strfrienduserid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Get(index);
}
::std::string* DelFriendsReq_USR::mutable_strfrienduserid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Mutable(index);
}
void DelFriendsReq_USR::set_strfrienduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  strfrienduserid_.Mutable(index)->assign(value);
}
void DelFriendsReq_USR::set_strfrienduserid(int index, const char* value) {
  strfrienduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
void DelFriendsReq_USR::set_strfrienduserid(int index, const char* value, size_t size) {
  strfrienduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
::std::string* DelFriendsReq_USR::add_strfrienduserid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Add();
}
void DelFriendsReq_USR::add_strfrienduserid(const ::std::string& value) {
  strfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
void DelFriendsReq_USR::add_strfrienduserid(const char* value) {
  strfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
void DelFriendsReq_USR::add_strfrienduserid(const char* value, size_t size) {
  strfrienduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelFriendsReq_USR::strfrienduserid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelFriendsReq_USR::mutable_strfrienduserid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return &strfrienduserid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFriendsRsp_USR::kStrValueFieldNumber;
const int DelFriendsRsp_USR::kStrFriendUserIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFriendsRsp_USR::DelFriendsRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelFriendsRsp_USR)
}
DelFriendsRsp_USR::DelFriendsRsp_USR(const DelFriendsRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfrienduseridfailed_(from.strfrienduseridfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelFriendsRsp_USR)
}

void DelFriendsRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelFriendsRsp_USR::~DelFriendsRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelFriendsRsp_USR)
  SharedDtor();
}

void DelFriendsRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelFriendsRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendsRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[87].descriptor;
}

const DelFriendsRsp_USR& DelFriendsRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFriendsRsp_USR* DelFriendsRsp_USR::New(::google::protobuf::Arena* arena) const {
  DelFriendsRsp_USR* n = new DelFriendsRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFriendsRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelFriendsRsp_USR)
  strfrienduseridfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelFriendsRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelFriendsRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFriendUserIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfrienduseridfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfrienduseridfailed(this->strfrienduseridfailed_size() - 1).data(),
            this->strfrienduseridfailed(this->strfrienduseridfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelFriendsRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelFriendsRsp_USR)
  return false;
#undef DO_
}

void DelFriendsRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strFriendUserIDFailed = 2;
  for (int i = 0; i < this->strfrienduseridfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduseridfailed(i).data(), this->strfrienduseridfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfrienduseridfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelFriendsRsp_USR)
}

::google::protobuf::uint8* DelFriendsRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strFriendUserIDFailed = 2;
  for (int i = 0; i < this->strfrienduseridfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduseridfailed(i).data(), this->strfrienduseridfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfrienduseridfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelFriendsRsp_USR)
  return target;
}

size_t DelFriendsRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelFriendsRsp_USR)
  size_t total_size = 0;

  // repeated string strFriendUserIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfrienduseridfailed_size());
  for (int i = 0; i < this->strfrienduseridfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfrienduseridfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendsRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFriendsRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFriendsRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelFriendsRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelFriendsRsp_USR)
    MergeFrom(*source);
  }
}

void DelFriendsRsp_USR::MergeFrom(const DelFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfrienduseridfailed_.MergeFrom(from.strfrienduseridfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DelFriendsRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendsRsp_USR::CopyFrom(const DelFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendsRsp_USR::IsInitialized() const {
  return true;
}

void DelFriendsRsp_USR::Swap(DelFriendsRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFriendsRsp_USR::InternalSwap(DelFriendsRsp_USR* other) {
  strfrienduseridfailed_.UnsafeArenaSwap(&other->strfrienduseridfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFriendsRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[87];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFriendsRsp_USR

// string strValue = 1;
void DelFriendsRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelFriendsRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DelFriendsRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsRsp_USR.strValue)
}
#if LANG_CXX11
void DelFriendsRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelFriendsRsp_USR.strValue)
}
#endif
void DelFriendsRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsRsp_USR.strValue)
}
void DelFriendsRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsRsp_USR.strValue)
}
::std::string* DelFriendsRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelFriendsRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelFriendsRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelFriendsRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelFriendsRsp_USR.strValue)
}

// repeated string strFriendUserIDFailed = 2;
int DelFriendsRsp_USR::strfrienduseridfailed_size() const {
  return strfrienduseridfailed_.size();
}
void DelFriendsRsp_USR::clear_strfrienduseridfailed() {
  strfrienduseridfailed_.Clear();
}
const ::std::string& DelFriendsRsp_USR::strfrienduseridfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Get(index);
}
::std::string* DelFriendsRsp_USR::mutable_strfrienduseridfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Mutable(index);
}
void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  strfrienduseridfailed_.Mutable(index)->assign(value);
}
void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const char* value) {
  strfrienduseridfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const char* value, size_t size) {
  strfrienduseridfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
::std::string* DelFriendsRsp_USR::add_strfrienduseridfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Add();
}
void DelFriendsRsp_USR::add_strfrienduseridfailed(const ::std::string& value) {
  strfrienduseridfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
void DelFriendsRsp_USR::add_strfrienduseridfailed(const char* value) {
  strfrienduseridfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
void DelFriendsRsp_USR::add_strfrienduseridfailed(const char* value, size_t size) {
  strfrienduseridfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelFriendsRsp_USR::strfrienduseridfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelFriendsRsp_USR::mutable_strfrienduseridfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return &strfrienduseridfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFriendsReq_USR::kStrUserIDFieldNumber;
const int QueryFriendsReq_USR::kUiBeginIndexFieldNumber;
const int QueryFriendsReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFriendsReq_USR::QueryFriendsReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFriendsReq_USR)
}
QueryFriendsReq_USR::QueryFriendsReq_USR(const QueryFriendsReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFriendsReq_USR)
}

void QueryFriendsReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryFriendsReq_USR::~QueryFriendsReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFriendsReq_USR)
  SharedDtor();
}

void QueryFriendsReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFriendsReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFriendsReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[88].descriptor;
}

const QueryFriendsReq_USR& QueryFriendsReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFriendsReq_USR* QueryFriendsReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryFriendsReq_USR* n = new QueryFriendsReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFriendsReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFriendsReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
}

bool QueryFriendsReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFriendsReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFriendsReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFriendsReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFriendsReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFriendsReq_USR)
  return false;
#undef DO_
}

void QueryFriendsReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uibeginindex(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFriendsReq_USR)
}

::google::protobuf::uint8* QueryFriendsReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uibeginindex(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFriendsReq_USR)
  return target;
}

size_t QueryFriendsReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFriendsReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFriendsReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFriendsReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFriendsReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFriendsReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFriendsReq_USR)
    MergeFrom(*source);
  }
}

void QueryFriendsReq_USR::MergeFrom(const QueryFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryFriendsReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFriendsReq_USR::CopyFrom(const QueryFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFriendsReq_USR::IsInitialized() const {
  return true;
}

void QueryFriendsReq_USR::Swap(QueryFriendsReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFriendsReq_USR::InternalSwap(QueryFriendsReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFriendsReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[88];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFriendsReq_USR

// string strUserID = 1;
void QueryFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
#if LANG_CXX11
void QueryFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
#endif
void QueryFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
void QueryFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
::std::string* QueryFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFriendsReq_USR.strUserID)
}

// uint32 uiBeginIndex = 2;
void QueryFriendsReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryFriendsReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryFriendsReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.uiBeginIndex)
}

// string strValue = 3;
void QueryFriendsReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFriendsReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryFriendsReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.strValue)
}
#if LANG_CXX11
void QueryFriendsReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFriendsReq_USR.strValue)
}
#endif
void QueryFriendsReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsReq_USR.strValue)
}
void QueryFriendsReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsReq_USR.strValue)
}
::std::string* QueryFriendsReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFriendsReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFriendsReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFriendsReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFriendsReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFriendsRsp_USR::kStrAllFriendUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFriendsRsp_USR::QueryFriendsRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFriendsRsp_USR)
}
QueryFriendsRsp_USR::QueryFriendsRsp_USR(const QueryFriendsRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strallfrienduserid_(from.strallfrienduserid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFriendsRsp_USR)
}

void QueryFriendsRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryFriendsRsp_USR::~QueryFriendsRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFriendsRsp_USR)
  SharedDtor();
}

void QueryFriendsRsp_USR::SharedDtor() {
}

void QueryFriendsRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFriendsRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[89].descriptor;
}

const QueryFriendsRsp_USR& QueryFriendsRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFriendsRsp_USR* QueryFriendsRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryFriendsRsp_USR* n = new QueryFriendsRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFriendsRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFriendsRsp_USR)
  strallfrienduserid_.Clear();
}

bool QueryFriendsRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFriendsRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string strAllFriendUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strallfrienduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strallfrienduserid(this->strallfrienduserid_size() - 1).data(),
            this->strallfrienduserid(this->strallfrienduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFriendsRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFriendsRsp_USR)
  return false;
#undef DO_
}

void QueryFriendsRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFriendsRsp_USR)
  // repeated string strAllFriendUserID = 1;
  for (int i = 0; i < this->strallfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strallfrienduserid(i).data(), this->strallfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strallfrienduserid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFriendsRsp_USR)
}

::google::protobuf::uint8* QueryFriendsRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFriendsRsp_USR)
  // repeated string strAllFriendUserID = 1;
  for (int i = 0; i < this->strallfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strallfrienduserid(i).data(), this->strallfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->strallfrienduserid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFriendsRsp_USR)
  return target;
}

size_t QueryFriendsRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFriendsRsp_USR)
  size_t total_size = 0;

  // repeated string strAllFriendUserID = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strallfrienduserid_size());
  for (int i = 0; i < this->strallfrienduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strallfrienduserid(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFriendsRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFriendsRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFriendsRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFriendsRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFriendsRsp_USR)
    MergeFrom(*source);
  }
}

void QueryFriendsRsp_USR::MergeFrom(const QueryFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strallfrienduserid_.MergeFrom(from.strallfrienduserid_);
}

void QueryFriendsRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFriendsRsp_USR::CopyFrom(const QueryFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFriendsRsp_USR::IsInitialized() const {
  return true;
}

void QueryFriendsRsp_USR::Swap(QueryFriendsRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFriendsRsp_USR::InternalSwap(QueryFriendsRsp_USR* other) {
  strallfrienduserid_.UnsafeArenaSwap(&other->strallfrienduserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFriendsRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[89];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFriendsRsp_USR

// repeated string strAllFriendUserID = 1;
int QueryFriendsRsp_USR::strallfrienduserid_size() const {
  return strallfrienduserid_.size();
}
void QueryFriendsRsp_USR::clear_strallfrienduserid() {
  strallfrienduserid_.Clear();
}
const ::std::string& QueryFriendsRsp_USR::strallfrienduserid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Get(index);
}
::std::string* QueryFriendsRsp_USR::mutable_strallfrienduserid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Mutable(index);
}
void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  strallfrienduserid_.Mutable(index)->assign(value);
}
void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const char* value) {
  strallfrienduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const char* value, size_t size) {
  strallfrienduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
::std::string* QueryFriendsRsp_USR::add_strallfrienduserid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Add();
}
void QueryFriendsRsp_USR::add_strallfrienduserid(const ::std::string& value) {
  strallfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
void QueryFriendsRsp_USR::add_strallfrienduserid(const char* value) {
  strallfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
void QueryFriendsRsp_USR::add_strallfrienduserid(const char* value, size_t size) {
  strallfrienduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryFriendsRsp_USR::strallfrienduserid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
QueryFriendsRsp_USR::mutable_strallfrienduserid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return &strallfrienduserid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressReq_USR::kStrUserIDFieldNumber;
const int StorageAddressReq_USR::kUiStorageTypeFieldNumber;
const int StorageAddressReq_USR::kUiStorageActionFieldNumber;
const int StorageAddressReq_USR::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressReq_USR::StorageAddressReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressReq_USR)
}
StorageAddressReq_USR::StorageAddressReq_USR(const StorageAddressReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  ::memcpy(&uistoragetype_, &from.uistoragetype_,
    reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressReq_USR)
}

void StorageAddressReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  _cached_size_ = 0;
}

StorageAddressReq_USR::~StorageAddressReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressReq_USR)
  SharedDtor();
}

void StorageAddressReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[90].descriptor;
}

const StorageAddressReq_USR& StorageAddressReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressReq_USR* StorageAddressReq_USR::New(::google::protobuf::Arena* arena) const {
  StorageAddressReq_USR* n = new StorageAddressReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
}

bool StorageAddressReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageAction = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistorageaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressReq_USR)
  return false;
#undef DO_
}

void StorageAddressReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uistoragetype(), output);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uistorageaction(), output);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strfileid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressReq_USR)
}

::google::protobuf::uint8* StorageAddressReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uistoragetype(), target);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uistorageaction(), target);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strfileid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressReq_USR)
  return target;
}

size_t StorageAddressReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetype());
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistorageaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressReq_USR)
    MergeFrom(*source);
  }
}

void StorageAddressReq_USR::MergeFrom(const StorageAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.uistoragetype() != 0) {
    set_uistoragetype(from.uistoragetype());
  }
  if (from.uistorageaction() != 0) {
    set_uistorageaction(from.uistorageaction());
  }
}

void StorageAddressReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressReq_USR::CopyFrom(const StorageAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressReq_USR::IsInitialized() const {
  return true;
}

void StorageAddressReq_USR::Swap(StorageAddressReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressReq_USR::InternalSwap(StorageAddressReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strfileid_.Swap(&other->strfileid_);
  std::swap(uistoragetype_, other->uistoragetype_);
  std::swap(uistorageaction_, other->uistorageaction_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[90];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressReq_USR

// string strUserID = 1;
void StorageAddressReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void StorageAddressReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.strUserID)
}
#if LANG_CXX11
void StorageAddressReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_USR.strUserID)
}
#endif
void StorageAddressReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_USR.strUserID)
}
void StorageAddressReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_USR.strUserID)
}
::std::string* StorageAddressReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_USR.strUserID)
}

// uint32 uiStorageType = 2;
void StorageAddressReq_USR::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_USR::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.uiStorageType)
  return uistoragetype_;
}
void StorageAddressReq_USR::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.uiStorageType)
}

// uint32 uiStorageAction = 3;
void StorageAddressReq_USR::clear_uistorageaction() {
  uistorageaction_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_USR::uistorageaction() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.uiStorageAction)
  return uistorageaction_;
}
void StorageAddressReq_USR::set_uistorageaction(::google::protobuf::uint32 value) {
  
  uistorageaction_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.uiStorageAction)
}

// string strFileID = 4;
void StorageAddressReq_USR::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.strFileID)
  return strfileid_.GetNoArena();
}
void StorageAddressReq_USR::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.strFileID)
}
#if LANG_CXX11
void StorageAddressReq_USR::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_USR.strFileID)
}
#endif
void StorageAddressReq_USR::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_USR.strFileID)
}
void StorageAddressReq_USR::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_USR.strFileID)
}
::std::string* StorageAddressReq_USR::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_USR.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_USR::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_USR.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_USR::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_USR.strFileID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressRsp_USR::kStrAddressFieldNumber;
const int StorageAddressRsp_USR::kUiPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressRsp_USR::StorageAddressRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressRsp_USR)
}
StorageAddressRsp_USR::StorageAddressRsp_USR(const StorageAddressRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straddress().size() > 0) {
    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  uiport_ = from.uiport_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressRsp_USR)
}

void StorageAddressRsp_USR::SharedCtor() {
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
  _cached_size_ = 0;
}

StorageAddressRsp_USR::~StorageAddressRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressRsp_USR)
  SharedDtor();
}

void StorageAddressRsp_USR::SharedDtor() {
  straddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[91].descriptor;
}

const StorageAddressRsp_USR& StorageAddressRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressRsp_USR* StorageAddressRsp_USR::New(::google::protobuf::Arena* arena) const {
  StorageAddressRsp_USR* n = new StorageAddressRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressRsp_USR)
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
}

bool StorageAddressRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressRsp_USR.strAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiPort = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressRsp_USR)
  return false;
#undef DO_
}

void StorageAddressRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressRsp_USR)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_USR.strAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straddress(), output);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiport(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressRsp_USR)
}

::google::protobuf::uint8* StorageAddressRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressRsp_USR)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_USR.strAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straddress(), target);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressRsp_USR)
  return target;
}

size_t StorageAddressRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressRsp_USR)
  size_t total_size = 0;

  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straddress());
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressRsp_USR)
    MergeFrom(*source);
  }
}

void StorageAddressRsp_USR::MergeFrom(const StorageAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straddress().size() > 0) {

    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  if (from.uiport() != 0) {
    set_uiport(from.uiport());
  }
}

void StorageAddressRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressRsp_USR::CopyFrom(const StorageAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressRsp_USR::IsInitialized() const {
  return true;
}

void StorageAddressRsp_USR::Swap(StorageAddressRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressRsp_USR::InternalSwap(StorageAddressRsp_USR* other) {
  straddress_.Swap(&other->straddress_);
  std::swap(uiport_, other->uiport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[91];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressRsp_USR

// string strAddress = 1;
void StorageAddressRsp_USR::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressRsp_USR::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_USR.strAddress)
  return straddress_.GetNoArena();
}
void StorageAddressRsp_USR::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
#if LANG_CXX11
void StorageAddressRsp_USR::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
#endif
void StorageAddressRsp_USR::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
void StorageAddressRsp_USR::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
::std::string* StorageAddressRsp_USR::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressRsp_USR.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressRsp_USR::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressRsp_USR.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressRsp_USR::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressRsp_USR.strAddress)
}

// uint32 uiPort = 2;
void StorageAddressRsp_USR::clear_uiport() {
  uiport_ = 0u;
}
::google::protobuf::uint32 StorageAddressRsp_USR::uiport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_USR.uiPort)
  return uiport_;
}
void StorageAddressRsp_USR::set_uiport(::google::protobuf::uint32 value) {
  
  uiport_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_USR.uiPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoReq_USR::kStrUserIDFieldNumber;
const int P2pInfoReq_USR::kStrUserIpAddressFieldNumber;
const int P2pInfoReq_USR::kStrDevIDFieldNumber;
const int P2pInfoReq_USR::kUiP2PSupplierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoReq_USR::P2pInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoReq_USR)
}
P2pInfoReq_USR::P2pInfoReq_USR(const P2pInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  struseripaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struseripaddress().size() > 0) {
    struseripaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseripaddress_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  uip2psupplier_ = from.uip2psupplier_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoReq_USR)
}

void P2pInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseripaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uip2psupplier_ = 0u;
  _cached_size_ = 0;
}

P2pInfoReq_USR::~P2pInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoReq_USR)
  SharedDtor();
}

void P2pInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseripaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[92].descriptor;
}

const P2pInfoReq_USR& P2pInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoReq_USR* P2pInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  P2pInfoReq_USR* n = new P2pInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uip2psupplier_ = 0u;
}

bool P2pInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserIpAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struseripaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struseripaddress().data(), this->struseripaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_USR.strUserIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiP2pSupplier = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uip2psupplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoReq_USR)
  return false;
#undef DO_
}

void P2pInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strUserIpAddress = 2;
  if (this->struseripaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseripaddress().data(), this->struseripaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->struseripaddress(), output);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevid(), output);
  }

  // uint32 uiP2pSupplier = 4;
  if (this->uip2psupplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uip2psupplier(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoReq_USR)
}

::google::protobuf::uint8* P2pInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strUserIpAddress = 2;
  if (this->struseripaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseripaddress().data(), this->struseripaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->struseripaddress(), target);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevid(), target);
  }

  // uint32 uiP2pSupplier = 4;
  if (this->uip2psupplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uip2psupplier(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoReq_USR)
  return target;
}

size_t P2pInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strUserIpAddress = 2;
  if (this->struseripaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struseripaddress());
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // uint32 uiP2pSupplier = 4;
  if (this->uip2psupplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uip2psupplier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoReq_USR)
    MergeFrom(*source);
  }
}

void P2pInfoReq_USR::MergeFrom(const P2pInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.struseripaddress().size() > 0) {

    struseripaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseripaddress_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.uip2psupplier() != 0) {
    set_uip2psupplier(from.uip2psupplier());
  }
}

void P2pInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoReq_USR::CopyFrom(const P2pInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoReq_USR::IsInitialized() const {
  return true;
}

void P2pInfoReq_USR::Swap(P2pInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoReq_USR::InternalSwap(P2pInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  struseripaddress_.Swap(&other->struseripaddress_);
  strdevid_.Swap(&other->strdevid_);
  std::swap(uip2psupplier_, other->uip2psupplier_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[92];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoReq_USR

// string strUserID = 1;
void P2pInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void P2pInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strUserID)
}
#if LANG_CXX11
void P2pInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strUserID)
}
#endif
void P2pInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strUserID)
}
void P2pInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strUserID)
}
::std::string* P2pInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strUserID)
}

// string strUserIpAddress = 2;
void P2pInfoReq_USR::clear_struseripaddress() {
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_USR::struseripaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  return struseripaddress_.GetNoArena();
}
void P2pInfoReq_USR::set_struseripaddress(const ::std::string& value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
#if LANG_CXX11
void P2pInfoReq_USR::set_struseripaddress(::std::string&& value) {
  
  struseripaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
#endif
void P2pInfoReq_USR::set_struseripaddress(const char* value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
void P2pInfoReq_USR::set_struseripaddress(const char* value, size_t size) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
::std::string* P2pInfoReq_USR::mutable_struseripaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  return struseripaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_USR::release_struseripaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  
  return struseripaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_USR::set_allocated_struseripaddress(::std::string* struseripaddress) {
  if (struseripaddress != NULL) {
    
  } else {
    
  }
  struseripaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseripaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}

// string strDevID = 3;
void P2pInfoReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void P2pInfoReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strDevID)
}
#if LANG_CXX11
void P2pInfoReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strDevID)
}
#endif
void P2pInfoReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strDevID)
}
void P2pInfoReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strDevID)
}
::std::string* P2pInfoReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strDevID)
}

// uint32 uiP2pSupplier = 4;
void P2pInfoReq_USR::clear_uip2psupplier() {
  uip2psupplier_ = 0u;
}
::google::protobuf::uint32 P2pInfoReq_USR::uip2psupplier() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.uiP2pSupplier)
  return uip2psupplier_;
}
void P2pInfoReq_USR::set_uip2psupplier(::google::protobuf::uint32 value) {
  
  uip2psupplier_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.uiP2pSupplier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoRsp_USR::kStrP2PServerFieldNumber;
const int P2pInfoRsp_USR::kStrP2PIDFieldNumber;
const int P2pInfoRsp_USR::kUiLeaseFieldNumber;
const int P2pInfoRsp_USR::kStrLicenseKeyFieldNumber;
const int P2pInfoRsp_USR::kStrPushIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoRsp_USR::P2pInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoRsp_USR)
}
P2pInfoRsp_USR::P2pInfoRsp_USR(const P2pInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pserver().size() > 0) {
    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  strlicensekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlicensekey().size() > 0) {
    strlicensekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensekey_);
  }
  strpushid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpushid().size() > 0) {
    strpushid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpushid_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoRsp_USR)
}

void P2pInfoRsp_USR::SharedCtor() {
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpushid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

P2pInfoRsp_USR::~P2pInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoRsp_USR)
  SharedDtor();
}

void P2pInfoRsp_USR::SharedDtor() {
  strp2pserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensekey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpushid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[93].descriptor;
}

const P2pInfoRsp_USR& P2pInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoRsp_USR* P2pInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  P2pInfoRsp_USR* n = new P2pInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoRsp_USR)
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpushid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool P2pInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strP2pServer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pserver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pserver().data(), this->strp2pserver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_USR.strP2pServer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_USR.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLicenseKey = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlicensekey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlicensekey().data(), this->strlicensekey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_USR.strLicenseKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPushID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpushid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpushid().data(), this->strpushid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_USR.strPushID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoRsp_USR)
  return false;
#undef DO_
}

void P2pInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoRsp_USR)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strp2pserver(), output);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strp2pid(), output);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uilease(), output);
  }

  // string strLicenseKey = 4;
  if (this->strlicensekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensekey().data(), this->strlicensekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strLicenseKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strlicensekey(), output);
  }

  // string strPushID = 5;
  if (this->strpushid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpushid().data(), this->strpushid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strPushID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strpushid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoRsp_USR)
}

::google::protobuf::uint8* P2pInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoRsp_USR)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strp2pserver(), target);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strp2pid(), target);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uilease(), target);
  }

  // string strLicenseKey = 4;
  if (this->strlicensekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensekey().data(), this->strlicensekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strLicenseKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strlicensekey(), target);
  }

  // string strPushID = 5;
  if (this->strpushid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpushid().data(), this->strpushid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strPushID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strpushid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoRsp_USR)
  return target;
}

size_t P2pInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoRsp_USR)
  size_t total_size = 0;

  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pserver());
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // string strLicenseKey = 4;
  if (this->strlicensekey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlicensekey());
  }

  // string strPushID = 5;
  if (this->strpushid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpushid());
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoRsp_USR)
    MergeFrom(*source);
  }
}

void P2pInfoRsp_USR::MergeFrom(const P2pInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strp2pserver().size() > 0) {

    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.strlicensekey().size() > 0) {

    strlicensekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensekey_);
  }
  if (from.strpushid().size() > 0) {

    strpushid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpushid_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void P2pInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoRsp_USR::CopyFrom(const P2pInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoRsp_USR::IsInitialized() const {
  return true;
}

void P2pInfoRsp_USR::Swap(P2pInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoRsp_USR::InternalSwap(P2pInfoRsp_USR* other) {
  strp2pserver_.Swap(&other->strp2pserver_);
  strp2pid_.Swap(&other->strp2pid_);
  strlicensekey_.Swap(&other->strlicensekey_);
  strpushid_.Swap(&other->strpushid_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[93];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoRsp_USR

// string strP2pServer = 1;
void P2pInfoRsp_USR::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_USR::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  return strp2pserver_.GetNoArena();
}
void P2pInfoRsp_USR::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
#if LANG_CXX11
void P2pInfoRsp_USR::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
#endif
void P2pInfoRsp_USR::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
void P2pInfoRsp_USR::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
::std::string* P2pInfoRsp_USR::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_USR::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_USR::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}

// string strP2pID = 2;
void P2pInfoRsp_USR::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_USR::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  return strp2pid_.GetNoArena();
}
void P2pInfoRsp_USR::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
#if LANG_CXX11
void P2pInfoRsp_USR::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
#endif
void P2pInfoRsp_USR::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
void P2pInfoRsp_USR::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
::std::string* P2pInfoRsp_USR::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_USR::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_USR::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}

// uint32 uiLease = 3;
void P2pInfoRsp_USR::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 P2pInfoRsp_USR::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.uiLease)
  return uilease_;
}
void P2pInfoRsp_USR::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.uiLease)
}

// string strLicenseKey = 4;
void P2pInfoRsp_USR::clear_strlicensekey() {
  strlicensekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_USR::strlicensekey() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
  return strlicensekey_.GetNoArena();
}
void P2pInfoRsp_USR::set_strlicensekey(const ::std::string& value) {
  
  strlicensekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
}
#if LANG_CXX11
void P2pInfoRsp_USR::set_strlicensekey(::std::string&& value) {
  
  strlicensekey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
}
#endif
void P2pInfoRsp_USR::set_strlicensekey(const char* value) {
  
  strlicensekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
}
void P2pInfoRsp_USR::set_strlicensekey(const char* value, size_t size) {
  
  strlicensekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
}
::std::string* P2pInfoRsp_USR::mutable_strlicensekey() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
  return strlicensekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_USR::release_strlicensekey() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
  
  return strlicensekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_USR::set_allocated_strlicensekey(::std::string* strlicensekey) {
  if (strlicensekey != NULL) {
    
  } else {
    
  }
  strlicensekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlicensekey);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strLicenseKey)
}

// string strPushID = 5;
void P2pInfoRsp_USR::clear_strpushid() {
  strpushid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_USR::strpushid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strPushID)
  return strpushid_.GetNoArena();
}
void P2pInfoRsp_USR::set_strpushid(const ::std::string& value) {
  
  strpushid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strPushID)
}
#if LANG_CXX11
void P2pInfoRsp_USR::set_strpushid(::std::string&& value) {
  
  strpushid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strPushID)
}
#endif
void P2pInfoRsp_USR::set_strpushid(const char* value) {
  
  strpushid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strPushID)
}
void P2pInfoRsp_USR::set_strpushid(const char* value, size_t size) {
  
  strpushid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strPushID)
}
::std::string* P2pInfoRsp_USR::mutable_strpushid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strPushID)
  return strpushid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_USR::release_strpushid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strPushID)
  
  return strpushid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_USR::set_allocated_strpushid(::std::string* strpushid) {
  if (strpushid != NULL) {
    
  } else {
    
  }
  strpushid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpushid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strPushID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFileReq_USR::kStrUserIDFieldNumber;
const int DeleteFileReq_USR::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFileReq_USR::DeleteFileReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteFileReq_USR)
}
DeleteFileReq_USR::DeleteFileReq_USR(const DeleteFileReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileid_(from.strfileid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteFileReq_USR)
}

void DeleteFileReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteFileReq_USR::~DeleteFileReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteFileReq_USR)
  SharedDtor();
}

void DeleteFileReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFileReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFileReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[94].descriptor;
}

const DeleteFileReq_USR& DeleteFileReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFileReq_USR* DeleteFileReq_USR::New(::google::protobuf::Arena* arena) const {
  DeleteFileReq_USR* n = new DeleteFileReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFileReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteFileReq_USR)
  strfileid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteFileReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteFileReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid(this->strfileid_size() - 1).data(),
            this->strfileid(this->strfileid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteFileReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteFileReq_USR)
  return false;
#undef DO_
}

void DeleteFileReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteFileReq_USR)
}

::google::protobuf::uint8* DeleteFileReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strFileID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteFileReq_USR)
  return target;
}

size_t DeleteFileReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteFileReq_USR)
  size_t total_size = 0;

  // repeated string strFileID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileid_size());
  for (int i = 0; i < this->strfileid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFileReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFileReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFileReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteFileReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteFileReq_USR)
    MergeFrom(*source);
  }
}

void DeleteFileReq_USR::MergeFrom(const DeleteFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.MergeFrom(from.strfileid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DeleteFileReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFileReq_USR::CopyFrom(const DeleteFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFileReq_USR::IsInitialized() const {
  return true;
}

void DeleteFileReq_USR::Swap(DeleteFileReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFileReq_USR::InternalSwap(DeleteFileReq_USR* other) {
  strfileid_.UnsafeArenaSwap(&other->strfileid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFileReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[94];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFileReq_USR

// string strUserID = 1;
void DeleteFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DeleteFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileReq_USR.strUserID)
}
#if LANG_CXX11
void DeleteFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteFileReq_USR.strUserID)
}
#endif
void DeleteFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileReq_USR.strUserID)
}
void DeleteFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileReq_USR.strUserID)
}
::std::string* DeleteFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteFileReq_USR.strUserID)
}

// repeated string strFileID = 2;
int DeleteFileReq_USR::strfileid_size() const {
  return strfileid_.size();
}
void DeleteFileReq_USR::clear_strfileid() {
  strfileid_.Clear();
}
const ::std::string& DeleteFileReq_USR::strfileid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Get(index);
}
::std::string* DeleteFileReq_USR::mutable_strfileid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Mutable(index);
}
void DeleteFileReq_USR::set_strfileid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileReq_USR.strFileID)
  strfileid_.Mutable(index)->assign(value);
}
void DeleteFileReq_USR::set_strfileid(int index, const char* value) {
  strfileid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileReq_USR.strFileID)
}
void DeleteFileReq_USR::set_strfileid(int index, const char* value, size_t size) {
  strfileid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileReq_USR.strFileID)
}
::std::string* DeleteFileReq_USR::add_strfileid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Add();
}
void DeleteFileReq_USR::add_strfileid(const ::std::string& value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeleteFileReq_USR.strFileID)
}
void DeleteFileReq_USR::add_strfileid(const char* value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeleteFileReq_USR.strFileID)
}
void DeleteFileReq_USR::add_strfileid(const char* value, size_t size) {
  strfileid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeleteFileReq_USR.strFileID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteFileReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteFileReq_USR::mutable_strfileid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeleteFileReq_USR.strFileID)
  return &strfileid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFileRsp_USR::kStrValueFieldNumber;
const int DeleteFileRsp_USR::kStrFileIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFileRsp_USR::DeleteFileRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteFileRsp_USR)
}
DeleteFileRsp_USR::DeleteFileRsp_USR(const DeleteFileRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileidfailed_(from.strfileidfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteFileRsp_USR)
}

void DeleteFileRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteFileRsp_USR::~DeleteFileRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteFileRsp_USR)
  SharedDtor();
}

void DeleteFileRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFileRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFileRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[95].descriptor;
}

const DeleteFileRsp_USR& DeleteFileRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFileRsp_USR* DeleteFileRsp_USR::New(::google::protobuf::Arena* arena) const {
  DeleteFileRsp_USR* n = new DeleteFileRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFileRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteFileRsp_USR)
  strfileidfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteFileRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteFileRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileidfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileidfailed(this->strfileidfailed_size() - 1).data(),
            this->strfileidfailed(this->strfileidfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileRsp_USR.strFileIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteFileRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteFileRsp_USR)
  return false;
#undef DO_
}

void DeleteFileRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strFileIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileidfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteFileRsp_USR)
}

::google::protobuf::uint8* DeleteFileRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strFileIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileidfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteFileRsp_USR)
  return target;
}

size_t DeleteFileRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteFileRsp_USR)
  size_t total_size = 0;

  // repeated string strFileIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileidfailed_size());
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileidfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFileRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFileRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFileRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteFileRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteFileRsp_USR)
    MergeFrom(*source);
  }
}

void DeleteFileRsp_USR::MergeFrom(const DeleteFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileidfailed_.MergeFrom(from.strfileidfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DeleteFileRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFileRsp_USR::CopyFrom(const DeleteFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFileRsp_USR::IsInitialized() const {
  return true;
}

void DeleteFileRsp_USR::Swap(DeleteFileRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFileRsp_USR::InternalSwap(DeleteFileRsp_USR* other) {
  strfileidfailed_.UnsafeArenaSwap(&other->strfileidfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFileRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[95];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFileRsp_USR

// string strValue = 1;
void DeleteFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DeleteFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileRsp_USR.strValue)
}
#if LANG_CXX11
void DeleteFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteFileRsp_USR.strValue)
}
#endif
void DeleteFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileRsp_USR.strValue)
}
void DeleteFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileRsp_USR.strValue)
}
::std::string* DeleteFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteFileRsp_USR.strValue)
}

// repeated string strFileIDFailed = 2;
int DeleteFileRsp_USR::strfileidfailed_size() const {
  return strfileidfailed_.size();
}
void DeleteFileRsp_USR::clear_strfileidfailed() {
  strfileidfailed_.Clear();
}
const ::std::string& DeleteFileRsp_USR::strfileidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Get(index);
}
::std::string* DeleteFileRsp_USR::mutable_strfileidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Mutable(index);
}
void DeleteFileRsp_USR::set_strfileidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  strfileidfailed_.Mutable(index)->assign(value);
}
void DeleteFileRsp_USR::set_strfileidfailed(int index, const char* value) {
  strfileidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
void DeleteFileRsp_USR::set_strfileidfailed(int index, const char* value, size_t size) {
  strfileidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
::std::string* DeleteFileRsp_USR::add_strfileidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Add();
}
void DeleteFileRsp_USR::add_strfileidfailed(const ::std::string& value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
void DeleteFileRsp_USR::add_strfileidfailed(const char* value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
void DeleteFileRsp_USR::add_strfileidfailed(const char* value, size_t size) {
  strfileidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteFileRsp_USR::strfileidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteFileRsp_USR::mutable_strfileidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return &strfileidfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadFileReq_USR::kStrUserIDFieldNumber;
const int DownloadFileReq_USR::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadFileReq_USR::DownloadFileReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DownloadFileReq_USR)
}
DownloadFileReq_USR::DownloadFileReq_USR(const DownloadFileReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileid_(from.strfileid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DownloadFileReq_USR)
}

void DownloadFileReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DownloadFileReq_USR::~DownloadFileReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DownloadFileReq_USR)
  SharedDtor();
}

void DownloadFileReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadFileReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadFileReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[96].descriptor;
}

const DownloadFileReq_USR& DownloadFileReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DownloadFileReq_USR* DownloadFileReq_USR::New(::google::protobuf::Arena* arena) const {
  DownloadFileReq_USR* n = new DownloadFileReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownloadFileReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DownloadFileReq_USR)
  strfileid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DownloadFileReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DownloadFileReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DownloadFileReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid(this->strfileid_size() - 1).data(),
            this->strfileid(this->strfileid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DownloadFileReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DownloadFileReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DownloadFileReq_USR)
  return false;
#undef DO_
}

void DownloadFileReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DownloadFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DownloadFileReq_USR)
}

::google::protobuf::uint8* DownloadFileReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DownloadFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strFileID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DownloadFileReq_USR)
  return target;
}

size_t DownloadFileReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DownloadFileReq_USR)
  size_t total_size = 0;

  // repeated string strFileID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileid_size());
  for (int i = 0; i < this->strfileid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadFileReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DownloadFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadFileReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadFileReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DownloadFileReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DownloadFileReq_USR)
    MergeFrom(*source);
  }
}

void DownloadFileReq_USR::MergeFrom(const DownloadFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DownloadFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.MergeFrom(from.strfileid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DownloadFileReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DownloadFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFileReq_USR::CopyFrom(const DownloadFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DownloadFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileReq_USR::IsInitialized() const {
  return true;
}

void DownloadFileReq_USR::Swap(DownloadFileReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadFileReq_USR::InternalSwap(DownloadFileReq_USR* other) {
  strfileid_.UnsafeArenaSwap(&other->strfileid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownloadFileReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[96];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DownloadFileReq_USR

// string strUserID = 1;
void DownloadFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DownloadFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DownloadFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileReq_USR.strUserID)
}
#if LANG_CXX11
void DownloadFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DownloadFileReq_USR.strUserID)
}
#endif
void DownloadFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileReq_USR.strUserID)
}
void DownloadFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileReq_USR.strUserID)
}
::std::string* DownloadFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DownloadFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DownloadFileReq_USR.strUserID)
}

// repeated string strFileID = 2;
int DownloadFileReq_USR::strfileid_size() const {
  return strfileid_.size();
}
void DownloadFileReq_USR::clear_strfileid() {
  strfileid_.Clear();
}
const ::std::string& DownloadFileReq_USR::strfileid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Get(index);
}
::std::string* DownloadFileReq_USR::mutable_strfileid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Mutable(index);
}
void DownloadFileReq_USR::set_strfileid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileReq_USR.strFileID)
  strfileid_.Mutable(index)->assign(value);
}
void DownloadFileReq_USR::set_strfileid(int index, const char* value) {
  strfileid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileReq_USR.strFileID)
}
void DownloadFileReq_USR::set_strfileid(int index, const char* value, size_t size) {
  strfileid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileReq_USR.strFileID)
}
::std::string* DownloadFileReq_USR::add_strfileid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Add();
}
void DownloadFileReq_USR::add_strfileid(const ::std::string& value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DownloadFileReq_USR.strFileID)
}
void DownloadFileReq_USR::add_strfileid(const char* value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DownloadFileReq_USR.strFileID)
}
void DownloadFileReq_USR::add_strfileid(const char* value, size_t size) {
  strfileid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DownloadFileReq_USR.strFileID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DownloadFileReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DownloadFileReq_USR::mutable_strfileid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DownloadFileReq_USR.strFileID)
  return &strfileid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadFileRsp_USR::kStrValueFieldNumber;
const int DownloadFileRsp_USR::kFileUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadFileRsp_USR::DownloadFileRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DownloadFileRsp_USR)
}
DownloadFileRsp_USR::DownloadFileRsp_USR(const DownloadFileRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileurl_(from.fileurl_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DownloadFileRsp_USR)
}

void DownloadFileRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DownloadFileRsp_USR::~DownloadFileRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DownloadFileRsp_USR)
  SharedDtor();
}

void DownloadFileRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadFileRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadFileRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[97].descriptor;
}

const DownloadFileRsp_USR& DownloadFileRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DownloadFileRsp_USR* DownloadFileRsp_USR::New(::google::protobuf::Arena* arena) const {
  DownloadFileRsp_USR* n = new DownloadFileRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownloadFileRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DownloadFileRsp_USR)
  fileurl_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DownloadFileRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DownloadFileRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DownloadFileRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.FileUrl fileUrl = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileurl()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DownloadFileRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DownloadFileRsp_USR)
  return false;
#undef DO_
}

void DownloadFileRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DownloadFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  for (unsigned int i = 0, n = this->fileurl_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileurl(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DownloadFileRsp_USR)
}

::google::protobuf::uint8* DownloadFileRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DownloadFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  for (unsigned int i = 0, n = this->fileurl_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileurl(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DownloadFileRsp_USR)
  return target;
}

size_t DownloadFileRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DownloadFileRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  {
    unsigned int count = this->fileurl_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileurl(i));
    }
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadFileRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DownloadFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadFileRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadFileRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DownloadFileRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DownloadFileRsp_USR)
    MergeFrom(*source);
  }
}

void DownloadFileRsp_USR::MergeFrom(const DownloadFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DownloadFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileurl_.MergeFrom(from.fileurl_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DownloadFileRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DownloadFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFileRsp_USR::CopyFrom(const DownloadFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DownloadFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileRsp_USR::IsInitialized() const {
  return true;
}

void DownloadFileRsp_USR::Swap(DownloadFileRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadFileRsp_USR::InternalSwap(DownloadFileRsp_USR* other) {
  fileurl_.UnsafeArenaSwap(&other->fileurl_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownloadFileRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[97];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DownloadFileRsp_USR

// string strValue = 1;
void DownloadFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DownloadFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DownloadFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileRsp_USR.strValue)
}
#if LANG_CXX11
void DownloadFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DownloadFileRsp_USR.strValue)
}
#endif
void DownloadFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileRsp_USR.strValue)
}
void DownloadFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileRsp_USR.strValue)
}
::std::string* DownloadFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DownloadFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DownloadFileRsp_USR.strValue)
}

// repeated .Interactive.Message.FileUrl fileUrl = 2;
int DownloadFileRsp_USR::fileurl_size() const {
  return fileurl_.size();
}
void DownloadFileRsp_USR::clear_fileurl() {
  fileurl_.Clear();
}
const ::Interactive::Message::FileUrl& DownloadFileRsp_USR::fileurl(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Get(index);
}
::Interactive::Message::FileUrl* DownloadFileRsp_USR::mutable_fileurl(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Mutable(index);
}
::Interactive::Message::FileUrl* DownloadFileRsp_USR::add_fileurl() {
  // @@protoc_insertion_point(field_add:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >*
DownloadFileRsp_USR::mutable_fileurl() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return &fileurl_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >&
DownloadFileRsp_USR::fileurl() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFileReq_USR::kStrUserIDFieldNumber;
const int QueryFileReq_USR::kStrDevIDFieldNumber;
const int QueryFileReq_USR::kUiBeginIndexFieldNumber;
const int QueryFileReq_USR::kStrBeginDateFieldNumber;
const int QueryFileReq_USR::kStrEndDateFieldNumber;
const int QueryFileReq_USR::kUiBusinessTypeFieldNumber;
const int QueryFileReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFileReq_USR::QueryFileReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFileReq_USR)
}
QueryFileReq_USR::QueryFileReq_USR(const QueryFileReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  ::memcpy(&uibeginindex_, &from.uibeginindex_,
    reinterpret_cast<char*>(&uibusinesstype_) -
    reinterpret_cast<char*>(&uibeginindex_) + sizeof(uibusinesstype_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFileReq_USR)
}

void QueryFileReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uibeginindex_, 0, reinterpret_cast<char*>(&uibusinesstype_) -
    reinterpret_cast<char*>(&uibeginindex_) + sizeof(uibusinesstype_));
  _cached_size_ = 0;
}

QueryFileReq_USR::~QueryFileReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFileReq_USR)
  SharedDtor();
}

void QueryFileReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFileReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFileReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[98].descriptor;
}

const QueryFileReq_USR& QueryFileReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFileReq_USR* QueryFileReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryFileReq_USR* n = new QueryFileReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFileReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFileReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uibeginindex_, 0, reinterpret_cast<char*>(&uibusinesstype_) -
    reinterpret_cast<char*>(&uibeginindex_) + sizeof(uibusinesstype_));
}

bool QueryFileReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFileReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBeginDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strBeginDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndDate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strEndDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBusinessType = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFileReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFileReq_USR)
  return false;
#undef DO_
}

void QueryFileReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevid(), output);
  }

  // uint32 uiBeginIndex = 3;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uibeginindex(), output);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strBeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strbegindate(), output);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strenddate(), output);
  }

  // uint32 uiBusinessType = 6;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uibusinesstype(), output);
  }

  // string strValue = 7;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFileReq_USR)
}

::google::protobuf::uint8* QueryFileReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevid(), target);
  }

  // uint32 uiBeginIndex = 3;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uibeginindex(), target);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strBeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strbegindate(), target);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strenddate(), target);
  }

  // uint32 uiBusinessType = 6;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uibusinesstype(), target);
  }

  // string strValue = 7;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFileReq_USR)
  return target;
}

size_t QueryFileReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFileReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // string strValue = 7;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 3;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  // uint32 uiBusinessType = 6;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFileReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFileReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFileReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFileReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFileReq_USR)
    MergeFrom(*source);
  }
}

void QueryFileReq_USR::MergeFrom(const QueryFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
}

void QueryFileReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFileReq_USR::CopyFrom(const QueryFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFileReq_USR::IsInitialized() const {
  return true;
}

void QueryFileReq_USR::Swap(QueryFileReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFileReq_USR::InternalSwap(QueryFileReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFileReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[98];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFileReq_USR

// string strUserID = 1;
void QueryFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strUserID)
}
#if LANG_CXX11
void QueryFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strUserID)
}
#endif
void QueryFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strUserID)
}
void QueryFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strUserID)
}
::std::string* QueryFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strUserID)
}

// string strDevID = 2;
void QueryFileReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void QueryFileReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strDevID)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strDevID)
}
#endif
void QueryFileReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strDevID)
}
void QueryFileReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strDevID)
}
::std::string* QueryFileReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strDevID)
}

// uint32 uiBeginIndex = 3;
void QueryFileReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryFileReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryFileReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.uiBeginIndex)
}

// string strBeginDate = 4;
void QueryFileReq_USR::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strBeginDate)
  return strbegindate_.GetNoArena();
}
void QueryFileReq_USR::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
#endif
void QueryFileReq_USR::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
void QueryFileReq_USR::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
::std::string* QueryFileReq_USR::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strBeginDate)
}

// string strEndDate = 5;
void QueryFileReq_USR::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strEndDate)
  return strenddate_.GetNoArena();
}
void QueryFileReq_USR::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strEndDate)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strEndDate)
}
#endif
void QueryFileReq_USR::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strEndDate)
}
void QueryFileReq_USR::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strEndDate)
}
::std::string* QueryFileReq_USR::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strEndDate)
}

// uint32 uiBusinessType = 6;
void QueryFileReq_USR::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 QueryFileReq_USR::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.uiBusinessType)
  return uibusinesstype_;
}
void QueryFileReq_USR::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.uiBusinessType)
}

// string strValue = 7;
void QueryFileReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryFileReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strValue)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strValue)
}
#endif
void QueryFileReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strValue)
}
void QueryFileReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strValue)
}
::std::string* QueryFileReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFileRsp_USR::kStrValueFieldNumber;
const int QueryFileRsp_USR::kFileInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFileRsp_USR::QueryFileRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFileRsp_USR)
}
QueryFileRsp_USR::QueryFileRsp_USR(const QueryFileRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileinfo_(from.fileinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFileRsp_USR)
}

void QueryFileRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryFileRsp_USR::~QueryFileRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFileRsp_USR)
  SharedDtor();
}

void QueryFileRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFileRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFileRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[99].descriptor;
}

const QueryFileRsp_USR& QueryFileRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFileRsp_USR* QueryFileRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryFileRsp_USR* n = new QueryFileRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFileRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFileRsp_USR)
  fileinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryFileRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFileRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.File fileInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFileRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFileRsp_USR)
  return false;
#undef DO_
}

void QueryFileRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFileRsp_USR)
}

::google::protobuf::uint8* QueryFileRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFileRsp_USR)
  return target;
}

size_t QueryFileRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFileRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.File fileInfo = 2;
  {
    unsigned int count = this->fileinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfo(i));
    }
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFileRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFileRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFileRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFileRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFileRsp_USR)
    MergeFrom(*source);
  }
}

void QueryFileRsp_USR::MergeFrom(const QueryFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileinfo_.MergeFrom(from.fileinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryFileRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFileRsp_USR::CopyFrom(const QueryFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFileRsp_USR::IsInitialized() const {
  return true;
}

void QueryFileRsp_USR::Swap(QueryFileRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFileRsp_USR::InternalSwap(QueryFileRsp_USR* other) {
  fileinfo_.UnsafeArenaSwap(&other->fileinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFileRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[99];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFileRsp_USR

// string strValue = 1;
void QueryFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileRsp_USR.strValue)
}
#if LANG_CXX11
void QueryFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileRsp_USR.strValue)
}
#endif
void QueryFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileRsp_USR.strValue)
}
void QueryFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileRsp_USR.strValue)
}
::std::string* QueryFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileRsp_USR.strValue)
}

// repeated .Interactive.Message.File fileInfo = 2;
int QueryFileRsp_USR::fileinfo_size() const {
  return fileinfo_.size();
}
void QueryFileRsp_USR::clear_fileinfo() {
  fileinfo_.Clear();
}
const ::Interactive::Message::File& QueryFileRsp_USR::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Get(index);
}
::Interactive::Message::File* QueryFileRsp_USR::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Mutable(index);
}
::Interactive::Message::File* QueryFileRsp_USR::add_fileinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
QueryFileRsp_USR::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return &fileinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
QueryFileRsp_USR::fileinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAccessDomainNameReq_USR::kStrUserIpAddressFieldNumber;
const int QueryAccessDomainNameReq_USR::kStrUsernameFieldNumber;
const int QueryAccessDomainNameReq_USR::kUiBusinessTypeFieldNumber;
const int QueryAccessDomainNameReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAccessDomainNameReq_USR::QueryAccessDomainNameReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAccessDomainNameReq_USR)
}
QueryAccessDomainNameReq_USR::QueryAccessDomainNameReq_USR(const QueryAccessDomainNameReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struseripaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struseripaddress().size() > 0) {
    struseripaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseripaddress_);
  }
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibusinesstype_ = from.uibusinesstype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAccessDomainNameReq_USR)
}

void QueryAccessDomainNameReq_USR::SharedCtor() {
  struseripaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
  _cached_size_ = 0;
}

QueryAccessDomainNameReq_USR::~QueryAccessDomainNameReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAccessDomainNameReq_USR)
  SharedDtor();
}

void QueryAccessDomainNameReq_USR::SharedDtor() {
  struseripaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAccessDomainNameReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAccessDomainNameReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[100].descriptor;
}

const QueryAccessDomainNameReq_USR& QueryAccessDomainNameReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAccessDomainNameReq_USR* QueryAccessDomainNameReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryAccessDomainNameReq_USR* n = new QueryAccessDomainNameReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAccessDomainNameReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
}

bool QueryAccessDomainNameReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserIpAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struseripaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struseripaddress().data(), this->struseripaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUsername = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameReq_USR.strUsername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBusinessType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAccessDomainNameReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAccessDomainNameReq_USR)
  return false;
#undef DO_
}

void QueryAccessDomainNameReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  // string strUserIpAddress = 1;
  if (this->struseripaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseripaddress().data(), this->struseripaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struseripaddress(), output);
  }

  // string strUsername = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_USR.strUsername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strusername(), output);
  }

  // uint32 uiBusinessType = 3;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uibusinesstype(), output);
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAccessDomainNameReq_USR)
}

::google::protobuf::uint8* QueryAccessDomainNameReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  // string strUserIpAddress = 1;
  if (this->struseripaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseripaddress().data(), this->struseripaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struseripaddress(), target);
  }

  // string strUsername = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_USR.strUsername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strusername(), target);
  }

  // uint32 uiBusinessType = 3;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uibusinesstype(), target);
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAccessDomainNameReq_USR)
  return target;
}

size_t QueryAccessDomainNameReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  size_t total_size = 0;

  // string strUserIpAddress = 1;
  if (this->struseripaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struseripaddress());
  }

  // string strUsername = 2;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strValue = 4;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBusinessType = 3;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAccessDomainNameReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAccessDomainNameReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAccessDomainNameReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAccessDomainNameReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAccessDomainNameReq_USR)
    MergeFrom(*source);
  }
}

void QueryAccessDomainNameReq_USR::MergeFrom(const QueryAccessDomainNameReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struseripaddress().size() > 0) {

    struseripaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseripaddress_);
  }
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
}

void QueryAccessDomainNameReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAccessDomainNameReq_USR::CopyFrom(const QueryAccessDomainNameReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAccessDomainNameReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccessDomainNameReq_USR::IsInitialized() const {
  return true;
}

void QueryAccessDomainNameReq_USR::Swap(QueryAccessDomainNameReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAccessDomainNameReq_USR::InternalSwap(QueryAccessDomainNameReq_USR* other) {
  struseripaddress_.Swap(&other->struseripaddress_);
  strusername_.Swap(&other->strusername_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAccessDomainNameReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[100];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAccessDomainNameReq_USR

// string strUserIpAddress = 1;
void QueryAccessDomainNameReq_USR::clear_struseripaddress() {
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameReq_USR::struseripaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
  return struseripaddress_.GetNoArena();
}
void QueryAccessDomainNameReq_USR::set_struseripaddress(const ::std::string& value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
}
#if LANG_CXX11
void QueryAccessDomainNameReq_USR::set_struseripaddress(::std::string&& value) {
  
  struseripaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
}
#endif
void QueryAccessDomainNameReq_USR::set_struseripaddress(const char* value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
}
void QueryAccessDomainNameReq_USR::set_struseripaddress(const char* value, size_t size) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
}
::std::string* QueryAccessDomainNameReq_USR::mutable_struseripaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
  return struseripaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameReq_USR::release_struseripaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
  
  return struseripaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameReq_USR::set_allocated_struseripaddress(::std::string* struseripaddress) {
  if (struseripaddress != NULL) {
    
  } else {
    
  }
  struseripaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseripaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameReq_USR.strUserIpAddress)
}

// string strUsername = 2;
void QueryAccessDomainNameReq_USR::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameReq_USR::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
  return strusername_.GetNoArena();
}
void QueryAccessDomainNameReq_USR::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
}
#if LANG_CXX11
void QueryAccessDomainNameReq_USR::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
}
#endif
void QueryAccessDomainNameReq_USR::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
}
void QueryAccessDomainNameReq_USR::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
}
::std::string* QueryAccessDomainNameReq_USR::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameReq_USR::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameReq_USR::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameReq_USR.strUsername)
}

// uint32 uiBusinessType = 3;
void QueryAccessDomainNameReq_USR::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 QueryAccessDomainNameReq_USR::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_USR.uiBusinessType)
  return uibusinesstype_;
}
void QueryAccessDomainNameReq_USR::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_USR.uiBusinessType)
}

// string strValue = 4;
void QueryAccessDomainNameReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryAccessDomainNameReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
}
#if LANG_CXX11
void QueryAccessDomainNameReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
}
#endif
void QueryAccessDomainNameReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
}
void QueryAccessDomainNameReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
}
::std::string* QueryAccessDomainNameReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAccessDomainNameRsp_USR::kStrDomainNameFieldNumber;
const int QueryAccessDomainNameRsp_USR::kUiLeaseFieldNumber;
const int QueryAccessDomainNameRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAccessDomainNameRsp_USR::QueryAccessDomainNameRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAccessDomainNameRsp_USR)
}
QueryAccessDomainNameRsp_USR::QueryAccessDomainNameRsp_USR(const QueryAccessDomainNameRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAccessDomainNameRsp_USR)
}

void QueryAccessDomainNameRsp_USR::SharedCtor() {
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

QueryAccessDomainNameRsp_USR::~QueryAccessDomainNameRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAccessDomainNameRsp_USR)
  SharedDtor();
}

void QueryAccessDomainNameRsp_USR::SharedDtor() {
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAccessDomainNameRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAccessDomainNameRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[101].descriptor;
}

const QueryAccessDomainNameRsp_USR& QueryAccessDomainNameRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAccessDomainNameRsp_USR* QueryAccessDomainNameRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryAccessDomainNameRsp_USR* n = new QueryAccessDomainNameRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAccessDomainNameRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool QueryAccessDomainNameRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDomainName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAccessDomainNameRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAccessDomainNameRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAccessDomainNameRsp_USR)
  return false;
#undef DO_
}

void QueryAccessDomainNameRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdomainname(), output);
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uilease(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAccessDomainNameRsp_USR)
}

::google::protobuf::uint8* QueryAccessDomainNameRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdomainname(), target);
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uilease(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAccessDomainNameRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAccessDomainNameRsp_USR)
  return target;
}

size_t QueryAccessDomainNameRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  size_t total_size = 0;

  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiLease = 2;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAccessDomainNameRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAccessDomainNameRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAccessDomainNameRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAccessDomainNameRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAccessDomainNameRsp_USR)
    MergeFrom(*source);
  }
}

void QueryAccessDomainNameRsp_USR::MergeFrom(const QueryAccessDomainNameRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void QueryAccessDomainNameRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAccessDomainNameRsp_USR::CopyFrom(const QueryAccessDomainNameRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAccessDomainNameRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccessDomainNameRsp_USR::IsInitialized() const {
  return true;
}

void QueryAccessDomainNameRsp_USR::Swap(QueryAccessDomainNameRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAccessDomainNameRsp_USR::InternalSwap(QueryAccessDomainNameRsp_USR* other) {
  strdomainname_.Swap(&other->strdomainname_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAccessDomainNameRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[101];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAccessDomainNameRsp_USR

// string strDomainName = 1;
void QueryAccessDomainNameRsp_USR::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameRsp_USR::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
  return strdomainname_.GetNoArena();
}
void QueryAccessDomainNameRsp_USR::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
}
#if LANG_CXX11
void QueryAccessDomainNameRsp_USR::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
}
#endif
void QueryAccessDomainNameRsp_USR::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
}
void QueryAccessDomainNameRsp_USR::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
}
::std::string* QueryAccessDomainNameRsp_USR::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameRsp_USR::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameRsp_USR::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameRsp_USR.strDomainName)
}

// uint32 uiLease = 2;
void QueryAccessDomainNameRsp_USR::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 QueryAccessDomainNameRsp_USR::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameRsp_USR.uiLease)
  return uilease_;
}
void QueryAccessDomainNameRsp_USR::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameRsp_USR.uiLease)
}

// string strValue = 3;
void QueryAccessDomainNameRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAccessDomainNameRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryAccessDomainNameRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
}
#if LANG_CXX11
void QueryAccessDomainNameRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
}
#endif
void QueryAccessDomainNameRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
}
void QueryAccessDomainNameRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
}
::std::string* QueryAccessDomainNameRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAccessDomainNameRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAccessDomainNameRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAccessDomainNameRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAppUpgradeReq_USR::kStrCategoryFieldNumber;
const int QueryAppUpgradeReq_USR::kStrSubCategoryFieldNumber;
const int QueryAppUpgradeReq_USR::kStrCurrentVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAppUpgradeReq_USR::QueryAppUpgradeReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAppUpgradeReq_USR)
}
QueryAppUpgradeReq_USR::QueryAppUpgradeReq_USR(const QueryAppUpgradeReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcategory().size() > 0) {
    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsubcategory().size() > 0) {
    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  strcurrentversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcurrentversion().size() > 0) {
    strcurrentversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcurrentversion_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAppUpgradeReq_USR)
}

void QueryAppUpgradeReq_USR::SharedCtor() {
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryAppUpgradeReq_USR::~QueryAppUpgradeReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAppUpgradeReq_USR)
  SharedDtor();
}

void QueryAppUpgradeReq_USR::SharedDtor() {
  strcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAppUpgradeReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAppUpgradeReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[102].descriptor;
}

const QueryAppUpgradeReq_USR& QueryAppUpgradeReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAppUpgradeReq_USR* QueryAppUpgradeReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryAppUpgradeReq_USR* n = new QueryAppUpgradeReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAppUpgradeReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAppUpgradeReq_USR)
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcurrentversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryAppUpgradeReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAppUpgradeReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCategory = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcategory().data(), this->strcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeReq_USR.strCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSubCategory = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsubcategory().data(), this->strsubcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCurrentVersion = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcurrentversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcurrentversion().data(), this->strcurrentversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAppUpgradeReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAppUpgradeReq_USR)
  return false;
#undef DO_
}

void QueryAppUpgradeReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAppUpgradeReq_USR)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeReq_USR.strCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcategory(), output);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strsubcategory(), output);
  }

  // string strCurrentVersion = 3;
  if (this->strcurrentversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcurrentversion().data(), this->strcurrentversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strcurrentversion(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAppUpgradeReq_USR)
}

::google::protobuf::uint8* QueryAppUpgradeReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAppUpgradeReq_USR)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeReq_USR.strCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcategory(), target);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strsubcategory(), target);
  }

  // string strCurrentVersion = 3;
  if (this->strcurrentversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcurrentversion().data(), this->strcurrentversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcurrentversion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAppUpgradeReq_USR)
  return target;
}

size_t QueryAppUpgradeReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAppUpgradeReq_USR)
  size_t total_size = 0;

  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcategory());
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsubcategory());
  }

  // string strCurrentVersion = 3;
  if (this->strcurrentversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcurrentversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAppUpgradeReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAppUpgradeReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAppUpgradeReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAppUpgradeReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAppUpgradeReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAppUpgradeReq_USR)
    MergeFrom(*source);
  }
}

void QueryAppUpgradeReq_USR::MergeFrom(const QueryAppUpgradeReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAppUpgradeReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcategory().size() > 0) {

    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  if (from.strsubcategory().size() > 0) {

    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  if (from.strcurrentversion().size() > 0) {

    strcurrentversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcurrentversion_);
  }
}

void QueryAppUpgradeReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAppUpgradeReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAppUpgradeReq_USR::CopyFrom(const QueryAppUpgradeReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAppUpgradeReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAppUpgradeReq_USR::IsInitialized() const {
  return true;
}

void QueryAppUpgradeReq_USR::Swap(QueryAppUpgradeReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAppUpgradeReq_USR::InternalSwap(QueryAppUpgradeReq_USR* other) {
  strcategory_.Swap(&other->strcategory_);
  strsubcategory_.Swap(&other->strsubcategory_);
  strcurrentversion_.Swap(&other->strcurrentversion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAppUpgradeReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[102];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAppUpgradeReq_USR

// string strCategory = 1;
void QueryAppUpgradeReq_USR::clear_strcategory() {
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeReq_USR::strcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
  return strcategory_.GetNoArena();
}
void QueryAppUpgradeReq_USR::set_strcategory(const ::std::string& value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
}
#if LANG_CXX11
void QueryAppUpgradeReq_USR::set_strcategory(::std::string&& value) {
  
  strcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
}
#endif
void QueryAppUpgradeReq_USR::set_strcategory(const char* value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
}
void QueryAppUpgradeReq_USR::set_strcategory(const char* value, size_t size) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
}
::std::string* QueryAppUpgradeReq_USR::mutable_strcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
  return strcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeReq_USR::release_strcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
  
  return strcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeReq_USR::set_allocated_strcategory(::std::string* strcategory) {
  if (strcategory != NULL) {
    
  } else {
    
  }
  strcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeReq_USR.strCategory)
}

// string strSubCategory = 2;
void QueryAppUpgradeReq_USR::clear_strsubcategory() {
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeReq_USR::strsubcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
  return strsubcategory_.GetNoArena();
}
void QueryAppUpgradeReq_USR::set_strsubcategory(const ::std::string& value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
}
#if LANG_CXX11
void QueryAppUpgradeReq_USR::set_strsubcategory(::std::string&& value) {
  
  strsubcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
}
#endif
void QueryAppUpgradeReq_USR::set_strsubcategory(const char* value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
}
void QueryAppUpgradeReq_USR::set_strsubcategory(const char* value, size_t size) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
}
::std::string* QueryAppUpgradeReq_USR::mutable_strsubcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
  return strsubcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeReq_USR::release_strsubcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
  
  return strsubcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeReq_USR::set_allocated_strsubcategory(::std::string* strsubcategory) {
  if (strsubcategory != NULL) {
    
  } else {
    
  }
  strsubcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsubcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeReq_USR.strSubCategory)
}

// string strCurrentVersion = 3;
void QueryAppUpgradeReq_USR::clear_strcurrentversion() {
  strcurrentversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeReq_USR::strcurrentversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
  return strcurrentversion_.GetNoArena();
}
void QueryAppUpgradeReq_USR::set_strcurrentversion(const ::std::string& value) {
  
  strcurrentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
}
#if LANG_CXX11
void QueryAppUpgradeReq_USR::set_strcurrentversion(::std::string&& value) {
  
  strcurrentversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
}
#endif
void QueryAppUpgradeReq_USR::set_strcurrentversion(const char* value) {
  
  strcurrentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
}
void QueryAppUpgradeReq_USR::set_strcurrentversion(const char* value, size_t size) {
  
  strcurrentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
}
::std::string* QueryAppUpgradeReq_USR::mutable_strcurrentversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
  return strcurrentversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeReq_USR::release_strcurrentversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
  
  return strcurrentversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeReq_USR::set_allocated_strcurrentversion(::std::string* strcurrentversion) {
  if (strcurrentversion != NULL) {
    
  } else {
    
  }
  strcurrentversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcurrentversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeReq_USR.strCurrentVersion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAppUpgradeRsp_USR::kUiNewVersionValidFieldNumber;
const int QueryAppUpgradeRsp_USR::kStrAppNameFieldNumber;
const int QueryAppUpgradeRsp_USR::kStrAppPathFieldNumber;
const int QueryAppUpgradeRsp_USR::kUiAppSizeFieldNumber;
const int QueryAppUpgradeRsp_USR::kStrVersionFieldNumber;
const int QueryAppUpgradeRsp_USR::kStrDescriptionFieldNumber;
const int QueryAppUpgradeRsp_USR::kUiForceUpgradeFieldNumber;
const int QueryAppUpgradeRsp_USR::kStrUpdateDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAppUpgradeRsp_USR::QueryAppUpgradeRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAppUpgradeRsp_USR)
}
QueryAppUpgradeRsp_USR::QueryAppUpgradeRsp_USR(const QueryAppUpgradeRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strappname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strappname().size() > 0) {
    strappname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strappname_);
  }
  strapppath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strapppath().size() > 0) {
    strapppath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strapppath_);
  }
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  strdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdescription().size() > 0) {
    strdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdescription_);
  }
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupdatedate().size() > 0) {
    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  ::memcpy(&uinewversionvalid_, &from.uinewversionvalid_,
    reinterpret_cast<char*>(&uiforceupgrade_) -
    reinterpret_cast<char*>(&uinewversionvalid_) + sizeof(uiforceupgrade_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAppUpgradeRsp_USR)
}

void QueryAppUpgradeRsp_USR::SharedCtor() {
  strappname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strapppath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uinewversionvalid_, 0, reinterpret_cast<char*>(&uiforceupgrade_) -
    reinterpret_cast<char*>(&uinewversionvalid_) + sizeof(uiforceupgrade_));
  _cached_size_ = 0;
}

QueryAppUpgradeRsp_USR::~QueryAppUpgradeRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAppUpgradeRsp_USR)
  SharedDtor();
}

void QueryAppUpgradeRsp_USR::SharedDtor() {
  strappname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strapppath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAppUpgradeRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAppUpgradeRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[103].descriptor;
}

const QueryAppUpgradeRsp_USR& QueryAppUpgradeRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAppUpgradeRsp_USR* QueryAppUpgradeRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryAppUpgradeRsp_USR* n = new QueryAppUpgradeRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAppUpgradeRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  strappname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strapppath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uinewversionvalid_, 0, reinterpret_cast<char*>(&uiforceupgrade_) -
    reinterpret_cast<char*>(&uinewversionvalid_) + sizeof(uiforceupgrade_));
}

bool QueryAppUpgradeRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiNewVersionValid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uinewversionvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAppName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strappname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strappname().data(), this->strappname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeRsp_USR.strAppName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAppPath = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strapppath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strapppath().data(), this->strapppath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiAppSize = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiappsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVersion = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeRsp_USR.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDescription = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdescription()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdescription().data(), this->strdescription().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeRsp_USR.strDescription"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiForceUpgrade = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiforceupgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUpdateDate = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupdatedate().data(), this->strupdatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAppUpgradeRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAppUpgradeRsp_USR)
  return false;
#undef DO_
}

void QueryAppUpgradeRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  // uint32 uiNewVersionValid = 1;
  if (this->uinewversionvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uinewversionvalid(), output);
  }

  // string strAppName = 2;
  if (this->strappname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strappname().data(), this->strappname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strAppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strappname(), output);
  }

  // string strAppPath = 3;
  if (this->strapppath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strapppath().data(), this->strapppath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strapppath(), output);
  }

  // uint32 uiAppSize = 4;
  if (this->uiappsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uiappsize(), output);
  }

  // string strVersion = 5;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strversion(), output);
  }

  // string strDescription = 6;
  if (this->strdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strDescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strdescription(), output);
  }

  // uint32 uiForceUpgrade = 7;
  if (this->uiforceupgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uiforceupgrade(), output);
  }

  // string strUpdateDate = 8;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strupdatedate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAppUpgradeRsp_USR)
}

::google::protobuf::uint8* QueryAppUpgradeRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  // uint32 uiNewVersionValid = 1;
  if (this->uinewversionvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uinewversionvalid(), target);
  }

  // string strAppName = 2;
  if (this->strappname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strappname().data(), this->strappname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strAppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strappname(), target);
  }

  // string strAppPath = 3;
  if (this->strapppath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strapppath().data(), this->strapppath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strapppath(), target);
  }

  // uint32 uiAppSize = 4;
  if (this->uiappsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uiappsize(), target);
  }

  // string strVersion = 5;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strversion(), target);
  }

  // string strDescription = 6;
  if (this->strdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strDescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strdescription(), target);
  }

  // uint32 uiForceUpgrade = 7;
  if (this->uiforceupgrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uiforceupgrade(), target);
  }

  // string strUpdateDate = 8;
  if (this->strupdatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatedate().data(), this->strupdatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strupdatedate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAppUpgradeRsp_USR)
  return target;
}

size_t QueryAppUpgradeRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  size_t total_size = 0;

  // string strAppName = 2;
  if (this->strappname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strappname());
  }

  // string strAppPath = 3;
  if (this->strapppath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strapppath());
  }

  // string strVersion = 5;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  // string strDescription = 6;
  if (this->strdescription().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdescription());
  }

  // string strUpdateDate = 8;
  if (this->strupdatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupdatedate());
  }

  // uint32 uiNewVersionValid = 1;
  if (this->uinewversionvalid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uinewversionvalid());
  }

  // uint32 uiAppSize = 4;
  if (this->uiappsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiappsize());
  }

  // uint32 uiForceUpgrade = 7;
  if (this->uiforceupgrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiforceupgrade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAppUpgradeRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAppUpgradeRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAppUpgradeRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAppUpgradeRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAppUpgradeRsp_USR)
    MergeFrom(*source);
  }
}

void QueryAppUpgradeRsp_USR::MergeFrom(const QueryAppUpgradeRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strappname().size() > 0) {

    strappname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strappname_);
  }
  if (from.strapppath().size() > 0) {

    strapppath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strapppath_);
  }
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  if (from.strdescription().size() > 0) {

    strdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdescription_);
  }
  if (from.strupdatedate().size() > 0) {

    strupdatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatedate_);
  }
  if (from.uinewversionvalid() != 0) {
    set_uinewversionvalid(from.uinewversionvalid());
  }
  if (from.uiappsize() != 0) {
    set_uiappsize(from.uiappsize());
  }
  if (from.uiforceupgrade() != 0) {
    set_uiforceupgrade(from.uiforceupgrade());
  }
}

void QueryAppUpgradeRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAppUpgradeRsp_USR::CopyFrom(const QueryAppUpgradeRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAppUpgradeRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAppUpgradeRsp_USR::IsInitialized() const {
  return true;
}

void QueryAppUpgradeRsp_USR::Swap(QueryAppUpgradeRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAppUpgradeRsp_USR::InternalSwap(QueryAppUpgradeRsp_USR* other) {
  strappname_.Swap(&other->strappname_);
  strapppath_.Swap(&other->strapppath_);
  strversion_.Swap(&other->strversion_);
  strdescription_.Swap(&other->strdescription_);
  strupdatedate_.Swap(&other->strupdatedate_);
  std::swap(uinewversionvalid_, other->uinewversionvalid_);
  std::swap(uiappsize_, other->uiappsize_);
  std::swap(uiforceupgrade_, other->uiforceupgrade_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAppUpgradeRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[103];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAppUpgradeRsp_USR

// uint32 uiNewVersionValid = 1;
void QueryAppUpgradeRsp_USR::clear_uinewversionvalid() {
  uinewversionvalid_ = 0u;
}
::google::protobuf::uint32 QueryAppUpgradeRsp_USR::uinewversionvalid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.uiNewVersionValid)
  return uinewversionvalid_;
}
void QueryAppUpgradeRsp_USR::set_uinewversionvalid(::google::protobuf::uint32 value) {
  
  uinewversionvalid_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.uiNewVersionValid)
}

// string strAppName = 2;
void QueryAppUpgradeRsp_USR::clear_strappname() {
  strappname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeRsp_USR::strappname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
  return strappname_.GetNoArena();
}
void QueryAppUpgradeRsp_USR::set_strappname(const ::std::string& value) {
  
  strappname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
}
#if LANG_CXX11
void QueryAppUpgradeRsp_USR::set_strappname(::std::string&& value) {
  
  strappname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
}
#endif
void QueryAppUpgradeRsp_USR::set_strappname(const char* value) {
  
  strappname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
}
void QueryAppUpgradeRsp_USR::set_strappname(const char* value, size_t size) {
  
  strappname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
}
::std::string* QueryAppUpgradeRsp_USR::mutable_strappname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
  return strappname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeRsp_USR::release_strappname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
  
  return strappname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeRsp_USR::set_allocated_strappname(::std::string* strappname) {
  if (strappname != NULL) {
    
  } else {
    
  }
  strappname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strappname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeRsp_USR.strAppName)
}

// string strAppPath = 3;
void QueryAppUpgradeRsp_USR::clear_strapppath() {
  strapppath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeRsp_USR::strapppath() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
  return strapppath_.GetNoArena();
}
void QueryAppUpgradeRsp_USR::set_strapppath(const ::std::string& value) {
  
  strapppath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
}
#if LANG_CXX11
void QueryAppUpgradeRsp_USR::set_strapppath(::std::string&& value) {
  
  strapppath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
}
#endif
void QueryAppUpgradeRsp_USR::set_strapppath(const char* value) {
  
  strapppath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
}
void QueryAppUpgradeRsp_USR::set_strapppath(const char* value, size_t size) {
  
  strapppath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
}
::std::string* QueryAppUpgradeRsp_USR::mutable_strapppath() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
  return strapppath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeRsp_USR::release_strapppath() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
  
  return strapppath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeRsp_USR::set_allocated_strapppath(::std::string* strapppath) {
  if (strapppath != NULL) {
    
  } else {
    
  }
  strapppath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strapppath);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeRsp_USR.strAppPath)
}

// uint32 uiAppSize = 4;
void QueryAppUpgradeRsp_USR::clear_uiappsize() {
  uiappsize_ = 0u;
}
::google::protobuf::uint32 QueryAppUpgradeRsp_USR::uiappsize() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.uiAppSize)
  return uiappsize_;
}
void QueryAppUpgradeRsp_USR::set_uiappsize(::google::protobuf::uint32 value) {
  
  uiappsize_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.uiAppSize)
}

// string strVersion = 5;
void QueryAppUpgradeRsp_USR::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeRsp_USR::strversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
  return strversion_.GetNoArena();
}
void QueryAppUpgradeRsp_USR::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
}
#if LANG_CXX11
void QueryAppUpgradeRsp_USR::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
}
#endif
void QueryAppUpgradeRsp_USR::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
}
void QueryAppUpgradeRsp_USR::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
}
::std::string* QueryAppUpgradeRsp_USR::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeRsp_USR::release_strversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeRsp_USR::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeRsp_USR.strVersion)
}

// string strDescription = 6;
void QueryAppUpgradeRsp_USR::clear_strdescription() {
  strdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeRsp_USR::strdescription() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
  return strdescription_.GetNoArena();
}
void QueryAppUpgradeRsp_USR::set_strdescription(const ::std::string& value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
}
#if LANG_CXX11
void QueryAppUpgradeRsp_USR::set_strdescription(::std::string&& value) {
  
  strdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
}
#endif
void QueryAppUpgradeRsp_USR::set_strdescription(const char* value) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
}
void QueryAppUpgradeRsp_USR::set_strdescription(const char* value, size_t size) {
  
  strdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
}
::std::string* QueryAppUpgradeRsp_USR::mutable_strdescription() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
  return strdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeRsp_USR::release_strdescription() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
  
  return strdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeRsp_USR::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription != NULL) {
    
  } else {
    
  }
  strdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdescription);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeRsp_USR.strDescription)
}

// uint32 uiForceUpgrade = 7;
void QueryAppUpgradeRsp_USR::clear_uiforceupgrade() {
  uiforceupgrade_ = 0u;
}
::google::protobuf::uint32 QueryAppUpgradeRsp_USR::uiforceupgrade() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.uiForceUpgrade)
  return uiforceupgrade_;
}
void QueryAppUpgradeRsp_USR::set_uiforceupgrade(::google::protobuf::uint32 value) {
  
  uiforceupgrade_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.uiForceUpgrade)
}

// string strUpdateDate = 8;
void QueryAppUpgradeRsp_USR::clear_strupdatedate() {
  strupdatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAppUpgradeRsp_USR::strupdatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
  return strupdatedate_.GetNoArena();
}
void QueryAppUpgradeRsp_USR::set_strupdatedate(const ::std::string& value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
}
#if LANG_CXX11
void QueryAppUpgradeRsp_USR::set_strupdatedate(::std::string&& value) {
  
  strupdatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
}
#endif
void QueryAppUpgradeRsp_USR::set_strupdatedate(const char* value) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
}
void QueryAppUpgradeRsp_USR::set_strupdatedate(const char* value, size_t size) {
  
  strupdatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
}
::std::string* QueryAppUpgradeRsp_USR::mutable_strupdatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
  return strupdatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAppUpgradeRsp_USR::release_strupdatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
  
  return strupdatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAppUpgradeRsp_USR::set_allocated_strupdatedate(::std::string* strupdatedate) {
  if (strupdatedate != NULL) {
    
  } else {
    
  }
  strupdatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAppUpgradeRsp_USR.strUpdateDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryIfP2pIDValidReq_USR::kStrP2PIDFieldNumber;
const int QueryIfP2pIDValidReq_USR::kUiP2PTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryIfP2pIDValidReq_USR::QueryIfP2pIDValidReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryIfP2pIDValidReq_USR)
}
QueryIfP2pIDValidReq_USR::QueryIfP2pIDValidReq_USR(const QueryIfP2pIDValidReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  uip2ptype_ = from.uip2ptype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryIfP2pIDValidReq_USR)
}

void QueryIfP2pIDValidReq_USR::SharedCtor() {
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uip2ptype_ = 0u;
  _cached_size_ = 0;
}

QueryIfP2pIDValidReq_USR::~QueryIfP2pIDValidReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryIfP2pIDValidReq_USR)
  SharedDtor();
}

void QueryIfP2pIDValidReq_USR::SharedDtor() {
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryIfP2pIDValidReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryIfP2pIDValidReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[104].descriptor;
}

const QueryIfP2pIDValidReq_USR& QueryIfP2pIDValidReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryIfP2pIDValidReq_USR* QueryIfP2pIDValidReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryIfP2pIDValidReq_USR* n = new QueryIfP2pIDValidReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryIfP2pIDValidReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uip2ptype_ = 0u;
}

bool QueryIfP2pIDValidReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strP2pID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiP2pType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uip2ptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryIfP2pIDValidReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryIfP2pIDValidReq_USR)
  return false;
#undef DO_
}

void QueryIfP2pIDValidReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  // string strP2pID = 1;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strp2pid(), output);
  }

  // uint32 uiP2pType = 2;
  if (this->uip2ptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uip2ptype(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryIfP2pIDValidReq_USR)
}

::google::protobuf::uint8* QueryIfP2pIDValidReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  // string strP2pID = 1;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strp2pid(), target);
  }

  // uint32 uiP2pType = 2;
  if (this->uip2ptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uip2ptype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryIfP2pIDValidReq_USR)
  return target;
}

size_t QueryIfP2pIDValidReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  size_t total_size = 0;

  // string strP2pID = 1;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // uint32 uiP2pType = 2;
  if (this->uip2ptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uip2ptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryIfP2pIDValidReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryIfP2pIDValidReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryIfP2pIDValidReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryIfP2pIDValidReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryIfP2pIDValidReq_USR)
    MergeFrom(*source);
  }
}

void QueryIfP2pIDValidReq_USR::MergeFrom(const QueryIfP2pIDValidReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.uip2ptype() != 0) {
    set_uip2ptype(from.uip2ptype());
  }
}

void QueryIfP2pIDValidReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryIfP2pIDValidReq_USR::CopyFrom(const QueryIfP2pIDValidReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryIfP2pIDValidReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryIfP2pIDValidReq_USR::IsInitialized() const {
  return true;
}

void QueryIfP2pIDValidReq_USR::Swap(QueryIfP2pIDValidReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryIfP2pIDValidReq_USR::InternalSwap(QueryIfP2pIDValidReq_USR* other) {
  strp2pid_.Swap(&other->strp2pid_);
  std::swap(uip2ptype_, other->uip2ptype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryIfP2pIDValidReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[104];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryIfP2pIDValidReq_USR

// string strP2pID = 1;
void QueryIfP2pIDValidReq_USR::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryIfP2pIDValidReq_USR::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
  return strp2pid_.GetNoArena();
}
void QueryIfP2pIDValidReq_USR::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
}
#if LANG_CXX11
void QueryIfP2pIDValidReq_USR::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
}
#endif
void QueryIfP2pIDValidReq_USR::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
}
void QueryIfP2pIDValidReq_USR::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
}
::std::string* QueryIfP2pIDValidReq_USR::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryIfP2pIDValidReq_USR::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryIfP2pIDValidReq_USR::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryIfP2pIDValidReq_USR.strP2pID)
}

// uint32 uiP2pType = 2;
void QueryIfP2pIDValidReq_USR::clear_uip2ptype() {
  uip2ptype_ = 0u;
}
::google::protobuf::uint32 QueryIfP2pIDValidReq_USR::uip2ptype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryIfP2pIDValidReq_USR.uiP2pType)
  return uip2ptype_;
}
void QueryIfP2pIDValidReq_USR::set_uip2ptype(::google::protobuf::uint32 value) {
  
  uip2ptype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryIfP2pIDValidReq_USR.uiP2pType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryIfP2pIDValidRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryIfP2pIDValidRsp_USR::QueryIfP2pIDValidRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryIfP2pIDValidRsp_USR)
}
QueryIfP2pIDValidRsp_USR::QueryIfP2pIDValidRsp_USR(const QueryIfP2pIDValidRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryIfP2pIDValidRsp_USR)
}

void QueryIfP2pIDValidRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryIfP2pIDValidRsp_USR::~QueryIfP2pIDValidRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  SharedDtor();
}

void QueryIfP2pIDValidRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryIfP2pIDValidRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryIfP2pIDValidRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[105].descriptor;
}

const QueryIfP2pIDValidRsp_USR& QueryIfP2pIDValidRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryIfP2pIDValidRsp_USR* QueryIfP2pIDValidRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryIfP2pIDValidRsp_USR* n = new QueryIfP2pIDValidRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryIfP2pIDValidRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryIfP2pIDValidRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  return false;
#undef DO_
}

void QueryIfP2pIDValidRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryIfP2pIDValidRsp_USR)
}

::google::protobuf::uint8* QueryIfP2pIDValidRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  return target;
}

size_t QueryIfP2pIDValidRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryIfP2pIDValidRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryIfP2pIDValidRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryIfP2pIDValidRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryIfP2pIDValidRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryIfP2pIDValidRsp_USR)
    MergeFrom(*source);
  }
}

void QueryIfP2pIDValidRsp_USR::MergeFrom(const QueryIfP2pIDValidRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryIfP2pIDValidRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryIfP2pIDValidRsp_USR::CopyFrom(const QueryIfP2pIDValidRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryIfP2pIDValidRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryIfP2pIDValidRsp_USR::IsInitialized() const {
  return true;
}

void QueryIfP2pIDValidRsp_USR::Swap(QueryIfP2pIDValidRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryIfP2pIDValidRsp_USR::InternalSwap(QueryIfP2pIDValidRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryIfP2pIDValidRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[105];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryIfP2pIDValidRsp_USR

// string strValue = 1;
void QueryIfP2pIDValidRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryIfP2pIDValidRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryIfP2pIDValidRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
}
#if LANG_CXX11
void QueryIfP2pIDValidRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
}
#endif
void QueryIfP2pIDValidRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
}
void QueryIfP2pIDValidRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
}
::std::string* QueryIfP2pIDValidRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryIfP2pIDValidRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryIfP2pIDValidRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryIfP2pIDValidRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAllDeviceEventReq_USR::kStrUserIDFieldNumber;
const int QueryAllDeviceEventReq_USR::kStrDeviceIDFieldNumber;
const int QueryAllDeviceEventReq_USR::kUiDeviceSharedFieldNumber;
const int QueryAllDeviceEventReq_USR::kUiEventTypeFieldNumber;
const int QueryAllDeviceEventReq_USR::kUiReadStateFieldNumber;
const int QueryAllDeviceEventReq_USR::kUiBeginIndexFieldNumber;
const int QueryAllDeviceEventReq_USR::kStrBeginDateFieldNumber;
const int QueryAllDeviceEventReq_USR::kStrEndDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAllDeviceEventReq_USR::QueryAllDeviceEventReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAllDeviceEventReq_USR)
}
QueryAllDeviceEventReq_USR::QueryAllDeviceEventReq_USR(const QueryAllDeviceEventReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  ::memcpy(&uideviceshared_, &from.uideviceshared_,
    reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uideviceshared_) + sizeof(uibeginindex_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAllDeviceEventReq_USR)
}

void QueryAllDeviceEventReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uideviceshared_, 0, reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uideviceshared_) + sizeof(uibeginindex_));
  _cached_size_ = 0;
}

QueryAllDeviceEventReq_USR::~QueryAllDeviceEventReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAllDeviceEventReq_USR)
  SharedDtor();
}

void QueryAllDeviceEventReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAllDeviceEventReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllDeviceEventReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[106].descriptor;
}

const QueryAllDeviceEventReq_USR& QueryAllDeviceEventReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAllDeviceEventReq_USR* QueryAllDeviceEventReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryAllDeviceEventReq_USR* n = new QueryAllDeviceEventReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAllDeviceEventReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uideviceshared_, 0, reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uideviceshared_) + sizeof(uibeginindex_));
}

bool QueryAllDeviceEventReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAllDeviceEventReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceShared = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uideviceshared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiReadState = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uireadstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBeginDate = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndDate = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAllDeviceEventReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAllDeviceEventReq_USR)
  return false;
#undef DO_
}

void QueryAllDeviceEventReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdeviceid(), output);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uideviceshared(), output);
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uieventtype(), output);
  }

  // uint32 uiReadState = 5;
  if (this->uireadstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uireadstate(), output);
  }

  // uint32 uiBeginIndex = 6;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uibeginindex(), output);
  }

  // string strBeginDate = 7;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strbegindate(), output);
  }

  // string strEndDate = 8;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strenddate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAllDeviceEventReq_USR)
}

::google::protobuf::uint8* QueryAllDeviceEventReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdeviceid(), target);
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uideviceshared(), target);
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uieventtype(), target);
  }

  // uint32 uiReadState = 5;
  if (this->uireadstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uireadstate(), target);
  }

  // uint32 uiBeginIndex = 6;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uibeginindex(), target);
  }

  // string strBeginDate = 7;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strbegindate(), target);
  }

  // string strEndDate = 8;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strenddate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAllDeviceEventReq_USR)
  return target;
}

size_t QueryAllDeviceEventReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strBeginDate = 7;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEndDate = 8;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // uint32 uiDeviceShared = 3;
  if (this->uideviceshared() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uideviceshared());
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventtype());
  }

  // uint32 uiReadState = 5;
  if (this->uireadstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uireadstate());
  }

  // uint32 uiBeginIndex = 6;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllDeviceEventReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAllDeviceEventReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAllDeviceEventReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAllDeviceEventReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAllDeviceEventReq_USR)
    MergeFrom(*source);
  }
}

void QueryAllDeviceEventReq_USR::MergeFrom(const QueryAllDeviceEventReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.uideviceshared() != 0) {
    set_uideviceshared(from.uideviceshared());
  }
  if (from.uieventtype() != 0) {
    set_uieventtype(from.uieventtype());
  }
  if (from.uireadstate() != 0) {
    set_uireadstate(from.uireadstate());
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryAllDeviceEventReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllDeviceEventReq_USR::CopyFrom(const QueryAllDeviceEventReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAllDeviceEventReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllDeviceEventReq_USR::IsInitialized() const {
  return true;
}

void QueryAllDeviceEventReq_USR::Swap(QueryAllDeviceEventReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAllDeviceEventReq_USR::InternalSwap(QueryAllDeviceEventReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strdeviceid_.Swap(&other->strdeviceid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  std::swap(uideviceshared_, other->uideviceshared_);
  std::swap(uieventtype_, other->uieventtype_);
  std::swap(uireadstate_, other->uireadstate_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAllDeviceEventReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[106];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAllDeviceEventReq_USR

// string strUserID = 1;
void QueryAllDeviceEventReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAllDeviceEventReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryAllDeviceEventReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
}
#if LANG_CXX11
void QueryAllDeviceEventReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
}
#endif
void QueryAllDeviceEventReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
}
void QueryAllDeviceEventReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
}
::std::string* QueryAllDeviceEventReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAllDeviceEventReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAllDeviceEventReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAllDeviceEventReq_USR.strUserID)
}

// string strDeviceID = 2;
void QueryAllDeviceEventReq_USR::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAllDeviceEventReq_USR::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void QueryAllDeviceEventReq_USR::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
}
#if LANG_CXX11
void QueryAllDeviceEventReq_USR::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
}
#endif
void QueryAllDeviceEventReq_USR::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
}
void QueryAllDeviceEventReq_USR::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
}
::std::string* QueryAllDeviceEventReq_USR::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAllDeviceEventReq_USR::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAllDeviceEventReq_USR::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAllDeviceEventReq_USR.strDeviceID)
}

// uint32 uiDeviceShared = 3;
void QueryAllDeviceEventReq_USR::clear_uideviceshared() {
  uideviceshared_ = 0u;
}
::google::protobuf::uint32 QueryAllDeviceEventReq_USR::uideviceshared() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.uiDeviceShared)
  return uideviceshared_;
}
void QueryAllDeviceEventReq_USR::set_uideviceshared(::google::protobuf::uint32 value) {
  
  uideviceshared_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.uiDeviceShared)
}

// uint32 uiEventType = 4;
void QueryAllDeviceEventReq_USR::clear_uieventtype() {
  uieventtype_ = 0u;
}
::google::protobuf::uint32 QueryAllDeviceEventReq_USR::uieventtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.uiEventType)
  return uieventtype_;
}
void QueryAllDeviceEventReq_USR::set_uieventtype(::google::protobuf::uint32 value) {
  
  uieventtype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.uiEventType)
}

// uint32 uiReadState = 5;
void QueryAllDeviceEventReq_USR::clear_uireadstate() {
  uireadstate_ = 0u;
}
::google::protobuf::uint32 QueryAllDeviceEventReq_USR::uireadstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.uiReadState)
  return uireadstate_;
}
void QueryAllDeviceEventReq_USR::set_uireadstate(::google::protobuf::uint32 value) {
  
  uireadstate_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.uiReadState)
}

// uint32 uiBeginIndex = 6;
void QueryAllDeviceEventReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryAllDeviceEventReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryAllDeviceEventReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.uiBeginIndex)
}

// string strBeginDate = 7;
void QueryAllDeviceEventReq_USR::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAllDeviceEventReq_USR::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
  return strbegindate_.GetNoArena();
}
void QueryAllDeviceEventReq_USR::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
}
#if LANG_CXX11
void QueryAllDeviceEventReq_USR::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
}
#endif
void QueryAllDeviceEventReq_USR::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
}
void QueryAllDeviceEventReq_USR::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
}
::std::string* QueryAllDeviceEventReq_USR::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAllDeviceEventReq_USR::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAllDeviceEventReq_USR::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAllDeviceEventReq_USR.strBeginDate)
}

// string strEndDate = 8;
void QueryAllDeviceEventReq_USR::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAllDeviceEventReq_USR::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
  return strenddate_.GetNoArena();
}
void QueryAllDeviceEventReq_USR::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
}
#if LANG_CXX11
void QueryAllDeviceEventReq_USR::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
}
#endif
void QueryAllDeviceEventReq_USR::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
}
void QueryAllDeviceEventReq_USR::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
}
::std::string* QueryAllDeviceEventReq_USR::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAllDeviceEventReq_USR::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAllDeviceEventReq_USR::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryAllDeviceEventReq_USR.strEndDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAllDeviceEventRsp_USR::kDeviceEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAllDeviceEventRsp_USR::QueryAllDeviceEventRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAllDeviceEventRsp_USR)
}
QueryAllDeviceEventRsp_USR::QueryAllDeviceEventRsp_USR(const QueryAllDeviceEventRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      deviceevent_(from.deviceevent_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAllDeviceEventRsp_USR)
}

void QueryAllDeviceEventRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryAllDeviceEventRsp_USR::~QueryAllDeviceEventRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAllDeviceEventRsp_USR)
  SharedDtor();
}

void QueryAllDeviceEventRsp_USR::SharedDtor() {
}

void QueryAllDeviceEventRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllDeviceEventRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[107].descriptor;
}

const QueryAllDeviceEventRsp_USR& QueryAllDeviceEventRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAllDeviceEventRsp_USR* QueryAllDeviceEventRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryAllDeviceEventRsp_USR* n = new QueryAllDeviceEventRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAllDeviceEventRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  deviceevent_.Clear();
}

bool QueryAllDeviceEventRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.DeviceEvent deviceEvent = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deviceevent()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAllDeviceEventRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAllDeviceEventRsp_USR)
  return false;
#undef DO_
}

void QueryAllDeviceEventRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  // repeated .Interactive.Message.DeviceEvent deviceEvent = 1;
  for (unsigned int i = 0, n = this->deviceevent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->deviceevent(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAllDeviceEventRsp_USR)
}

::google::protobuf::uint8* QueryAllDeviceEventRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  // repeated .Interactive.Message.DeviceEvent deviceEvent = 1;
  for (unsigned int i = 0, n = this->deviceevent_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->deviceevent(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAllDeviceEventRsp_USR)
  return target;
}

size_t QueryAllDeviceEventRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.DeviceEvent deviceEvent = 1;
  {
    unsigned int count = this->deviceevent_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deviceevent(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllDeviceEventRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAllDeviceEventRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAllDeviceEventRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAllDeviceEventRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAllDeviceEventRsp_USR)
    MergeFrom(*source);
  }
}

void QueryAllDeviceEventRsp_USR::MergeFrom(const QueryAllDeviceEventRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceevent_.MergeFrom(from.deviceevent_);
}

void QueryAllDeviceEventRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllDeviceEventRsp_USR::CopyFrom(const QueryAllDeviceEventRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAllDeviceEventRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllDeviceEventRsp_USR::IsInitialized() const {
  return true;
}

void QueryAllDeviceEventRsp_USR::Swap(QueryAllDeviceEventRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAllDeviceEventRsp_USR::InternalSwap(QueryAllDeviceEventRsp_USR* other) {
  deviceevent_.UnsafeArenaSwap(&other->deviceevent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAllDeviceEventRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[107];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAllDeviceEventRsp_USR

// repeated .Interactive.Message.DeviceEvent deviceEvent = 1;
int QueryAllDeviceEventRsp_USR::deviceevent_size() const {
  return deviceevent_.size();
}
void QueryAllDeviceEventRsp_USR::clear_deviceevent() {
  deviceevent_.Clear();
}
const ::Interactive::Message::DeviceEvent& QueryAllDeviceEventRsp_USR::deviceevent(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllDeviceEventRsp_USR.deviceEvent)
  return deviceevent_.Get(index);
}
::Interactive::Message::DeviceEvent* QueryAllDeviceEventRsp_USR::mutable_deviceevent(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAllDeviceEventRsp_USR.deviceEvent)
  return deviceevent_.Mutable(index);
}
::Interactive::Message::DeviceEvent* QueryAllDeviceEventRsp_USR::add_deviceevent() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryAllDeviceEventRsp_USR.deviceEvent)
  return deviceevent_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceEvent >*
QueryAllDeviceEventRsp_USR::mutable_deviceevent() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryAllDeviceEventRsp_USR.deviceEvent)
  return &deviceevent_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceEvent >&
QueryAllDeviceEventRsp_USR::deviceevent() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryAllDeviceEventRsp_USR.deviceEvent)
  return deviceevent_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteDeviceEventReq_USR::kStrUserIDFieldNumber;
const int DeleteDeviceEventReq_USR::kStrDeviceIDFieldNumber;
const int DeleteDeviceEventReq_USR::kStrEventIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDeviceEventReq_USR::DeleteDeviceEventReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteDeviceEventReq_USR)
}
DeleteDeviceEventReq_USR::DeleteDeviceEventReq_USR(const DeleteDeviceEventReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.streventid().size() > 0) {
    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteDeviceEventReq_USR)
}

void DeleteDeviceEventReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteDeviceEventReq_USR::~DeleteDeviceEventReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteDeviceEventReq_USR)
  SharedDtor();
}

void DeleteDeviceEventReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteDeviceEventReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteDeviceEventReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[108].descriptor;
}

const DeleteDeviceEventReq_USR& DeleteDeviceEventReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteDeviceEventReq_USR* DeleteDeviceEventReq_USR::New(::google::protobuf::Arena* arena) const {
  DeleteDeviceEventReq_USR* n = new DeleteDeviceEventReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteDeviceEventReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteDeviceEventReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteDeviceEventReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteDeviceEventReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteDeviceEventReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEventID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streventid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streventid().data(), this->streventid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteDeviceEventReq_USR.strEventID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteDeviceEventReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteDeviceEventReq_USR)
  return false;
#undef DO_
}

void DeleteDeviceEventReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteDeviceEventReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdeviceid(), output);
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventReq_USR.strEventID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->streventid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteDeviceEventReq_USR)
}

::google::protobuf::uint8* DeleteDeviceEventReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteDeviceEventReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdeviceid(), target);
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventReq_USR.strEventID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->streventid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteDeviceEventReq_USR)
  return target;
}

size_t DeleteDeviceEventReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteDeviceEventReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streventid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteDeviceEventReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteDeviceEventReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDeviceEventReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDeviceEventReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteDeviceEventReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteDeviceEventReq_USR)
    MergeFrom(*source);
  }
}

void DeleteDeviceEventReq_USR::MergeFrom(const DeleteDeviceEventReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteDeviceEventReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.streventid().size() > 0) {

    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
}

void DeleteDeviceEventReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteDeviceEventReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDeviceEventReq_USR::CopyFrom(const DeleteDeviceEventReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteDeviceEventReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDeviceEventReq_USR::IsInitialized() const {
  return true;
}

void DeleteDeviceEventReq_USR::Swap(DeleteDeviceEventReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDeviceEventReq_USR::InternalSwap(DeleteDeviceEventReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strdeviceid_.Swap(&other->strdeviceid_);
  streventid_.Swap(&other->streventid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteDeviceEventReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[108];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteDeviceEventReq_USR

// string strUserID = 1;
void DeleteDeviceEventReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteDeviceEventReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DeleteDeviceEventReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
}
#if LANG_CXX11
void DeleteDeviceEventReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
}
#endif
void DeleteDeviceEventReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
}
void DeleteDeviceEventReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
}
::std::string* DeleteDeviceEventReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteDeviceEventReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteDeviceEventReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteDeviceEventReq_USR.strUserID)
}

// string strDeviceID = 2;
void DeleteDeviceEventReq_USR::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteDeviceEventReq_USR::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void DeleteDeviceEventReq_USR::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
}
#if LANG_CXX11
void DeleteDeviceEventReq_USR::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
}
#endif
void DeleteDeviceEventReq_USR::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
}
void DeleteDeviceEventReq_USR::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
}
::std::string* DeleteDeviceEventReq_USR::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteDeviceEventReq_USR::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteDeviceEventReq_USR::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteDeviceEventReq_USR.strDeviceID)
}

// string strEventID = 3;
void DeleteDeviceEventReq_USR::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteDeviceEventReq_USR::streventid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
  return streventid_.GetNoArena();
}
void DeleteDeviceEventReq_USR::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
}
#if LANG_CXX11
void DeleteDeviceEventReq_USR::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
}
#endif
void DeleteDeviceEventReq_USR::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
}
void DeleteDeviceEventReq_USR::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
}
::std::string* DeleteDeviceEventReq_USR::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteDeviceEventReq_USR::release_streventid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteDeviceEventReq_USR::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteDeviceEventReq_USR.strEventID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteDeviceEventRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDeviceEventRsp_USR::DeleteDeviceEventRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteDeviceEventRsp_USR)
}
DeleteDeviceEventRsp_USR::DeleteDeviceEventRsp_USR(const DeleteDeviceEventRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteDeviceEventRsp_USR)
}

void DeleteDeviceEventRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteDeviceEventRsp_USR::~DeleteDeviceEventRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteDeviceEventRsp_USR)
  SharedDtor();
}

void DeleteDeviceEventRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteDeviceEventRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteDeviceEventRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[109].descriptor;
}

const DeleteDeviceEventRsp_USR& DeleteDeviceEventRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteDeviceEventRsp_USR* DeleteDeviceEventRsp_USR::New(::google::protobuf::Arena* arena) const {
  DeleteDeviceEventRsp_USR* n = new DeleteDeviceEventRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteDeviceEventRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteDeviceEventRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteDeviceEventRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteDeviceEventRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteDeviceEventRsp_USR)
  return false;
#undef DO_
}

void DeleteDeviceEventRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteDeviceEventRsp_USR)
}

::google::protobuf::uint8* DeleteDeviceEventRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteDeviceEventRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteDeviceEventRsp_USR)
  return target;
}

size_t DeleteDeviceEventRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteDeviceEventRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDeviceEventRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDeviceEventRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteDeviceEventRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteDeviceEventRsp_USR)
    MergeFrom(*source);
  }
}

void DeleteDeviceEventRsp_USR::MergeFrom(const DeleteDeviceEventRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DeleteDeviceEventRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDeviceEventRsp_USR::CopyFrom(const DeleteDeviceEventRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteDeviceEventRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDeviceEventRsp_USR::IsInitialized() const {
  return true;
}

void DeleteDeviceEventRsp_USR::Swap(DeleteDeviceEventRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDeviceEventRsp_USR::InternalSwap(DeleteDeviceEventRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteDeviceEventRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[109];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteDeviceEventRsp_USR

// string strValue = 1;
void DeleteDeviceEventRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteDeviceEventRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DeleteDeviceEventRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
}
#if LANG_CXX11
void DeleteDeviceEventRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
}
#endif
void DeleteDeviceEventRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
}
void DeleteDeviceEventRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
}
::std::string* DeleteDeviceEventRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteDeviceEventRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteDeviceEventRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteDeviceEventRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDeviceEventReq_USR::kStrUserIDFieldNumber;
const int ModifyDeviceEventReq_USR::kStrDeviceIDFieldNumber;
const int ModifyDeviceEventReq_USR::kStrEventIDFieldNumber;
const int ModifyDeviceEventReq_USR::kUiEventTypeFieldNumber;
const int ModifyDeviceEventReq_USR::kUiEventStateFieldNumber;
const int ModifyDeviceEventReq_USR::kStrUpdateTimeFieldNumber;
const int ModifyDeviceEventReq_USR::kStrFileIDFieldNumber;
const int ModifyDeviceEventReq_USR::kUiReadStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDeviceEventReq_USR::ModifyDeviceEventReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDeviceEventReq_USR)
}
ModifyDeviceEventReq_USR::ModifyDeviceEventReq_USR(const ModifyDeviceEventReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.streventid().size() > 0) {
    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
  strupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupdatetime().size() > 0) {
    strupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatetime_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  ::memcpy(&uieventtype_, &from.uieventtype_,
    reinterpret_cast<char*>(&uireadstate_) -
    reinterpret_cast<char*>(&uieventtype_) + sizeof(uireadstate_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDeviceEventReq_USR)
}

void ModifyDeviceEventReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uieventtype_, 0, reinterpret_cast<char*>(&uireadstate_) -
    reinterpret_cast<char*>(&uieventtype_) + sizeof(uireadstate_));
  _cached_size_ = 0;
}

ModifyDeviceEventReq_USR::~ModifyDeviceEventReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDeviceEventReq_USR)
  SharedDtor();
}

void ModifyDeviceEventReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyDeviceEventReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDeviceEventReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[110].descriptor;
}

const ModifyDeviceEventReq_USR& ModifyDeviceEventReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDeviceEventReq_USR* ModifyDeviceEventReq_USR::New(::google::protobuf::Arena* arena) const {
  ModifyDeviceEventReq_USR* n = new ModifyDeviceEventReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDeviceEventReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDeviceEventReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uieventtype_, 0, reinterpret_cast<char*>(&uireadstate_) -
    reinterpret_cast<char*>(&uieventtype_) + sizeof(uireadstate_));
}

bool ModifyDeviceEventReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDeviceEventReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDeviceEventReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEventID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streventid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streventid().data(), this->streventid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDeviceEventReq_USR.strEventID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiEventState = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uieventstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUpdateTime = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupdatetime().data(), this->strupdatetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDeviceEventReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiReadState = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uireadstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDeviceEventReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDeviceEventReq_USR)
  return false;
#undef DO_
}

void ModifyDeviceEventReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDeviceEventReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdeviceid(), output);
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strEventID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->streventid(), output);
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uieventtype(), output);
  }

  // uint32 uiEventState = 5;
  if (this->uieventstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uieventstate(), output);
  }

  // string strUpdateTime = 6;
  if (this->strupdatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatetime().data(), this->strupdatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strupdatetime(), output);
  }

  // string strFileID = 7;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strfileid(), output);
  }

  // uint32 uiReadState = 8;
  if (this->uireadstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uireadstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDeviceEventReq_USR)
}

::google::protobuf::uint8* ModifyDeviceEventReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDeviceEventReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdeviceid(), target);
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streventid().data(), this->streventid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strEventID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->streventid(), target);
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uieventtype(), target);
  }

  // uint32 uiEventState = 5;
  if (this->uieventstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uieventstate(), target);
  }

  // string strUpdateTime = 6;
  if (this->strupdatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatetime().data(), this->strupdatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strupdatetime(), target);
  }

  // string strFileID = 7;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventReq_USR.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strfileid(), target);
  }

  // uint32 uiReadState = 8;
  if (this->uireadstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uireadstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDeviceEventReq_USR)
  return target;
}

size_t ModifyDeviceEventReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDeviceEventReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDeviceID = 2;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strEventID = 3;
  if (this->streventid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streventid());
  }

  // string strUpdateTime = 6;
  if (this->strupdatetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupdatetime());
  }

  // string strFileID = 7;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // uint32 uiEventType = 4;
  if (this->uieventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventtype());
  }

  // uint32 uiEventState = 5;
  if (this->uieventstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uieventstate());
  }

  // uint32 uiReadState = 8;
  if (this->uireadstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uireadstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDeviceEventReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDeviceEventReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDeviceEventReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDeviceEventReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDeviceEventReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDeviceEventReq_USR)
    MergeFrom(*source);
  }
}

void ModifyDeviceEventReq_USR::MergeFrom(const ModifyDeviceEventReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDeviceEventReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.streventid().size() > 0) {

    streventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streventid_);
  }
  if (from.strupdatetime().size() > 0) {

    strupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatetime_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.uieventtype() != 0) {
    set_uieventtype(from.uieventtype());
  }
  if (from.uieventstate() != 0) {
    set_uieventstate(from.uieventstate());
  }
  if (from.uireadstate() != 0) {
    set_uireadstate(from.uireadstate());
  }
}

void ModifyDeviceEventReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDeviceEventReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDeviceEventReq_USR::CopyFrom(const ModifyDeviceEventReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDeviceEventReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDeviceEventReq_USR::IsInitialized() const {
  return true;
}

void ModifyDeviceEventReq_USR::Swap(ModifyDeviceEventReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDeviceEventReq_USR::InternalSwap(ModifyDeviceEventReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strdeviceid_.Swap(&other->strdeviceid_);
  streventid_.Swap(&other->streventid_);
  strupdatetime_.Swap(&other->strupdatetime_);
  strfileid_.Swap(&other->strfileid_);
  std::swap(uieventtype_, other->uieventtype_);
  std::swap(uieventstate_, other->uieventstate_);
  std::swap(uireadstate_, other->uireadstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDeviceEventReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[110];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDeviceEventReq_USR

// string strUserID = 1;
void ModifyDeviceEventReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDeviceEventReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ModifyDeviceEventReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
}
#if LANG_CXX11
void ModifyDeviceEventReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
}
#endif
void ModifyDeviceEventReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
}
void ModifyDeviceEventReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
}
::std::string* ModifyDeviceEventReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDeviceEventReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDeviceEventReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDeviceEventReq_USR.strUserID)
}

// string strDeviceID = 2;
void ModifyDeviceEventReq_USR::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDeviceEventReq_USR::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void ModifyDeviceEventReq_USR::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
}
#if LANG_CXX11
void ModifyDeviceEventReq_USR::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
}
#endif
void ModifyDeviceEventReq_USR::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
}
void ModifyDeviceEventReq_USR::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
}
::std::string* ModifyDeviceEventReq_USR::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDeviceEventReq_USR::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDeviceEventReq_USR::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDeviceEventReq_USR.strDeviceID)
}

// string strEventID = 3;
void ModifyDeviceEventReq_USR::clear_streventid() {
  streventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDeviceEventReq_USR::streventid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
  return streventid_.GetNoArena();
}
void ModifyDeviceEventReq_USR::set_streventid(const ::std::string& value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
}
#if LANG_CXX11
void ModifyDeviceEventReq_USR::set_streventid(::std::string&& value) {
  
  streventid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
}
#endif
void ModifyDeviceEventReq_USR::set_streventid(const char* value) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
}
void ModifyDeviceEventReq_USR::set_streventid(const char* value, size_t size) {
  
  streventid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
}
::std::string* ModifyDeviceEventReq_USR::mutable_streventid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
  return streventid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDeviceEventReq_USR::release_streventid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
  
  return streventid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDeviceEventReq_USR::set_allocated_streventid(::std::string* streventid) {
  if (streventid != NULL) {
    
  } else {
    
  }
  streventid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streventid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDeviceEventReq_USR.strEventID)
}

// uint32 uiEventType = 4;
void ModifyDeviceEventReq_USR::clear_uieventtype() {
  uieventtype_ = 0u;
}
::google::protobuf::uint32 ModifyDeviceEventReq_USR::uieventtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.uiEventType)
  return uieventtype_;
}
void ModifyDeviceEventReq_USR::set_uieventtype(::google::protobuf::uint32 value) {
  
  uieventtype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.uiEventType)
}

// uint32 uiEventState = 5;
void ModifyDeviceEventReq_USR::clear_uieventstate() {
  uieventstate_ = 0u;
}
::google::protobuf::uint32 ModifyDeviceEventReq_USR::uieventstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.uiEventState)
  return uieventstate_;
}
void ModifyDeviceEventReq_USR::set_uieventstate(::google::protobuf::uint32 value) {
  
  uieventstate_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.uiEventState)
}

// string strUpdateTime = 6;
void ModifyDeviceEventReq_USR::clear_strupdatetime() {
  strupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDeviceEventReq_USR::strupdatetime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
  return strupdatetime_.GetNoArena();
}
void ModifyDeviceEventReq_USR::set_strupdatetime(const ::std::string& value) {
  
  strupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
}
#if LANG_CXX11
void ModifyDeviceEventReq_USR::set_strupdatetime(::std::string&& value) {
  
  strupdatetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
}
#endif
void ModifyDeviceEventReq_USR::set_strupdatetime(const char* value) {
  
  strupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
}
void ModifyDeviceEventReq_USR::set_strupdatetime(const char* value, size_t size) {
  
  strupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
}
::std::string* ModifyDeviceEventReq_USR::mutable_strupdatetime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
  return strupdatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDeviceEventReq_USR::release_strupdatetime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
  
  return strupdatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDeviceEventReq_USR::set_allocated_strupdatetime(::std::string* strupdatetime) {
  if (strupdatetime != NULL) {
    
  } else {
    
  }
  strupdatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatetime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDeviceEventReq_USR.strUpdateTime)
}

// string strFileID = 7;
void ModifyDeviceEventReq_USR::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDeviceEventReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
  return strfileid_.GetNoArena();
}
void ModifyDeviceEventReq_USR::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
}
#if LANG_CXX11
void ModifyDeviceEventReq_USR::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
}
#endif
void ModifyDeviceEventReq_USR::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
}
void ModifyDeviceEventReq_USR::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
}
::std::string* ModifyDeviceEventReq_USR::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDeviceEventReq_USR::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDeviceEventReq_USR::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDeviceEventReq_USR.strFileID)
}

// uint32 uiReadState = 8;
void ModifyDeviceEventReq_USR::clear_uireadstate() {
  uireadstate_ = 0u;
}
::google::protobuf::uint32 ModifyDeviceEventReq_USR::uireadstate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventReq_USR.uiReadState)
  return uireadstate_;
}
void ModifyDeviceEventReq_USR::set_uireadstate(::google::protobuf::uint32 value) {
  
  uireadstate_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventReq_USR.uiReadState)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDeviceEventRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDeviceEventRsp_USR::ModifyDeviceEventRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDeviceEventRsp_USR)
}
ModifyDeviceEventRsp_USR::ModifyDeviceEventRsp_USR(const ModifyDeviceEventRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDeviceEventRsp_USR)
}

void ModifyDeviceEventRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyDeviceEventRsp_USR::~ModifyDeviceEventRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDeviceEventRsp_USR)
  SharedDtor();
}

void ModifyDeviceEventRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyDeviceEventRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDeviceEventRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[111].descriptor;
}

const ModifyDeviceEventRsp_USR& ModifyDeviceEventRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDeviceEventRsp_USR* ModifyDeviceEventRsp_USR::New(::google::protobuf::Arena* arena) const {
  ModifyDeviceEventRsp_USR* n = new ModifyDeviceEventRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDeviceEventRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyDeviceEventRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDeviceEventRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDeviceEventRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDeviceEventRsp_USR)
  return false;
#undef DO_
}

void ModifyDeviceEventRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDeviceEventRsp_USR)
}

::google::protobuf::uint8* ModifyDeviceEventRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDeviceEventRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDeviceEventRsp_USR)
  return target;
}

size_t ModifyDeviceEventRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDeviceEventRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDeviceEventRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDeviceEventRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDeviceEventRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDeviceEventRsp_USR)
    MergeFrom(*source);
  }
}

void ModifyDeviceEventRsp_USR::MergeFrom(const ModifyDeviceEventRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyDeviceEventRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDeviceEventRsp_USR::CopyFrom(const ModifyDeviceEventRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDeviceEventRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDeviceEventRsp_USR::IsInitialized() const {
  return true;
}

void ModifyDeviceEventRsp_USR::Swap(ModifyDeviceEventRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDeviceEventRsp_USR::InternalSwap(ModifyDeviceEventRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDeviceEventRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[111];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDeviceEventRsp_USR

// string strValue = 1;
void ModifyDeviceEventRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDeviceEventRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyDeviceEventRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
}
#if LANG_CXX11
void ModifyDeviceEventRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
}
#endif
void ModifyDeviceEventRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
}
void ModifyDeviceEventRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
}
::std::string* ModifyDeviceEventRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDeviceEventRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDeviceEventRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDeviceEventRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddStorageDetailReq_USR::kStorageDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddStorageDetailReq_USR::AddStorageDetailReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddStorageDetailReq_USR)
}
AddStorageDetailReq_USR::AddStorageDetailReq_USR(const AddStorageDetailReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storagedetail()) {
    storagedetail_ = new ::Interactive::Message::StorageDetail(*from.storagedetail_);
  } else {
    storagedetail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddStorageDetailReq_USR)
}

void AddStorageDetailReq_USR::SharedCtor() {
  storagedetail_ = NULL;
  _cached_size_ = 0;
}

AddStorageDetailReq_USR::~AddStorageDetailReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddStorageDetailReq_USR)
  SharedDtor();
}

void AddStorageDetailReq_USR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete storagedetail_;
  }
}

void AddStorageDetailReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddStorageDetailReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[112].descriptor;
}

const AddStorageDetailReq_USR& AddStorageDetailReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddStorageDetailReq_USR* AddStorageDetailReq_USR::New(::google::protobuf::Arena* arena) const {
  AddStorageDetailReq_USR* n = new AddStorageDetailReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddStorageDetailReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddStorageDetailReq_USR)
  if (GetArenaNoVirtual() == NULL && storagedetail_ != NULL) {
    delete storagedetail_;
  }
  storagedetail_ = NULL;
}

bool AddStorageDetailReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddStorageDetailReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.StorageDetail storageDetail = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storagedetail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddStorageDetailReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddStorageDetailReq_USR)
  return false;
#undef DO_
}

void AddStorageDetailReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddStorageDetailReq_USR)
  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->storagedetail_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddStorageDetailReq_USR)
}

::google::protobuf::uint8* AddStorageDetailReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddStorageDetailReq_USR)
  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->storagedetail_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddStorageDetailReq_USR)
  return target;
}

size_t AddStorageDetailReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddStorageDetailReq_USR)
  size_t total_size = 0;

  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storagedetail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddStorageDetailReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddStorageDetailReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddStorageDetailReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddStorageDetailReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddStorageDetailReq_USR)
    MergeFrom(*source);
  }
}

void AddStorageDetailReq_USR::MergeFrom(const AddStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storagedetail()) {
    mutable_storagedetail()->::Interactive::Message::StorageDetail::MergeFrom(from.storagedetail());
  }
}

void AddStorageDetailReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddStorageDetailReq_USR::CopyFrom(const AddStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddStorageDetailReq_USR::IsInitialized() const {
  return true;
}

void AddStorageDetailReq_USR::Swap(AddStorageDetailReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddStorageDetailReq_USR::InternalSwap(AddStorageDetailReq_USR* other) {
  std::swap(storagedetail_, other->storagedetail_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddStorageDetailReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[112];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddStorageDetailReq_USR

// .Interactive.Message.StorageDetail storageDetail = 1;
bool AddStorageDetailReq_USR::has_storagedetail() const {
  return this != internal_default_instance() && storagedetail_ != NULL;
}
void AddStorageDetailReq_USR::clear_storagedetail() {
  if (GetArenaNoVirtual() == NULL && storagedetail_ != NULL) delete storagedetail_;
  storagedetail_ = NULL;
}
const ::Interactive::Message::StorageDetail& AddStorageDetailReq_USR::storagedetail() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddStorageDetailReq_USR.storageDetail)
  return storagedetail_ != NULL ? *storagedetail_
                         : *::Interactive::Message::StorageDetail::internal_default_instance();
}
::Interactive::Message::StorageDetail* AddStorageDetailReq_USR::mutable_storagedetail() {
  
  if (storagedetail_ == NULL) {
    storagedetail_ = new ::Interactive::Message::StorageDetail;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddStorageDetailReq_USR.storageDetail)
  return storagedetail_;
}
::Interactive::Message::StorageDetail* AddStorageDetailReq_USR::release_storagedetail() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddStorageDetailReq_USR.storageDetail)
  
  ::Interactive::Message::StorageDetail* temp = storagedetail_;
  storagedetail_ = NULL;
  return temp;
}
void AddStorageDetailReq_USR::set_allocated_storagedetail(::Interactive::Message::StorageDetail* storagedetail) {
  delete storagedetail_;
  storagedetail_ = storagedetail;
  if (storagedetail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddStorageDetailReq_USR.storageDetail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddStorageDetailRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddStorageDetailRsp_USR::AddStorageDetailRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddStorageDetailRsp_USR)
}
AddStorageDetailRsp_USR::AddStorageDetailRsp_USR(const AddStorageDetailRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddStorageDetailRsp_USR)
}

void AddStorageDetailRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddStorageDetailRsp_USR::~AddStorageDetailRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddStorageDetailRsp_USR)
  SharedDtor();
}

void AddStorageDetailRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddStorageDetailRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddStorageDetailRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[113].descriptor;
}

const AddStorageDetailRsp_USR& AddStorageDetailRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddStorageDetailRsp_USR* AddStorageDetailRsp_USR::New(::google::protobuf::Arena* arena) const {
  AddStorageDetailRsp_USR* n = new AddStorageDetailRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddStorageDetailRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddStorageDetailRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddStorageDetailRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddStorageDetailRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddStorageDetailRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddStorageDetailRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddStorageDetailRsp_USR)
  return false;
#undef DO_
}

void AddStorageDetailRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddStorageDetailRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddStorageDetailRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddStorageDetailRsp_USR)
}

::google::protobuf::uint8* AddStorageDetailRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddStorageDetailRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddStorageDetailRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddStorageDetailRsp_USR)
  return target;
}

size_t AddStorageDetailRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddStorageDetailRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddStorageDetailRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddStorageDetailRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddStorageDetailRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddStorageDetailRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddStorageDetailRsp_USR)
    MergeFrom(*source);
  }
}

void AddStorageDetailRsp_USR::MergeFrom(const AddStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddStorageDetailRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddStorageDetailRsp_USR::CopyFrom(const AddStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddStorageDetailRsp_USR::IsInitialized() const {
  return true;
}

void AddStorageDetailRsp_USR::Swap(AddStorageDetailRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddStorageDetailRsp_USR::InternalSwap(AddStorageDetailRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddStorageDetailRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[113];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddStorageDetailRsp_USR

// string strValue = 1;
void AddStorageDetailRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddStorageDetailRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddStorageDetailRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void AddStorageDetailRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddStorageDetailRsp_USR.strValue)
}
#if LANG_CXX11
void AddStorageDetailRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddStorageDetailRsp_USR.strValue)
}
#endif
void AddStorageDetailRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddStorageDetailRsp_USR.strValue)
}
void AddStorageDetailRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddStorageDetailRsp_USR.strValue)
}
::std::string* AddStorageDetailRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddStorageDetailRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddStorageDetailRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddStorageDetailRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddStorageDetailRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddStorageDetailRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteStorageDetailReq_USR::kStrObjectIDFieldNumber;
const int DeleteStorageDetailReq_USR::kUiDomainIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteStorageDetailReq_USR::DeleteStorageDetailReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteStorageDetailReq_USR)
}
DeleteStorageDetailReq_USR::DeleteStorageDetailReq_USR(const DeleteStorageDetailReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strobjectid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strobjectid().size() > 0) {
    strobjectid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strobjectid_);
  }
  uidomainid_ = from.uidomainid_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteStorageDetailReq_USR)
}

void DeleteStorageDetailReq_USR::SharedCtor() {
  strobjectid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidomainid_ = 0u;
  _cached_size_ = 0;
}

DeleteStorageDetailReq_USR::~DeleteStorageDetailReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteStorageDetailReq_USR)
  SharedDtor();
}

void DeleteStorageDetailReq_USR::SharedDtor() {
  strobjectid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteStorageDetailReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteStorageDetailReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[114].descriptor;
}

const DeleteStorageDetailReq_USR& DeleteStorageDetailReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteStorageDetailReq_USR* DeleteStorageDetailReq_USR::New(::google::protobuf::Arena* arena) const {
  DeleteStorageDetailReq_USR* n = new DeleteStorageDetailReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteStorageDetailReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteStorageDetailReq_USR)
  strobjectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidomainid_ = 0u;
}

bool DeleteStorageDetailReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteStorageDetailReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strObjectID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strobjectid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strobjectid().data(), this->strobjectid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteStorageDetailReq_USR.strObjectID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDomainID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidomainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteStorageDetailReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteStorageDetailReq_USR)
  return false;
#undef DO_
}

void DeleteStorageDetailReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteStorageDetailReq_USR)
  // string strObjectID = 1;
  if (this->strobjectid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strobjectid().data(), this->strobjectid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteStorageDetailReq_USR.strObjectID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strobjectid(), output);
  }

  // uint32 uiDomainID = 2;
  if (this->uidomainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uidomainid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteStorageDetailReq_USR)
}

::google::protobuf::uint8* DeleteStorageDetailReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteStorageDetailReq_USR)
  // string strObjectID = 1;
  if (this->strobjectid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strobjectid().data(), this->strobjectid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteStorageDetailReq_USR.strObjectID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strobjectid(), target);
  }

  // uint32 uiDomainID = 2;
  if (this->uidomainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uidomainid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteStorageDetailReq_USR)
  return target;
}

size_t DeleteStorageDetailReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteStorageDetailReq_USR)
  size_t total_size = 0;

  // string strObjectID = 1;
  if (this->strobjectid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strobjectid());
  }

  // uint32 uiDomainID = 2;
  if (this->uidomainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidomainid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteStorageDetailReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteStorageDetailReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteStorageDetailReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteStorageDetailReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteStorageDetailReq_USR)
    MergeFrom(*source);
  }
}

void DeleteStorageDetailReq_USR::MergeFrom(const DeleteStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strobjectid().size() > 0) {

    strobjectid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strobjectid_);
  }
  if (from.uidomainid() != 0) {
    set_uidomainid(from.uidomainid());
  }
}

void DeleteStorageDetailReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteStorageDetailReq_USR::CopyFrom(const DeleteStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStorageDetailReq_USR::IsInitialized() const {
  return true;
}

void DeleteStorageDetailReq_USR::Swap(DeleteStorageDetailReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteStorageDetailReq_USR::InternalSwap(DeleteStorageDetailReq_USR* other) {
  strobjectid_.Swap(&other->strobjectid_);
  std::swap(uidomainid_, other->uidomainid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteStorageDetailReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[114];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteStorageDetailReq_USR

// string strObjectID = 1;
void DeleteStorageDetailReq_USR::clear_strobjectid() {
  strobjectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteStorageDetailReq_USR::strobjectid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
  return strobjectid_.GetNoArena();
}
void DeleteStorageDetailReq_USR::set_strobjectid(const ::std::string& value) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
}
#if LANG_CXX11
void DeleteStorageDetailReq_USR::set_strobjectid(::std::string&& value) {
  
  strobjectid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
}
#endif
void DeleteStorageDetailReq_USR::set_strobjectid(const char* value) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
}
void DeleteStorageDetailReq_USR::set_strobjectid(const char* value, size_t size) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
}
::std::string* DeleteStorageDetailReq_USR::mutable_strobjectid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
  return strobjectid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteStorageDetailReq_USR::release_strobjectid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
  
  return strobjectid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteStorageDetailReq_USR::set_allocated_strobjectid(::std::string* strobjectid) {
  if (strobjectid != NULL) {
    
  } else {
    
  }
  strobjectid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strobjectid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteStorageDetailReq_USR.strObjectID)
}

// uint32 uiDomainID = 2;
void DeleteStorageDetailReq_USR::clear_uidomainid() {
  uidomainid_ = 0u;
}
::google::protobuf::uint32 DeleteStorageDetailReq_USR::uidomainid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteStorageDetailReq_USR.uiDomainID)
  return uidomainid_;
}
void DeleteStorageDetailReq_USR::set_uidomainid(::google::protobuf::uint32 value) {
  
  uidomainid_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteStorageDetailReq_USR.uiDomainID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteStorageDetailRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteStorageDetailRsp_USR::DeleteStorageDetailRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteStorageDetailRsp_USR)
}
DeleteStorageDetailRsp_USR::DeleteStorageDetailRsp_USR(const DeleteStorageDetailRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteStorageDetailRsp_USR)
}

void DeleteStorageDetailRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteStorageDetailRsp_USR::~DeleteStorageDetailRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteStorageDetailRsp_USR)
  SharedDtor();
}

void DeleteStorageDetailRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteStorageDetailRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteStorageDetailRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[115].descriptor;
}

const DeleteStorageDetailRsp_USR& DeleteStorageDetailRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteStorageDetailRsp_USR* DeleteStorageDetailRsp_USR::New(::google::protobuf::Arena* arena) const {
  DeleteStorageDetailRsp_USR* n = new DeleteStorageDetailRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteStorageDetailRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteStorageDetailRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteStorageDetailRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteStorageDetailRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteStorageDetailRsp_USR)
  return false;
#undef DO_
}

void DeleteStorageDetailRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteStorageDetailRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteStorageDetailRsp_USR)
}

::google::protobuf::uint8* DeleteStorageDetailRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteStorageDetailRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteStorageDetailRsp_USR)
  return target;
}

size_t DeleteStorageDetailRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteStorageDetailRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteStorageDetailRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteStorageDetailRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteStorageDetailRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteStorageDetailRsp_USR)
    MergeFrom(*source);
  }
}

void DeleteStorageDetailRsp_USR::MergeFrom(const DeleteStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DeleteStorageDetailRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteStorageDetailRsp_USR::CopyFrom(const DeleteStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStorageDetailRsp_USR::IsInitialized() const {
  return true;
}

void DeleteStorageDetailRsp_USR::Swap(DeleteStorageDetailRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteStorageDetailRsp_USR::InternalSwap(DeleteStorageDetailRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteStorageDetailRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[115];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteStorageDetailRsp_USR

// string strValue = 1;
void DeleteStorageDetailRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteStorageDetailRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DeleteStorageDetailRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
}
#if LANG_CXX11
void DeleteStorageDetailRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
}
#endif
void DeleteStorageDetailRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
}
void DeleteStorageDetailRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
}
::std::string* DeleteStorageDetailRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteStorageDetailRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteStorageDetailRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteStorageDetailRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyStorageDetailReq_USR::kStorageDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyStorageDetailReq_USR::ModifyStorageDetailReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyStorageDetailReq_USR)
}
ModifyStorageDetailReq_USR::ModifyStorageDetailReq_USR(const ModifyStorageDetailReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storagedetail()) {
    storagedetail_ = new ::Interactive::Message::StorageDetail(*from.storagedetail_);
  } else {
    storagedetail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyStorageDetailReq_USR)
}

void ModifyStorageDetailReq_USR::SharedCtor() {
  storagedetail_ = NULL;
  _cached_size_ = 0;
}

ModifyStorageDetailReq_USR::~ModifyStorageDetailReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyStorageDetailReq_USR)
  SharedDtor();
}

void ModifyStorageDetailReq_USR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete storagedetail_;
  }
}

void ModifyStorageDetailReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyStorageDetailReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[116].descriptor;
}

const ModifyStorageDetailReq_USR& ModifyStorageDetailReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyStorageDetailReq_USR* ModifyStorageDetailReq_USR::New(::google::protobuf::Arena* arena) const {
  ModifyStorageDetailReq_USR* n = new ModifyStorageDetailReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyStorageDetailReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyStorageDetailReq_USR)
  if (GetArenaNoVirtual() == NULL && storagedetail_ != NULL) {
    delete storagedetail_;
  }
  storagedetail_ = NULL;
}

bool ModifyStorageDetailReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyStorageDetailReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.StorageDetail storageDetail = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storagedetail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyStorageDetailReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyStorageDetailReq_USR)
  return false;
#undef DO_
}

void ModifyStorageDetailReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyStorageDetailReq_USR)
  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->storagedetail_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyStorageDetailReq_USR)
}

::google::protobuf::uint8* ModifyStorageDetailReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyStorageDetailReq_USR)
  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->storagedetail_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyStorageDetailReq_USR)
  return target;
}

size_t ModifyStorageDetailReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyStorageDetailReq_USR)
  size_t total_size = 0;

  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storagedetail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyStorageDetailReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyStorageDetailReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyStorageDetailReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyStorageDetailReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyStorageDetailReq_USR)
    MergeFrom(*source);
  }
}

void ModifyStorageDetailReq_USR::MergeFrom(const ModifyStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storagedetail()) {
    mutable_storagedetail()->::Interactive::Message::StorageDetail::MergeFrom(from.storagedetail());
  }
}

void ModifyStorageDetailReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyStorageDetailReq_USR::CopyFrom(const ModifyStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyStorageDetailReq_USR::IsInitialized() const {
  return true;
}

void ModifyStorageDetailReq_USR::Swap(ModifyStorageDetailReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyStorageDetailReq_USR::InternalSwap(ModifyStorageDetailReq_USR* other) {
  std::swap(storagedetail_, other->storagedetail_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyStorageDetailReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[116];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyStorageDetailReq_USR

// .Interactive.Message.StorageDetail storageDetail = 1;
bool ModifyStorageDetailReq_USR::has_storagedetail() const {
  return this != internal_default_instance() && storagedetail_ != NULL;
}
void ModifyStorageDetailReq_USR::clear_storagedetail() {
  if (GetArenaNoVirtual() == NULL && storagedetail_ != NULL) delete storagedetail_;
  storagedetail_ = NULL;
}
const ::Interactive::Message::StorageDetail& ModifyStorageDetailReq_USR::storagedetail() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyStorageDetailReq_USR.storageDetail)
  return storagedetail_ != NULL ? *storagedetail_
                         : *::Interactive::Message::StorageDetail::internal_default_instance();
}
::Interactive::Message::StorageDetail* ModifyStorageDetailReq_USR::mutable_storagedetail() {
  
  if (storagedetail_ == NULL) {
    storagedetail_ = new ::Interactive::Message::StorageDetail;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyStorageDetailReq_USR.storageDetail)
  return storagedetail_;
}
::Interactive::Message::StorageDetail* ModifyStorageDetailReq_USR::release_storagedetail() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyStorageDetailReq_USR.storageDetail)
  
  ::Interactive::Message::StorageDetail* temp = storagedetail_;
  storagedetail_ = NULL;
  return temp;
}
void ModifyStorageDetailReq_USR::set_allocated_storagedetail(::Interactive::Message::StorageDetail* storagedetail) {
  delete storagedetail_;
  storagedetail_ = storagedetail;
  if (storagedetail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyStorageDetailReq_USR.storageDetail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyStorageDetailRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyStorageDetailRsp_USR::ModifyStorageDetailRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyStorageDetailRsp_USR)
}
ModifyStorageDetailRsp_USR::ModifyStorageDetailRsp_USR(const ModifyStorageDetailRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyStorageDetailRsp_USR)
}

void ModifyStorageDetailRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyStorageDetailRsp_USR::~ModifyStorageDetailRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyStorageDetailRsp_USR)
  SharedDtor();
}

void ModifyStorageDetailRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyStorageDetailRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyStorageDetailRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[117].descriptor;
}

const ModifyStorageDetailRsp_USR& ModifyStorageDetailRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyStorageDetailRsp_USR* ModifyStorageDetailRsp_USR::New(::google::protobuf::Arena* arena) const {
  ModifyStorageDetailRsp_USR* n = new ModifyStorageDetailRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyStorageDetailRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyStorageDetailRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyStorageDetailRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyStorageDetailRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyStorageDetailRsp_USR)
  return false;
#undef DO_
}

void ModifyStorageDetailRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyStorageDetailRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyStorageDetailRsp_USR)
}

::google::protobuf::uint8* ModifyStorageDetailRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyStorageDetailRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyStorageDetailRsp_USR)
  return target;
}

size_t ModifyStorageDetailRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyStorageDetailRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyStorageDetailRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyStorageDetailRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyStorageDetailRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyStorageDetailRsp_USR)
    MergeFrom(*source);
  }
}

void ModifyStorageDetailRsp_USR::MergeFrom(const ModifyStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyStorageDetailRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyStorageDetailRsp_USR::CopyFrom(const ModifyStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyStorageDetailRsp_USR::IsInitialized() const {
  return true;
}

void ModifyStorageDetailRsp_USR::Swap(ModifyStorageDetailRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyStorageDetailRsp_USR::InternalSwap(ModifyStorageDetailRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyStorageDetailRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[117];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyStorageDetailRsp_USR

// string strValue = 1;
void ModifyStorageDetailRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyStorageDetailRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyStorageDetailRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
}
#if LANG_CXX11
void ModifyStorageDetailRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
}
#endif
void ModifyStorageDetailRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
}
void ModifyStorageDetailRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
}
::std::string* ModifyStorageDetailRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyStorageDetailRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyStorageDetailRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyStorageDetailRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryStorageDetailReq_USR::kStrObjectIDFieldNumber;
const int QueryStorageDetailReq_USR::kUiDomainIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryStorageDetailReq_USR::QueryStorageDetailReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryStorageDetailReq_USR)
}
QueryStorageDetailReq_USR::QueryStorageDetailReq_USR(const QueryStorageDetailReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strobjectid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strobjectid().size() > 0) {
    strobjectid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strobjectid_);
  }
  uidomainid_ = from.uidomainid_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryStorageDetailReq_USR)
}

void QueryStorageDetailReq_USR::SharedCtor() {
  strobjectid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidomainid_ = 0u;
  _cached_size_ = 0;
}

QueryStorageDetailReq_USR::~QueryStorageDetailReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryStorageDetailReq_USR)
  SharedDtor();
}

void QueryStorageDetailReq_USR::SharedDtor() {
  strobjectid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryStorageDetailReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryStorageDetailReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[118].descriptor;
}

const QueryStorageDetailReq_USR& QueryStorageDetailReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryStorageDetailReq_USR* QueryStorageDetailReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryStorageDetailReq_USR* n = new QueryStorageDetailReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryStorageDetailReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryStorageDetailReq_USR)
  strobjectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidomainid_ = 0u;
}

bool QueryStorageDetailReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryStorageDetailReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strObjectID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strobjectid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strobjectid().data(), this->strobjectid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryStorageDetailReq_USR.strObjectID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDomainID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidomainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryStorageDetailReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryStorageDetailReq_USR)
  return false;
#undef DO_
}

void QueryStorageDetailReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryStorageDetailReq_USR)
  // string strObjectID = 1;
  if (this->strobjectid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strobjectid().data(), this->strobjectid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryStorageDetailReq_USR.strObjectID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strobjectid(), output);
  }

  // uint32 uiDomainID = 2;
  if (this->uidomainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uidomainid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryStorageDetailReq_USR)
}

::google::protobuf::uint8* QueryStorageDetailReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryStorageDetailReq_USR)
  // string strObjectID = 1;
  if (this->strobjectid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strobjectid().data(), this->strobjectid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryStorageDetailReq_USR.strObjectID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strobjectid(), target);
  }

  // uint32 uiDomainID = 2;
  if (this->uidomainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uidomainid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryStorageDetailReq_USR)
  return target;
}

size_t QueryStorageDetailReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryStorageDetailReq_USR)
  size_t total_size = 0;

  // string strObjectID = 1;
  if (this->strobjectid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strobjectid());
  }

  // uint32 uiDomainID = 2;
  if (this->uidomainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidomainid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryStorageDetailReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStorageDetailReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryStorageDetailReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryStorageDetailReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryStorageDetailReq_USR)
    MergeFrom(*source);
  }
}

void QueryStorageDetailReq_USR::MergeFrom(const QueryStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryStorageDetailReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strobjectid().size() > 0) {

    strobjectid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strobjectid_);
  }
  if (from.uidomainid() != 0) {
    set_uidomainid(from.uidomainid());
  }
}

void QueryStorageDetailReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStorageDetailReq_USR::CopyFrom(const QueryStorageDetailReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryStorageDetailReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStorageDetailReq_USR::IsInitialized() const {
  return true;
}

void QueryStorageDetailReq_USR::Swap(QueryStorageDetailReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryStorageDetailReq_USR::InternalSwap(QueryStorageDetailReq_USR* other) {
  strobjectid_.Swap(&other->strobjectid_);
  std::swap(uidomainid_, other->uidomainid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryStorageDetailReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[118];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryStorageDetailReq_USR

// string strObjectID = 1;
void QueryStorageDetailReq_USR::clear_strobjectid() {
  strobjectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryStorageDetailReq_USR::strobjectid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
  return strobjectid_.GetNoArena();
}
void QueryStorageDetailReq_USR::set_strobjectid(const ::std::string& value) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
}
#if LANG_CXX11
void QueryStorageDetailReq_USR::set_strobjectid(::std::string&& value) {
  
  strobjectid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
}
#endif
void QueryStorageDetailReq_USR::set_strobjectid(const char* value) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
}
void QueryStorageDetailReq_USR::set_strobjectid(const char* value, size_t size) {
  
  strobjectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
}
::std::string* QueryStorageDetailReq_USR::mutable_strobjectid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
  return strobjectid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryStorageDetailReq_USR::release_strobjectid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
  
  return strobjectid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryStorageDetailReq_USR::set_allocated_strobjectid(::std::string* strobjectid) {
  if (strobjectid != NULL) {
    
  } else {
    
  }
  strobjectid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strobjectid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryStorageDetailReq_USR.strObjectID)
}

// uint32 uiDomainID = 2;
void QueryStorageDetailReq_USR::clear_uidomainid() {
  uidomainid_ = 0u;
}
::google::protobuf::uint32 QueryStorageDetailReq_USR::uidomainid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryStorageDetailReq_USR.uiDomainID)
  return uidomainid_;
}
void QueryStorageDetailReq_USR::set_uidomainid(::google::protobuf::uint32 value) {
  
  uidomainid_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryStorageDetailReq_USR.uiDomainID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryStorageDetailRsp_USR::kStorageDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryStorageDetailRsp_USR::QueryStorageDetailRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryStorageDetailRsp_USR)
}
QueryStorageDetailRsp_USR::QueryStorageDetailRsp_USR(const QueryStorageDetailRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storagedetail()) {
    storagedetail_ = new ::Interactive::Message::StorageDetail(*from.storagedetail_);
  } else {
    storagedetail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryStorageDetailRsp_USR)
}

void QueryStorageDetailRsp_USR::SharedCtor() {
  storagedetail_ = NULL;
  _cached_size_ = 0;
}

QueryStorageDetailRsp_USR::~QueryStorageDetailRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryStorageDetailRsp_USR)
  SharedDtor();
}

void QueryStorageDetailRsp_USR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete storagedetail_;
  }
}

void QueryStorageDetailRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryStorageDetailRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[119].descriptor;
}

const QueryStorageDetailRsp_USR& QueryStorageDetailRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryStorageDetailRsp_USR* QueryStorageDetailRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryStorageDetailRsp_USR* n = new QueryStorageDetailRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryStorageDetailRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryStorageDetailRsp_USR)
  if (GetArenaNoVirtual() == NULL && storagedetail_ != NULL) {
    delete storagedetail_;
  }
  storagedetail_ = NULL;
}

bool QueryStorageDetailRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryStorageDetailRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.StorageDetail storageDetail = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storagedetail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryStorageDetailRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryStorageDetailRsp_USR)
  return false;
#undef DO_
}

void QueryStorageDetailRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryStorageDetailRsp_USR)
  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->storagedetail_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryStorageDetailRsp_USR)
}

::google::protobuf::uint8* QueryStorageDetailRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryStorageDetailRsp_USR)
  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->storagedetail_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryStorageDetailRsp_USR)
  return target;
}

size_t QueryStorageDetailRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryStorageDetailRsp_USR)
  size_t total_size = 0;

  // .Interactive.Message.StorageDetail storageDetail = 1;
  if (this->has_storagedetail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storagedetail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryStorageDetailRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStorageDetailRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryStorageDetailRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryStorageDetailRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryStorageDetailRsp_USR)
    MergeFrom(*source);
  }
}

void QueryStorageDetailRsp_USR::MergeFrom(const QueryStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryStorageDetailRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storagedetail()) {
    mutable_storagedetail()->::Interactive::Message::StorageDetail::MergeFrom(from.storagedetail());
  }
}

void QueryStorageDetailRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStorageDetailRsp_USR::CopyFrom(const QueryStorageDetailRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryStorageDetailRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStorageDetailRsp_USR::IsInitialized() const {
  return true;
}

void QueryStorageDetailRsp_USR::Swap(QueryStorageDetailRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryStorageDetailRsp_USR::InternalSwap(QueryStorageDetailRsp_USR* other) {
  std::swap(storagedetail_, other->storagedetail_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryStorageDetailRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[119];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryStorageDetailRsp_USR

// .Interactive.Message.StorageDetail storageDetail = 1;
bool QueryStorageDetailRsp_USR::has_storagedetail() const {
  return this != internal_default_instance() && storagedetail_ != NULL;
}
void QueryStorageDetailRsp_USR::clear_storagedetail() {
  if (GetArenaNoVirtual() == NULL && storagedetail_ != NULL) delete storagedetail_;
  storagedetail_ = NULL;
}
const ::Interactive::Message::StorageDetail& QueryStorageDetailRsp_USR::storagedetail() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryStorageDetailRsp_USR.storageDetail)
  return storagedetail_ != NULL ? *storagedetail_
                         : *::Interactive::Message::StorageDetail::internal_default_instance();
}
::Interactive::Message::StorageDetail* QueryStorageDetailRsp_USR::mutable_storagedetail() {
  
  if (storagedetail_ == NULL) {
    storagedetail_ = new ::Interactive::Message::StorageDetail;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryStorageDetailRsp_USR.storageDetail)
  return storagedetail_;
}
::Interactive::Message::StorageDetail* QueryStorageDetailRsp_USR::release_storagedetail() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryStorageDetailRsp_USR.storageDetail)
  
  ::Interactive::Message::StorageDetail* temp = storagedetail_;
  storagedetail_ = NULL;
  return temp;
}
void QueryStorageDetailRsp_USR::set_allocated_storagedetail(::Interactive::Message::StorageDetail* storagedetail) {
  delete storagedetail_;
  storagedetail_ = storagedetail;
  if (storagedetail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryStorageDetailRsp_USR.storageDetail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRegionStorageInfoReq_USR::kStrUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRegionStorageInfoReq_USR::QueryRegionStorageInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryRegionStorageInfoReq_USR)
}
QueryRegionStorageInfoReq_USR::QueryRegionStorageInfoReq_USR(const QueryRegionStorageInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryRegionStorageInfoReq_USR)
}

void QueryRegionStorageInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryRegionStorageInfoReq_USR::~QueryRegionStorageInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryRegionStorageInfoReq_USR)
  SharedDtor();
}

void QueryRegionStorageInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRegionStorageInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRegionStorageInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[120].descriptor;
}

const QueryRegionStorageInfoReq_USR& QueryRegionStorageInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryRegionStorageInfoReq_USR* QueryRegionStorageInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryRegionStorageInfoReq_USR* n = new QueryRegionStorageInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRegionStorageInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryRegionStorageInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryRegionStorageInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryRegionStorageInfoReq_USR)
  return false;
#undef DO_
}

void QueryRegionStorageInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryRegionStorageInfoReq_USR)
}

::google::protobuf::uint8* QueryRegionStorageInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryRegionStorageInfoReq_USR)
  return target;
}

size_t QueryRegionStorageInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRegionStorageInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRegionStorageInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRegionStorageInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryRegionStorageInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryRegionStorageInfoReq_USR)
    MergeFrom(*source);
  }
}

void QueryRegionStorageInfoReq_USR::MergeFrom(const QueryRegionStorageInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void QueryRegionStorageInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRegionStorageInfoReq_USR::CopyFrom(const QueryRegionStorageInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryRegionStorageInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRegionStorageInfoReq_USR::IsInitialized() const {
  return true;
}

void QueryRegionStorageInfoReq_USR::Swap(QueryRegionStorageInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRegionStorageInfoReq_USR::InternalSwap(QueryRegionStorageInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRegionStorageInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[120];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRegionStorageInfoReq_USR

// string strUserID = 1;
void QueryRegionStorageInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryRegionStorageInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryRegionStorageInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
}
#if LANG_CXX11
void QueryRegionStorageInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
}
#endif
void QueryRegionStorageInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
}
void QueryRegionStorageInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
}
::std::string* QueryRegionStorageInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryRegionStorageInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryRegionStorageInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryRegionStorageInfoReq_USR.strUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRegionStorageInfoRsp_USR::kUiDomainIDFieldNumber;
const int QueryRegionStorageInfoRsp_USR::kUiSizeOfSpaceFieldNumber;
const int QueryRegionStorageInfoRsp_USR::kUiSizeOfSpaceUsedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRegionStorageInfoRsp_USR::QueryRegionStorageInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryRegionStorageInfoRsp_USR)
}
QueryRegionStorageInfoRsp_USR::QueryRegionStorageInfoRsp_USR(const QueryRegionStorageInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uidomainid_, &from.uidomainid_,
    reinterpret_cast<char*>(&uisizeofspaceused_) -
    reinterpret_cast<char*>(&uidomainid_) + sizeof(uisizeofspaceused_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryRegionStorageInfoRsp_USR)
}

void QueryRegionStorageInfoRsp_USR::SharedCtor() {
  ::memset(&uidomainid_, 0, reinterpret_cast<char*>(&uisizeofspaceused_) -
    reinterpret_cast<char*>(&uidomainid_) + sizeof(uisizeofspaceused_));
  _cached_size_ = 0;
}

QueryRegionStorageInfoRsp_USR::~QueryRegionStorageInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  SharedDtor();
}

void QueryRegionStorageInfoRsp_USR::SharedDtor() {
}

void QueryRegionStorageInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRegionStorageInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[121].descriptor;
}

const QueryRegionStorageInfoRsp_USR& QueryRegionStorageInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryRegionStorageInfoRsp_USR* QueryRegionStorageInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryRegionStorageInfoRsp_USR* n = new QueryRegionStorageInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRegionStorageInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  ::memset(&uidomainid_, 0, reinterpret_cast<char*>(&uisizeofspaceused_) -
    reinterpret_cast<char*>(&uidomainid_) + sizeof(uisizeofspaceused_));
}

bool QueryRegionStorageInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiDomainID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidomainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiSizeOfSpace = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uisizeofspace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiSizeOfSpaceUsed = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uisizeofspaceused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  return false;
#undef DO_
}

void QueryRegionStorageInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  // uint32 uiDomainID = 1;
  if (this->uidomainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uidomainid(), output);
  }

  // uint32 uiSizeOfSpace = 2;
  if (this->uisizeofspace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uisizeofspace(), output);
  }

  // uint32 uiSizeOfSpaceUsed = 3;
  if (this->uisizeofspaceused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uisizeofspaceused(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryRegionStorageInfoRsp_USR)
}

::google::protobuf::uint8* QueryRegionStorageInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  // uint32 uiDomainID = 1;
  if (this->uidomainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uidomainid(), target);
  }

  // uint32 uiSizeOfSpace = 2;
  if (this->uisizeofspace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uisizeofspace(), target);
  }

  // uint32 uiSizeOfSpaceUsed = 3;
  if (this->uisizeofspaceused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uisizeofspaceused(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  return target;
}

size_t QueryRegionStorageInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  size_t total_size = 0;

  // uint32 uiDomainID = 1;
  if (this->uidomainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidomainid());
  }

  // uint32 uiSizeOfSpace = 2;
  if (this->uisizeofspace() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uisizeofspace());
  }

  // uint32 uiSizeOfSpaceUsed = 3;
  if (this->uisizeofspaceused() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uisizeofspaceused());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRegionStorageInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRegionStorageInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRegionStorageInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryRegionStorageInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryRegionStorageInfoRsp_USR)
    MergeFrom(*source);
  }
}

void QueryRegionStorageInfoRsp_USR::MergeFrom(const QueryRegionStorageInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uidomainid() != 0) {
    set_uidomainid(from.uidomainid());
  }
  if (from.uisizeofspace() != 0) {
    set_uisizeofspace(from.uisizeofspace());
  }
  if (from.uisizeofspaceused() != 0) {
    set_uisizeofspaceused(from.uisizeofspaceused());
  }
}

void QueryRegionStorageInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRegionStorageInfoRsp_USR::CopyFrom(const QueryRegionStorageInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryRegionStorageInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRegionStorageInfoRsp_USR::IsInitialized() const {
  return true;
}

void QueryRegionStorageInfoRsp_USR::Swap(QueryRegionStorageInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRegionStorageInfoRsp_USR::InternalSwap(QueryRegionStorageInfoRsp_USR* other) {
  std::swap(uidomainid_, other->uidomainid_);
  std::swap(uisizeofspace_, other->uisizeofspace_);
  std::swap(uisizeofspaceused_, other->uisizeofspaceused_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRegionStorageInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[121];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRegionStorageInfoRsp_USR

// uint32 uiDomainID = 1;
void QueryRegionStorageInfoRsp_USR::clear_uidomainid() {
  uidomainid_ = 0u;
}
::google::protobuf::uint32 QueryRegionStorageInfoRsp_USR::uidomainid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryRegionStorageInfoRsp_USR.uiDomainID)
  return uidomainid_;
}
void QueryRegionStorageInfoRsp_USR::set_uidomainid(::google::protobuf::uint32 value) {
  
  uidomainid_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryRegionStorageInfoRsp_USR.uiDomainID)
}

// uint32 uiSizeOfSpace = 2;
void QueryRegionStorageInfoRsp_USR::clear_uisizeofspace() {
  uisizeofspace_ = 0u;
}
::google::protobuf::uint32 QueryRegionStorageInfoRsp_USR::uisizeofspace() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryRegionStorageInfoRsp_USR.uiSizeOfSpace)
  return uisizeofspace_;
}
void QueryRegionStorageInfoRsp_USR::set_uisizeofspace(::google::protobuf::uint32 value) {
  
  uisizeofspace_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryRegionStorageInfoRsp_USR.uiSizeOfSpace)
}

// uint32 uiSizeOfSpaceUsed = 3;
void QueryRegionStorageInfoRsp_USR::clear_uisizeofspaceused() {
  uisizeofspaceused_ = 0u;
}
::google::protobuf::uint32 QueryRegionStorageInfoRsp_USR::uisizeofspaceused() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryRegionStorageInfoRsp_USR.uiSizeOfSpaceUsed)
  return uisizeofspaceused_;
}
void QueryRegionStorageInfoRsp_USR::set_uisizeofspaceused(::google::protobuf::uint32 value) {
  
  uisizeofspaceused_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryRegionStorageInfoRsp_USR.uiSizeOfSpaceUsed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceInfoMultiReq_USR::kStrDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceInfoMultiReq_USR::QueryDeviceInfoMultiReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceInfoMultiReq_USR)
}
QueryDeviceInfoMultiReq_USR::QueryDeviceInfoMultiReq_USR(const QueryDeviceInfoMultiReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strdeviceid_(from.strdeviceid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceInfoMultiReq_USR)
}

void QueryDeviceInfoMultiReq_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryDeviceInfoMultiReq_USR::~QueryDeviceInfoMultiReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  SharedDtor();
}

void QueryDeviceInfoMultiReq_USR::SharedDtor() {
}

void QueryDeviceInfoMultiReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceInfoMultiReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[122].descriptor;
}

const QueryDeviceInfoMultiReq_USR& QueryDeviceInfoMultiReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceInfoMultiReq_USR* QueryDeviceInfoMultiReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDeviceInfoMultiReq_USR* n = new QueryDeviceInfoMultiReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceInfoMultiReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  strdeviceid_.Clear();
}

bool QueryDeviceInfoMultiReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid(this->strdeviceid_size() - 1).data(),
            this->strdeviceid(this->strdeviceid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  return false;
#undef DO_
}

void QueryDeviceInfoMultiReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  // repeated string strDeviceID = 1;
  for (int i = 0; i < this->strdeviceid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid(i).data(), this->strdeviceid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strdeviceid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceInfoMultiReq_USR)
}

::google::protobuf::uint8* QueryDeviceInfoMultiReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  // repeated string strDeviceID = 1;
  for (int i = 0; i < this->strdeviceid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid(i).data(), this->strdeviceid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->strdeviceid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  return target;
}

size_t QueryDeviceInfoMultiReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  size_t total_size = 0;

  // repeated string strDeviceID = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdeviceid_size());
  for (int i = 0; i < this->strdeviceid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdeviceid(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceInfoMultiReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceInfoMultiReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceInfoMultiReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceInfoMultiReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceInfoMultiReq_USR)
    MergeFrom(*source);
  }
}

void QueryDeviceInfoMultiReq_USR::MergeFrom(const QueryDeviceInfoMultiReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.MergeFrom(from.strdeviceid_);
}

void QueryDeviceInfoMultiReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceInfoMultiReq_USR::CopyFrom(const QueryDeviceInfoMultiReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceInfoMultiReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceInfoMultiReq_USR::IsInitialized() const {
  return true;
}

void QueryDeviceInfoMultiReq_USR::Swap(QueryDeviceInfoMultiReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceInfoMultiReq_USR::InternalSwap(QueryDeviceInfoMultiReq_USR* other) {
  strdeviceid_.UnsafeArenaSwap(&other->strdeviceid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceInfoMultiReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[122];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceInfoMultiReq_USR

// repeated string strDeviceID = 1;
int QueryDeviceInfoMultiReq_USR::strdeviceid_size() const {
  return strdeviceid_.size();
}
void QueryDeviceInfoMultiReq_USR::clear_strdeviceid() {
  strdeviceid_.Clear();
}
const ::std::string& QueryDeviceInfoMultiReq_USR::strdeviceid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
  return strdeviceid_.Get(index);
}
::std::string* QueryDeviceInfoMultiReq_USR::mutable_strdeviceid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
  return strdeviceid_.Mutable(index);
}
void QueryDeviceInfoMultiReq_USR::set_strdeviceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
  strdeviceid_.Mutable(index)->assign(value);
}
void QueryDeviceInfoMultiReq_USR::set_strdeviceid(int index, const char* value) {
  strdeviceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
}
void QueryDeviceInfoMultiReq_USR::set_strdeviceid(int index, const char* value, size_t size) {
  strdeviceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
}
::std::string* QueryDeviceInfoMultiReq_USR::add_strdeviceid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
  return strdeviceid_.Add();
}
void QueryDeviceInfoMultiReq_USR::add_strdeviceid(const ::std::string& value) {
  strdeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
}
void QueryDeviceInfoMultiReq_USR::add_strdeviceid(const char* value) {
  strdeviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
}
void QueryDeviceInfoMultiReq_USR::add_strdeviceid(const char* value, size_t size) {
  strdeviceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryDeviceInfoMultiReq_USR::strdeviceid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
  return strdeviceid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
QueryDeviceInfoMultiReq_USR::mutable_strdeviceid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryDeviceInfoMultiReq_USR.strDeviceID)
  return &strdeviceid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceInfoMultiRsp_USR::kDeviceStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceInfoMultiRsp_USR::QueryDeviceInfoMultiRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
}
QueryDeviceInfoMultiRsp_USR::QueryDeviceInfoMultiRsp_USR(const QueryDeviceInfoMultiRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devicestatus_(from.devicestatus_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
}

void QueryDeviceInfoMultiRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryDeviceInfoMultiRsp_USR::~QueryDeviceInfoMultiRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  SharedDtor();
}

void QueryDeviceInfoMultiRsp_USR::SharedDtor() {
}

void QueryDeviceInfoMultiRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceInfoMultiRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[123].descriptor;
}

const QueryDeviceInfoMultiRsp_USR& QueryDeviceInfoMultiRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceInfoMultiRsp_USR* QueryDeviceInfoMultiRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDeviceInfoMultiRsp_USR* n = new QueryDeviceInfoMultiRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceInfoMultiRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  devicestatus_.Clear();
}

bool QueryDeviceInfoMultiRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.DeviceStatus deviceStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devicestatus()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  return false;
#undef DO_
}

void QueryDeviceInfoMultiRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  // repeated .Interactive.Message.DeviceStatus deviceStatus = 1;
  for (unsigned int i = 0, n = this->devicestatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devicestatus(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
}

::google::protobuf::uint8* QueryDeviceInfoMultiRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  // repeated .Interactive.Message.DeviceStatus deviceStatus = 1;
  for (unsigned int i = 0, n = this->devicestatus_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->devicestatus(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  return target;
}

size_t QueryDeviceInfoMultiRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.DeviceStatus deviceStatus = 1;
  {
    unsigned int count = this->devicestatus_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devicestatus(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceInfoMultiRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceInfoMultiRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceInfoMultiRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDeviceInfoMultiRsp_USR::MergeFrom(const QueryDeviceInfoMultiRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devicestatus_.MergeFrom(from.devicestatus_);
}

void QueryDeviceInfoMultiRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceInfoMultiRsp_USR::CopyFrom(const QueryDeviceInfoMultiRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceInfoMultiRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceInfoMultiRsp_USR::IsInitialized() const {
  return true;
}

void QueryDeviceInfoMultiRsp_USR::Swap(QueryDeviceInfoMultiRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceInfoMultiRsp_USR::InternalSwap(QueryDeviceInfoMultiRsp_USR* other) {
  devicestatus_.UnsafeArenaSwap(&other->devicestatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceInfoMultiRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[123];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceInfoMultiRsp_USR

// repeated .Interactive.Message.DeviceStatus deviceStatus = 1;
int QueryDeviceInfoMultiRsp_USR::devicestatus_size() const {
  return devicestatus_.size();
}
void QueryDeviceInfoMultiRsp_USR::clear_devicestatus() {
  devicestatus_.Clear();
}
const ::Interactive::Message::DeviceStatus& QueryDeviceInfoMultiRsp_USR::devicestatus(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceInfoMultiRsp_USR.deviceStatus)
  return devicestatus_.Get(index);
}
::Interactive::Message::DeviceStatus* QueryDeviceInfoMultiRsp_USR::mutable_devicestatus(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceInfoMultiRsp_USR.deviceStatus)
  return devicestatus_.Mutable(index);
}
::Interactive::Message::DeviceStatus* QueryDeviceInfoMultiRsp_USR::add_devicestatus() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryDeviceInfoMultiRsp_USR.deviceStatus)
  return devicestatus_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceStatus >*
QueryDeviceInfoMultiRsp_USR::mutable_devicestatus() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryDeviceInfoMultiRsp_USR.deviceStatus)
  return &devicestatus_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceStatus >&
QueryDeviceInfoMultiRsp_USR::devicestatus() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryDeviceInfoMultiRsp_USR.deviceStatus)
  return devicestatus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterCmsCallReq_USR::kStrCmsIDFieldNumber;
const int RegisterCmsCallReq_USR::kStrCmsP2PIDListFieldNumber;
const int RegisterCmsCallReq_USR::kStrDeviceMacFieldNumber;
const int RegisterCmsCallReq_USR::kStrDeviceP2PIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterCmsCallReq_USR::RegisterCmsCallReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RegisterCmsCallReq_USR)
}
RegisterCmsCallReq_USR::RegisterCmsCallReq_USR(const RegisterCmsCallReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strcmsp2pidlist_(from.strcmsp2pidlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcmsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcmsid().size() > 0) {
    strcmsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcmsid_);
  }
  strdevicemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicemac().size() > 0) {
    strdevicemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicemac_);
  }
  strdevicep2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicep2pid().size() > 0) {
    strdevicep2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicep2pid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RegisterCmsCallReq_USR)
}

void RegisterCmsCallReq_USR::SharedCtor() {
  strcmsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicep2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterCmsCallReq_USR::~RegisterCmsCallReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RegisterCmsCallReq_USR)
  SharedDtor();
}

void RegisterCmsCallReq_USR::SharedDtor() {
  strcmsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicemac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicep2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterCmsCallReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterCmsCallReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[124].descriptor;
}

const RegisterCmsCallReq_USR& RegisterCmsCallReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterCmsCallReq_USR* RegisterCmsCallReq_USR::New(::google::protobuf::Arena* arena) const {
  RegisterCmsCallReq_USR* n = new RegisterCmsCallReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterCmsCallReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RegisterCmsCallReq_USR)
  strcmsp2pidlist_.Clear();
  strcmsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicemac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicep2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegisterCmsCallReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RegisterCmsCallReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCmsID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcmsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcmsid().data(), this->strcmsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallReq_USR.strCmsID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strCmsP2pIDList = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strcmsp2pidlist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcmsp2pidlist(this->strcmsp2pidlist_size() - 1).data(),
            this->strcmsp2pidlist(this->strcmsp2pidlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceMac = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicemac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicemac().data(), this->strdevicemac().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceP2pID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicep2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicep2pid().data(), this->strdevicep2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RegisterCmsCallReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RegisterCmsCallReq_USR)
  return false;
#undef DO_
}

void RegisterCmsCallReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RegisterCmsCallReq_USR)
  // string strCmsID = 1;
  if (this->strcmsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmsid().data(), this->strcmsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strCmsID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcmsid(), output);
  }

  // repeated string strCmsP2pIDList = 2;
  for (int i = 0; i < this->strcmsp2pidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmsp2pidlist(i).data(), this->strcmsp2pidlist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strcmsp2pidlist(i), output);
  }

  // string strDeviceMac = 3;
  if (this->strdevicemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicemac().data(), this->strdevicemac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevicemac(), output);
  }

  // string strDeviceP2pID = 4;
  if (this->strdevicep2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicep2pid().data(), this->strdevicep2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strdevicep2pid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RegisterCmsCallReq_USR)
}

::google::protobuf::uint8* RegisterCmsCallReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RegisterCmsCallReq_USR)
  // string strCmsID = 1;
  if (this->strcmsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmsid().data(), this->strcmsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strCmsID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcmsid(), target);
  }

  // repeated string strCmsP2pIDList = 2;
  for (int i = 0; i < this->strcmsp2pidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmsp2pidlist(i).data(), this->strcmsp2pidlist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strcmsp2pidlist(i), target);
  }

  // string strDeviceMac = 3;
  if (this->strdevicemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicemac().data(), this->strdevicemac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevicemac(), target);
  }

  // string strDeviceP2pID = 4;
  if (this->strdevicep2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicep2pid().data(), this->strdevicep2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdevicep2pid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RegisterCmsCallReq_USR)
  return target;
}

size_t RegisterCmsCallReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RegisterCmsCallReq_USR)
  size_t total_size = 0;

  // repeated string strCmsP2pIDList = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strcmsp2pidlist_size());
  for (int i = 0; i < this->strcmsp2pidlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strcmsp2pidlist(i));
  }

  // string strCmsID = 1;
  if (this->strcmsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcmsid());
  }

  // string strDeviceMac = 3;
  if (this->strdevicemac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicemac());
  }

  // string strDeviceP2pID = 4;
  if (this->strdevicep2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicep2pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterCmsCallReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RegisterCmsCallReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterCmsCallReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterCmsCallReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RegisterCmsCallReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RegisterCmsCallReq_USR)
    MergeFrom(*source);
  }
}

void RegisterCmsCallReq_USR::MergeFrom(const RegisterCmsCallReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RegisterCmsCallReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcmsp2pidlist_.MergeFrom(from.strcmsp2pidlist_);
  if (from.strcmsid().size() > 0) {

    strcmsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcmsid_);
  }
  if (from.strdevicemac().size() > 0) {

    strdevicemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicemac_);
  }
  if (from.strdevicep2pid().size() > 0) {

    strdevicep2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicep2pid_);
  }
}

void RegisterCmsCallReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RegisterCmsCallReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterCmsCallReq_USR::CopyFrom(const RegisterCmsCallReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RegisterCmsCallReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterCmsCallReq_USR::IsInitialized() const {
  return true;
}

void RegisterCmsCallReq_USR::Swap(RegisterCmsCallReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterCmsCallReq_USR::InternalSwap(RegisterCmsCallReq_USR* other) {
  strcmsp2pidlist_.UnsafeArenaSwap(&other->strcmsp2pidlist_);
  strcmsid_.Swap(&other->strcmsid_);
  strdevicemac_.Swap(&other->strdevicemac_);
  strdevicep2pid_.Swap(&other->strdevicep2pid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterCmsCallReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[124];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterCmsCallReq_USR

// string strCmsID = 1;
void RegisterCmsCallReq_USR::clear_strcmsid() {
  strcmsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterCmsCallReq_USR::strcmsid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
  return strcmsid_.GetNoArena();
}
void RegisterCmsCallReq_USR::set_strcmsid(const ::std::string& value) {
  
  strcmsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
}
#if LANG_CXX11
void RegisterCmsCallReq_USR::set_strcmsid(::std::string&& value) {
  
  strcmsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
}
#endif
void RegisterCmsCallReq_USR::set_strcmsid(const char* value) {
  
  strcmsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
}
void RegisterCmsCallReq_USR::set_strcmsid(const char* value, size_t size) {
  
  strcmsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
}
::std::string* RegisterCmsCallReq_USR::mutable_strcmsid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
  return strcmsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterCmsCallReq_USR::release_strcmsid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
  
  return strcmsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterCmsCallReq_USR::set_allocated_strcmsid(::std::string* strcmsid) {
  if (strcmsid != NULL) {
    
  } else {
    
  }
  strcmsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcmsid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterCmsCallReq_USR.strCmsID)
}

// repeated string strCmsP2pIDList = 2;
int RegisterCmsCallReq_USR::strcmsp2pidlist_size() const {
  return strcmsp2pidlist_.size();
}
void RegisterCmsCallReq_USR::clear_strcmsp2pidlist() {
  strcmsp2pidlist_.Clear();
}
const ::std::string& RegisterCmsCallReq_USR::strcmsp2pidlist(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
  return strcmsp2pidlist_.Get(index);
}
::std::string* RegisterCmsCallReq_USR::mutable_strcmsp2pidlist(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
  return strcmsp2pidlist_.Mutable(index);
}
void RegisterCmsCallReq_USR::set_strcmsp2pidlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
  strcmsp2pidlist_.Mutable(index)->assign(value);
}
void RegisterCmsCallReq_USR::set_strcmsp2pidlist(int index, const char* value) {
  strcmsp2pidlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
}
void RegisterCmsCallReq_USR::set_strcmsp2pidlist(int index, const char* value, size_t size) {
  strcmsp2pidlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
}
::std::string* RegisterCmsCallReq_USR::add_strcmsp2pidlist() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
  return strcmsp2pidlist_.Add();
}
void RegisterCmsCallReq_USR::add_strcmsp2pidlist(const ::std::string& value) {
  strcmsp2pidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
}
void RegisterCmsCallReq_USR::add_strcmsp2pidlist(const char* value) {
  strcmsp2pidlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
}
void RegisterCmsCallReq_USR::add_strcmsp2pidlist(const char* value, size_t size) {
  strcmsp2pidlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegisterCmsCallReq_USR::strcmsp2pidlist() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
  return strcmsp2pidlist_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RegisterCmsCallReq_USR::mutable_strcmsp2pidlist() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.RegisterCmsCallReq_USR.strCmsP2pIDList)
  return &strcmsp2pidlist_;
}

// string strDeviceMac = 3;
void RegisterCmsCallReq_USR::clear_strdevicemac() {
  strdevicemac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterCmsCallReq_USR::strdevicemac() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
  return strdevicemac_.GetNoArena();
}
void RegisterCmsCallReq_USR::set_strdevicemac(const ::std::string& value) {
  
  strdevicemac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
}
#if LANG_CXX11
void RegisterCmsCallReq_USR::set_strdevicemac(::std::string&& value) {
  
  strdevicemac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
}
#endif
void RegisterCmsCallReq_USR::set_strdevicemac(const char* value) {
  
  strdevicemac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
}
void RegisterCmsCallReq_USR::set_strdevicemac(const char* value, size_t size) {
  
  strdevicemac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
}
::std::string* RegisterCmsCallReq_USR::mutable_strdevicemac() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
  return strdevicemac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterCmsCallReq_USR::release_strdevicemac() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
  
  return strdevicemac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterCmsCallReq_USR::set_allocated_strdevicemac(::std::string* strdevicemac) {
  if (strdevicemac != NULL) {
    
  } else {
    
  }
  strdevicemac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicemac);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterCmsCallReq_USR.strDeviceMac)
}

// string strDeviceP2pID = 4;
void RegisterCmsCallReq_USR::clear_strdevicep2pid() {
  strdevicep2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterCmsCallReq_USR::strdevicep2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
  return strdevicep2pid_.GetNoArena();
}
void RegisterCmsCallReq_USR::set_strdevicep2pid(const ::std::string& value) {
  
  strdevicep2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
}
#if LANG_CXX11
void RegisterCmsCallReq_USR::set_strdevicep2pid(::std::string&& value) {
  
  strdevicep2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
}
#endif
void RegisterCmsCallReq_USR::set_strdevicep2pid(const char* value) {
  
  strdevicep2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
}
void RegisterCmsCallReq_USR::set_strdevicep2pid(const char* value, size_t size) {
  
  strdevicep2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
}
::std::string* RegisterCmsCallReq_USR::mutable_strdevicep2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
  return strdevicep2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterCmsCallReq_USR::release_strdevicep2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
  
  return strdevicep2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterCmsCallReq_USR::set_allocated_strdevicep2pid(::std::string* strdevicep2pid) {
  if (strdevicep2pid != NULL) {
    
  } else {
    
  }
  strdevicep2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicep2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterCmsCallReq_USR.strDeviceP2pID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterCmsCallRsp_USR::kStrAddressFieldNumber;
const int RegisterCmsCallRsp_USR::kStrPortFieldNumber;
const int RegisterCmsCallRsp_USR::kStrP2PIDFailedListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterCmsCallRsp_USR::RegisterCmsCallRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RegisterCmsCallRsp_USR)
}
RegisterCmsCallRsp_USR::RegisterCmsCallRsp_USR(const RegisterCmsCallRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strp2pidfailedlist_(from.strp2pidfailedlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straddress().size() > 0) {
    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  strport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strport().size() > 0) {
    strport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strport_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RegisterCmsCallRsp_USR)
}

void RegisterCmsCallRsp_USR::SharedCtor() {
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterCmsCallRsp_USR::~RegisterCmsCallRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RegisterCmsCallRsp_USR)
  SharedDtor();
}

void RegisterCmsCallRsp_USR::SharedDtor() {
  straddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterCmsCallRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterCmsCallRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[125].descriptor;
}

const RegisterCmsCallRsp_USR& RegisterCmsCallRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterCmsCallRsp_USR* RegisterCmsCallRsp_USR::New(::google::protobuf::Arena* arena) const {
  RegisterCmsCallRsp_USR* n = new RegisterCmsCallRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterCmsCallRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RegisterCmsCallRsp_USR)
  strp2pidfailedlist_.Clear();
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegisterCmsCallRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RegisterCmsCallRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallRsp_USR.strAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPort = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strport().data(), this->strport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallRsp_USR.strPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strP2pIDFailedList = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strp2pidfailedlist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pidfailedlist(this->strp2pidfailedlist_size() - 1).data(),
            this->strp2pidfailedlist(this->strp2pidfailedlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RegisterCmsCallRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RegisterCmsCallRsp_USR)
  return false;
#undef DO_
}

void RegisterCmsCallRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RegisterCmsCallRsp_USR)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallRsp_USR.strAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straddress(), output);
  }

  // string strPort = 2;
  if (this->strport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strport().data(), this->strport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallRsp_USR.strPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strport(), output);
  }

  // repeated string strP2pIDFailedList = 3;
  for (int i = 0; i < this->strp2pidfailedlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pidfailedlist(i).data(), this->strp2pidfailedlist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strp2pidfailedlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RegisterCmsCallRsp_USR)
}

::google::protobuf::uint8* RegisterCmsCallRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RegisterCmsCallRsp_USR)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallRsp_USR.strAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straddress(), target);
  }

  // string strPort = 2;
  if (this->strport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strport().data(), this->strport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallRsp_USR.strPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strport(), target);
  }

  // repeated string strP2pIDFailedList = 3;
  for (int i = 0; i < this->strp2pidfailedlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pidfailedlist(i).data(), this->strp2pidfailedlist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->strp2pidfailedlist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RegisterCmsCallRsp_USR)
  return target;
}

size_t RegisterCmsCallRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RegisterCmsCallRsp_USR)
  size_t total_size = 0;

  // repeated string strP2pIDFailedList = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strp2pidfailedlist_size());
  for (int i = 0; i < this->strp2pidfailedlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strp2pidfailedlist(i));
  }

  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straddress());
  }

  // string strPort = 2;
  if (this->strport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterCmsCallRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RegisterCmsCallRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterCmsCallRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterCmsCallRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RegisterCmsCallRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RegisterCmsCallRsp_USR)
    MergeFrom(*source);
  }
}

void RegisterCmsCallRsp_USR::MergeFrom(const RegisterCmsCallRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RegisterCmsCallRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strp2pidfailedlist_.MergeFrom(from.strp2pidfailedlist_);
  if (from.straddress().size() > 0) {

    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  if (from.strport().size() > 0) {

    strport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strport_);
  }
}

void RegisterCmsCallRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RegisterCmsCallRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterCmsCallRsp_USR::CopyFrom(const RegisterCmsCallRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RegisterCmsCallRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterCmsCallRsp_USR::IsInitialized() const {
  return true;
}

void RegisterCmsCallRsp_USR::Swap(RegisterCmsCallRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterCmsCallRsp_USR::InternalSwap(RegisterCmsCallRsp_USR* other) {
  strp2pidfailedlist_.UnsafeArenaSwap(&other->strp2pidfailedlist_);
  straddress_.Swap(&other->straddress_);
  strport_.Swap(&other->strport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterCmsCallRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[125];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterCmsCallRsp_USR

// string strAddress = 1;
void RegisterCmsCallRsp_USR::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterCmsCallRsp_USR::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
  return straddress_.GetNoArena();
}
void RegisterCmsCallRsp_USR::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
}
#if LANG_CXX11
void RegisterCmsCallRsp_USR::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
}
#endif
void RegisterCmsCallRsp_USR::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
}
void RegisterCmsCallRsp_USR::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
}
::std::string* RegisterCmsCallRsp_USR::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterCmsCallRsp_USR::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterCmsCallRsp_USR::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterCmsCallRsp_USR.strAddress)
}

// string strPort = 2;
void RegisterCmsCallRsp_USR::clear_strport() {
  strport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterCmsCallRsp_USR::strport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
  return strport_.GetNoArena();
}
void RegisterCmsCallRsp_USR::set_strport(const ::std::string& value) {
  
  strport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
}
#if LANG_CXX11
void RegisterCmsCallRsp_USR::set_strport(::std::string&& value) {
  
  strport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
}
#endif
void RegisterCmsCallRsp_USR::set_strport(const char* value) {
  
  strport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
}
void RegisterCmsCallRsp_USR::set_strport(const char* value, size_t size) {
  
  strport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
}
::std::string* RegisterCmsCallRsp_USR::mutable_strport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
  return strport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterCmsCallRsp_USR::release_strport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
  
  return strport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterCmsCallRsp_USR::set_allocated_strport(::std::string* strport) {
  if (strport != NULL) {
    
  } else {
    
  }
  strport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterCmsCallRsp_USR.strPort)
}

// repeated string strP2pIDFailedList = 3;
int RegisterCmsCallRsp_USR::strp2pidfailedlist_size() const {
  return strp2pidfailedlist_.size();
}
void RegisterCmsCallRsp_USR::clear_strp2pidfailedlist() {
  strp2pidfailedlist_.Clear();
}
const ::std::string& RegisterCmsCallRsp_USR::strp2pidfailedlist(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
  return strp2pidfailedlist_.Get(index);
}
::std::string* RegisterCmsCallRsp_USR::mutable_strp2pidfailedlist(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
  return strp2pidfailedlist_.Mutable(index);
}
void RegisterCmsCallRsp_USR::set_strp2pidfailedlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
  strp2pidfailedlist_.Mutable(index)->assign(value);
}
void RegisterCmsCallRsp_USR::set_strp2pidfailedlist(int index, const char* value) {
  strp2pidfailedlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
}
void RegisterCmsCallRsp_USR::set_strp2pidfailedlist(int index, const char* value, size_t size) {
  strp2pidfailedlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
}
::std::string* RegisterCmsCallRsp_USR::add_strp2pidfailedlist() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
  return strp2pidfailedlist_.Add();
}
void RegisterCmsCallRsp_USR::add_strp2pidfailedlist(const ::std::string& value) {
  strp2pidfailedlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
}
void RegisterCmsCallRsp_USR::add_strp2pidfailedlist(const char* value) {
  strp2pidfailedlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
}
void RegisterCmsCallRsp_USR::add_strp2pidfailedlist(const char* value, size_t size) {
  strp2pidfailedlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegisterCmsCallRsp_USR::strp2pidfailedlist() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
  return strp2pidfailedlist_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RegisterCmsCallRsp_USR::mutable_strp2pidfailedlist() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.RegisterCmsCallRsp_USR.strP2pIDFailedList)
  return &strp2pidfailedlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnregisterCmsCallReq_USR::kStrCmsIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnregisterCmsCallReq_USR::UnregisterCmsCallReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UnregisterCmsCallReq_USR)
}
UnregisterCmsCallReq_USR::UnregisterCmsCallReq_USR(const UnregisterCmsCallReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcmsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcmsid().size() > 0) {
    strcmsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcmsid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UnregisterCmsCallReq_USR)
}

void UnregisterCmsCallReq_USR::SharedCtor() {
  strcmsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnregisterCmsCallReq_USR::~UnregisterCmsCallReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UnregisterCmsCallReq_USR)
  SharedDtor();
}

void UnregisterCmsCallReq_USR::SharedDtor() {
  strcmsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnregisterCmsCallReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnregisterCmsCallReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[126].descriptor;
}

const UnregisterCmsCallReq_USR& UnregisterCmsCallReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnregisterCmsCallReq_USR* UnregisterCmsCallReq_USR::New(::google::protobuf::Arena* arena) const {
  UnregisterCmsCallReq_USR* n = new UnregisterCmsCallReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnregisterCmsCallReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UnregisterCmsCallReq_USR)
  strcmsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UnregisterCmsCallReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UnregisterCmsCallReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCmsID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcmsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcmsid().data(), this->strcmsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnregisterCmsCallReq_USR.strCmsID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UnregisterCmsCallReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UnregisterCmsCallReq_USR)
  return false;
#undef DO_
}

void UnregisterCmsCallReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UnregisterCmsCallReq_USR)
  // string strCmsID = 1;
  if (this->strcmsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmsid().data(), this->strcmsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnregisterCmsCallReq_USR.strCmsID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcmsid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UnregisterCmsCallReq_USR)
}

::google::protobuf::uint8* UnregisterCmsCallReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UnregisterCmsCallReq_USR)
  // string strCmsID = 1;
  if (this->strcmsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmsid().data(), this->strcmsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnregisterCmsCallReq_USR.strCmsID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcmsid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UnregisterCmsCallReq_USR)
  return target;
}

size_t UnregisterCmsCallReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UnregisterCmsCallReq_USR)
  size_t total_size = 0;

  // string strCmsID = 1;
  if (this->strcmsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcmsid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnregisterCmsCallReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UnregisterCmsCallReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterCmsCallReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnregisterCmsCallReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UnregisterCmsCallReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UnregisterCmsCallReq_USR)
    MergeFrom(*source);
  }
}

void UnregisterCmsCallReq_USR::MergeFrom(const UnregisterCmsCallReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UnregisterCmsCallReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcmsid().size() > 0) {

    strcmsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcmsid_);
  }
}

void UnregisterCmsCallReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UnregisterCmsCallReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterCmsCallReq_USR::CopyFrom(const UnregisterCmsCallReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UnregisterCmsCallReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterCmsCallReq_USR::IsInitialized() const {
  return true;
}

void UnregisterCmsCallReq_USR::Swap(UnregisterCmsCallReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnregisterCmsCallReq_USR::InternalSwap(UnregisterCmsCallReq_USR* other) {
  strcmsid_.Swap(&other->strcmsid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnregisterCmsCallReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[126];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnregisterCmsCallReq_USR

// string strCmsID = 1;
void UnregisterCmsCallReq_USR::clear_strcmsid() {
  strcmsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnregisterCmsCallReq_USR::strcmsid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
  return strcmsid_.GetNoArena();
}
void UnregisterCmsCallReq_USR::set_strcmsid(const ::std::string& value) {
  
  strcmsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
}
#if LANG_CXX11
void UnregisterCmsCallReq_USR::set_strcmsid(::std::string&& value) {
  
  strcmsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
}
#endif
void UnregisterCmsCallReq_USR::set_strcmsid(const char* value) {
  
  strcmsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
}
void UnregisterCmsCallReq_USR::set_strcmsid(const char* value, size_t size) {
  
  strcmsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
}
::std::string* UnregisterCmsCallReq_USR::mutable_strcmsid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
  return strcmsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnregisterCmsCallReq_USR::release_strcmsid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
  
  return strcmsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnregisterCmsCallReq_USR::set_allocated_strcmsid(::std::string* strcmsid) {
  if (strcmsid != NULL) {
    
  } else {
    
  }
  strcmsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcmsid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnregisterCmsCallReq_USR.strCmsID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnregisterCmsCallRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnregisterCmsCallRsp_USR::UnregisterCmsCallRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UnregisterCmsCallRsp_USR)
}
UnregisterCmsCallRsp_USR::UnregisterCmsCallRsp_USR(const UnregisterCmsCallRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UnregisterCmsCallRsp_USR)
}

void UnregisterCmsCallRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnregisterCmsCallRsp_USR::~UnregisterCmsCallRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UnregisterCmsCallRsp_USR)
  SharedDtor();
}

void UnregisterCmsCallRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnregisterCmsCallRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnregisterCmsCallRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[127].descriptor;
}

const UnregisterCmsCallRsp_USR& UnregisterCmsCallRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnregisterCmsCallRsp_USR* UnregisterCmsCallRsp_USR::New(::google::protobuf::Arena* arena) const {
  UnregisterCmsCallRsp_USR* n = new UnregisterCmsCallRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnregisterCmsCallRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UnregisterCmsCallRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnregisterCmsCallRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UnregisterCmsCallRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UnregisterCmsCallRsp_USR)
  return false;
#undef DO_
}

void UnregisterCmsCallRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnregisterCmsCallRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UnregisterCmsCallRsp_USR)
}

::google::protobuf::uint8* UnregisterCmsCallRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnregisterCmsCallRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UnregisterCmsCallRsp_USR)
  return target;
}

size_t UnregisterCmsCallRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnregisterCmsCallRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterCmsCallRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnregisterCmsCallRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UnregisterCmsCallRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UnregisterCmsCallRsp_USR)
    MergeFrom(*source);
  }
}

void UnregisterCmsCallRsp_USR::MergeFrom(const UnregisterCmsCallRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void UnregisterCmsCallRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterCmsCallRsp_USR::CopyFrom(const UnregisterCmsCallRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UnregisterCmsCallRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterCmsCallRsp_USR::IsInitialized() const {
  return true;
}

void UnregisterCmsCallRsp_USR::Swap(UnregisterCmsCallRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnregisterCmsCallRsp_USR::InternalSwap(UnregisterCmsCallRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnregisterCmsCallRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[127];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnregisterCmsCallRsp_USR

// string strValue = 1;
void UnregisterCmsCallRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnregisterCmsCallRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void UnregisterCmsCallRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
}
#if LANG_CXX11
void UnregisterCmsCallRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
}
#endif
void UnregisterCmsCallRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
}
void UnregisterCmsCallRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
}
::std::string* UnregisterCmsCallRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnregisterCmsCallRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnregisterCmsCallRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnregisterCmsCallRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuerySharingDeviceLimitReq_USR::kStrUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySharingDeviceLimitReq_USR::QuerySharingDeviceLimitReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QuerySharingDeviceLimitReq_USR)
}
QuerySharingDeviceLimitReq_USR::QuerySharingDeviceLimitReq_USR(const QuerySharingDeviceLimitReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QuerySharingDeviceLimitReq_USR)
}

void QuerySharingDeviceLimitReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QuerySharingDeviceLimitReq_USR::~QuerySharingDeviceLimitReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  SharedDtor();
}

void QuerySharingDeviceLimitReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuerySharingDeviceLimitReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuerySharingDeviceLimitReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[128].descriptor;
}

const QuerySharingDeviceLimitReq_USR& QuerySharingDeviceLimitReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuerySharingDeviceLimitReq_USR* QuerySharingDeviceLimitReq_USR::New(::google::protobuf::Arena* arena) const {
  QuerySharingDeviceLimitReq_USR* n = new QuerySharingDeviceLimitReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuerySharingDeviceLimitReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QuerySharingDeviceLimitReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  return false;
#undef DO_
}

void QuerySharingDeviceLimitReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QuerySharingDeviceLimitReq_USR)
}

::google::protobuf::uint8* QuerySharingDeviceLimitReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  return target;
}

size_t QuerySharingDeviceLimitReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuerySharingDeviceLimitReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySharingDeviceLimitReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySharingDeviceLimitReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QuerySharingDeviceLimitReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QuerySharingDeviceLimitReq_USR)
    MergeFrom(*source);
  }
}

void QuerySharingDeviceLimitReq_USR::MergeFrom(const QuerySharingDeviceLimitReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void QuerySharingDeviceLimitReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySharingDeviceLimitReq_USR::CopyFrom(const QuerySharingDeviceLimitReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QuerySharingDeviceLimitReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySharingDeviceLimitReq_USR::IsInitialized() const {
  return true;
}

void QuerySharingDeviceLimitReq_USR::Swap(QuerySharingDeviceLimitReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySharingDeviceLimitReq_USR::InternalSwap(QuerySharingDeviceLimitReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuerySharingDeviceLimitReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[128];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuerySharingDeviceLimitReq_USR

// string strUserID = 1;
void QuerySharingDeviceLimitReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuerySharingDeviceLimitReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QuerySharingDeviceLimitReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
}
#if LANG_CXX11
void QuerySharingDeviceLimitReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
}
#endif
void QuerySharingDeviceLimitReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
}
void QuerySharingDeviceLimitReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
}
::std::string* QuerySharingDeviceLimitReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuerySharingDeviceLimitReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuerySharingDeviceLimitReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QuerySharingDeviceLimitReq_USR.strUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuerySharingDeviceLimitRsp_USR::kUiCurrentLimitNumFieldNumber;
const int QuerySharingDeviceLimitRsp_USR::kUiUsedNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySharingDeviceLimitRsp_USR::QuerySharingDeviceLimitRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
}
QuerySharingDeviceLimitRsp_USR::QuerySharingDeviceLimitRsp_USR(const QuerySharingDeviceLimitRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uicurrentlimitnum_, &from.uicurrentlimitnum_,
    reinterpret_cast<char*>(&uiusednum_) -
    reinterpret_cast<char*>(&uicurrentlimitnum_) + sizeof(uiusednum_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
}

void QuerySharingDeviceLimitRsp_USR::SharedCtor() {
  ::memset(&uicurrentlimitnum_, 0, reinterpret_cast<char*>(&uiusednum_) -
    reinterpret_cast<char*>(&uicurrentlimitnum_) + sizeof(uiusednum_));
  _cached_size_ = 0;
}

QuerySharingDeviceLimitRsp_USR::~QuerySharingDeviceLimitRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  SharedDtor();
}

void QuerySharingDeviceLimitRsp_USR::SharedDtor() {
}

void QuerySharingDeviceLimitRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuerySharingDeviceLimitRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[129].descriptor;
}

const QuerySharingDeviceLimitRsp_USR& QuerySharingDeviceLimitRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuerySharingDeviceLimitRsp_USR* QuerySharingDeviceLimitRsp_USR::New(::google::protobuf::Arena* arena) const {
  QuerySharingDeviceLimitRsp_USR* n = new QuerySharingDeviceLimitRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuerySharingDeviceLimitRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  ::memset(&uicurrentlimitnum_, 0, reinterpret_cast<char*>(&uiusednum_) -
    reinterpret_cast<char*>(&uicurrentlimitnum_) + sizeof(uiusednum_));
}

bool QuerySharingDeviceLimitRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiCurrentLimitNum = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uicurrentlimitnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiUsedNum = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiusednum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  return false;
#undef DO_
}

void QuerySharingDeviceLimitRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  // uint32 uiCurrentLimitNum = 1;
  if (this->uicurrentlimitnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uicurrentlimitnum(), output);
  }

  // uint32 uiUsedNum = 2;
  if (this->uiusednum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiusednum(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
}

::google::protobuf::uint8* QuerySharingDeviceLimitRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  // uint32 uiCurrentLimitNum = 1;
  if (this->uicurrentlimitnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uicurrentlimitnum(), target);
  }

  // uint32 uiUsedNum = 2;
  if (this->uiusednum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiusednum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  return target;
}

size_t QuerySharingDeviceLimitRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  size_t total_size = 0;

  // uint32 uiCurrentLimitNum = 1;
  if (this->uicurrentlimitnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uicurrentlimitnum());
  }

  // uint32 uiUsedNum = 2;
  if (this->uiusednum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiusednum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuerySharingDeviceLimitRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySharingDeviceLimitRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySharingDeviceLimitRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
    MergeFrom(*source);
  }
}

void QuerySharingDeviceLimitRsp_USR::MergeFrom(const QuerySharingDeviceLimitRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uicurrentlimitnum() != 0) {
    set_uicurrentlimitnum(from.uicurrentlimitnum());
  }
  if (from.uiusednum() != 0) {
    set_uiusednum(from.uiusednum());
  }
}

void QuerySharingDeviceLimitRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySharingDeviceLimitRsp_USR::CopyFrom(const QuerySharingDeviceLimitRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QuerySharingDeviceLimitRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySharingDeviceLimitRsp_USR::IsInitialized() const {
  return true;
}

void QuerySharingDeviceLimitRsp_USR::Swap(QuerySharingDeviceLimitRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySharingDeviceLimitRsp_USR::InternalSwap(QuerySharingDeviceLimitRsp_USR* other) {
  std::swap(uicurrentlimitnum_, other->uicurrentlimitnum_);
  std::swap(uiusednum_, other->uiusednum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuerySharingDeviceLimitRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[129];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuerySharingDeviceLimitRsp_USR

// uint32 uiCurrentLimitNum = 1;
void QuerySharingDeviceLimitRsp_USR::clear_uicurrentlimitnum() {
  uicurrentlimitnum_ = 0u;
}
::google::protobuf::uint32 QuerySharingDeviceLimitRsp_USR::uicurrentlimitnum() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QuerySharingDeviceLimitRsp_USR.uiCurrentLimitNum)
  return uicurrentlimitnum_;
}
void QuerySharingDeviceLimitRsp_USR::set_uicurrentlimitnum(::google::protobuf::uint32 value) {
  
  uicurrentlimitnum_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QuerySharingDeviceLimitRsp_USR.uiCurrentLimitNum)
}

// uint32 uiUsedNum = 2;
void QuerySharingDeviceLimitRsp_USR::clear_uiusednum() {
  uiusednum_ = 0u;
}
::google::protobuf::uint32 QuerySharingDeviceLimitRsp_USR::uiusednum() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QuerySharingDeviceLimitRsp_USR.uiUsedNum)
  return uiusednum_;
}
void QuerySharingDeviceLimitRsp_USR::set_uiusednum(::google::protobuf::uint32 value) {
  
  uiusednum_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QuerySharingDeviceLimitRsp_USR.uiUsedNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceCapacityReq_USR::kStrUserIDFieldNumber;
const int QueryDeviceCapacityReq_USR::kUiDevTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceCapacityReq_USR::QueryDeviceCapacityReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceCapacityReq_USR)
}
QueryDeviceCapacityReq_USR::QueryDeviceCapacityReq_USR(const QueryDeviceCapacityReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  uidevtype_ = from.uidevtype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceCapacityReq_USR)
}

void QueryDeviceCapacityReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidevtype_ = 0u;
  _cached_size_ = 0;
}

QueryDeviceCapacityReq_USR::~QueryDeviceCapacityReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceCapacityReq_USR)
  SharedDtor();
}

void QueryDeviceCapacityReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDeviceCapacityReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceCapacityReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[130].descriptor;
}

const QueryDeviceCapacityReq_USR& QueryDeviceCapacityReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceCapacityReq_USR* QueryDeviceCapacityReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDeviceCapacityReq_USR* n = new QueryDeviceCapacityReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceCapacityReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uidevtype_ = 0u;
}

bool QueryDeviceCapacityReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceCapacityReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDevType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceCapacityReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceCapacityReq_USR)
  return false;
#undef DO_
}

void QueryDeviceCapacityReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceCapacityReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiDevType = 2;
  if (this->uidevtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uidevtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceCapacityReq_USR)
}

::google::protobuf::uint8* QueryDeviceCapacityReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceCapacityReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiDevType = 2;
  if (this->uidevtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uidevtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceCapacityReq_USR)
  return target;
}

size_t QueryDeviceCapacityReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // uint32 uiDevType = 2;
  if (this->uidevtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceCapacityReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceCapacityReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceCapacityReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceCapacityReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceCapacityReq_USR)
    MergeFrom(*source);
  }
}

void QueryDeviceCapacityReq_USR::MergeFrom(const QueryDeviceCapacityReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.uidevtype() != 0) {
    set_uidevtype(from.uidevtype());
  }
}

void QueryDeviceCapacityReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceCapacityReq_USR::CopyFrom(const QueryDeviceCapacityReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceCapacityReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceCapacityReq_USR::IsInitialized() const {
  return true;
}

void QueryDeviceCapacityReq_USR::Swap(QueryDeviceCapacityReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceCapacityReq_USR::InternalSwap(QueryDeviceCapacityReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(uidevtype_, other->uidevtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceCapacityReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[130];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceCapacityReq_USR

// string strUserID = 1;
void QueryDeviceCapacityReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceCapacityReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryDeviceCapacityReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
}
#if LANG_CXX11
void QueryDeviceCapacityReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
}
#endif
void QueryDeviceCapacityReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
}
void QueryDeviceCapacityReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
}
::std::string* QueryDeviceCapacityReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceCapacityReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceCapacityReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceCapacityReq_USR.strUserID)
}

// uint32 uiDevType = 2;
void QueryDeviceCapacityReq_USR::clear_uidevtype() {
  uidevtype_ = 0u;
}
::google::protobuf::uint32 QueryDeviceCapacityReq_USR::uidevtype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceCapacityReq_USR.uiDevType)
  return uidevtype_;
}
void QueryDeviceCapacityReq_USR::set_uidevtype(::google::protobuf::uint32 value) {
  
  uidevtype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceCapacityReq_USR.uiDevType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceCapacityRsp_USR::kDevCapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceCapacityRsp_USR::QueryDeviceCapacityRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceCapacityRsp_USR)
}
QueryDeviceCapacityRsp_USR::QueryDeviceCapacityRsp_USR(const QueryDeviceCapacityRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_devcap()) {
    devcap_ = new ::Interactive::Message::DeviceCapacity(*from.devcap_);
  } else {
    devcap_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceCapacityRsp_USR)
}

void QueryDeviceCapacityRsp_USR::SharedCtor() {
  devcap_ = NULL;
  _cached_size_ = 0;
}

QueryDeviceCapacityRsp_USR::~QueryDeviceCapacityRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceCapacityRsp_USR)
  SharedDtor();
}

void QueryDeviceCapacityRsp_USR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete devcap_;
  }
}

void QueryDeviceCapacityRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceCapacityRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[131].descriptor;
}

const QueryDeviceCapacityRsp_USR& QueryDeviceCapacityRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceCapacityRsp_USR* QueryDeviceCapacityRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDeviceCapacityRsp_USR* n = new QueryDeviceCapacityRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceCapacityRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  if (GetArenaNoVirtual() == NULL && devcap_ != NULL) {
    delete devcap_;
  }
  devcap_ = NULL;
}

bool QueryDeviceCapacityRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.DeviceCapacity DevCap = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devcap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceCapacityRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceCapacityRsp_USR)
  return false;
#undef DO_
}

void QueryDeviceCapacityRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  // .Interactive.Message.DeviceCapacity DevCap = 1;
  if (this->has_devcap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->devcap_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceCapacityRsp_USR)
}

::google::protobuf::uint8* QueryDeviceCapacityRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  // .Interactive.Message.DeviceCapacity DevCap = 1;
  if (this->has_devcap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->devcap_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceCapacityRsp_USR)
  return target;
}

size_t QueryDeviceCapacityRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  size_t total_size = 0;

  // .Interactive.Message.DeviceCapacity DevCap = 1;
  if (this->has_devcap()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devcap_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceCapacityRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceCapacityRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceCapacityRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceCapacityRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceCapacityRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDeviceCapacityRsp_USR::MergeFrom(const QueryDeviceCapacityRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_devcap()) {
    mutable_devcap()->::Interactive::Message::DeviceCapacity::MergeFrom(from.devcap());
  }
}

void QueryDeviceCapacityRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceCapacityRsp_USR::CopyFrom(const QueryDeviceCapacityRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceCapacityRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceCapacityRsp_USR::IsInitialized() const {
  return true;
}

void QueryDeviceCapacityRsp_USR::Swap(QueryDeviceCapacityRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceCapacityRsp_USR::InternalSwap(QueryDeviceCapacityRsp_USR* other) {
  std::swap(devcap_, other->devcap_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceCapacityRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[131];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceCapacityRsp_USR

// .Interactive.Message.DeviceCapacity DevCap = 1;
bool QueryDeviceCapacityRsp_USR::has_devcap() const {
  return this != internal_default_instance() && devcap_ != NULL;
}
void QueryDeviceCapacityRsp_USR::clear_devcap() {
  if (GetArenaNoVirtual() == NULL && devcap_ != NULL) delete devcap_;
  devcap_ = NULL;
}
const ::Interactive::Message::DeviceCapacity& QueryDeviceCapacityRsp_USR::devcap() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceCapacityRsp_USR.DevCap)
  return devcap_ != NULL ? *devcap_
                         : *::Interactive::Message::DeviceCapacity::internal_default_instance();
}
::Interactive::Message::DeviceCapacity* QueryDeviceCapacityRsp_USR::mutable_devcap() {
  
  if (devcap_ == NULL) {
    devcap_ = new ::Interactive::Message::DeviceCapacity;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceCapacityRsp_USR.DevCap)
  return devcap_;
}
::Interactive::Message::DeviceCapacity* QueryDeviceCapacityRsp_USR::release_devcap() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceCapacityRsp_USR.DevCap)
  
  ::Interactive::Message::DeviceCapacity* temp = devcap_;
  devcap_ = NULL;
  return temp;
}
void QueryDeviceCapacityRsp_USR::set_allocated_devcap(::Interactive::Message::DeviceCapacity* devcap) {
  delete devcap_;
  devcap_ = devcap;
  if (devcap) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceCapacityRsp_USR.DevCap)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryALLDeviceCapacityReq_USR::kStrUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryALLDeviceCapacityReq_USR::QueryALLDeviceCapacityReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryALLDeviceCapacityReq_USR)
}
QueryALLDeviceCapacityReq_USR::QueryALLDeviceCapacityReq_USR(const QueryALLDeviceCapacityReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryALLDeviceCapacityReq_USR)
}

void QueryALLDeviceCapacityReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryALLDeviceCapacityReq_USR::~QueryALLDeviceCapacityReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  SharedDtor();
}

void QueryALLDeviceCapacityReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryALLDeviceCapacityReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryALLDeviceCapacityReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[132].descriptor;
}

const QueryALLDeviceCapacityReq_USR& QueryALLDeviceCapacityReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryALLDeviceCapacityReq_USR* QueryALLDeviceCapacityReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryALLDeviceCapacityReq_USR* n = new QueryALLDeviceCapacityReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryALLDeviceCapacityReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryALLDeviceCapacityReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  return false;
#undef DO_
}

void QueryALLDeviceCapacityReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryALLDeviceCapacityReq_USR)
}

::google::protobuf::uint8* QueryALLDeviceCapacityReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  return target;
}

size_t QueryALLDeviceCapacityReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryALLDeviceCapacityReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryALLDeviceCapacityReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryALLDeviceCapacityReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryALLDeviceCapacityReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryALLDeviceCapacityReq_USR)
    MergeFrom(*source);
  }
}

void QueryALLDeviceCapacityReq_USR::MergeFrom(const QueryALLDeviceCapacityReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void QueryALLDeviceCapacityReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryALLDeviceCapacityReq_USR::CopyFrom(const QueryALLDeviceCapacityReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryALLDeviceCapacityReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryALLDeviceCapacityReq_USR::IsInitialized() const {
  return true;
}

void QueryALLDeviceCapacityReq_USR::Swap(QueryALLDeviceCapacityReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryALLDeviceCapacityReq_USR::InternalSwap(QueryALLDeviceCapacityReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryALLDeviceCapacityReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[132];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryALLDeviceCapacityReq_USR

// string strUserID = 1;
void QueryALLDeviceCapacityReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryALLDeviceCapacityReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryALLDeviceCapacityReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
}
#if LANG_CXX11
void QueryALLDeviceCapacityReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
}
#endif
void QueryALLDeviceCapacityReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
}
void QueryALLDeviceCapacityReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
}
::std::string* QueryALLDeviceCapacityReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryALLDeviceCapacityReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryALLDeviceCapacityReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryALLDeviceCapacityReq_USR.strUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryALLDeviceCapacityRsp_USR::kDevCapListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryALLDeviceCapacityRsp_USR::QueryALLDeviceCapacityRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
}
QueryALLDeviceCapacityRsp_USR::QueryALLDeviceCapacityRsp_USR(const QueryALLDeviceCapacityRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devcaplist_(from.devcaplist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
}

void QueryALLDeviceCapacityRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryALLDeviceCapacityRsp_USR::~QueryALLDeviceCapacityRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  SharedDtor();
}

void QueryALLDeviceCapacityRsp_USR::SharedDtor() {
}

void QueryALLDeviceCapacityRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryALLDeviceCapacityRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[133].descriptor;
}

const QueryALLDeviceCapacityRsp_USR& QueryALLDeviceCapacityRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryALLDeviceCapacityRsp_USR* QueryALLDeviceCapacityRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryALLDeviceCapacityRsp_USR* n = new QueryALLDeviceCapacityRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryALLDeviceCapacityRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  devcaplist_.Clear();
}

bool QueryALLDeviceCapacityRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.DeviceCapacity DevCapList = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devcaplist()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  return false;
#undef DO_
}

void QueryALLDeviceCapacityRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  // repeated .Interactive.Message.DeviceCapacity DevCapList = 1;
  for (unsigned int i = 0, n = this->devcaplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devcaplist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
}

::google::protobuf::uint8* QueryALLDeviceCapacityRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  // repeated .Interactive.Message.DeviceCapacity DevCapList = 1;
  for (unsigned int i = 0, n = this->devcaplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->devcaplist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  return target;
}

size_t QueryALLDeviceCapacityRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.DeviceCapacity DevCapList = 1;
  {
    unsigned int count = this->devcaplist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devcaplist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryALLDeviceCapacityRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryALLDeviceCapacityRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryALLDeviceCapacityRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
    MergeFrom(*source);
  }
}

void QueryALLDeviceCapacityRsp_USR::MergeFrom(const QueryALLDeviceCapacityRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devcaplist_.MergeFrom(from.devcaplist_);
}

void QueryALLDeviceCapacityRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryALLDeviceCapacityRsp_USR::CopyFrom(const QueryALLDeviceCapacityRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryALLDeviceCapacityRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryALLDeviceCapacityRsp_USR::IsInitialized() const {
  return true;
}

void QueryALLDeviceCapacityRsp_USR::Swap(QueryALLDeviceCapacityRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryALLDeviceCapacityRsp_USR::InternalSwap(QueryALLDeviceCapacityRsp_USR* other) {
  devcaplist_.UnsafeArenaSwap(&other->devcaplist_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryALLDeviceCapacityRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[133];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryALLDeviceCapacityRsp_USR

// repeated .Interactive.Message.DeviceCapacity DevCapList = 1;
int QueryALLDeviceCapacityRsp_USR::devcaplist_size() const {
  return devcaplist_.size();
}
void QueryALLDeviceCapacityRsp_USR::clear_devcaplist() {
  devcaplist_.Clear();
}
const ::Interactive::Message::DeviceCapacity& QueryALLDeviceCapacityRsp_USR::devcaplist(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryALLDeviceCapacityRsp_USR.DevCapList)
  return devcaplist_.Get(index);
}
::Interactive::Message::DeviceCapacity* QueryALLDeviceCapacityRsp_USR::mutable_devcaplist(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryALLDeviceCapacityRsp_USR.DevCapList)
  return devcaplist_.Mutable(index);
}
::Interactive::Message::DeviceCapacity* QueryALLDeviceCapacityRsp_USR::add_devcaplist() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryALLDeviceCapacityRsp_USR.DevCapList)
  return devcaplist_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceCapacity >*
QueryALLDeviceCapacityRsp_USR::mutable_devcaplist() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryALLDeviceCapacityRsp_USR.DevCapList)
  return &devcaplist_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceCapacity >&
QueryALLDeviceCapacityRsp_USR::devcaplist() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryALLDeviceCapacityRsp_USR.DevCapList)
  return devcaplist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceP2pIDReq_USR::kStrDomainNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceP2pIDReq_USR::QueryDeviceP2pIDReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceP2pIDReq_USR)
}
QueryDeviceP2pIDReq_USR::QueryDeviceP2pIDReq_USR(const QueryDeviceP2pIDReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdomainname().size() > 0) {
    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceP2pIDReq_USR)
}

void QueryDeviceP2pIDReq_USR::SharedCtor() {
  strdomainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryDeviceP2pIDReq_USR::~QueryDeviceP2pIDReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceP2pIDReq_USR)
  SharedDtor();
}

void QueryDeviceP2pIDReq_USR::SharedDtor() {
  strdomainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDeviceP2pIDReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceP2pIDReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[134].descriptor;
}

const QueryDeviceP2pIDReq_USR& QueryDeviceP2pIDReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceP2pIDReq_USR* QueryDeviceP2pIDReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDeviceP2pIDReq_USR* n = new QueryDeviceP2pIDReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceP2pIDReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryDeviceP2pIDReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDomainName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdomainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdomainname().data(), this->strdomainname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceP2pIDReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceP2pIDReq_USR)
  return false;
#undef DO_
}

void QueryDeviceP2pIDReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdomainname(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceP2pIDReq_USR)
}

::google::protobuf::uint8* QueryDeviceP2pIDReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdomainname().data(), this->strdomainname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdomainname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceP2pIDReq_USR)
  return target;
}

size_t QueryDeviceP2pIDReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  size_t total_size = 0;

  // string strDomainName = 1;
  if (this->strdomainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdomainname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceP2pIDReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceP2pIDReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceP2pIDReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceP2pIDReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceP2pIDReq_USR)
    MergeFrom(*source);
  }
}

void QueryDeviceP2pIDReq_USR::MergeFrom(const QueryDeviceP2pIDReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdomainname().size() > 0) {

    strdomainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdomainname_);
  }
}

void QueryDeviceP2pIDReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceP2pIDReq_USR::CopyFrom(const QueryDeviceP2pIDReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceP2pIDReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceP2pIDReq_USR::IsInitialized() const {
  return true;
}

void QueryDeviceP2pIDReq_USR::Swap(QueryDeviceP2pIDReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceP2pIDReq_USR::InternalSwap(QueryDeviceP2pIDReq_USR* other) {
  strdomainname_.Swap(&other->strdomainname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceP2pIDReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[134];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceP2pIDReq_USR

// string strDomainName = 1;
void QueryDeviceP2pIDReq_USR::clear_strdomainname() {
  strdomainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDReq_USR::strdomainname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
  return strdomainname_.GetNoArena();
}
void QueryDeviceP2pIDReq_USR::set_strdomainname(const ::std::string& value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
}
#if LANG_CXX11
void QueryDeviceP2pIDReq_USR::set_strdomainname(::std::string&& value) {
  
  strdomainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
}
#endif
void QueryDeviceP2pIDReq_USR::set_strdomainname(const char* value) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
}
void QueryDeviceP2pIDReq_USR::set_strdomainname(const char* value, size_t size) {
  
  strdomainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
}
::std::string* QueryDeviceP2pIDReq_USR::mutable_strdomainname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
  return strdomainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDReq_USR::release_strdomainname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
  
  return strdomainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDReq_USR::set_allocated_strdomainname(::std::string* strdomainname) {
  if (strdomainname != NULL) {
    
  } else {
    
  }
  strdomainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdomainname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDReq_USR.strDomainName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDeviceP2pIDRsp_USR::kStrUpdateTimeFieldNumber;
const int QueryDeviceP2pIDRsp_USR::kStrWebPortFieldNumber;
const int QueryDeviceP2pIDRsp_USR::kStrMobilePortFieldNumber;
const int QueryDeviceP2pIDRsp_USR::kStrChannelCountFieldNumber;
const int QueryDeviceP2pIDRsp_USR::kStrDeviceSNFieldNumber;
const int QueryDeviceP2pIDRsp_USR::kStrP2PIDFieldNumber;
const int QueryDeviceP2pIDRsp_USR::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDeviceP2pIDRsp_USR::QueryDeviceP2pIDRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDeviceP2pIDRsp_USR)
}
QueryDeviceP2pIDRsp_USR::QueryDeviceP2pIDRsp_USR(const QueryDeviceP2pIDRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strupdatetime().size() > 0) {
    strupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatetime_);
  }
  strwebport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strwebport().size() > 0) {
    strwebport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strwebport_);
  }
  strmobileport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strmobileport().size() > 0) {
    strmobileport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmobileport_);
  }
  strchannelcount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strchannelcount().size() > 0) {
    strchannelcount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannelcount_);
  }
  strdevicesn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicesn().size() > 0) {
    strdevicesn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicesn_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDeviceP2pIDRsp_USR)
}

void QueryDeviceP2pIDRsp_USR::SharedCtor() {
  strupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwebport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmobileport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelcount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicesn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryDeviceP2pIDRsp_USR::~QueryDeviceP2pIDRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  SharedDtor();
}

void QueryDeviceP2pIDRsp_USR::SharedDtor() {
  strupdatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwebport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmobileport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelcount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicesn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDeviceP2pIDRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDeviceP2pIDRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[135].descriptor;
}

const QueryDeviceP2pIDRsp_USR& QueryDeviceP2pIDRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDeviceP2pIDRsp_USR* QueryDeviceP2pIDRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDeviceP2pIDRsp_USR* n = new QueryDeviceP2pIDRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDeviceP2pIDRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  strupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strwebport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmobileport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannelcount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicesn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryDeviceP2pIDRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUpdateTime = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strupdatetime().data(), this->strupdatetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strWebPort = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strwebport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strwebport().data(), this->strwebport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strMobilePort = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmobileport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strmobileport().data(), this->strmobileport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strChannelCount = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchannelcount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strchannelcount().data(), this->strchannelcount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceSN = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicesn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicesn().data(), this->strdevicesn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  return false;
#undef DO_
}

void QueryDeviceP2pIDRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  // string strUpdateTime = 1;
  if (this->strupdatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatetime().data(), this->strupdatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strupdatetime(), output);
  }

  // string strWebPort = 2;
  if (this->strwebport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strwebport().data(), this->strwebport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strwebport(), output);
  }

  // string strMobilePort = 3;
  if (this->strmobileport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmobileport().data(), this->strmobileport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strmobileport(), output);
  }

  // string strChannelCount = 4;
  if (this->strchannelcount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannelcount().data(), this->strchannelcount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strchannelcount(), output);
  }

  // string strDeviceSN = 5;
  if (this->strdevicesn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicesn().data(), this->strdevicesn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strdevicesn(), output);
  }

  // string strP2pID = 6;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strp2pid(), output);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDeviceP2pIDRsp_USR)
}

::google::protobuf::uint8* QueryDeviceP2pIDRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  // string strUpdateTime = 1;
  if (this->strupdatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strupdatetime().data(), this->strupdatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strupdatetime(), target);
  }

  // string strWebPort = 2;
  if (this->strwebport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strwebport().data(), this->strwebport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strwebport(), target);
  }

  // string strMobilePort = 3;
  if (this->strmobileport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmobileport().data(), this->strmobileport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strmobileport(), target);
  }

  // string strChannelCount = 4;
  if (this->strchannelcount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannelcount().data(), this->strchannelcount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strchannelcount(), target);
  }

  // string strDeviceSN = 5;
  if (this->strdevicesn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicesn().data(), this->strdevicesn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strdevicesn(), target);
  }

  // string strP2pID = 6;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strp2pid(), target);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  return target;
}

size_t QueryDeviceP2pIDRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  size_t total_size = 0;

  // string strUpdateTime = 1;
  if (this->strupdatetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strupdatetime());
  }

  // string strWebPort = 2;
  if (this->strwebport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strwebport());
  }

  // string strMobilePort = 3;
  if (this->strmobileport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strmobileport());
  }

  // string strChannelCount = 4;
  if (this->strchannelcount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strchannelcount());
  }

  // string strDeviceSN = 5;
  if (this->strdevicesn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicesn());
  }

  // string strP2pID = 6;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDeviceP2pIDRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDeviceP2pIDRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDeviceP2pIDRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDeviceP2pIDRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDeviceP2pIDRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDeviceP2pIDRsp_USR::MergeFrom(const QueryDeviceP2pIDRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strupdatetime().size() > 0) {

    strupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strupdatetime_);
  }
  if (from.strwebport().size() > 0) {

    strwebport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strwebport_);
  }
  if (from.strmobileport().size() > 0) {

    strmobileport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmobileport_);
  }
  if (from.strchannelcount().size() > 0) {

    strchannelcount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannelcount_);
  }
  if (from.strdevicesn().size() > 0) {

    strdevicesn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicesn_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
}

void QueryDeviceP2pIDRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDeviceP2pIDRsp_USR::CopyFrom(const QueryDeviceP2pIDRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDeviceP2pIDRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDeviceP2pIDRsp_USR::IsInitialized() const {
  return true;
}

void QueryDeviceP2pIDRsp_USR::Swap(QueryDeviceP2pIDRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDeviceP2pIDRsp_USR::InternalSwap(QueryDeviceP2pIDRsp_USR* other) {
  strupdatetime_.Swap(&other->strupdatetime_);
  strwebport_.Swap(&other->strwebport_);
  strmobileport_.Swap(&other->strmobileport_);
  strchannelcount_.Swap(&other->strchannelcount_);
  strdevicesn_.Swap(&other->strdevicesn_);
  strp2pid_.Swap(&other->strp2pid_);
  strextend_.Swap(&other->strextend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDeviceP2pIDRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[135];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDeviceP2pIDRsp_USR

// string strUpdateTime = 1;
void QueryDeviceP2pIDRsp_USR::clear_strupdatetime() {
  strupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strupdatetime() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
  return strupdatetime_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strupdatetime(const ::std::string& value) {
  
  strupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strupdatetime(::std::string&& value) {
  
  strupdatetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strupdatetime(const char* value) {
  
  strupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
}
void QueryDeviceP2pIDRsp_USR::set_strupdatetime(const char* value, size_t size) {
  
  strupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strupdatetime() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
  return strupdatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strupdatetime() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
  
  return strupdatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strupdatetime(::std::string* strupdatetime) {
  if (strupdatetime != NULL) {
    
  } else {
    
  }
  strupdatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strupdatetime);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strUpdateTime)
}

// string strWebPort = 2;
void QueryDeviceP2pIDRsp_USR::clear_strwebport() {
  strwebport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strwebport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
  return strwebport_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strwebport(const ::std::string& value) {
  
  strwebport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strwebport(::std::string&& value) {
  
  strwebport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strwebport(const char* value) {
  
  strwebport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
}
void QueryDeviceP2pIDRsp_USR::set_strwebport(const char* value, size_t size) {
  
  strwebport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strwebport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
  return strwebport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strwebport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
  
  return strwebport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strwebport(::std::string* strwebport) {
  if (strwebport != NULL) {
    
  } else {
    
  }
  strwebport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strwebport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strWebPort)
}

// string strMobilePort = 3;
void QueryDeviceP2pIDRsp_USR::clear_strmobileport() {
  strmobileport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strmobileport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
  return strmobileport_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strmobileport(const ::std::string& value) {
  
  strmobileport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strmobileport(::std::string&& value) {
  
  strmobileport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strmobileport(const char* value) {
  
  strmobileport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
}
void QueryDeviceP2pIDRsp_USR::set_strmobileport(const char* value, size_t size) {
  
  strmobileport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strmobileport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
  return strmobileport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strmobileport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
  
  return strmobileport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strmobileport(::std::string* strmobileport) {
  if (strmobileport != NULL) {
    
  } else {
    
  }
  strmobileport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmobileport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strMobilePort)
}

// string strChannelCount = 4;
void QueryDeviceP2pIDRsp_USR::clear_strchannelcount() {
  strchannelcount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strchannelcount() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
  return strchannelcount_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strchannelcount(const ::std::string& value) {
  
  strchannelcount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strchannelcount(::std::string&& value) {
  
  strchannelcount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strchannelcount(const char* value) {
  
  strchannelcount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
}
void QueryDeviceP2pIDRsp_USR::set_strchannelcount(const char* value, size_t size) {
  
  strchannelcount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strchannelcount() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
  return strchannelcount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strchannelcount() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
  
  return strchannelcount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strchannelcount(::std::string* strchannelcount) {
  if (strchannelcount != NULL) {
    
  } else {
    
  }
  strchannelcount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchannelcount);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strChannelCount)
}

// string strDeviceSN = 5;
void QueryDeviceP2pIDRsp_USR::clear_strdevicesn() {
  strdevicesn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strdevicesn() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
  return strdevicesn_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strdevicesn(const ::std::string& value) {
  
  strdevicesn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strdevicesn(::std::string&& value) {
  
  strdevicesn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strdevicesn(const char* value) {
  
  strdevicesn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
}
void QueryDeviceP2pIDRsp_USR::set_strdevicesn(const char* value, size_t size) {
  
  strdevicesn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strdevicesn() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
  return strdevicesn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strdevicesn() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
  
  return strdevicesn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strdevicesn(::std::string* strdevicesn) {
  if (strdevicesn != NULL) {
    
  } else {
    
  }
  strdevicesn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicesn);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strDeviceSN)
}

// string strP2pID = 6;
void QueryDeviceP2pIDRsp_USR::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
  return strp2pid_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
}
void QueryDeviceP2pIDRsp_USR::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strP2pID)
}

// string strExtend = 7;
void QueryDeviceP2pIDRsp_USR::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDeviceP2pIDRsp_USR::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
  return strextend_.GetNoArena();
}
void QueryDeviceP2pIDRsp_USR::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
}
#if LANG_CXX11
void QueryDeviceP2pIDRsp_USR::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
}
#endif
void QueryDeviceP2pIDRsp_USR::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
}
void QueryDeviceP2pIDRsp_USR::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
}
::std::string* QueryDeviceP2pIDRsp_USR::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDeviceP2pIDRsp_USR::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDeviceP2pIDRsp_USR::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDeviceP2pIDRsp_USR.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadUserCfgReq_USR::kUiBusinessTypeFieldNumber;
const int UploadUserCfgReq_USR::kStrUserIDFieldNumber;
const int UploadUserCfgReq_USR::kStrFileIDFieldNumber;
const int UploadUserCfgReq_USR::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadUserCfgReq_USR::UploadUserCfgReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UploadUserCfgReq_USR)
}
UploadUserCfgReq_USR::UploadUserCfgReq_USR(const UploadUserCfgReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  uibusinesstype_ = from.uibusinesstype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UploadUserCfgReq_USR)
}

void UploadUserCfgReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
  _cached_size_ = 0;
}

UploadUserCfgReq_USR::~UploadUserCfgReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UploadUserCfgReq_USR)
  SharedDtor();
}

void UploadUserCfgReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadUserCfgReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadUserCfgReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[136].descriptor;
}

const UploadUserCfgReq_USR& UploadUserCfgReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UploadUserCfgReq_USR* UploadUserCfgReq_USR::New(::google::protobuf::Arena* arena) const {
  UploadUserCfgReq_USR* n = new UploadUserCfgReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadUserCfgReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UploadUserCfgReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
}

bool UploadUserCfgReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UploadUserCfgReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiBusinessType = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UploadUserCfgReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UploadUserCfgReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UploadUserCfgReq_USR.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UploadUserCfgReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UploadUserCfgReq_USR)
  return false;
#undef DO_
}

void UploadUserCfgReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UploadUserCfgReq_USR)
  // uint32 uiBusinessType = 1;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uibusinesstype(), output);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->struserid(), output);
  }

  // string strFileID = 3;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strfileid(), output);
  }

  // string strExtend = 4;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgReq_USR.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UploadUserCfgReq_USR)
}

::google::protobuf::uint8* UploadUserCfgReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UploadUserCfgReq_USR)
  // uint32 uiBusinessType = 1;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uibusinesstype(), target);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->struserid(), target);
  }

  // string strFileID = 3;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgReq_USR.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strfileid(), target);
  }

  // string strExtend = 4;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgReq_USR.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UploadUserCfgReq_USR)
  return target;
}

size_t UploadUserCfgReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UploadUserCfgReq_USR)
  size_t total_size = 0;

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strFileID = 3;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strExtend = 4;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // uint32 uiBusinessType = 1;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadUserCfgReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UploadUserCfgReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadUserCfgReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadUserCfgReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UploadUserCfgReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UploadUserCfgReq_USR)
    MergeFrom(*source);
  }
}

void UploadUserCfgReq_USR::MergeFrom(const UploadUserCfgReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UploadUserCfgReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
}

void UploadUserCfgReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UploadUserCfgReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadUserCfgReq_USR::CopyFrom(const UploadUserCfgReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UploadUserCfgReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadUserCfgReq_USR::IsInitialized() const {
  return true;
}

void UploadUserCfgReq_USR::Swap(UploadUserCfgReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadUserCfgReq_USR::InternalSwap(UploadUserCfgReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strfileid_.Swap(&other->strfileid_);
  strextend_.Swap(&other->strextend_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadUserCfgReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[136];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadUserCfgReq_USR

// uint32 uiBusinessType = 1;
void UploadUserCfgReq_USR::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 UploadUserCfgReq_USR::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UploadUserCfgReq_USR.uiBusinessType)
  return uibusinesstype_;
}
void UploadUserCfgReq_USR::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.UploadUserCfgReq_USR.uiBusinessType)
}

// string strUserID = 2;
void UploadUserCfgReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadUserCfgReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UploadUserCfgReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void UploadUserCfgReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UploadUserCfgReq_USR.strUserID)
}
#if LANG_CXX11
void UploadUserCfgReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UploadUserCfgReq_USR.strUserID)
}
#endif
void UploadUserCfgReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UploadUserCfgReq_USR.strUserID)
}
void UploadUserCfgReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UploadUserCfgReq_USR.strUserID)
}
::std::string* UploadUserCfgReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UploadUserCfgReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadUserCfgReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UploadUserCfgReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadUserCfgReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UploadUserCfgReq_USR.strUserID)
}

// string strFileID = 3;
void UploadUserCfgReq_USR::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadUserCfgReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UploadUserCfgReq_USR.strFileID)
  return strfileid_.GetNoArena();
}
void UploadUserCfgReq_USR::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UploadUserCfgReq_USR.strFileID)
}
#if LANG_CXX11
void UploadUserCfgReq_USR::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UploadUserCfgReq_USR.strFileID)
}
#endif
void UploadUserCfgReq_USR::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UploadUserCfgReq_USR.strFileID)
}
void UploadUserCfgReq_USR::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UploadUserCfgReq_USR.strFileID)
}
::std::string* UploadUserCfgReq_USR::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UploadUserCfgReq_USR.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadUserCfgReq_USR::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UploadUserCfgReq_USR.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadUserCfgReq_USR::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UploadUserCfgReq_USR.strFileID)
}

// string strExtend = 4;
void UploadUserCfgReq_USR::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadUserCfgReq_USR::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UploadUserCfgReq_USR.strExtend)
  return strextend_.GetNoArena();
}
void UploadUserCfgReq_USR::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UploadUserCfgReq_USR.strExtend)
}
#if LANG_CXX11
void UploadUserCfgReq_USR::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UploadUserCfgReq_USR.strExtend)
}
#endif
void UploadUserCfgReq_USR::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UploadUserCfgReq_USR.strExtend)
}
void UploadUserCfgReq_USR::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UploadUserCfgReq_USR.strExtend)
}
::std::string* UploadUserCfgReq_USR::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UploadUserCfgReq_USR.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadUserCfgReq_USR::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UploadUserCfgReq_USR.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadUserCfgReq_USR::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UploadUserCfgReq_USR.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadUserCfgRsp_USR::kStrVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadUserCfgRsp_USR::UploadUserCfgRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UploadUserCfgRsp_USR)
}
UploadUserCfgRsp_USR::UploadUserCfgRsp_USR(const UploadUserCfgRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UploadUserCfgRsp_USR)
}

void UploadUserCfgRsp_USR::SharedCtor() {
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UploadUserCfgRsp_USR::~UploadUserCfgRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UploadUserCfgRsp_USR)
  SharedDtor();
}

void UploadUserCfgRsp_USR::SharedDtor() {
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadUserCfgRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadUserCfgRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[137].descriptor;
}

const UploadUserCfgRsp_USR& UploadUserCfgRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UploadUserCfgRsp_USR* UploadUserCfgRsp_USR::New(::google::protobuf::Arena* arena) const {
  UploadUserCfgRsp_USR* n = new UploadUserCfgRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadUserCfgRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UploadUserCfgRsp_USR)
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UploadUserCfgRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UploadUserCfgRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strVersion = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UploadUserCfgRsp_USR.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UploadUserCfgRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UploadUserCfgRsp_USR)
  return false;
#undef DO_
}

void UploadUserCfgRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UploadUserCfgRsp_USR)
  // string strVersion = 1;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgRsp_USR.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strversion(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UploadUserCfgRsp_USR)
}

::google::protobuf::uint8* UploadUserCfgRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UploadUserCfgRsp_USR)
  // string strVersion = 1;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UploadUserCfgRsp_USR.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strversion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UploadUserCfgRsp_USR)
  return target;
}

size_t UploadUserCfgRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UploadUserCfgRsp_USR)
  size_t total_size = 0;

  // string strVersion = 1;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadUserCfgRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UploadUserCfgRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadUserCfgRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadUserCfgRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UploadUserCfgRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UploadUserCfgRsp_USR)
    MergeFrom(*source);
  }
}

void UploadUserCfgRsp_USR::MergeFrom(const UploadUserCfgRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UploadUserCfgRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
}

void UploadUserCfgRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UploadUserCfgRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadUserCfgRsp_USR::CopyFrom(const UploadUserCfgRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UploadUserCfgRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadUserCfgRsp_USR::IsInitialized() const {
  return true;
}

void UploadUserCfgRsp_USR::Swap(UploadUserCfgRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadUserCfgRsp_USR::InternalSwap(UploadUserCfgRsp_USR* other) {
  strversion_.Swap(&other->strversion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadUserCfgRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[137];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadUserCfgRsp_USR

// string strVersion = 1;
void UploadUserCfgRsp_USR::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadUserCfgRsp_USR::strversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
  return strversion_.GetNoArena();
}
void UploadUserCfgRsp_USR::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
}
#if LANG_CXX11
void UploadUserCfgRsp_USR::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
}
#endif
void UploadUserCfgRsp_USR::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
}
void UploadUserCfgRsp_USR::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
}
::std::string* UploadUserCfgRsp_USR::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadUserCfgRsp_USR::release_strversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadUserCfgRsp_USR::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UploadUserCfgRsp_USR.strVersion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserCfgReq_USR::kUiBusinessTypeFieldNumber;
const int QueryUserCfgReq_USR::kStrUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserCfgReq_USR::QueryUserCfgReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUserCfgReq_USR)
}
QueryUserCfgReq_USR::QueryUserCfgReq_USR(const QueryUserCfgReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  uibusinesstype_ = from.uibusinesstype_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUserCfgReq_USR)
}

void QueryUserCfgReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
  _cached_size_ = 0;
}

QueryUserCfgReq_USR::~QueryUserCfgReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUserCfgReq_USR)
  SharedDtor();
}

void QueryUserCfgReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUserCfgReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserCfgReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[138].descriptor;
}

const QueryUserCfgReq_USR& QueryUserCfgReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUserCfgReq_USR* QueryUserCfgReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryUserCfgReq_USR* n = new QueryUserCfgReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserCfgReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUserCfgReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibusinesstype_ = 0u;
}

bool QueryUserCfgReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUserCfgReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiBusinessType = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserCfgReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUserCfgReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUserCfgReq_USR)
  return false;
#undef DO_
}

void QueryUserCfgReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUserCfgReq_USR)
  // uint32 uiBusinessType = 1;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uibusinesstype(), output);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->struserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUserCfgReq_USR)
}

::google::protobuf::uint8* QueryUserCfgReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUserCfgReq_USR)
  // uint32 uiBusinessType = 1;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uibusinesstype(), target);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->struserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUserCfgReq_USR)
  return target;
}

size_t QueryUserCfgReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUserCfgReq_USR)
  size_t total_size = 0;

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // uint32 uiBusinessType = 1;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserCfgReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUserCfgReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserCfgReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserCfgReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUserCfgReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUserCfgReq_USR)
    MergeFrom(*source);
  }
}

void QueryUserCfgReq_USR::MergeFrom(const QueryUserCfgReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUserCfgReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
}

void QueryUserCfgReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUserCfgReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserCfgReq_USR::CopyFrom(const QueryUserCfgReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUserCfgReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserCfgReq_USR::IsInitialized() const {
  return true;
}

void QueryUserCfgReq_USR::Swap(QueryUserCfgReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserCfgReq_USR::InternalSwap(QueryUserCfgReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserCfgReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[138];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUserCfgReq_USR

// uint32 uiBusinessType = 1;
void QueryUserCfgReq_USR::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 QueryUserCfgReq_USR::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserCfgReq_USR.uiBusinessType)
  return uibusinesstype_;
}
void QueryUserCfgReq_USR::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserCfgReq_USR.uiBusinessType)
}

// string strUserID = 2;
void QueryUserCfgReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserCfgReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserCfgReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryUserCfgReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserCfgReq_USR.strUserID)
}
#if LANG_CXX11
void QueryUserCfgReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserCfgReq_USR.strUserID)
}
#endif
void QueryUserCfgReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserCfgReq_USR.strUserID)
}
void QueryUserCfgReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserCfgReq_USR.strUserID)
}
::std::string* QueryUserCfgReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserCfgReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserCfgReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserCfgReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserCfgReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserCfgReq_USR.strUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserCfgRsp_USR::kStrCfgURLFieldNumber;
const int QueryUserCfgRsp_USR::kStrVersionFieldNumber;
const int QueryUserCfgRsp_USR::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserCfgRsp_USR::QueryUserCfgRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUserCfgRsp_USR)
}
QueryUserCfgRsp_USR::QueryUserCfgRsp_USR(const QueryUserCfgRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcfgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcfgurl().size() > 0) {
    strcfgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcfgurl_);
  }
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUserCfgRsp_USR)
}

void QueryUserCfgRsp_USR::SharedCtor() {
  strcfgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUserCfgRsp_USR::~QueryUserCfgRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUserCfgRsp_USR)
  SharedDtor();
}

void QueryUserCfgRsp_USR::SharedDtor() {
  strcfgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUserCfgRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserCfgRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[139].descriptor;
}

const QueryUserCfgRsp_USR& QueryUserCfgRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUserCfgRsp_USR* QueryUserCfgRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryUserCfgRsp_USR* n = new QueryUserCfgRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserCfgRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUserCfgRsp_USR)
  strcfgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryUserCfgRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUserCfgRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCfgURL = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcfgurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcfgurl().data(), this->strcfgurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserCfgRsp_USR.strCfgURL"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVersion = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserCfgRsp_USR.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserCfgRsp_USR.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUserCfgRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUserCfgRsp_USR)
  return false;
#undef DO_
}

void QueryUserCfgRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUserCfgRsp_USR)
  // string strCfgURL = 1;
  if (this->strcfgurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcfgurl().data(), this->strcfgurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgRsp_USR.strCfgURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcfgurl(), output);
  }

  // string strVersion = 2;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgRsp_USR.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strversion(), output);
  }

  // string strExtend = 3;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgRsp_USR.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUserCfgRsp_USR)
}

::google::protobuf::uint8* QueryUserCfgRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUserCfgRsp_USR)
  // string strCfgURL = 1;
  if (this->strcfgurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcfgurl().data(), this->strcfgurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgRsp_USR.strCfgURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcfgurl(), target);
  }

  // string strVersion = 2;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgRsp_USR.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strversion(), target);
  }

  // string strExtend = 3;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserCfgRsp_USR.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUserCfgRsp_USR)
  return target;
}

size_t QueryUserCfgRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUserCfgRsp_USR)
  size_t total_size = 0;

  // string strCfgURL = 1;
  if (this->strcfgurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcfgurl());
  }

  // string strVersion = 2;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  // string strExtend = 3;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserCfgRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUserCfgRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserCfgRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserCfgRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUserCfgRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUserCfgRsp_USR)
    MergeFrom(*source);
  }
}

void QueryUserCfgRsp_USR::MergeFrom(const QueryUserCfgRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUserCfgRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcfgurl().size() > 0) {

    strcfgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcfgurl_);
  }
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
}

void QueryUserCfgRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUserCfgRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserCfgRsp_USR::CopyFrom(const QueryUserCfgRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUserCfgRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserCfgRsp_USR::IsInitialized() const {
  return true;
}

void QueryUserCfgRsp_USR::Swap(QueryUserCfgRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserCfgRsp_USR::InternalSwap(QueryUserCfgRsp_USR* other) {
  strcfgurl_.Swap(&other->strcfgurl_);
  strversion_.Swap(&other->strversion_);
  strextend_.Swap(&other->strextend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserCfgRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[139];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUserCfgRsp_USR

// string strCfgURL = 1;
void QueryUserCfgRsp_USR::clear_strcfgurl() {
  strcfgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserCfgRsp_USR::strcfgurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
  return strcfgurl_.GetNoArena();
}
void QueryUserCfgRsp_USR::set_strcfgurl(const ::std::string& value) {
  
  strcfgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
}
#if LANG_CXX11
void QueryUserCfgRsp_USR::set_strcfgurl(::std::string&& value) {
  
  strcfgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
}
#endif
void QueryUserCfgRsp_USR::set_strcfgurl(const char* value) {
  
  strcfgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
}
void QueryUserCfgRsp_USR::set_strcfgurl(const char* value, size_t size) {
  
  strcfgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
}
::std::string* QueryUserCfgRsp_USR::mutable_strcfgurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
  return strcfgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserCfgRsp_USR::release_strcfgurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
  
  return strcfgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserCfgRsp_USR::set_allocated_strcfgurl(::std::string* strcfgurl) {
  if (strcfgurl != NULL) {
    
  } else {
    
  }
  strcfgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcfgurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserCfgRsp_USR.strCfgURL)
}

// string strVersion = 2;
void QueryUserCfgRsp_USR::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserCfgRsp_USR::strversion() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
  return strversion_.GetNoArena();
}
void QueryUserCfgRsp_USR::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
}
#if LANG_CXX11
void QueryUserCfgRsp_USR::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
}
#endif
void QueryUserCfgRsp_USR::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
}
void QueryUserCfgRsp_USR::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
}
::std::string* QueryUserCfgRsp_USR::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserCfgRsp_USR::release_strversion() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserCfgRsp_USR::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserCfgRsp_USR.strVersion)
}

// string strExtend = 3;
void QueryUserCfgRsp_USR::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserCfgRsp_USR::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
  return strextend_.GetNoArena();
}
void QueryUserCfgRsp_USR::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
}
#if LANG_CXX11
void QueryUserCfgRsp_USR::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
}
#endif
void QueryUserCfgRsp_USR::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
}
void QueryUserCfgRsp_USR::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
}
::std::string* QueryUserCfgRsp_USR::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserCfgRsp_USR::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserCfgRsp_USR::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserCfgRsp_USR.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUploadURLReq_MGR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUploadURLReq_MGR::QueryUploadURLReq_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUploadURLReq_MGR)
}
QueryUploadURLReq_MGR::QueryUploadURLReq_MGR(const QueryUploadURLReq_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUploadURLReq_MGR)
}

void QueryUploadURLReq_MGR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUploadURLReq_MGR::~QueryUploadURLReq_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUploadURLReq_MGR)
  SharedDtor();
}

void QueryUploadURLReq_MGR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUploadURLReq_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUploadURLReq_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[140].descriptor;
}

const QueryUploadURLReq_MGR& QueryUploadURLReq_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUploadURLReq_MGR* QueryUploadURLReq_MGR::New(::google::protobuf::Arena* arena) const {
  QueryUploadURLReq_MGR* n = new QueryUploadURLReq_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUploadURLReq_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUploadURLReq_MGR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryUploadURLReq_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUploadURLReq_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUploadURLReq_MGR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUploadURLReq_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUploadURLReq_MGR)
  return false;
#undef DO_
}

void QueryUploadURLReq_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUploadURLReq_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUploadURLReq_MGR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUploadURLReq_MGR)
}

::google::protobuf::uint8* QueryUploadURLReq_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUploadURLReq_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUploadURLReq_MGR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUploadURLReq_MGR)
  return target;
}

size_t QueryUploadURLReq_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUploadURLReq_MGR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUploadURLReq_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUploadURLReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUploadURLReq_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUploadURLReq_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUploadURLReq_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUploadURLReq_MGR)
    MergeFrom(*source);
  }
}

void QueryUploadURLReq_MGR::MergeFrom(const QueryUploadURLReq_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUploadURLReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryUploadURLReq_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUploadURLReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUploadURLReq_MGR::CopyFrom(const QueryUploadURLReq_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUploadURLReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUploadURLReq_MGR::IsInitialized() const {
  return true;
}

void QueryUploadURLReq_MGR::Swap(QueryUploadURLReq_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUploadURLReq_MGR::InternalSwap(QueryUploadURLReq_MGR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUploadURLReq_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[140];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUploadURLReq_MGR

// string strValue = 1;
void QueryUploadURLReq_MGR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUploadURLReq_MGR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUploadURLReq_MGR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUploadURLReq_MGR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUploadURLReq_MGR.strValue)
}
#if LANG_CXX11
void QueryUploadURLReq_MGR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUploadURLReq_MGR.strValue)
}
#endif
void QueryUploadURLReq_MGR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUploadURLReq_MGR.strValue)
}
void QueryUploadURLReq_MGR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUploadURLReq_MGR.strValue)
}
::std::string* QueryUploadURLReq_MGR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUploadURLReq_MGR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUploadURLReq_MGR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUploadURLReq_MGR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUploadURLReq_MGR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUploadURLReq_MGR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUploadURLRsp_MGR::kStrUploadURLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUploadURLRsp_MGR::QueryUploadURLRsp_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUploadURLRsp_MGR)
}
QueryUploadURLRsp_MGR::QueryUploadURLRsp_MGR(const QueryUploadURLRsp_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struploadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struploadurl().size() > 0) {
    struploadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struploadurl_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUploadURLRsp_MGR)
}

void QueryUploadURLRsp_MGR::SharedCtor() {
  struploadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUploadURLRsp_MGR::~QueryUploadURLRsp_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUploadURLRsp_MGR)
  SharedDtor();
}

void QueryUploadURLRsp_MGR::SharedDtor() {
  struploadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUploadURLRsp_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUploadURLRsp_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[141].descriptor;
}

const QueryUploadURLRsp_MGR& QueryUploadURLRsp_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUploadURLRsp_MGR* QueryUploadURLRsp_MGR::New(::google::protobuf::Arena* arena) const {
  QueryUploadURLRsp_MGR* n = new QueryUploadURLRsp_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUploadURLRsp_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUploadURLRsp_MGR)
  struploadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryUploadURLRsp_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUploadURLRsp_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUploadURL = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struploadurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struploadurl().data(), this->struploadurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUploadURLRsp_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUploadURLRsp_MGR)
  return false;
#undef DO_
}

void QueryUploadURLRsp_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUploadURLRsp_MGR)
  // string strUploadURL = 1;
  if (this->struploadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struploadurl().data(), this->struploadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struploadurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUploadURLRsp_MGR)
}

::google::protobuf::uint8* QueryUploadURLRsp_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUploadURLRsp_MGR)
  // string strUploadURL = 1;
  if (this->struploadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struploadurl().data(), this->struploadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struploadurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUploadURLRsp_MGR)
  return target;
}

size_t QueryUploadURLRsp_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUploadURLRsp_MGR)
  size_t total_size = 0;

  // string strUploadURL = 1;
  if (this->struploadurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struploadurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUploadURLRsp_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUploadURLRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUploadURLRsp_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUploadURLRsp_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUploadURLRsp_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUploadURLRsp_MGR)
    MergeFrom(*source);
  }
}

void QueryUploadURLRsp_MGR::MergeFrom(const QueryUploadURLRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUploadURLRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struploadurl().size() > 0) {

    struploadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struploadurl_);
  }
}

void QueryUploadURLRsp_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUploadURLRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUploadURLRsp_MGR::CopyFrom(const QueryUploadURLRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUploadURLRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUploadURLRsp_MGR::IsInitialized() const {
  return true;
}

void QueryUploadURLRsp_MGR::Swap(QueryUploadURLRsp_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUploadURLRsp_MGR::InternalSwap(QueryUploadURLRsp_MGR* other) {
  struploadurl_.Swap(&other->struploadurl_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUploadURLRsp_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[141];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUploadURLRsp_MGR

// string strUploadURL = 1;
void QueryUploadURLRsp_MGR::clear_struploadurl() {
  struploadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUploadURLRsp_MGR::struploadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
  return struploadurl_.GetNoArena();
}
void QueryUploadURLRsp_MGR::set_struploadurl(const ::std::string& value) {
  
  struploadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
}
#if LANG_CXX11
void QueryUploadURLRsp_MGR::set_struploadurl(::std::string&& value) {
  
  struploadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
}
#endif
void QueryUploadURLRsp_MGR::set_struploadurl(const char* value) {
  
  struploadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
}
void QueryUploadURLRsp_MGR::set_struploadurl(const char* value, size_t size) {
  
  struploadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
}
::std::string* QueryUploadURLRsp_MGR::mutable_struploadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
  return struploadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUploadURLRsp_MGR::release_struploadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
  
  return struploadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUploadURLRsp_MGR::set_allocated_struploadurl(::std::string* struploadurl) {
  if (struploadurl != NULL) {
    
  } else {
    
  }
  struploadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struploadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUploadURLRsp_MGR.strUploadURL)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddConfigurationReq_MGR::kConfigurationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddConfigurationReq_MGR::AddConfigurationReq_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddConfigurationReq_MGR)
}
AddConfigurationReq_MGR::AddConfigurationReq_MGR(const AddConfigurationReq_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_configurationinfo()) {
    configurationinfo_ = new ::Interactive::Message::Configuration(*from.configurationinfo_);
  } else {
    configurationinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddConfigurationReq_MGR)
}

void AddConfigurationReq_MGR::SharedCtor() {
  configurationinfo_ = NULL;
  _cached_size_ = 0;
}

AddConfigurationReq_MGR::~AddConfigurationReq_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddConfigurationReq_MGR)
  SharedDtor();
}

void AddConfigurationReq_MGR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete configurationinfo_;
  }
}

void AddConfigurationReq_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddConfigurationReq_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[142].descriptor;
}

const AddConfigurationReq_MGR& AddConfigurationReq_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddConfigurationReq_MGR* AddConfigurationReq_MGR::New(::google::protobuf::Arena* arena) const {
  AddConfigurationReq_MGR* n = new AddConfigurationReq_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddConfigurationReq_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddConfigurationReq_MGR)
  if (GetArenaNoVirtual() == NULL && configurationinfo_ != NULL) {
    delete configurationinfo_;
  }
  configurationinfo_ = NULL;
}

bool AddConfigurationReq_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddConfigurationReq_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Configuration configurationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configurationinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddConfigurationReq_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddConfigurationReq_MGR)
  return false;
#undef DO_
}

void AddConfigurationReq_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddConfigurationReq_MGR)
  // .Interactive.Message.Configuration configurationInfo = 1;
  if (this->has_configurationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->configurationinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddConfigurationReq_MGR)
}

::google::protobuf::uint8* AddConfigurationReq_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddConfigurationReq_MGR)
  // .Interactive.Message.Configuration configurationInfo = 1;
  if (this->has_configurationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->configurationinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddConfigurationReq_MGR)
  return target;
}

size_t AddConfigurationReq_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddConfigurationReq_MGR)
  size_t total_size = 0;

  // .Interactive.Message.Configuration configurationInfo = 1;
  if (this->has_configurationinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configurationinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddConfigurationReq_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddConfigurationReq_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddConfigurationReq_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddConfigurationReq_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddConfigurationReq_MGR)
    MergeFrom(*source);
  }
}

void AddConfigurationReq_MGR::MergeFrom(const AddConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_configurationinfo()) {
    mutable_configurationinfo()->::Interactive::Message::Configuration::MergeFrom(from.configurationinfo());
  }
}

void AddConfigurationReq_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddConfigurationReq_MGR::CopyFrom(const AddConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddConfigurationReq_MGR::IsInitialized() const {
  return true;
}

void AddConfigurationReq_MGR::Swap(AddConfigurationReq_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddConfigurationReq_MGR::InternalSwap(AddConfigurationReq_MGR* other) {
  std::swap(configurationinfo_, other->configurationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddConfigurationReq_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[142];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddConfigurationReq_MGR

// .Interactive.Message.Configuration configurationInfo = 1;
bool AddConfigurationReq_MGR::has_configurationinfo() const {
  return this != internal_default_instance() && configurationinfo_ != NULL;
}
void AddConfigurationReq_MGR::clear_configurationinfo() {
  if (GetArenaNoVirtual() == NULL && configurationinfo_ != NULL) delete configurationinfo_;
  configurationinfo_ = NULL;
}
const ::Interactive::Message::Configuration& AddConfigurationReq_MGR::configurationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddConfigurationReq_MGR.configurationInfo)
  return configurationinfo_ != NULL ? *configurationinfo_
                         : *::Interactive::Message::Configuration::internal_default_instance();
}
::Interactive::Message::Configuration* AddConfigurationReq_MGR::mutable_configurationinfo() {
  
  if (configurationinfo_ == NULL) {
    configurationinfo_ = new ::Interactive::Message::Configuration;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddConfigurationReq_MGR.configurationInfo)
  return configurationinfo_;
}
::Interactive::Message::Configuration* AddConfigurationReq_MGR::release_configurationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddConfigurationReq_MGR.configurationInfo)
  
  ::Interactive::Message::Configuration* temp = configurationinfo_;
  configurationinfo_ = NULL;
  return temp;
}
void AddConfigurationReq_MGR::set_allocated_configurationinfo(::Interactive::Message::Configuration* configurationinfo) {
  delete configurationinfo_;
  configurationinfo_ = configurationinfo;
  if (configurationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddConfigurationReq_MGR.configurationInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddConfigurationRsp_MGR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddConfigurationRsp_MGR::AddConfigurationRsp_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddConfigurationRsp_MGR)
}
AddConfigurationRsp_MGR::AddConfigurationRsp_MGR(const AddConfigurationRsp_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddConfigurationRsp_MGR)
}

void AddConfigurationRsp_MGR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddConfigurationRsp_MGR::~AddConfigurationRsp_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddConfigurationRsp_MGR)
  SharedDtor();
}

void AddConfigurationRsp_MGR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddConfigurationRsp_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddConfigurationRsp_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[143].descriptor;
}

const AddConfigurationRsp_MGR& AddConfigurationRsp_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddConfigurationRsp_MGR* AddConfigurationRsp_MGR::New(::google::protobuf::Arena* arena) const {
  AddConfigurationRsp_MGR* n = new AddConfigurationRsp_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddConfigurationRsp_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddConfigurationRsp_MGR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddConfigurationRsp_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddConfigurationRsp_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddConfigurationRsp_MGR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddConfigurationRsp_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddConfigurationRsp_MGR)
  return false;
#undef DO_
}

void AddConfigurationRsp_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddConfigurationRsp_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddConfigurationRsp_MGR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddConfigurationRsp_MGR)
}

::google::protobuf::uint8* AddConfigurationRsp_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddConfigurationRsp_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddConfigurationRsp_MGR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddConfigurationRsp_MGR)
  return target;
}

size_t AddConfigurationRsp_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddConfigurationRsp_MGR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddConfigurationRsp_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddConfigurationRsp_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddConfigurationRsp_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddConfigurationRsp_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddConfigurationRsp_MGR)
    MergeFrom(*source);
  }
}

void AddConfigurationRsp_MGR::MergeFrom(const AddConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddConfigurationRsp_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddConfigurationRsp_MGR::CopyFrom(const AddConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddConfigurationRsp_MGR::IsInitialized() const {
  return true;
}

void AddConfigurationRsp_MGR::Swap(AddConfigurationRsp_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddConfigurationRsp_MGR::InternalSwap(AddConfigurationRsp_MGR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddConfigurationRsp_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[143];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddConfigurationRsp_MGR

// string strValue = 1;
void AddConfigurationRsp_MGR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddConfigurationRsp_MGR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddConfigurationRsp_MGR.strValue)
  return strvalue_.GetNoArena();
}
void AddConfigurationRsp_MGR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddConfigurationRsp_MGR.strValue)
}
#if LANG_CXX11
void AddConfigurationRsp_MGR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddConfigurationRsp_MGR.strValue)
}
#endif
void AddConfigurationRsp_MGR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddConfigurationRsp_MGR.strValue)
}
void AddConfigurationRsp_MGR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddConfigurationRsp_MGR.strValue)
}
::std::string* AddConfigurationRsp_MGR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddConfigurationRsp_MGR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddConfigurationRsp_MGR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddConfigurationRsp_MGR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddConfigurationRsp_MGR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddConfigurationRsp_MGR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteConfigurationReq_MGR::kStrCategoryFieldNumber;
const int DeleteConfigurationReq_MGR::kStrSubCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteConfigurationReq_MGR::DeleteConfigurationReq_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteConfigurationReq_MGR)
}
DeleteConfigurationReq_MGR::DeleteConfigurationReq_MGR(const DeleteConfigurationReq_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcategory().size() > 0) {
    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsubcategory().size() > 0) {
    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteConfigurationReq_MGR)
}

void DeleteConfigurationReq_MGR::SharedCtor() {
  strcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteConfigurationReq_MGR::~DeleteConfigurationReq_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteConfigurationReq_MGR)
  SharedDtor();
}

void DeleteConfigurationReq_MGR::SharedDtor() {
  strcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteConfigurationReq_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteConfigurationReq_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[144].descriptor;
}

const DeleteConfigurationReq_MGR& DeleteConfigurationReq_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteConfigurationReq_MGR* DeleteConfigurationReq_MGR::New(::google::protobuf::Arena* arena) const {
  DeleteConfigurationReq_MGR* n = new DeleteConfigurationReq_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteConfigurationReq_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteConfigurationReq_MGR)
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteConfigurationReq_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteConfigurationReq_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strCategory = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcategory().data(), this->strcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteConfigurationReq_MGR.strCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSubCategory = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubcategory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsubcategory().data(), this->strsubcategory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteConfigurationReq_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteConfigurationReq_MGR)
  return false;
#undef DO_
}

void DeleteConfigurationReq_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteConfigurationReq_MGR)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteConfigurationReq_MGR.strCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strcategory(), output);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strsubcategory(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteConfigurationReq_MGR)
}

::google::protobuf::uint8* DeleteConfigurationReq_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteConfigurationReq_MGR)
  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcategory().data(), this->strcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteConfigurationReq_MGR.strCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcategory(), target);
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsubcategory().data(), this->strsubcategory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strsubcategory(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteConfigurationReq_MGR)
  return target;
}

size_t DeleteConfigurationReq_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteConfigurationReq_MGR)
  size_t total_size = 0;

  // string strCategory = 1;
  if (this->strcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcategory());
  }

  // string strSubCategory = 2;
  if (this->strsubcategory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsubcategory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteConfigurationReq_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteConfigurationReq_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteConfigurationReq_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteConfigurationReq_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteConfigurationReq_MGR)
    MergeFrom(*source);
  }
}

void DeleteConfigurationReq_MGR::MergeFrom(const DeleteConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcategory().size() > 0) {

    strcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcategory_);
  }
  if (from.strsubcategory().size() > 0) {

    strsubcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsubcategory_);
  }
}

void DeleteConfigurationReq_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteConfigurationReq_MGR::CopyFrom(const DeleteConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteConfigurationReq_MGR::IsInitialized() const {
  return true;
}

void DeleteConfigurationReq_MGR::Swap(DeleteConfigurationReq_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteConfigurationReq_MGR::InternalSwap(DeleteConfigurationReq_MGR* other) {
  strcategory_.Swap(&other->strcategory_);
  strsubcategory_.Swap(&other->strsubcategory_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteConfigurationReq_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[144];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteConfigurationReq_MGR

// string strCategory = 1;
void DeleteConfigurationReq_MGR::clear_strcategory() {
  strcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteConfigurationReq_MGR::strcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
  return strcategory_.GetNoArena();
}
void DeleteConfigurationReq_MGR::set_strcategory(const ::std::string& value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
}
#if LANG_CXX11
void DeleteConfigurationReq_MGR::set_strcategory(::std::string&& value) {
  
  strcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
}
#endif
void DeleteConfigurationReq_MGR::set_strcategory(const char* value) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
}
void DeleteConfigurationReq_MGR::set_strcategory(const char* value, size_t size) {
  
  strcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
}
::std::string* DeleteConfigurationReq_MGR::mutable_strcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
  return strcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteConfigurationReq_MGR::release_strcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
  
  return strcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteConfigurationReq_MGR::set_allocated_strcategory(::std::string* strcategory) {
  if (strcategory != NULL) {
    
  } else {
    
  }
  strcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteConfigurationReq_MGR.strCategory)
}

// string strSubCategory = 2;
void DeleteConfigurationReq_MGR::clear_strsubcategory() {
  strsubcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteConfigurationReq_MGR::strsubcategory() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
  return strsubcategory_.GetNoArena();
}
void DeleteConfigurationReq_MGR::set_strsubcategory(const ::std::string& value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
}
#if LANG_CXX11
void DeleteConfigurationReq_MGR::set_strsubcategory(::std::string&& value) {
  
  strsubcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
}
#endif
void DeleteConfigurationReq_MGR::set_strsubcategory(const char* value) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
}
void DeleteConfigurationReq_MGR::set_strsubcategory(const char* value, size_t size) {
  
  strsubcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
}
::std::string* DeleteConfigurationReq_MGR::mutable_strsubcategory() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
  return strsubcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteConfigurationReq_MGR::release_strsubcategory() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
  
  return strsubcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteConfigurationReq_MGR::set_allocated_strsubcategory(::std::string* strsubcategory) {
  if (strsubcategory != NULL) {
    
  } else {
    
  }
  strsubcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsubcategory);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteConfigurationReq_MGR.strSubCategory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteConfigurationRsp_MGR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteConfigurationRsp_MGR::DeleteConfigurationRsp_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteConfigurationRsp_MGR)
}
DeleteConfigurationRsp_MGR::DeleteConfigurationRsp_MGR(const DeleteConfigurationRsp_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteConfigurationRsp_MGR)
}

void DeleteConfigurationRsp_MGR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteConfigurationRsp_MGR::~DeleteConfigurationRsp_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteConfigurationRsp_MGR)
  SharedDtor();
}

void DeleteConfigurationRsp_MGR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteConfigurationRsp_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteConfigurationRsp_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[145].descriptor;
}

const DeleteConfigurationRsp_MGR& DeleteConfigurationRsp_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteConfigurationRsp_MGR* DeleteConfigurationRsp_MGR::New(::google::protobuf::Arena* arena) const {
  DeleteConfigurationRsp_MGR* n = new DeleteConfigurationRsp_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteConfigurationRsp_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteConfigurationRsp_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteConfigurationRsp_MGR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteConfigurationRsp_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteConfigurationRsp_MGR)
  return false;
#undef DO_
}

void DeleteConfigurationRsp_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteConfigurationRsp_MGR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteConfigurationRsp_MGR)
}

::google::protobuf::uint8* DeleteConfigurationRsp_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteConfigurationRsp_MGR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteConfigurationRsp_MGR)
  return target;
}

size_t DeleteConfigurationRsp_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteConfigurationRsp_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteConfigurationRsp_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteConfigurationRsp_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteConfigurationRsp_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteConfigurationRsp_MGR)
    MergeFrom(*source);
  }
}

void DeleteConfigurationRsp_MGR::MergeFrom(const DeleteConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DeleteConfigurationRsp_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteConfigurationRsp_MGR::CopyFrom(const DeleteConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteConfigurationRsp_MGR::IsInitialized() const {
  return true;
}

void DeleteConfigurationRsp_MGR::Swap(DeleteConfigurationRsp_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteConfigurationRsp_MGR::InternalSwap(DeleteConfigurationRsp_MGR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteConfigurationRsp_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[145];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteConfigurationRsp_MGR

// string strValue = 1;
void DeleteConfigurationRsp_MGR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteConfigurationRsp_MGR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
  return strvalue_.GetNoArena();
}
void DeleteConfigurationRsp_MGR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
}
#if LANG_CXX11
void DeleteConfigurationRsp_MGR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
}
#endif
void DeleteConfigurationRsp_MGR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
}
void DeleteConfigurationRsp_MGR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
}
::std::string* DeleteConfigurationRsp_MGR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteConfigurationRsp_MGR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteConfigurationRsp_MGR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteConfigurationRsp_MGR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyConfigurationReq_MGR::kConfigurationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyConfigurationReq_MGR::ModifyConfigurationReq_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyConfigurationReq_MGR)
}
ModifyConfigurationReq_MGR::ModifyConfigurationReq_MGR(const ModifyConfigurationReq_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_configurationinfo()) {
    configurationinfo_ = new ::Interactive::Message::Configuration(*from.configurationinfo_);
  } else {
    configurationinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyConfigurationReq_MGR)
}

void ModifyConfigurationReq_MGR::SharedCtor() {
  configurationinfo_ = NULL;
  _cached_size_ = 0;
}

ModifyConfigurationReq_MGR::~ModifyConfigurationReq_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyConfigurationReq_MGR)
  SharedDtor();
}

void ModifyConfigurationReq_MGR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete configurationinfo_;
  }
}

void ModifyConfigurationReq_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyConfigurationReq_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[146].descriptor;
}

const ModifyConfigurationReq_MGR& ModifyConfigurationReq_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyConfigurationReq_MGR* ModifyConfigurationReq_MGR::New(::google::protobuf::Arena* arena) const {
  ModifyConfigurationReq_MGR* n = new ModifyConfigurationReq_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyConfigurationReq_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyConfigurationReq_MGR)
  if (GetArenaNoVirtual() == NULL && configurationinfo_ != NULL) {
    delete configurationinfo_;
  }
  configurationinfo_ = NULL;
}

bool ModifyConfigurationReq_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyConfigurationReq_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Configuration configurationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configurationinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyConfigurationReq_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyConfigurationReq_MGR)
  return false;
#undef DO_
}

void ModifyConfigurationReq_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyConfigurationReq_MGR)
  // .Interactive.Message.Configuration configurationInfo = 1;
  if (this->has_configurationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->configurationinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyConfigurationReq_MGR)
}

::google::protobuf::uint8* ModifyConfigurationReq_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyConfigurationReq_MGR)
  // .Interactive.Message.Configuration configurationInfo = 1;
  if (this->has_configurationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->configurationinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyConfigurationReq_MGR)
  return target;
}

size_t ModifyConfigurationReq_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyConfigurationReq_MGR)
  size_t total_size = 0;

  // .Interactive.Message.Configuration configurationInfo = 1;
  if (this->has_configurationinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configurationinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyConfigurationReq_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyConfigurationReq_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyConfigurationReq_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyConfigurationReq_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyConfigurationReq_MGR)
    MergeFrom(*source);
  }
}

void ModifyConfigurationReq_MGR::MergeFrom(const ModifyConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_configurationinfo()) {
    mutable_configurationinfo()->::Interactive::Message::Configuration::MergeFrom(from.configurationinfo());
  }
}

void ModifyConfigurationReq_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyConfigurationReq_MGR::CopyFrom(const ModifyConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyConfigurationReq_MGR::IsInitialized() const {
  return true;
}

void ModifyConfigurationReq_MGR::Swap(ModifyConfigurationReq_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyConfigurationReq_MGR::InternalSwap(ModifyConfigurationReq_MGR* other) {
  std::swap(configurationinfo_, other->configurationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyConfigurationReq_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[146];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyConfigurationReq_MGR

// .Interactive.Message.Configuration configurationInfo = 1;
bool ModifyConfigurationReq_MGR::has_configurationinfo() const {
  return this != internal_default_instance() && configurationinfo_ != NULL;
}
void ModifyConfigurationReq_MGR::clear_configurationinfo() {
  if (GetArenaNoVirtual() == NULL && configurationinfo_ != NULL) delete configurationinfo_;
  configurationinfo_ = NULL;
}
const ::Interactive::Message::Configuration& ModifyConfigurationReq_MGR::configurationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyConfigurationReq_MGR.configurationInfo)
  return configurationinfo_ != NULL ? *configurationinfo_
                         : *::Interactive::Message::Configuration::internal_default_instance();
}
::Interactive::Message::Configuration* ModifyConfigurationReq_MGR::mutable_configurationinfo() {
  
  if (configurationinfo_ == NULL) {
    configurationinfo_ = new ::Interactive::Message::Configuration;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyConfigurationReq_MGR.configurationInfo)
  return configurationinfo_;
}
::Interactive::Message::Configuration* ModifyConfigurationReq_MGR::release_configurationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyConfigurationReq_MGR.configurationInfo)
  
  ::Interactive::Message::Configuration* temp = configurationinfo_;
  configurationinfo_ = NULL;
  return temp;
}
void ModifyConfigurationReq_MGR::set_allocated_configurationinfo(::Interactive::Message::Configuration* configurationinfo) {
  delete configurationinfo_;
  configurationinfo_ = configurationinfo;
  if (configurationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyConfigurationReq_MGR.configurationInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyConfigurationRsp_MGR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyConfigurationRsp_MGR::ModifyConfigurationRsp_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyConfigurationRsp_MGR)
}
ModifyConfigurationRsp_MGR::ModifyConfigurationRsp_MGR(const ModifyConfigurationRsp_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyConfigurationRsp_MGR)
}

void ModifyConfigurationRsp_MGR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyConfigurationRsp_MGR::~ModifyConfigurationRsp_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyConfigurationRsp_MGR)
  SharedDtor();
}

void ModifyConfigurationRsp_MGR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyConfigurationRsp_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyConfigurationRsp_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[147].descriptor;
}

const ModifyConfigurationRsp_MGR& ModifyConfigurationRsp_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyConfigurationRsp_MGR* ModifyConfigurationRsp_MGR::New(::google::protobuf::Arena* arena) const {
  ModifyConfigurationRsp_MGR* n = new ModifyConfigurationRsp_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyConfigurationRsp_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyConfigurationRsp_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyConfigurationRsp_MGR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyConfigurationRsp_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyConfigurationRsp_MGR)
  return false;
#undef DO_
}

void ModifyConfigurationRsp_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyConfigurationRsp_MGR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyConfigurationRsp_MGR)
}

::google::protobuf::uint8* ModifyConfigurationRsp_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyConfigurationRsp_MGR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyConfigurationRsp_MGR)
  return target;
}

size_t ModifyConfigurationRsp_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyConfigurationRsp_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyConfigurationRsp_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyConfigurationRsp_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyConfigurationRsp_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyConfigurationRsp_MGR)
    MergeFrom(*source);
  }
}

void ModifyConfigurationRsp_MGR::MergeFrom(const ModifyConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyConfigurationRsp_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyConfigurationRsp_MGR::CopyFrom(const ModifyConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyConfigurationRsp_MGR::IsInitialized() const {
  return true;
}

void ModifyConfigurationRsp_MGR::Swap(ModifyConfigurationRsp_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyConfigurationRsp_MGR::InternalSwap(ModifyConfigurationRsp_MGR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyConfigurationRsp_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[147];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyConfigurationRsp_MGR

// string strValue = 1;
void ModifyConfigurationRsp_MGR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyConfigurationRsp_MGR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyConfigurationRsp_MGR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
}
#if LANG_CXX11
void ModifyConfigurationRsp_MGR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
}
#endif
void ModifyConfigurationRsp_MGR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
}
void ModifyConfigurationRsp_MGR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
}
::std::string* ModifyConfigurationRsp_MGR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyConfigurationRsp_MGR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyConfigurationRsp_MGR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyConfigurationRsp_MGR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAllConfigurationReq_MGR::kUiBeginIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAllConfigurationReq_MGR::QueryAllConfigurationReq_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAllConfigurationReq_MGR)
}
QueryAllConfigurationReq_MGR::QueryAllConfigurationReq_MGR(const QueryAllConfigurationReq_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAllConfigurationReq_MGR)
}

void QueryAllConfigurationReq_MGR::SharedCtor() {
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryAllConfigurationReq_MGR::~QueryAllConfigurationReq_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAllConfigurationReq_MGR)
  SharedDtor();
}

void QueryAllConfigurationReq_MGR::SharedDtor() {
}

void QueryAllConfigurationReq_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllConfigurationReq_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[148].descriptor;
}

const QueryAllConfigurationReq_MGR& QueryAllConfigurationReq_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAllConfigurationReq_MGR* QueryAllConfigurationReq_MGR::New(::google::protobuf::Arena* arena) const {
  QueryAllConfigurationReq_MGR* n = new QueryAllConfigurationReq_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAllConfigurationReq_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  uibeginindex_ = 0u;
}

bool QueryAllConfigurationReq_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiBeginIndex = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAllConfigurationReq_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAllConfigurationReq_MGR)
  return false;
#undef DO_
}

void QueryAllConfigurationReq_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uibeginindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAllConfigurationReq_MGR)
}

::google::protobuf::uint8* QueryAllConfigurationReq_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uibeginindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAllConfigurationReq_MGR)
  return target;
}

size_t QueryAllConfigurationReq_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  size_t total_size = 0;

  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllConfigurationReq_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAllConfigurationReq_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAllConfigurationReq_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAllConfigurationReq_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAllConfigurationReq_MGR)
    MergeFrom(*source);
  }
}

void QueryAllConfigurationReq_MGR::MergeFrom(const QueryAllConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryAllConfigurationReq_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllConfigurationReq_MGR::CopyFrom(const QueryAllConfigurationReq_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAllConfigurationReq_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllConfigurationReq_MGR::IsInitialized() const {
  return true;
}

void QueryAllConfigurationReq_MGR::Swap(QueryAllConfigurationReq_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAllConfigurationReq_MGR::InternalSwap(QueryAllConfigurationReq_MGR* other) {
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAllConfigurationReq_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[148];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAllConfigurationReq_MGR

// uint32 uiBeginIndex = 1;
void QueryAllConfigurationReq_MGR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryAllConfigurationReq_MGR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllConfigurationReq_MGR.uiBeginIndex)
  return uibeginindex_;
}
void QueryAllConfigurationReq_MGR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryAllConfigurationReq_MGR.uiBeginIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAllConfigurationRsp_MGR::kConfigurationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAllConfigurationRsp_MGR::QueryAllConfigurationRsp_MGR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryAllConfigurationRsp_MGR)
}
QueryAllConfigurationRsp_MGR::QueryAllConfigurationRsp_MGR(const QueryAllConfigurationRsp_MGR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      configurationinfo_(from.configurationinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryAllConfigurationRsp_MGR)
}

void QueryAllConfigurationRsp_MGR::SharedCtor() {
  _cached_size_ = 0;
}

QueryAllConfigurationRsp_MGR::~QueryAllConfigurationRsp_MGR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryAllConfigurationRsp_MGR)
  SharedDtor();
}

void QueryAllConfigurationRsp_MGR::SharedDtor() {
}

void QueryAllConfigurationRsp_MGR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllConfigurationRsp_MGR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[149].descriptor;
}

const QueryAllConfigurationRsp_MGR& QueryAllConfigurationRsp_MGR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAllConfigurationRsp_MGR* QueryAllConfigurationRsp_MGR::New(::google::protobuf::Arena* arena) const {
  QueryAllConfigurationRsp_MGR* n = new QueryAllConfigurationRsp_MGR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAllConfigurationRsp_MGR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  configurationinfo_.Clear();
}

bool QueryAllConfigurationRsp_MGR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Configuration configurationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_configurationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryAllConfigurationRsp_MGR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryAllConfigurationRsp_MGR)
  return false;
#undef DO_
}

void QueryAllConfigurationRsp_MGR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  // repeated .Interactive.Message.Configuration configurationInfo = 1;
  for (unsigned int i = 0, n = this->configurationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->configurationinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryAllConfigurationRsp_MGR)
}

::google::protobuf::uint8* QueryAllConfigurationRsp_MGR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  // repeated .Interactive.Message.Configuration configurationInfo = 1;
  for (unsigned int i = 0, n = this->configurationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->configurationinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryAllConfigurationRsp_MGR)
  return target;
}

size_t QueryAllConfigurationRsp_MGR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Configuration configurationInfo = 1;
  {
    unsigned int count = this->configurationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->configurationinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllConfigurationRsp_MGR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAllConfigurationRsp_MGR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAllConfigurationRsp_MGR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryAllConfigurationRsp_MGR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryAllConfigurationRsp_MGR)
    MergeFrom(*source);
  }
}

void QueryAllConfigurationRsp_MGR::MergeFrom(const QueryAllConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  configurationinfo_.MergeFrom(from.configurationinfo_);
}

void QueryAllConfigurationRsp_MGR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllConfigurationRsp_MGR::CopyFrom(const QueryAllConfigurationRsp_MGR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryAllConfigurationRsp_MGR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllConfigurationRsp_MGR::IsInitialized() const {
  return true;
}

void QueryAllConfigurationRsp_MGR::Swap(QueryAllConfigurationRsp_MGR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAllConfigurationRsp_MGR::InternalSwap(QueryAllConfigurationRsp_MGR* other) {
  configurationinfo_.UnsafeArenaSwap(&other->configurationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAllConfigurationRsp_MGR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[149];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAllConfigurationRsp_MGR

// repeated .Interactive.Message.Configuration configurationInfo = 1;
int QueryAllConfigurationRsp_MGR::configurationinfo_size() const {
  return configurationinfo_.size();
}
void QueryAllConfigurationRsp_MGR::clear_configurationinfo() {
  configurationinfo_.Clear();
}
const ::Interactive::Message::Configuration& QueryAllConfigurationRsp_MGR::configurationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryAllConfigurationRsp_MGR.configurationInfo)
  return configurationinfo_.Get(index);
}
::Interactive::Message::Configuration* QueryAllConfigurationRsp_MGR::mutable_configurationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryAllConfigurationRsp_MGR.configurationInfo)
  return configurationinfo_.Mutable(index);
}
::Interactive::Message::Configuration* QueryAllConfigurationRsp_MGR::add_configurationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryAllConfigurationRsp_MGR.configurationInfo)
  return configurationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Configuration >*
QueryAllConfigurationRsp_MGR::mutable_configurationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryAllConfigurationRsp_MGR.configurationInfo)
  return &configurationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Configuration >&
QueryAllConfigurationRsp_MGR::configurationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryAllConfigurationRsp_MGR.configurationInfo)
  return configurationinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineDevInfoReq_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineDevInfoReq_INNER::GetOnlineDevInfoReq_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineDevInfoReq_INNER)
}
GetOnlineDevInfoReq_INNER::GetOnlineDevInfoReq_INNER(const GetOnlineDevInfoReq_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineDevInfoReq_INNER)
}

void GetOnlineDevInfoReq_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineDevInfoReq_INNER::~GetOnlineDevInfoReq_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineDevInfoReq_INNER)
  SharedDtor();
}

void GetOnlineDevInfoReq_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineDevInfoReq_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineDevInfoReq_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[150].descriptor;
}

const GetOnlineDevInfoReq_INNER& GetOnlineDevInfoReq_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineDevInfoReq_INNER* GetOnlineDevInfoReq_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineDevInfoReq_INNER* n = new GetOnlineDevInfoReq_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineDevInfoReq_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineDevInfoReq_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineDevInfoReq_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineDevInfoReq_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineDevInfoReq_INNER)
  return false;
#undef DO_
}

void GetOnlineDevInfoReq_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoReq_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineDevInfoReq_INNER)
}

::google::protobuf::uint8* GetOnlineDevInfoReq_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoReq_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineDevInfoReq_INNER)
  return target;
}

size_t GetOnlineDevInfoReq_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineDevInfoReq_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineDevInfoReq_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineDevInfoReq_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineDevInfoReq_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineDevInfoReq_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineDevInfoReq_INNER::MergeFrom(const GetOnlineDevInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineDevInfoReq_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineDevInfoReq_INNER::CopyFrom(const GetOnlineDevInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineDevInfoReq_INNER::IsInitialized() const {
  return true;
}

void GetOnlineDevInfoReq_INNER::Swap(GetOnlineDevInfoReq_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineDevInfoReq_INNER::InternalSwap(GetOnlineDevInfoReq_INNER* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineDevInfoReq_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[150];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineDevInfoReq_INNER

// string strValue = 1;
void GetOnlineDevInfoReq_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineDevInfoReq_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineDevInfoReq_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineDevInfoReq_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
#endif
void GetOnlineDevInfoReq_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
void GetOnlineDevInfoReq_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
::std::string* GetOnlineDevInfoReq_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineDevInfoReq_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineDevInfoReq_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineDevInfoRsp_INNER::kDevInfoFieldNumber;
const int GetOnlineDevInfoRsp_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineDevInfoRsp_INNER::GetOnlineDevInfoRsp_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineDevInfoRsp_INNER)
}
GetOnlineDevInfoRsp_INNER::GetOnlineDevInfoRsp_INNER(const GetOnlineDevInfoRsp_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devinfo_(from.devinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineDevInfoRsp_INNER)
}

void GetOnlineDevInfoRsp_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineDevInfoRsp_INNER::~GetOnlineDevInfoRsp_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  SharedDtor();
}

void GetOnlineDevInfoRsp_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineDevInfoRsp_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineDevInfoRsp_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[151].descriptor;
}

const GetOnlineDevInfoRsp_INNER& GetOnlineDevInfoRsp_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineDevInfoRsp_INNER* GetOnlineDevInfoRsp_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineDevInfoRsp_INNER* n = new GetOnlineDevInfoRsp_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineDevInfoRsp_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  devinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineDevInfoRsp_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Device devInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  return false;
#undef DO_
}

void GetOnlineDevInfoRsp_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineDevInfoRsp_INNER)
}

::google::protobuf::uint8* GetOnlineDevInfoRsp_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->devinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  return target;
}

size_t GetOnlineDevInfoRsp_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.Device devInfo = 1;
  {
    unsigned int count = this->devinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineDevInfoRsp_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineDevInfoRsp_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineDevInfoRsp_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineDevInfoRsp_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineDevInfoRsp_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineDevInfoRsp_INNER::MergeFrom(const GetOnlineDevInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devinfo_.MergeFrom(from.devinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineDevInfoRsp_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineDevInfoRsp_INNER::CopyFrom(const GetOnlineDevInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineDevInfoRsp_INNER::IsInitialized() const {
  return true;
}

void GetOnlineDevInfoRsp_INNER::Swap(GetOnlineDevInfoRsp_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineDevInfoRsp_INNER::InternalSwap(GetOnlineDevInfoRsp_INNER* other) {
  devinfo_.UnsafeArenaSwap(&other->devinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineDevInfoRsp_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[151];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineDevInfoRsp_INNER

// repeated .Interactive.Message.Device devInfo = 1;
int GetOnlineDevInfoRsp_INNER::devinfo_size() const {
  return devinfo_.size();
}
void GetOnlineDevInfoRsp_INNER::clear_devinfo() {
  devinfo_.Clear();
}
const ::Interactive::Message::Device& GetOnlineDevInfoRsp_INNER::devinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Get(index);
}
::Interactive::Message::Device* GetOnlineDevInfoRsp_INNER::mutable_devinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Mutable(index);
}
::Interactive::Message::Device* GetOnlineDevInfoRsp_INNER::add_devinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
GetOnlineDevInfoRsp_INNER::mutable_devinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return &devinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
GetOnlineDevInfoRsp_INNER::devinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_;
}

// string strValue = 2;
void GetOnlineDevInfoRsp_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineDevInfoRsp_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineDevInfoRsp_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineDevInfoRsp_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
#endif
void GetOnlineDevInfoRsp_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
void GetOnlineDevInfoRsp_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
::std::string* GetOnlineDevInfoRsp_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineDevInfoRsp_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineDevInfoRsp_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastOnlineDevInfo_INNER::kDevInfoFieldNumber;
const int BroadcastOnlineDevInfo_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastOnlineDevInfo_INNER::BroadcastOnlineDevInfo_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.BroadcastOnlineDevInfo_INNER)
}
BroadcastOnlineDevInfo_INNER::BroadcastOnlineDevInfo_INNER(const BroadcastOnlineDevInfo_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devinfo_(from.devinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.BroadcastOnlineDevInfo_INNER)
}

void BroadcastOnlineDevInfo_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BroadcastOnlineDevInfo_INNER::~BroadcastOnlineDevInfo_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  SharedDtor();
}

void BroadcastOnlineDevInfo_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastOnlineDevInfo_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadcastOnlineDevInfo_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[152].descriptor;
}

const BroadcastOnlineDevInfo_INNER& BroadcastOnlineDevInfo_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

BroadcastOnlineDevInfo_INNER* BroadcastOnlineDevInfo_INNER::New(::google::protobuf::Arena* arena) const {
  BroadcastOnlineDevInfo_INNER* n = new BroadcastOnlineDevInfo_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadcastOnlineDevInfo_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  devinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BroadcastOnlineDevInfo_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Device devInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  return false;
#undef DO_
}

void BroadcastOnlineDevInfo_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.BroadcastOnlineDevInfo_INNER)
}

::google::protobuf::uint8* BroadcastOnlineDevInfo_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->devinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  return target;
}

size_t BroadcastOnlineDevInfo_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.Device devInfo = 1;
  {
    unsigned int count = this->devinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadcastOnlineDevInfo_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastOnlineDevInfo_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastOnlineDevInfo_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.BroadcastOnlineDevInfo_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.BroadcastOnlineDevInfo_INNER)
    MergeFrom(*source);
  }
}

void BroadcastOnlineDevInfo_INNER::MergeFrom(const BroadcastOnlineDevInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devinfo_.MergeFrom(from.devinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void BroadcastOnlineDevInfo_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastOnlineDevInfo_INNER::CopyFrom(const BroadcastOnlineDevInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastOnlineDevInfo_INNER::IsInitialized() const {
  return true;
}

void BroadcastOnlineDevInfo_INNER::Swap(BroadcastOnlineDevInfo_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastOnlineDevInfo_INNER::InternalSwap(BroadcastOnlineDevInfo_INNER* other) {
  devinfo_.UnsafeArenaSwap(&other->devinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadcastOnlineDevInfo_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[152];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BroadcastOnlineDevInfo_INNER

// repeated .Interactive.Message.Device devInfo = 1;
int BroadcastOnlineDevInfo_INNER::devinfo_size() const {
  return devinfo_.size();
}
void BroadcastOnlineDevInfo_INNER::clear_devinfo() {
  devinfo_.Clear();
}
const ::Interactive::Message::Device& BroadcastOnlineDevInfo_INNER::devinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Get(index);
}
::Interactive::Message::Device* BroadcastOnlineDevInfo_INNER::mutable_devinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Mutable(index);
}
::Interactive::Message::Device* BroadcastOnlineDevInfo_INNER::add_devinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
BroadcastOnlineDevInfo_INNER::mutable_devinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return &devinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
BroadcastOnlineDevInfo_INNER::devinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_;
}

// string strValue = 2;
void BroadcastOnlineDevInfo_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BroadcastOnlineDevInfo_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  return strvalue_.GetNoArena();
}
void BroadcastOnlineDevInfo_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
#if LANG_CXX11
void BroadcastOnlineDevInfo_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
#endif
void BroadcastOnlineDevInfo_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
void BroadcastOnlineDevInfo_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
::std::string* BroadcastOnlineDevInfo_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BroadcastOnlineDevInfo_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BroadcastOnlineDevInfo_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineUserInfoReq_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineUserInfoReq_INNER::GetOnlineUserInfoReq_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineUserInfoReq_INNER)
}
GetOnlineUserInfoReq_INNER::GetOnlineUserInfoReq_INNER(const GetOnlineUserInfoReq_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineUserInfoReq_INNER)
}

void GetOnlineUserInfoReq_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineUserInfoReq_INNER::~GetOnlineUserInfoReq_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineUserInfoReq_INNER)
  SharedDtor();
}

void GetOnlineUserInfoReq_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineUserInfoReq_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineUserInfoReq_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[153].descriptor;
}

const GetOnlineUserInfoReq_INNER& GetOnlineUserInfoReq_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineUserInfoReq_INNER* GetOnlineUserInfoReq_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineUserInfoReq_INNER* n = new GetOnlineUserInfoReq_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineUserInfoReq_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineUserInfoReq_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineUserInfoReq_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineUserInfoReq_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineUserInfoReq_INNER)
  return false;
#undef DO_
}

void GetOnlineUserInfoReq_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoReq_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineUserInfoReq_INNER)
}

::google::protobuf::uint8* GetOnlineUserInfoReq_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoReq_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineUserInfoReq_INNER)
  return target;
}

size_t GetOnlineUserInfoReq_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineUserInfoReq_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineUserInfoReq_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineUserInfoReq_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineUserInfoReq_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineUserInfoReq_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineUserInfoReq_INNER::MergeFrom(const GetOnlineUserInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineUserInfoReq_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineUserInfoReq_INNER::CopyFrom(const GetOnlineUserInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineUserInfoReq_INNER::IsInitialized() const {
  return true;
}

void GetOnlineUserInfoReq_INNER::Swap(GetOnlineUserInfoReq_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineUserInfoReq_INNER::InternalSwap(GetOnlineUserInfoReq_INNER* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineUserInfoReq_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[153];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineUserInfoReq_INNER

// string strValue = 1;
void GetOnlineUserInfoReq_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineUserInfoReq_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineUserInfoReq_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineUserInfoReq_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
#endif
void GetOnlineUserInfoReq_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
void GetOnlineUserInfoReq_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
::std::string* GetOnlineUserInfoReq_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineUserInfoReq_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineUserInfoReq_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineUserInfoRsp_INNER::kUserInfoFieldNumber;
const int GetOnlineUserInfoRsp_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineUserInfoRsp_INNER::GetOnlineUserInfoRsp_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineUserInfoRsp_INNER)
}
GetOnlineUserInfoRsp_INNER::GetOnlineUserInfoRsp_INNER(const GetOnlineUserInfoRsp_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      userinfo_(from.userinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineUserInfoRsp_INNER)
}

void GetOnlineUserInfoRsp_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineUserInfoRsp_INNER::~GetOnlineUserInfoRsp_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  SharedDtor();
}

void GetOnlineUserInfoRsp_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineUserInfoRsp_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineUserInfoRsp_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[154].descriptor;
}

const GetOnlineUserInfoRsp_INNER& GetOnlineUserInfoRsp_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineUserInfoRsp_INNER* GetOnlineUserInfoRsp_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineUserInfoRsp_INNER* n = new GetOnlineUserInfoRsp_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineUserInfoRsp_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  userinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineUserInfoRsp_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  return false;
#undef DO_
}

void GetOnlineUserInfoRsp_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineUserInfoRsp_INNER)
}

::google::protobuf::uint8* GetOnlineUserInfoRsp_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  return target;
}

size_t GetOnlineUserInfoRsp_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.User userInfo = 1;
  {
    unsigned int count = this->userinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineUserInfoRsp_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineUserInfoRsp_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineUserInfoRsp_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineUserInfoRsp_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineUserInfoRsp_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineUserInfoRsp_INNER::MergeFrom(const GetOnlineUserInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userinfo_.MergeFrom(from.userinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineUserInfoRsp_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineUserInfoRsp_INNER::CopyFrom(const GetOnlineUserInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineUserInfoRsp_INNER::IsInitialized() const {
  return true;
}

void GetOnlineUserInfoRsp_INNER::Swap(GetOnlineUserInfoRsp_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineUserInfoRsp_INNER::InternalSwap(GetOnlineUserInfoRsp_INNER* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineUserInfoRsp_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[154];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineUserInfoRsp_INNER

// repeated .Interactive.Message.User userInfo = 1;
int GetOnlineUserInfoRsp_INNER::userinfo_size() const {
  return userinfo_.size();
}
void GetOnlineUserInfoRsp_INNER::clear_userinfo() {
  userinfo_.Clear();
}
const ::Interactive::Message::User& GetOnlineUserInfoRsp_INNER::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Get(index);
}
::Interactive::Message::User* GetOnlineUserInfoRsp_INNER::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Mutable(index);
}
::Interactive::Message::User* GetOnlineUserInfoRsp_INNER::add_userinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
GetOnlineUserInfoRsp_INNER::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
GetOnlineUserInfoRsp_INNER::userinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_;
}

// string strValue = 2;
void GetOnlineUserInfoRsp_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineUserInfoRsp_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineUserInfoRsp_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineUserInfoRsp_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
#endif
void GetOnlineUserInfoRsp_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
void GetOnlineUserInfoRsp_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
::std::string* GetOnlineUserInfoRsp_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineUserInfoRsp_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineUserInfoRsp_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastOnlineUserInfo_INNER::kUserInfoFieldNumber;
const int BroadcastOnlineUserInfo_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastOnlineUserInfo_INNER::BroadcastOnlineUserInfo_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.BroadcastOnlineUserInfo_INNER)
}
BroadcastOnlineUserInfo_INNER::BroadcastOnlineUserInfo_INNER(const BroadcastOnlineUserInfo_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      userinfo_(from.userinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.BroadcastOnlineUserInfo_INNER)
}

void BroadcastOnlineUserInfo_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BroadcastOnlineUserInfo_INNER::~BroadcastOnlineUserInfo_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  SharedDtor();
}

void BroadcastOnlineUserInfo_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastOnlineUserInfo_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadcastOnlineUserInfo_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[155].descriptor;
}

const BroadcastOnlineUserInfo_INNER& BroadcastOnlineUserInfo_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

BroadcastOnlineUserInfo_INNER* BroadcastOnlineUserInfo_INNER::New(::google::protobuf::Arena* arena) const {
  BroadcastOnlineUserInfo_INNER* n = new BroadcastOnlineUserInfo_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadcastOnlineUserInfo_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  userinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BroadcastOnlineUserInfo_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  return false;
#undef DO_
}

void BroadcastOnlineUserInfo_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.BroadcastOnlineUserInfo_INNER)
}

::google::protobuf::uint8* BroadcastOnlineUserInfo_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  return target;
}

size_t BroadcastOnlineUserInfo_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.User userInfo = 1;
  {
    unsigned int count = this->userinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadcastOnlineUserInfo_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastOnlineUserInfo_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastOnlineUserInfo_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.BroadcastOnlineUserInfo_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.BroadcastOnlineUserInfo_INNER)
    MergeFrom(*source);
  }
}

void BroadcastOnlineUserInfo_INNER::MergeFrom(const BroadcastOnlineUserInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userinfo_.MergeFrom(from.userinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void BroadcastOnlineUserInfo_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastOnlineUserInfo_INNER::CopyFrom(const BroadcastOnlineUserInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastOnlineUserInfo_INNER::IsInitialized() const {
  return true;
}

void BroadcastOnlineUserInfo_INNER::Swap(BroadcastOnlineUserInfo_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastOnlineUserInfo_INNER::InternalSwap(BroadcastOnlineUserInfo_INNER* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadcastOnlineUserInfo_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[155];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BroadcastOnlineUserInfo_INNER

// repeated .Interactive.Message.User userInfo = 1;
int BroadcastOnlineUserInfo_INNER::userinfo_size() const {
  return userinfo_.size();
}
void BroadcastOnlineUserInfo_INNER::clear_userinfo() {
  userinfo_.Clear();
}
const ::Interactive::Message::User& BroadcastOnlineUserInfo_INNER::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Get(index);
}
::Interactive::Message::User* BroadcastOnlineUserInfo_INNER::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Mutable(index);
}
::Interactive::Message::User* BroadcastOnlineUserInfo_INNER::add_userinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
BroadcastOnlineUserInfo_INNER::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
BroadcastOnlineUserInfo_INNER::userinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_;
}

// string strValue = 2;
void BroadcastOnlineUserInfo_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BroadcastOnlineUserInfo_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  return strvalue_.GetNoArena();
}
void BroadcastOnlineUserInfo_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
#if LANG_CXX11
void BroadcastOnlineUserInfo_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
#endif
void BroadcastOnlineUserInfo_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
void BroadcastOnlineUserInfo_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
::std::string* BroadcastOnlineUserInfo_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BroadcastOnlineUserInfo_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BroadcastOnlineUserInfo_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeviceAccessRecordReq_INNER::kUiBeginIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeviceAccessRecordReq_INNER::GetDeviceAccessRecordReq_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetDeviceAccessRecordReq_INNER)
}
GetDeviceAccessRecordReq_INNER::GetDeviceAccessRecordReq_INNER(const GetDeviceAccessRecordReq_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetDeviceAccessRecordReq_INNER)
}

void GetDeviceAccessRecordReq_INNER::SharedCtor() {
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

GetDeviceAccessRecordReq_INNER::~GetDeviceAccessRecordReq_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  SharedDtor();
}

void GetDeviceAccessRecordReq_INNER::SharedDtor() {
}

void GetDeviceAccessRecordReq_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDeviceAccessRecordReq_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[156].descriptor;
}

const GetDeviceAccessRecordReq_INNER& GetDeviceAccessRecordReq_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetDeviceAccessRecordReq_INNER* GetDeviceAccessRecordReq_INNER::New(::google::protobuf::Arena* arena) const {
  GetDeviceAccessRecordReq_INNER* n = new GetDeviceAccessRecordReq_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDeviceAccessRecordReq_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  uibeginindex_ = 0u;
}

bool GetDeviceAccessRecordReq_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiBeginIndex = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  return false;
#undef DO_
}

void GetDeviceAccessRecordReq_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uibeginindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetDeviceAccessRecordReq_INNER)
}

::google::protobuf::uint8* GetDeviceAccessRecordReq_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uibeginindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  return target;
}

size_t GetDeviceAccessRecordReq_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  size_t total_size = 0;

  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDeviceAccessRecordReq_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceAccessRecordReq_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeviceAccessRecordReq_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetDeviceAccessRecordReq_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetDeviceAccessRecordReq_INNER)
    MergeFrom(*source);
  }
}

void GetDeviceAccessRecordReq_INNER::MergeFrom(const GetDeviceAccessRecordReq_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void GetDeviceAccessRecordReq_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceAccessRecordReq_INNER::CopyFrom(const GetDeviceAccessRecordReq_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetDeviceAccessRecordReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceAccessRecordReq_INNER::IsInitialized() const {
  return true;
}

void GetDeviceAccessRecordReq_INNER::Swap(GetDeviceAccessRecordReq_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeviceAccessRecordReq_INNER::InternalSwap(GetDeviceAccessRecordReq_INNER* other) {
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDeviceAccessRecordReq_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[156];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDeviceAccessRecordReq_INNER

// uint32 uiBeginIndex = 1;
void GetDeviceAccessRecordReq_INNER::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 GetDeviceAccessRecordReq_INNER::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetDeviceAccessRecordReq_INNER.uiBeginIndex)
  return uibeginindex_;
}
void GetDeviceAccessRecordReq_INNER::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.GetDeviceAccessRecordReq_INNER.uiBeginIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeviceAccessRecordRsp_INNER::kDeviceAccessRecordFieldNumber;
const int GetDeviceAccessRecordRsp_INNER::kUiRecordTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeviceAccessRecordRsp_INNER::GetDeviceAccessRecordRsp_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
}
GetDeviceAccessRecordRsp_INNER::GetDeviceAccessRecordRsp_INNER(const GetDeviceAccessRecordRsp_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      deviceaccessrecord_(from.deviceaccessrecord_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uirecordtotal_ = from.uirecordtotal_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
}

void GetDeviceAccessRecordRsp_INNER::SharedCtor() {
  uirecordtotal_ = 0u;
  _cached_size_ = 0;
}

GetDeviceAccessRecordRsp_INNER::~GetDeviceAccessRecordRsp_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  SharedDtor();
}

void GetDeviceAccessRecordRsp_INNER::SharedDtor() {
}

void GetDeviceAccessRecordRsp_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDeviceAccessRecordRsp_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[157].descriptor;
}

const GetDeviceAccessRecordRsp_INNER& GetDeviceAccessRecordRsp_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetDeviceAccessRecordRsp_INNER* GetDeviceAccessRecordRsp_INNER::New(::google::protobuf::Arena* arena) const {
  GetDeviceAccessRecordRsp_INNER* n = new GetDeviceAccessRecordRsp_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDeviceAccessRecordRsp_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  deviceaccessrecord_.Clear();
  uirecordtotal_ = 0u;
}

bool GetDeviceAccessRecordRsp_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.DeviceAccessRecord deviceAccessRecord = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deviceaccessrecord()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // uint32 uiRecordTotal = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uirecordtotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  return false;
#undef DO_
}

void GetDeviceAccessRecordRsp_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  // repeated .Interactive.Message.DeviceAccessRecord deviceAccessRecord = 1;
  for (unsigned int i = 0, n = this->deviceaccessrecord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->deviceaccessrecord(i), output);
  }

  // uint32 uiRecordTotal = 2;
  if (this->uirecordtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uirecordtotal(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
}

::google::protobuf::uint8* GetDeviceAccessRecordRsp_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  // repeated .Interactive.Message.DeviceAccessRecord deviceAccessRecord = 1;
  for (unsigned int i = 0, n = this->deviceaccessrecord_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->deviceaccessrecord(i), false, target);
  }

  // uint32 uiRecordTotal = 2;
  if (this->uirecordtotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uirecordtotal(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  return target;
}

size_t GetDeviceAccessRecordRsp_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.DeviceAccessRecord deviceAccessRecord = 1;
  {
    unsigned int count = this->deviceaccessrecord_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deviceaccessrecord(i));
    }
  }

  // uint32 uiRecordTotal = 2;
  if (this->uirecordtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uirecordtotal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDeviceAccessRecordRsp_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceAccessRecordRsp_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeviceAccessRecordRsp_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
    MergeFrom(*source);
  }
}

void GetDeviceAccessRecordRsp_INNER::MergeFrom(const GetDeviceAccessRecordRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceaccessrecord_.MergeFrom(from.deviceaccessrecord_);
  if (from.uirecordtotal() != 0) {
    set_uirecordtotal(from.uirecordtotal());
  }
}

void GetDeviceAccessRecordRsp_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceAccessRecordRsp_INNER::CopyFrom(const GetDeviceAccessRecordRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetDeviceAccessRecordRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceAccessRecordRsp_INNER::IsInitialized() const {
  return true;
}

void GetDeviceAccessRecordRsp_INNER::Swap(GetDeviceAccessRecordRsp_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeviceAccessRecordRsp_INNER::InternalSwap(GetDeviceAccessRecordRsp_INNER* other) {
  deviceaccessrecord_.UnsafeArenaSwap(&other->deviceaccessrecord_);
  std::swap(uirecordtotal_, other->uirecordtotal_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDeviceAccessRecordRsp_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[157];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDeviceAccessRecordRsp_INNER

// repeated .Interactive.Message.DeviceAccessRecord deviceAccessRecord = 1;
int GetDeviceAccessRecordRsp_INNER::deviceaccessrecord_size() const {
  return deviceaccessrecord_.size();
}
void GetDeviceAccessRecordRsp_INNER::clear_deviceaccessrecord() {
  deviceaccessrecord_.Clear();
}
const ::Interactive::Message::DeviceAccessRecord& GetDeviceAccessRecordRsp_INNER::deviceaccessrecord(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetDeviceAccessRecordRsp_INNER.deviceAccessRecord)
  return deviceaccessrecord_.Get(index);
}
::Interactive::Message::DeviceAccessRecord* GetDeviceAccessRecordRsp_INNER::mutable_deviceaccessrecord(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetDeviceAccessRecordRsp_INNER.deviceAccessRecord)
  return deviceaccessrecord_.Mutable(index);
}
::Interactive::Message::DeviceAccessRecord* GetDeviceAccessRecordRsp_INNER::add_deviceaccessrecord() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetDeviceAccessRecordRsp_INNER.deviceAccessRecord)
  return deviceaccessrecord_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceAccessRecord >*
GetDeviceAccessRecordRsp_INNER::mutable_deviceaccessrecord() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetDeviceAccessRecordRsp_INNER.deviceAccessRecord)
  return &deviceaccessrecord_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::DeviceAccessRecord >&
GetDeviceAccessRecordRsp_INNER::deviceaccessrecord() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetDeviceAccessRecordRsp_INNER.deviceAccessRecord)
  return deviceaccessrecord_;
}

// uint32 uiRecordTotal = 2;
void GetDeviceAccessRecordRsp_INNER::clear_uirecordtotal() {
  uirecordtotal_ = 0u;
}
::google::protobuf::uint32 GetDeviceAccessRecordRsp_INNER::uirecordtotal() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetDeviceAccessRecordRsp_INNER.uiRecordTotal)
  return uirecordtotal_;
}
void GetDeviceAccessRecordRsp_INNER::set_uirecordtotal(::google::protobuf::uint32 value) {
  
  uirecordtotal_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.GetDeviceAccessRecordRsp_INNER.uiRecordTotal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserAccessRecordReq_INNER::kUiBeginIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserAccessRecordReq_INNER::GetUserAccessRecordReq_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetUserAccessRecordReq_INNER)
}
GetUserAccessRecordReq_INNER::GetUserAccessRecordReq_INNER(const GetUserAccessRecordReq_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetUserAccessRecordReq_INNER)
}

void GetUserAccessRecordReq_INNER::SharedCtor() {
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

GetUserAccessRecordReq_INNER::~GetUserAccessRecordReq_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetUserAccessRecordReq_INNER)
  SharedDtor();
}

void GetUserAccessRecordReq_INNER::SharedDtor() {
}

void GetUserAccessRecordReq_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserAccessRecordReq_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[158].descriptor;
}

const GetUserAccessRecordReq_INNER& GetUserAccessRecordReq_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserAccessRecordReq_INNER* GetUserAccessRecordReq_INNER::New(::google::protobuf::Arena* arena) const {
  GetUserAccessRecordReq_INNER* n = new GetUserAccessRecordReq_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserAccessRecordReq_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  uibeginindex_ = 0u;
}

bool GetUserAccessRecordReq_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiBeginIndex = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetUserAccessRecordReq_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetUserAccessRecordReq_INNER)
  return false;
#undef DO_
}

void GetUserAccessRecordReq_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uibeginindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetUserAccessRecordReq_INNER)
}

::google::protobuf::uint8* GetUserAccessRecordReq_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uibeginindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetUserAccessRecordReq_INNER)
  return target;
}

size_t GetUserAccessRecordReq_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  size_t total_size = 0;

  // uint32 uiBeginIndex = 1;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserAccessRecordReq_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserAccessRecordReq_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserAccessRecordReq_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetUserAccessRecordReq_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetUserAccessRecordReq_INNER)
    MergeFrom(*source);
  }
}

void GetUserAccessRecordReq_INNER::MergeFrom(const GetUserAccessRecordReq_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void GetUserAccessRecordReq_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserAccessRecordReq_INNER::CopyFrom(const GetUserAccessRecordReq_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetUserAccessRecordReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserAccessRecordReq_INNER::IsInitialized() const {
  return true;
}

void GetUserAccessRecordReq_INNER::Swap(GetUserAccessRecordReq_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserAccessRecordReq_INNER::InternalSwap(GetUserAccessRecordReq_INNER* other) {
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserAccessRecordReq_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[158];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserAccessRecordReq_INNER

// uint32 uiBeginIndex = 1;
void GetUserAccessRecordReq_INNER::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 GetUserAccessRecordReq_INNER::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetUserAccessRecordReq_INNER.uiBeginIndex)
  return uibeginindex_;
}
void GetUserAccessRecordReq_INNER::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.GetUserAccessRecordReq_INNER.uiBeginIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserAccessRecordRsp_INNER::kUserAccessRecordFieldNumber;
const int GetUserAccessRecordRsp_INNER::kUiRecordTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserAccessRecordRsp_INNER::GetUserAccessRecordRsp_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetUserAccessRecordRsp_INNER)
}
GetUserAccessRecordRsp_INNER::GetUserAccessRecordRsp_INNER(const GetUserAccessRecordRsp_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      useraccessrecord_(from.useraccessrecord_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uirecordtotal_ = from.uirecordtotal_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetUserAccessRecordRsp_INNER)
}

void GetUserAccessRecordRsp_INNER::SharedCtor() {
  uirecordtotal_ = 0u;
  _cached_size_ = 0;
}

GetUserAccessRecordRsp_INNER::~GetUserAccessRecordRsp_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetUserAccessRecordRsp_INNER)
  SharedDtor();
}

void GetUserAccessRecordRsp_INNER::SharedDtor() {
}

void GetUserAccessRecordRsp_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserAccessRecordRsp_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[159].descriptor;
}

const GetUserAccessRecordRsp_INNER& GetUserAccessRecordRsp_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserAccessRecordRsp_INNER* GetUserAccessRecordRsp_INNER::New(::google::protobuf::Arena* arena) const {
  GetUserAccessRecordRsp_INNER* n = new GetUserAccessRecordRsp_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserAccessRecordRsp_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  useraccessrecord_.Clear();
  uirecordtotal_ = 0u;
}

bool GetUserAccessRecordRsp_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.UserAccessRecord userAccessRecord = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_useraccessrecord()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // uint32 uiRecordTotal = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uirecordtotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetUserAccessRecordRsp_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetUserAccessRecordRsp_INNER)
  return false;
#undef DO_
}

void GetUserAccessRecordRsp_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  // repeated .Interactive.Message.UserAccessRecord userAccessRecord = 1;
  for (unsigned int i = 0, n = this->useraccessrecord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->useraccessrecord(i), output);
  }

  // uint32 uiRecordTotal = 2;
  if (this->uirecordtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uirecordtotal(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetUserAccessRecordRsp_INNER)
}

::google::protobuf::uint8* GetUserAccessRecordRsp_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  // repeated .Interactive.Message.UserAccessRecord userAccessRecord = 1;
  for (unsigned int i = 0, n = this->useraccessrecord_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->useraccessrecord(i), false, target);
  }

  // uint32 uiRecordTotal = 2;
  if (this->uirecordtotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uirecordtotal(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetUserAccessRecordRsp_INNER)
  return target;
}

size_t GetUserAccessRecordRsp_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.UserAccessRecord userAccessRecord = 1;
  {
    unsigned int count = this->useraccessrecord_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->useraccessrecord(i));
    }
  }

  // uint32 uiRecordTotal = 2;
  if (this->uirecordtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uirecordtotal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserAccessRecordRsp_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserAccessRecordRsp_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserAccessRecordRsp_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetUserAccessRecordRsp_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetUserAccessRecordRsp_INNER)
    MergeFrom(*source);
  }
}

void GetUserAccessRecordRsp_INNER::MergeFrom(const GetUserAccessRecordRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  useraccessrecord_.MergeFrom(from.useraccessrecord_);
  if (from.uirecordtotal() != 0) {
    set_uirecordtotal(from.uirecordtotal());
  }
}

void GetUserAccessRecordRsp_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserAccessRecordRsp_INNER::CopyFrom(const GetUserAccessRecordRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetUserAccessRecordRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserAccessRecordRsp_INNER::IsInitialized() const {
  return true;
}

void GetUserAccessRecordRsp_INNER::Swap(GetUserAccessRecordRsp_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserAccessRecordRsp_INNER::InternalSwap(GetUserAccessRecordRsp_INNER* other) {
  useraccessrecord_.UnsafeArenaSwap(&other->useraccessrecord_);
  std::swap(uirecordtotal_, other->uirecordtotal_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserAccessRecordRsp_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[159];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserAccessRecordRsp_INNER

// repeated .Interactive.Message.UserAccessRecord userAccessRecord = 1;
int GetUserAccessRecordRsp_INNER::useraccessrecord_size() const {
  return useraccessrecord_.size();
}
void GetUserAccessRecordRsp_INNER::clear_useraccessrecord() {
  useraccessrecord_.Clear();
}
const ::Interactive::Message::UserAccessRecord& GetUserAccessRecordRsp_INNER::useraccessrecord(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetUserAccessRecordRsp_INNER.userAccessRecord)
  return useraccessrecord_.Get(index);
}
::Interactive::Message::UserAccessRecord* GetUserAccessRecordRsp_INNER::mutable_useraccessrecord(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetUserAccessRecordRsp_INNER.userAccessRecord)
  return useraccessrecord_.Mutable(index);
}
::Interactive::Message::UserAccessRecord* GetUserAccessRecordRsp_INNER::add_useraccessrecord() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetUserAccessRecordRsp_INNER.userAccessRecord)
  return useraccessrecord_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::UserAccessRecord >*
GetUserAccessRecordRsp_INNER::mutable_useraccessrecord() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetUserAccessRecordRsp_INNER.userAccessRecord)
  return &useraccessrecord_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::UserAccessRecord >&
GetUserAccessRecordRsp_INNER::useraccessrecord() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetUserAccessRecordRsp_INNER.userAccessRecord)
  return useraccessrecord_;
}

// uint32 uiRecordTotal = 2;
void GetUserAccessRecordRsp_INNER::clear_uirecordtotal() {
  uirecordtotal_ = 0u;
}
::google::protobuf::uint32 GetUserAccessRecordRsp_INNER::uirecordtotal() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetUserAccessRecordRsp_INNER.uiRecordTotal)
  return uirecordtotal_;
}
void GetUserAccessRecordRsp_INNER::set_uirecordtotal(::google::protobuf::uint32 value) {
  
  uirecordtotal_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.GetUserAccessRecordRsp_INNER.uiRecordTotal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req::kGetAccessAddressReqDEVValueFieldNumber;
const int Req::kLoginReqDEVValueFieldNumber;
const int Req::kLogoutReqDEVValueFieldNumber;
const int Req::kShakehandReqDEVValueFieldNumber;
const int Req::kConfigInfoReqDEVValueFieldNumber;
const int Req::kStorageAddressReqDEVValueFieldNumber;
const int Req::kP2PInfoReqDEVValueFieldNumber;
const int Req::kAddFileReqDEVValueFieldNumber;
const int Req::kQueryTimeZoneReqDEVValueFieldNumber;
const int Req::kQueryAccessDomainNameReqDEVValueFieldNumber;
const int Req::kQueryUpgradeSiteReqDEVValueFieldNumber;
const int Req::kQueryFirmwareUpgradeReqDEVValueFieldNumber;
const int Req::kModifyDevicePropertyReqDEVValueFieldNumber;
const int Req::kQueryDeviceParameterReqDEVValueFieldNumber;
const int Req::kQueryPlatformPushStatusReqDEVValueFieldNumber;
const int Req::kDeviceEventReportReqDEVValueFieldNumber;
const int Req::kMsgPreHandlerReqUSRValueFieldNumber;
const int Req::kGetAccessAddressReqUSRValueFieldNumber;
const int Req::kRegisterUserReqUSRValueFieldNumber;
const int Req::kUnRegisterUserReqUSRValueFieldNumber;
const int Req::kQueryUsrInfoReqUSRValueFieldNumber;
const int Req::kModifyUserInfoReqUSRValueFieldNumber;
const int Req::kRetrievePwdReqUSRValueFieldNumber;
const int Req::kLoginReqUSRValueFieldNumber;
const int Req::kLogoutReqUSRValueFieldNumber;
const int Req::kShakehandReqUSRValueFieldNumber;
const int Req::kConfigInfoReqUSRValueFieldNumber;
const int Req::kAddDevReqUSRValueFieldNumber;
const int Req::kDelDevReqUSRValueFieldNumber;
const int Req::kModifyDevReqUSRValueFieldNumber;
const int Req::kQueryDevInfoReqUSRValueFieldNumber;
const int Req::kQueryDevReqUSRValueFieldNumber;
const int Req::kQueryUserReqUSRValueFieldNumber;
const int Req::kSharingDevReqUSRValueFieldNumber;
const int Req::kCancelSharedDevReqUSRValueFieldNumber;
const int Req::kAddFriendsReqUSRValueFieldNumber;
const int Req::kDelFriendsReqUSRValueFieldNumber;
const int Req::kQueryFriendsReqUSRValueFieldNumber;
const int Req::kStorageAddressReqUSRValueFieldNumber;
const int Req::kP2PInfoReqUSRValueFieldNumber;
const int Req::kDeleteFileReqUSRValueFieldNumber;
const int Req::kDownloadFileReqUSRValueFieldNumber;
const int Req::kQueryFileReqUSRValueFieldNumber;
const int Req::kQueryAccessDomainNameReqUSRValueFieldNumber;
const int Req::kQueryAppUpgradeReqUSRValueFieldNumber;
const int Req::kQueryIfP2PIDValidReqUSRValueFieldNumber;
const int Req::kQueryAllDeviceEventReqUSRValueFieldNumber;
const int Req::kDeleteDeviceEventReqUSRValueFieldNumber;
const int Req::kModifyDeviceEventReqUSRValueFieldNumber;
const int Req::kAddStorageDetailReqUSRValueFieldNumber;
const int Req::kDeleteStorageDetailReqUSRValueFieldNumber;
const int Req::kModifyStorageDetailReqUSRValueFieldNumber;
const int Req::kQueryStorageDetailReqUSRValueFieldNumber;
const int Req::kQueryRegionStorageInfoReqUSRValueFieldNumber;
const int Req::kQueryDeviceInfoMultiReqUSRValueFieldNumber;
const int Req::kRegisterCmsCallReqUSRValueFieldNumber;
const int Req::kUnregisterCmsCallReqUSRValueFieldNumber;
const int Req::kQuerySharingDeviceLimitReqUSRValueFieldNumber;
const int Req::kQueryDeviceCapacityReqUSRValueFieldNumber;
const int Req::kQueryALLDeviceCapacityReqUSRValueFieldNumber;
const int Req::kQueryDeviceP2PIDReqUSRValueFieldNumber;
const int Req::kUploadUserCfgReqUSRValueFieldNumber;
const int Req::kQueryUserCfgReqUSRValueFieldNumber;
const int Req::kGetOnlineDevInfoReqINNERValueFieldNumber;
const int Req::kBroadcastOnlineDevInfoINNERValueFieldNumber;
const int Req::kGetOnlineUserInfoReqINNERValueFieldNumber;
const int Req::kBroadcastOnlineUserInfoINNERValueFieldNumber;
const int Req::kGetDeviceAccessRecordReqINNERValueFieldNumber;
const int Req::kGetUserAccessRecordReqINNERValueFieldNumber;
const int Req::kQueryUploadURLReqMGRValueFieldNumber;
const int Req::kAddConfigurationReqMGRValueFieldNumber;
const int Req::kDeleteConfigurationReqMGRValueFieldNumber;
const int Req::kModifyConfigurationReqMGRValueFieldNumber;
const int Req::kQueryAllConfigurationReqMGRValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req::Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Req)
}
Req::Req(const Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_getaccessaddressreq_dev_value()) {
    getaccessaddressreq_dev_value_ = new ::Interactive::Message::GetAccessAddressReq_DEV(*from.getaccessaddressreq_dev_value_);
  } else {
    getaccessaddressreq_dev_value_ = NULL;
  }
  if (from.has_loginreq_dev_value()) {
    loginreq_dev_value_ = new ::Interactive::Message::LoginReq_DEV(*from.loginreq_dev_value_);
  } else {
    loginreq_dev_value_ = NULL;
  }
  if (from.has_logoutreq_dev_value()) {
    logoutreq_dev_value_ = new ::Interactive::Message::LogoutReq_DEV(*from.logoutreq_dev_value_);
  } else {
    logoutreq_dev_value_ = NULL;
  }
  if (from.has_shakehandreq_dev_value()) {
    shakehandreq_dev_value_ = new ::Interactive::Message::ShakehandReq_DEV(*from.shakehandreq_dev_value_);
  } else {
    shakehandreq_dev_value_ = NULL;
  }
  if (from.has_configinforeq_dev_value()) {
    configinforeq_dev_value_ = new ::Interactive::Message::ConfigInfoReq_DEV(*from.configinforeq_dev_value_);
  } else {
    configinforeq_dev_value_ = NULL;
  }
  if (from.has_storageaddressreq_dev_value()) {
    storageaddressreq_dev_value_ = new ::Interactive::Message::StorageAddressReq_DEV(*from.storageaddressreq_dev_value_);
  } else {
    storageaddressreq_dev_value_ = NULL;
  }
  if (from.has_p2pinforeq_dev_value()) {
    p2pinforeq_dev_value_ = new ::Interactive::Message::P2pInfoReq_DEV(*from.p2pinforeq_dev_value_);
  } else {
    p2pinforeq_dev_value_ = NULL;
  }
  if (from.has_addfilereq_dev_value()) {
    addfilereq_dev_value_ = new ::Interactive::Message::AddFileReq_DEV(*from.addfilereq_dev_value_);
  } else {
    addfilereq_dev_value_ = NULL;
  }
  if (from.has_querytimezonereq_dev_value()) {
    querytimezonereq_dev_value_ = new ::Interactive::Message::QueryTimeZoneReq_DEV(*from.querytimezonereq_dev_value_);
  } else {
    querytimezonereq_dev_value_ = NULL;
  }
  if (from.has_queryaccessdomainnamereq_dev_value()) {
    queryaccessdomainnamereq_dev_value_ = new ::Interactive::Message::QueryAccessDomainNameReq_DEV(*from.queryaccessdomainnamereq_dev_value_);
  } else {
    queryaccessdomainnamereq_dev_value_ = NULL;
  }
  if (from.has_queryupgradesitereq_dev_value()) {
    queryupgradesitereq_dev_value_ = new ::Interactive::Message::QueryUpgradeSiteReq_DEV(*from.queryupgradesitereq_dev_value_);
  } else {
    queryupgradesitereq_dev_value_ = NULL;
  }
  if (from.has_queryfirmwareupgradereq_dev_value()) {
    queryfirmwareupgradereq_dev_value_ = new ::Interactive::Message::QueryFirmwareUpgradeReq_DEV(*from.queryfirmwareupgradereq_dev_value_);
  } else {
    queryfirmwareupgradereq_dev_value_ = NULL;
  }
  if (from.has_modifydevicepropertyreq_dev_value()) {
    modifydevicepropertyreq_dev_value_ = new ::Interactive::Message::ModifyDevicePropertyReq_DEV(*from.modifydevicepropertyreq_dev_value_);
  } else {
    modifydevicepropertyreq_dev_value_ = NULL;
  }
  if (from.has_querydeviceparameterreq_dev_value()) {
    querydeviceparameterreq_dev_value_ = new ::Interactive::Message::QueryDeviceParameterReq_DEV(*from.querydeviceparameterreq_dev_value_);
  } else {
    querydeviceparameterreq_dev_value_ = NULL;
  }
  if (from.has_queryplatformpushstatusreq_dev_value()) {
    queryplatformpushstatusreq_dev_value_ = new ::Interactive::Message::QueryPlatformPushStatusReq_DEV(*from.queryplatformpushstatusreq_dev_value_);
  } else {
    queryplatformpushstatusreq_dev_value_ = NULL;
  }
  if (from.has_deviceeventreportreq_dev_value()) {
    deviceeventreportreq_dev_value_ = new ::Interactive::Message::DeviceEventReportReq_DEV(*from.deviceeventreportreq_dev_value_);
  } else {
    deviceeventreportreq_dev_value_ = NULL;
  }
  if (from.has_msgprehandlerreq_usr_value()) {
    msgprehandlerreq_usr_value_ = new ::Interactive::Message::MsgPreHandlerReq_USR(*from.msgprehandlerreq_usr_value_);
  } else {
    msgprehandlerreq_usr_value_ = NULL;
  }
  if (from.has_getaccessaddressreq_usr_value()) {
    getaccessaddressreq_usr_value_ = new ::Interactive::Message::GetAccessAddressReq_USR(*from.getaccessaddressreq_usr_value_);
  } else {
    getaccessaddressreq_usr_value_ = NULL;
  }
  if (from.has_registeruserreq_usr_value()) {
    registeruserreq_usr_value_ = new ::Interactive::Message::RegisterUserReq_USR(*from.registeruserreq_usr_value_);
  } else {
    registeruserreq_usr_value_ = NULL;
  }
  if (from.has_unregisteruserreq_usr_value()) {
    unregisteruserreq_usr_value_ = new ::Interactive::Message::UnRegisterUserReq_USR(*from.unregisteruserreq_usr_value_);
  } else {
    unregisteruserreq_usr_value_ = NULL;
  }
  if (from.has_queryusrinforeq_usr_value()) {
    queryusrinforeq_usr_value_ = new ::Interactive::Message::QueryUsrInfoReq_USR(*from.queryusrinforeq_usr_value_);
  } else {
    queryusrinforeq_usr_value_ = NULL;
  }
  if (from.has_modifyuserinforeq_usr_value()) {
    modifyuserinforeq_usr_value_ = new ::Interactive::Message::ModifyUserInfoReq_USR(*from.modifyuserinforeq_usr_value_);
  } else {
    modifyuserinforeq_usr_value_ = NULL;
  }
  if (from.has_retrievepwdreq_usr_value()) {
    retrievepwdreq_usr_value_ = new ::Interactive::Message::RetrievePwdReq_USR(*from.retrievepwdreq_usr_value_);
  } else {
    retrievepwdreq_usr_value_ = NULL;
  }
  if (from.has_loginreq_usr_value()) {
    loginreq_usr_value_ = new ::Interactive::Message::LoginReq_USR(*from.loginreq_usr_value_);
  } else {
    loginreq_usr_value_ = NULL;
  }
  if (from.has_logoutreq_usr_value()) {
    logoutreq_usr_value_ = new ::Interactive::Message::LogoutReq_USR(*from.logoutreq_usr_value_);
  } else {
    logoutreq_usr_value_ = NULL;
  }
  if (from.has_shakehandreq_usr_value()) {
    shakehandreq_usr_value_ = new ::Interactive::Message::ShakehandReq_USR(*from.shakehandreq_usr_value_);
  } else {
    shakehandreq_usr_value_ = NULL;
  }
  if (from.has_configinforeq_usr_value()) {
    configinforeq_usr_value_ = new ::Interactive::Message::ConfigInfoReq_USR(*from.configinforeq_usr_value_);
  } else {
    configinforeq_usr_value_ = NULL;
  }
  if (from.has_adddevreq_usr_value()) {
    adddevreq_usr_value_ = new ::Interactive::Message::AddDevReq_USR(*from.adddevreq_usr_value_);
  } else {
    adddevreq_usr_value_ = NULL;
  }
  if (from.has_deldevreq_usr_value()) {
    deldevreq_usr_value_ = new ::Interactive::Message::DelDevReq_USR(*from.deldevreq_usr_value_);
  } else {
    deldevreq_usr_value_ = NULL;
  }
  if (from.has_modifydevreq_usr_value()) {
    modifydevreq_usr_value_ = new ::Interactive::Message::ModifyDevReq_USR(*from.modifydevreq_usr_value_);
  } else {
    modifydevreq_usr_value_ = NULL;
  }
  if (from.has_querydevinforeq_usr_value()) {
    querydevinforeq_usr_value_ = new ::Interactive::Message::QueryDevInfoReq_USR(*from.querydevinforeq_usr_value_);
  } else {
    querydevinforeq_usr_value_ = NULL;
  }
  if (from.has_querydevreq_usr_value()) {
    querydevreq_usr_value_ = new ::Interactive::Message::QueryDevReq_USR(*from.querydevreq_usr_value_);
  } else {
    querydevreq_usr_value_ = NULL;
  }
  if (from.has_queryuserreq_usr_value()) {
    queryuserreq_usr_value_ = new ::Interactive::Message::QueryUserReq_USR(*from.queryuserreq_usr_value_);
  } else {
    queryuserreq_usr_value_ = NULL;
  }
  if (from.has_sharingdevreq_usr_value()) {
    sharingdevreq_usr_value_ = new ::Interactive::Message::SharingDevReq_USR(*from.sharingdevreq_usr_value_);
  } else {
    sharingdevreq_usr_value_ = NULL;
  }
  if (from.has_cancelshareddevreq_usr_value()) {
    cancelshareddevreq_usr_value_ = new ::Interactive::Message::CancelSharedDevReq_USR(*from.cancelshareddevreq_usr_value_);
  } else {
    cancelshareddevreq_usr_value_ = NULL;
  }
  if (from.has_addfriendsreq_usr_value()) {
    addfriendsreq_usr_value_ = new ::Interactive::Message::AddFriendsReq_USR(*from.addfriendsreq_usr_value_);
  } else {
    addfriendsreq_usr_value_ = NULL;
  }
  if (from.has_delfriendsreq_usr_value()) {
    delfriendsreq_usr_value_ = new ::Interactive::Message::DelFriendsReq_USR(*from.delfriendsreq_usr_value_);
  } else {
    delfriendsreq_usr_value_ = NULL;
  }
  if (from.has_queryfriendsreq_usr_value()) {
    queryfriendsreq_usr_value_ = new ::Interactive::Message::QueryFriendsReq_USR(*from.queryfriendsreq_usr_value_);
  } else {
    queryfriendsreq_usr_value_ = NULL;
  }
  if (from.has_storageaddressreq_usr_value()) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressReq_USR(*from.storageaddressreq_usr_value_);
  } else {
    storageaddressreq_usr_value_ = NULL;
  }
  if (from.has_p2pinforeq_usr_value()) {
    p2pinforeq_usr_value_ = new ::Interactive::Message::P2pInfoReq_USR(*from.p2pinforeq_usr_value_);
  } else {
    p2pinforeq_usr_value_ = NULL;
  }
  if (from.has_deletefilereq_usr_value()) {
    deletefilereq_usr_value_ = new ::Interactive::Message::DeleteFileReq_USR(*from.deletefilereq_usr_value_);
  } else {
    deletefilereq_usr_value_ = NULL;
  }
  if (from.has_downloadfilereq_usr_value()) {
    downloadfilereq_usr_value_ = new ::Interactive::Message::DownloadFileReq_USR(*from.downloadfilereq_usr_value_);
  } else {
    downloadfilereq_usr_value_ = NULL;
  }
  if (from.has_queryfilereq_usr_value()) {
    queryfilereq_usr_value_ = new ::Interactive::Message::QueryFileReq_USR(*from.queryfilereq_usr_value_);
  } else {
    queryfilereq_usr_value_ = NULL;
  }
  if (from.has_queryaccessdomainnamereq_usr_value()) {
    queryaccessdomainnamereq_usr_value_ = new ::Interactive::Message::QueryAccessDomainNameReq_USR(*from.queryaccessdomainnamereq_usr_value_);
  } else {
    queryaccessdomainnamereq_usr_value_ = NULL;
  }
  if (from.has_queryappupgradereq_usr_value()) {
    queryappupgradereq_usr_value_ = new ::Interactive::Message::QueryAppUpgradeReq_USR(*from.queryappupgradereq_usr_value_);
  } else {
    queryappupgradereq_usr_value_ = NULL;
  }
  if (from.has_queryifp2pidvalidreq_usr_value()) {
    queryifp2pidvalidreq_usr_value_ = new ::Interactive::Message::QueryIfP2pIDValidReq_USR(*from.queryifp2pidvalidreq_usr_value_);
  } else {
    queryifp2pidvalidreq_usr_value_ = NULL;
  }
  if (from.has_queryalldeviceeventreq_usr_value()) {
    queryalldeviceeventreq_usr_value_ = new ::Interactive::Message::QueryAllDeviceEventReq_USR(*from.queryalldeviceeventreq_usr_value_);
  } else {
    queryalldeviceeventreq_usr_value_ = NULL;
  }
  if (from.has_deletedeviceeventreq_usr_value()) {
    deletedeviceeventreq_usr_value_ = new ::Interactive::Message::DeleteDeviceEventReq_USR(*from.deletedeviceeventreq_usr_value_);
  } else {
    deletedeviceeventreq_usr_value_ = NULL;
  }
  if (from.has_modifydeviceeventreq_usr_value()) {
    modifydeviceeventreq_usr_value_ = new ::Interactive::Message::ModifyDeviceEventReq_USR(*from.modifydeviceeventreq_usr_value_);
  } else {
    modifydeviceeventreq_usr_value_ = NULL;
  }
  if (from.has_addstoragedetailreq_usr_value()) {
    addstoragedetailreq_usr_value_ = new ::Interactive::Message::AddStorageDetailReq_USR(*from.addstoragedetailreq_usr_value_);
  } else {
    addstoragedetailreq_usr_value_ = NULL;
  }
  if (from.has_deletestoragedetailreq_usr_value()) {
    deletestoragedetailreq_usr_value_ = new ::Interactive::Message::DeleteStorageDetailReq_USR(*from.deletestoragedetailreq_usr_value_);
  } else {
    deletestoragedetailreq_usr_value_ = NULL;
  }
  if (from.has_modifystoragedetailreq_usr_value()) {
    modifystoragedetailreq_usr_value_ = new ::Interactive::Message::ModifyStorageDetailReq_USR(*from.modifystoragedetailreq_usr_value_);
  } else {
    modifystoragedetailreq_usr_value_ = NULL;
  }
  if (from.has_querystoragedetailreq_usr_value()) {
    querystoragedetailreq_usr_value_ = new ::Interactive::Message::QueryStorageDetailReq_USR(*from.querystoragedetailreq_usr_value_);
  } else {
    querystoragedetailreq_usr_value_ = NULL;
  }
  if (from.has_queryregionstorageinforeq_usr_value()) {
    queryregionstorageinforeq_usr_value_ = new ::Interactive::Message::QueryRegionStorageInfoReq_USR(*from.queryregionstorageinforeq_usr_value_);
  } else {
    queryregionstorageinforeq_usr_value_ = NULL;
  }
  if (from.has_querydeviceinfomultireq_usr_value()) {
    querydeviceinfomultireq_usr_value_ = new ::Interactive::Message::QueryDeviceInfoMultiReq_USR(*from.querydeviceinfomultireq_usr_value_);
  } else {
    querydeviceinfomultireq_usr_value_ = NULL;
  }
  if (from.has_registercmscallreq_usr_value()) {
    registercmscallreq_usr_value_ = new ::Interactive::Message::RegisterCmsCallReq_USR(*from.registercmscallreq_usr_value_);
  } else {
    registercmscallreq_usr_value_ = NULL;
  }
  if (from.has_unregistercmscallreq_usr_value()) {
    unregistercmscallreq_usr_value_ = new ::Interactive::Message::UnregisterCmsCallReq_USR(*from.unregistercmscallreq_usr_value_);
  } else {
    unregistercmscallreq_usr_value_ = NULL;
  }
  if (from.has_querysharingdevicelimitreq_usr_value()) {
    querysharingdevicelimitreq_usr_value_ = new ::Interactive::Message::QuerySharingDeviceLimitReq_USR(*from.querysharingdevicelimitreq_usr_value_);
  } else {
    querysharingdevicelimitreq_usr_value_ = NULL;
  }
  if (from.has_querydevicecapacityreq_usr_value()) {
    querydevicecapacityreq_usr_value_ = new ::Interactive::Message::QueryDeviceCapacityReq_USR(*from.querydevicecapacityreq_usr_value_);
  } else {
    querydevicecapacityreq_usr_value_ = NULL;
  }
  if (from.has_queryalldevicecapacityreq_usr_value()) {
    queryalldevicecapacityreq_usr_value_ = new ::Interactive::Message::QueryALLDeviceCapacityReq_USR(*from.queryalldevicecapacityreq_usr_value_);
  } else {
    queryalldevicecapacityreq_usr_value_ = NULL;
  }
  if (from.has_querydevicep2pidreq_usr_value()) {
    querydevicep2pidreq_usr_value_ = new ::Interactive::Message::QueryDeviceP2pIDReq_USR(*from.querydevicep2pidreq_usr_value_);
  } else {
    querydevicep2pidreq_usr_value_ = NULL;
  }
  if (from.has_uploadusercfgreq_usr_value()) {
    uploadusercfgreq_usr_value_ = new ::Interactive::Message::UploadUserCfgReq_USR(*from.uploadusercfgreq_usr_value_);
  } else {
    uploadusercfgreq_usr_value_ = NULL;
  }
  if (from.has_queryusercfgreq_usr_value()) {
    queryusercfgreq_usr_value_ = new ::Interactive::Message::QueryUserCfgReq_USR(*from.queryusercfgreq_usr_value_);
  } else {
    queryusercfgreq_usr_value_ = NULL;
  }
  if (from.has_getonlinedevinforeq_inner_value()) {
    getonlinedevinforeq_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoReq_INNER(*from.getonlinedevinforeq_inner_value_);
  } else {
    getonlinedevinforeq_inner_value_ = NULL;
  }
  if (from.has_broadcastonlinedevinfo_inner_value()) {
    broadcastonlinedevinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineDevInfo_INNER(*from.broadcastonlinedevinfo_inner_value_);
  } else {
    broadcastonlinedevinfo_inner_value_ = NULL;
  }
  if (from.has_getonlineuserinforeq_inner_value()) {
    getonlineuserinforeq_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoReq_INNER(*from.getonlineuserinforeq_inner_value_);
  } else {
    getonlineuserinforeq_inner_value_ = NULL;
  }
  if (from.has_broadcastonlineuserinfo_inner_value()) {
    broadcastonlineuserinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineUserInfo_INNER(*from.broadcastonlineuserinfo_inner_value_);
  } else {
    broadcastonlineuserinfo_inner_value_ = NULL;
  }
  if (from.has_getdeviceaccessrecordreq_inner_value()) {
    getdeviceaccessrecordreq_inner_value_ = new ::Interactive::Message::GetDeviceAccessRecordReq_INNER(*from.getdeviceaccessrecordreq_inner_value_);
  } else {
    getdeviceaccessrecordreq_inner_value_ = NULL;
  }
  if (from.has_getuseraccessrecordreq_inner_value()) {
    getuseraccessrecordreq_inner_value_ = new ::Interactive::Message::GetUserAccessRecordReq_INNER(*from.getuseraccessrecordreq_inner_value_);
  } else {
    getuseraccessrecordreq_inner_value_ = NULL;
  }
  if (from.has_queryuploadurlreq_mgr_value()) {
    queryuploadurlreq_mgr_value_ = new ::Interactive::Message::QueryUploadURLReq_MGR(*from.queryuploadurlreq_mgr_value_);
  } else {
    queryuploadurlreq_mgr_value_ = NULL;
  }
  if (from.has_addconfigurationreq_mgr_value()) {
    addconfigurationreq_mgr_value_ = new ::Interactive::Message::AddConfigurationReq_MGR(*from.addconfigurationreq_mgr_value_);
  } else {
    addconfigurationreq_mgr_value_ = NULL;
  }
  if (from.has_deleteconfigurationreq_mgr_value()) {
    deleteconfigurationreq_mgr_value_ = new ::Interactive::Message::DeleteConfigurationReq_MGR(*from.deleteconfigurationreq_mgr_value_);
  } else {
    deleteconfigurationreq_mgr_value_ = NULL;
  }
  if (from.has_modifyconfigurationreq_mgr_value()) {
    modifyconfigurationreq_mgr_value_ = new ::Interactive::Message::ModifyConfigurationReq_MGR(*from.modifyconfigurationreq_mgr_value_);
  } else {
    modifyconfigurationreq_mgr_value_ = NULL;
  }
  if (from.has_queryallconfigurationreq_mgr_value()) {
    queryallconfigurationreq_mgr_value_ = new ::Interactive::Message::QueryAllConfigurationReq_MGR(*from.queryallconfigurationreq_mgr_value_);
  } else {
    queryallconfigurationreq_mgr_value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Req)
}

void Req::SharedCtor() {
  ::memset(&getaccessaddressreq_dev_value_, 0, reinterpret_cast<char*>(&queryallconfigurationreq_mgr_value_) -
    reinterpret_cast<char*>(&getaccessaddressreq_dev_value_) + sizeof(queryallconfigurationreq_mgr_value_));
  _cached_size_ = 0;
}

Req::~Req() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Req)
  SharedDtor();
}

void Req::SharedDtor() {
  if (this != internal_default_instance()) {
    delete getaccessaddressreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete loginreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforeq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforeq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete addfilereq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete querytimezonereq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryaccessdomainnamereq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryupgradesitereq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfirmwareupgradereq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydevicepropertyreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete querydeviceparameterreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryplatformpushstatusreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete deviceeventreportreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete msgprehandlerreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getaccessaddressreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete registeruserreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete unregisteruserreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryusrinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyuserinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete retrievepwdreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete loginreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete adddevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deldevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryuserreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete sharingdevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete cancelshareddevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete addfriendsreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete delfriendsreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfriendsreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletefilereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete downloadfilereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfilereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryaccessdomainnamereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryappupgradereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryifp2pidvalidreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryalldeviceeventreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletedeviceeventreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydeviceeventreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete addstoragedetailreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletestoragedetailreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifystoragedetailreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querystoragedetailreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryregionstorageinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydeviceinfomultireq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete registercmscallreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete unregistercmscallreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querysharingdevicelimitreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevicecapacityreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryalldevicecapacityreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevicep2pidreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete uploadusercfgreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryusercfgreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlinedevinforeq_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete broadcastonlinedevinfo_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlineuserinforeq_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete broadcastonlineuserinfo_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getdeviceaccessrecordreq_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getuseraccessrecordreq_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete queryuploadurlreq_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete addconfigurationreq_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete deleteconfigurationreq_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyconfigurationreq_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryallconfigurationreq_mgr_value_;
  }
}

void Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Req::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[160].descriptor;
}

const Req& Req::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Req* Req::New(::google::protobuf::Arena* arena) const {
  Req* n = new Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Req::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Req)
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_dev_value_ != NULL) {
    delete getaccessaddressreq_dev_value_;
  }
  getaccessaddressreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginreq_dev_value_ != NULL) {
    delete loginreq_dev_value_;
  }
  loginreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutreq_dev_value_ != NULL) {
    delete logoutreq_dev_value_;
  }
  logoutreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandreq_dev_value_ != NULL) {
    delete shakehandreq_dev_value_;
  }
  shakehandreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforeq_dev_value_ != NULL) {
    delete configinforeq_dev_value_;
  }
  configinforeq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressreq_dev_value_ != NULL) {
    delete storageaddressreq_dev_value_;
  }
  storageaddressreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforeq_dev_value_ != NULL) {
    delete p2pinforeq_dev_value_;
  }
  p2pinforeq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfilereq_dev_value_ != NULL) {
    delete addfilereq_dev_value_;
  }
  addfilereq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querytimezonereq_dev_value_ != NULL) {
    delete querytimezonereq_dev_value_;
  }
  querytimezonereq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamereq_dev_value_ != NULL) {
    delete queryaccessdomainnamereq_dev_value_;
  }
  queryaccessdomainnamereq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryupgradesitereq_dev_value_ != NULL) {
    delete queryupgradesitereq_dev_value_;
  }
  queryupgradesitereq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfirmwareupgradereq_dev_value_ != NULL) {
    delete queryfirmwareupgradereq_dev_value_;
  }
  queryfirmwareupgradereq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydevicepropertyreq_dev_value_ != NULL) {
    delete modifydevicepropertyreq_dev_value_;
  }
  modifydevicepropertyreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydeviceparameterreq_dev_value_ != NULL) {
    delete querydeviceparameterreq_dev_value_;
  }
  querydeviceparameterreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryplatformpushstatusreq_dev_value_ != NULL) {
    delete queryplatformpushstatusreq_dev_value_;
  }
  queryplatformpushstatusreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deviceeventreportreq_dev_value_ != NULL) {
    delete deviceeventreportreq_dev_value_;
  }
  deviceeventreportreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgprehandlerreq_usr_value_ != NULL) {
    delete msgprehandlerreq_usr_value_;
  }
  msgprehandlerreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_usr_value_ != NULL) {
    delete getaccessaddressreq_usr_value_;
  }
  getaccessaddressreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && registeruserreq_usr_value_ != NULL) {
    delete registeruserreq_usr_value_;
  }
  registeruserreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unregisteruserreq_usr_value_ != NULL) {
    delete unregisteruserreq_usr_value_;
  }
  unregisteruserreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryusrinforeq_usr_value_ != NULL) {
    delete queryusrinforeq_usr_value_;
  }
  queryusrinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyuserinforeq_usr_value_ != NULL) {
    delete modifyuserinforeq_usr_value_;
  }
  modifyuserinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && retrievepwdreq_usr_value_ != NULL) {
    delete retrievepwdreq_usr_value_;
  }
  retrievepwdreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginreq_usr_value_ != NULL) {
    delete loginreq_usr_value_;
  }
  loginreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutreq_usr_value_ != NULL) {
    delete logoutreq_usr_value_;
  }
  logoutreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandreq_usr_value_ != NULL) {
    delete shakehandreq_usr_value_;
  }
  shakehandreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforeq_usr_value_ != NULL) {
    delete configinforeq_usr_value_;
  }
  configinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && adddevreq_usr_value_ != NULL) {
    delete adddevreq_usr_value_;
  }
  adddevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deldevreq_usr_value_ != NULL) {
    delete deldevreq_usr_value_;
  }
  deldevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydevreq_usr_value_ != NULL) {
    delete modifydevreq_usr_value_;
  }
  modifydevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevinforeq_usr_value_ != NULL) {
    delete querydevinforeq_usr_value_;
  }
  querydevinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevreq_usr_value_ != NULL) {
    delete querydevreq_usr_value_;
  }
  querydevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryuserreq_usr_value_ != NULL) {
    delete queryuserreq_usr_value_;
  }
  queryuserreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && sharingdevreq_usr_value_ != NULL) {
    delete sharingdevreq_usr_value_;
  }
  sharingdevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancelshareddevreq_usr_value_ != NULL) {
    delete cancelshareddevreq_usr_value_;
  }
  cancelshareddevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfriendsreq_usr_value_ != NULL) {
    delete addfriendsreq_usr_value_;
  }
  addfriendsreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && delfriendsreq_usr_value_ != NULL) {
    delete delfriendsreq_usr_value_;
  }
  delfriendsreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfriendsreq_usr_value_ != NULL) {
    delete queryfriendsreq_usr_value_;
  }
  queryfriendsreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) {
    delete storageaddressreq_usr_value_;
  }
  storageaddressreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforeq_usr_value_ != NULL) {
    delete p2pinforeq_usr_value_;
  }
  p2pinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletefilereq_usr_value_ != NULL) {
    delete deletefilereq_usr_value_;
  }
  deletefilereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && downloadfilereq_usr_value_ != NULL) {
    delete downloadfilereq_usr_value_;
  }
  downloadfilereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfilereq_usr_value_ != NULL) {
    delete queryfilereq_usr_value_;
  }
  queryfilereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamereq_usr_value_ != NULL) {
    delete queryaccessdomainnamereq_usr_value_;
  }
  queryaccessdomainnamereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryappupgradereq_usr_value_ != NULL) {
    delete queryappupgradereq_usr_value_;
  }
  queryappupgradereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryifp2pidvalidreq_usr_value_ != NULL) {
    delete queryifp2pidvalidreq_usr_value_;
  }
  queryifp2pidvalidreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryalldeviceeventreq_usr_value_ != NULL) {
    delete queryalldeviceeventreq_usr_value_;
  }
  queryalldeviceeventreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletedeviceeventreq_usr_value_ != NULL) {
    delete deletedeviceeventreq_usr_value_;
  }
  deletedeviceeventreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydeviceeventreq_usr_value_ != NULL) {
    delete modifydeviceeventreq_usr_value_;
  }
  modifydeviceeventreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addstoragedetailreq_usr_value_ != NULL) {
    delete addstoragedetailreq_usr_value_;
  }
  addstoragedetailreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletestoragedetailreq_usr_value_ != NULL) {
    delete deletestoragedetailreq_usr_value_;
  }
  deletestoragedetailreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifystoragedetailreq_usr_value_ != NULL) {
    delete modifystoragedetailreq_usr_value_;
  }
  modifystoragedetailreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querystoragedetailreq_usr_value_ != NULL) {
    delete querystoragedetailreq_usr_value_;
  }
  querystoragedetailreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryregionstorageinforeq_usr_value_ != NULL) {
    delete queryregionstorageinforeq_usr_value_;
  }
  queryregionstorageinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydeviceinfomultireq_usr_value_ != NULL) {
    delete querydeviceinfomultireq_usr_value_;
  }
  querydeviceinfomultireq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && registercmscallreq_usr_value_ != NULL) {
    delete registercmscallreq_usr_value_;
  }
  registercmscallreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unregistercmscallreq_usr_value_ != NULL) {
    delete unregistercmscallreq_usr_value_;
  }
  unregistercmscallreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querysharingdevicelimitreq_usr_value_ != NULL) {
    delete querysharingdevicelimitreq_usr_value_;
  }
  querysharingdevicelimitreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevicecapacityreq_usr_value_ != NULL) {
    delete querydevicecapacityreq_usr_value_;
  }
  querydevicecapacityreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryalldevicecapacityreq_usr_value_ != NULL) {
    delete queryalldevicecapacityreq_usr_value_;
  }
  queryalldevicecapacityreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevicep2pidreq_usr_value_ != NULL) {
    delete querydevicep2pidreq_usr_value_;
  }
  querydevicep2pidreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && uploadusercfgreq_usr_value_ != NULL) {
    delete uploadusercfgreq_usr_value_;
  }
  uploadusercfgreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryusercfgreq_usr_value_ != NULL) {
    delete queryusercfgreq_usr_value_;
  }
  queryusercfgreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlinedevinforeq_inner_value_ != NULL) {
    delete getonlinedevinforeq_inner_value_;
  }
  getonlinedevinforeq_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && broadcastonlinedevinfo_inner_value_ != NULL) {
    delete broadcastonlinedevinfo_inner_value_;
  }
  broadcastonlinedevinfo_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlineuserinforeq_inner_value_ != NULL) {
    delete getonlineuserinforeq_inner_value_;
  }
  getonlineuserinforeq_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && broadcastonlineuserinfo_inner_value_ != NULL) {
    delete broadcastonlineuserinfo_inner_value_;
  }
  broadcastonlineuserinfo_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getdeviceaccessrecordreq_inner_value_ != NULL) {
    delete getdeviceaccessrecordreq_inner_value_;
  }
  getdeviceaccessrecordreq_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getuseraccessrecordreq_inner_value_ != NULL) {
    delete getuseraccessrecordreq_inner_value_;
  }
  getuseraccessrecordreq_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryuploadurlreq_mgr_value_ != NULL) {
    delete queryuploadurlreq_mgr_value_;
  }
  queryuploadurlreq_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addconfigurationreq_mgr_value_ != NULL) {
    delete addconfigurationreq_mgr_value_;
  }
  addconfigurationreq_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deleteconfigurationreq_mgr_value_ != NULL) {
    delete deleteconfigurationreq_mgr_value_;
  }
  deleteconfigurationreq_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyconfigurationreq_mgr_value_ != NULL) {
    delete modifyconfigurationreq_mgr_value_;
  }
  modifyconfigurationreq_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryallconfigurationreq_mgr_value_ != NULL) {
    delete queryallconfigurationreq_mgr_value_;
  }
  queryallconfigurationreq_mgr_value_ = NULL;
}

bool Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforeq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
      case 52: {
        if (tag == 418u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
      case 54: {
        if (tag == 434u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforeq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfilereq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryTimeZoneReq_DEV QueryTimeZoneReq_DEV_Value = 61;
      case 61: {
        if (tag == 490u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querytimezonereq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAccessDomainNameReq_DEV QueryAccessDomainNameReq_DEV_Value = 62;
      case 62: {
        if (tag == 498u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryaccessdomainnamereq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUpgradeSiteReq_DEV QueryUpgradeSiteReq_DEV_Value = 63;
      case 63: {
        if (tag == 506u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryupgradesitereq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFirmwareUpgradeReq_DEV QueryFirmwareUpgradeReq_DEV_Value = 64;
      case 64: {
        if (tag == 514u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfirmwareupgradereq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
      case 65: {
        if (tag == 522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgprehandlerreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registeruserreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
      case 90: {
        if (tag == 722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unregisteruserreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryusrinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
      case 102: {
        if (tag == 818u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyuserinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RetrievePwdReq_USR RetrievePwdReq_USR_Value = 104;
      case 104: {
        if (tag == 834u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retrievepwdreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
      case 110: {
        if (tag == 882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
      case 120: {
        if (tag == 962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
      case 130: {
        if (tag == 1042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
      case 140: {
        if (tag == 1122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
      case 150: {
        if (tag == 1202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adddevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
      case 160: {
        if (tag == 1282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deldevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
      case 170: {
        if (tag == 1362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
      case 180: {
        if (tag == 1442u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
      case 190: {
        if (tag == 1522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
      case 200: {
        if (tag == 1602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryuserreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
      case 210: {
        if (tag == 1682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sharingdevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
      case 220: {
        if (tag == 1762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancelshareddevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
      case 230: {
        if (tag == 1842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfriendsreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
      case 240: {
        if (tag == 1922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delfriendsreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
      case 250: {
        if (tag == 2002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfriendsreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
      case 252: {
        if (tag == 2018u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
      case 254: {
        if (tag == 2034u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
      case 260: {
        if (tag == 2082u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlinedevinforeq_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
      case 270: {
        if (tag == 2162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_broadcastonlinedevinfo_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
      case 280: {
        if (tag == 2242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlineuserinforeq_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
      case 290: {
        if (tag == 2322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_broadcastonlineuserinfo_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
      case 310: {
        if (tag == 2482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletefilereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
      case 320: {
        if (tag == 2562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_downloadfilereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
      case 330: {
        if (tag == 2642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfilereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAccessDomainNameReq_USR QueryAccessDomainNameReq_USR_Value = 350;
      case 350: {
        if (tag == 2802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryaccessdomainnamereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAppUpgradeReq_USR QueryAppUpgradeReq_USR_Value = 360;
      case 360: {
        if (tag == 2882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryappupgradereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryIfP2pIDValidReq_USR QueryIfP2pIDValidReq_USR_Value = 370;
      case 370: {
        if (tag == 2962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryifp2pidvalidreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAllDeviceEventReq_USR QueryAllDeviceEventReq_USR_Value = 400;
      case 400: {
        if (tag == 3202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryalldeviceeventreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteDeviceEventReq_USR DeleteDeviceEventReq_USR_Value = 410;
      case 410: {
        if (tag == 3282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletedeviceeventreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDeviceEventReq_USR ModifyDeviceEventReq_USR_Value = 420;
      case 420: {
        if (tag == 3362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydeviceeventreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetDeviceAccessRecordReq_INNER GetDeviceAccessRecordReq_INNER_Value = 440;
      case 440: {
        if (tag == 3522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getdeviceaccessrecordreq_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetUserAccessRecordReq_INNER GetUserAccessRecordReq_INNER_Value = 450;
      case 450: {
        if (tag == 3602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getuseraccessrecordreq_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUploadURLReq_MGR QueryUploadURLReq_MGR_Value = 600;
      case 600: {
        if (tag == 4802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryuploadurlreq_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddConfigurationReq_MGR AddConfigurationReq_MGR_Value = 610;
      case 610: {
        if (tag == 4882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addconfigurationreq_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteConfigurationReq_MGR DeleteConfigurationReq_MGR_Value = 620;
      case 620: {
        if (tag == 4962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleteconfigurationreq_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyConfigurationReq_MGR ModifyConfigurationReq_MGR_Value = 630;
      case 630: {
        if (tag == 5042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyconfigurationreq_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAllConfigurationReq_MGR QueryAllConfigurationReq_MGR_Value = 640;
      case 640: {
        if (tag == 5122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryallconfigurationreq_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddStorageDetailReq_USR AddStorageDetailReq_USR_Value = 700;
      case 700: {
        if (tag == 5602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addstoragedetailreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteStorageDetailReq_USR DeleteStorageDetailReq_USR_Value = 710;
      case 710: {
        if (tag == 5682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletestoragedetailreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyStorageDetailReq_USR ModifyStorageDetailReq_USR_Value = 720;
      case 720: {
        if (tag == 5762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifystoragedetailreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryStorageDetailReq_USR QueryStorageDetailReq_USR_Value = 730;
      case 730: {
        if (tag == 5842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querystoragedetailreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryRegionStorageInfoReq_USR QueryRegionStorageInfoReq_USR_Value = 740;
      case 740: {
        if (tag == 5922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryregionstorageinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDevicePropertyReq_DEV ModifyDevicePropertyReq_DEV_Value = 800;
      case 800: {
        if (tag == 6402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydevicepropertyreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceParameterReq_DEV QueryDeviceParameterReq_DEV_Value = 810;
      case 810: {
        if (tag == 6482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydeviceparameterreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryPlatformPushStatusReq_DEV QueryPlatformPushStatusReq_DEV_Value = 900;
      case 900: {
        if (tag == 7202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryplatformpushstatusreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeviceEventReportReq_DEV DeviceEventReportReq_DEV_Value = 1000;
      case 1000: {
        if (tag == 8002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deviceeventreportreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceInfoMultiReq_USR QueryDeviceInfoMultiReq_USR_Value = 1100;
      case 1100: {
        if (tag == 8802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydeviceinfomultireq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RegisterCmsCallReq_USR RegisterCmsCallReq_USR_Value = 1101;
      case 1101: {
        if (tag == 8810u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registercmscallreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UnregisterCmsCallReq_USR UnregisterCmsCallReq_USR_Value = 1102;
      case 1102: {
        if (tag == 8818u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unregistercmscallreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QuerySharingDeviceLimitReq_USR QuerySharingDeviceLimitReq_USR_Value = 1103;
      case 1103: {
        if (tag == 8826u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querysharingdevicelimitreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceCapacityReq_USR QueryDeviceCapacityReq_USR_Value = 1104;
      case 1104: {
        if (tag == 8834u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevicecapacityreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryALLDeviceCapacityReq_USR QueryALLDeviceCapacityReq_USR_Value = 1105;
      case 1105: {
        if (tag == 8842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryalldevicecapacityreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceP2pIDReq_USR QueryDeviceP2pIDReq_USR_Value = 1106;
      case 1106: {
        if (tag == 8850u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevicep2pidreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UploadUserCfgReq_USR UploadUserCfgReq_USR_Value = 1107;
      case 1107: {
        if (tag == 8858u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uploadusercfgreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUserCfgReq_USR QueryUserCfgReq_USR_Value = 1108;
      case 1108: {
        if (tag == 8866u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryusercfgreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Req)
  return false;
#undef DO_
}

void Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Req)
  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  if (this->has_getaccessaddressreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->getaccessaddressreq_dev_value_, output);
  }

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  if (this->has_loginreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->loginreq_dev_value_, output);
  }

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  if (this->has_logoutreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->logoutreq_dev_value_, output);
  }

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  if (this->has_shakehandreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->shakehandreq_dev_value_, output);
  }

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  if (this->has_configinforeq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->configinforeq_dev_value_, output);
  }

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  if (this->has_storageaddressreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, *this->storageaddressreq_dev_value_, output);
  }

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  if (this->has_p2pinforeq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, *this->p2pinforeq_dev_value_, output);
  }

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  if (this->has_addfilereq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->addfilereq_dev_value_, output);
  }

  // .Interactive.Message.QueryTimeZoneReq_DEV QueryTimeZoneReq_DEV_Value = 61;
  if (this->has_querytimezonereq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, *this->querytimezonereq_dev_value_, output);
  }

  // .Interactive.Message.QueryAccessDomainNameReq_DEV QueryAccessDomainNameReq_DEV_Value = 62;
  if (this->has_queryaccessdomainnamereq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, *this->queryaccessdomainnamereq_dev_value_, output);
  }

  // .Interactive.Message.QueryUpgradeSiteReq_DEV QueryUpgradeSiteReq_DEV_Value = 63;
  if (this->has_queryupgradesitereq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63, *this->queryupgradesitereq_dev_value_, output);
  }

  // .Interactive.Message.QueryFirmwareUpgradeReq_DEV QueryFirmwareUpgradeReq_DEV_Value = 64;
  if (this->has_queryfirmwareupgradereq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, *this->queryfirmwareupgradereq_dev_value_, output);
  }

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  if (this->has_msgprehandlerreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65, *this->msgprehandlerreq_usr_value_, output);
  }

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  if (this->has_getaccessaddressreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->getaccessaddressreq_usr_value_, output);
  }

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  if (this->has_registeruserreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->registeruserreq_usr_value_, output);
  }

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  if (this->has_unregisteruserreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->unregisteruserreq_usr_value_, output);
  }

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  if (this->has_queryusrinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->queryusrinforeq_usr_value_, output);
  }

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  if (this->has_modifyuserinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *this->modifyuserinforeq_usr_value_, output);
  }

  // .Interactive.Message.RetrievePwdReq_USR RetrievePwdReq_USR_Value = 104;
  if (this->has_retrievepwdreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, *this->retrievepwdreq_usr_value_, output);
  }

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  if (this->has_loginreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, *this->loginreq_usr_value_, output);
  }

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  if (this->has_logoutreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, *this->logoutreq_usr_value_, output);
  }

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  if (this->has_shakehandreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      130, *this->shakehandreq_usr_value_, output);
  }

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  if (this->has_configinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140, *this->configinforeq_usr_value_, output);
  }

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  if (this->has_adddevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150, *this->adddevreq_usr_value_, output);
  }

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  if (this->has_deldevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160, *this->deldevreq_usr_value_, output);
  }

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  if (this->has_modifydevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170, *this->modifydevreq_usr_value_, output);
  }

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  if (this->has_querydevinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180, *this->querydevinforeq_usr_value_, output);
  }

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  if (this->has_querydevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190, *this->querydevreq_usr_value_, output);
  }

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  if (this->has_queryuserreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->queryuserreq_usr_value_, output);
  }

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  if (this->has_sharingdevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      210, *this->sharingdevreq_usr_value_, output);
  }

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  if (this->has_cancelshareddevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, *this->cancelshareddevreq_usr_value_, output);
  }

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  if (this->has_addfriendsreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230, *this->addfriendsreq_usr_value_, output);
  }

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  if (this->has_delfriendsreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      240, *this->delfriendsreq_usr_value_, output);
  }

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  if (this->has_queryfriendsreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250, *this->queryfriendsreq_usr_value_, output);
  }

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  if (this->has_storageaddressreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252, *this->storageaddressreq_usr_value_, output);
  }

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  if (this->has_p2pinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      254, *this->p2pinforeq_usr_value_, output);
  }

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  if (this->has_getonlinedevinforeq_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      260, *this->getonlinedevinforeq_inner_value_, output);
  }

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  if (this->has_broadcastonlinedevinfo_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270, *this->broadcastonlinedevinfo_inner_value_, output);
  }

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  if (this->has_getonlineuserinforeq_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      280, *this->getonlineuserinforeq_inner_value_, output);
  }

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  if (this->has_broadcastonlineuserinfo_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290, *this->broadcastonlineuserinfo_inner_value_, output);
  }

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  if (this->has_deletefilereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      310, *this->deletefilereq_usr_value_, output);
  }

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  if (this->has_downloadfilereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      320, *this->downloadfilereq_usr_value_, output);
  }

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  if (this->has_queryfilereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330, *this->queryfilereq_usr_value_, output);
  }

  // .Interactive.Message.QueryAccessDomainNameReq_USR QueryAccessDomainNameReq_USR_Value = 350;
  if (this->has_queryaccessdomainnamereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      350, *this->queryaccessdomainnamereq_usr_value_, output);
  }

  // .Interactive.Message.QueryAppUpgradeReq_USR QueryAppUpgradeReq_USR_Value = 360;
  if (this->has_queryappupgradereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      360, *this->queryappupgradereq_usr_value_, output);
  }

  // .Interactive.Message.QueryIfP2pIDValidReq_USR QueryIfP2pIDValidReq_USR_Value = 370;
  if (this->has_queryifp2pidvalidreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      370, *this->queryifp2pidvalidreq_usr_value_, output);
  }

  // .Interactive.Message.QueryAllDeviceEventReq_USR QueryAllDeviceEventReq_USR_Value = 400;
  if (this->has_queryalldeviceeventreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      400, *this->queryalldeviceeventreq_usr_value_, output);
  }

  // .Interactive.Message.DeleteDeviceEventReq_USR DeleteDeviceEventReq_USR_Value = 410;
  if (this->has_deletedeviceeventreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      410, *this->deletedeviceeventreq_usr_value_, output);
  }

  // .Interactive.Message.ModifyDeviceEventReq_USR ModifyDeviceEventReq_USR_Value = 420;
  if (this->has_modifydeviceeventreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      420, *this->modifydeviceeventreq_usr_value_, output);
  }

  // .Interactive.Message.GetDeviceAccessRecordReq_INNER GetDeviceAccessRecordReq_INNER_Value = 440;
  if (this->has_getdeviceaccessrecordreq_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      440, *this->getdeviceaccessrecordreq_inner_value_, output);
  }

  // .Interactive.Message.GetUserAccessRecordReq_INNER GetUserAccessRecordReq_INNER_Value = 450;
  if (this->has_getuseraccessrecordreq_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      450, *this->getuseraccessrecordreq_inner_value_, output);
  }

  // .Interactive.Message.QueryUploadURLReq_MGR QueryUploadURLReq_MGR_Value = 600;
  if (this->has_queryuploadurlreq_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      600, *this->queryuploadurlreq_mgr_value_, output);
  }

  // .Interactive.Message.AddConfigurationReq_MGR AddConfigurationReq_MGR_Value = 610;
  if (this->has_addconfigurationreq_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      610, *this->addconfigurationreq_mgr_value_, output);
  }

  // .Interactive.Message.DeleteConfigurationReq_MGR DeleteConfigurationReq_MGR_Value = 620;
  if (this->has_deleteconfigurationreq_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      620, *this->deleteconfigurationreq_mgr_value_, output);
  }

  // .Interactive.Message.ModifyConfigurationReq_MGR ModifyConfigurationReq_MGR_Value = 630;
  if (this->has_modifyconfigurationreq_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      630, *this->modifyconfigurationreq_mgr_value_, output);
  }

  // .Interactive.Message.QueryAllConfigurationReq_MGR QueryAllConfigurationReq_MGR_Value = 640;
  if (this->has_queryallconfigurationreq_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      640, *this->queryallconfigurationreq_mgr_value_, output);
  }

  // .Interactive.Message.AddStorageDetailReq_USR AddStorageDetailReq_USR_Value = 700;
  if (this->has_addstoragedetailreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      700, *this->addstoragedetailreq_usr_value_, output);
  }

  // .Interactive.Message.DeleteStorageDetailReq_USR DeleteStorageDetailReq_USR_Value = 710;
  if (this->has_deletestoragedetailreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      710, *this->deletestoragedetailreq_usr_value_, output);
  }

  // .Interactive.Message.ModifyStorageDetailReq_USR ModifyStorageDetailReq_USR_Value = 720;
  if (this->has_modifystoragedetailreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      720, *this->modifystoragedetailreq_usr_value_, output);
  }

  // .Interactive.Message.QueryStorageDetailReq_USR QueryStorageDetailReq_USR_Value = 730;
  if (this->has_querystoragedetailreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      730, *this->querystoragedetailreq_usr_value_, output);
  }

  // .Interactive.Message.QueryRegionStorageInfoReq_USR QueryRegionStorageInfoReq_USR_Value = 740;
  if (this->has_queryregionstorageinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      740, *this->queryregionstorageinforeq_usr_value_, output);
  }

  // .Interactive.Message.ModifyDevicePropertyReq_DEV ModifyDevicePropertyReq_DEV_Value = 800;
  if (this->has_modifydevicepropertyreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      800, *this->modifydevicepropertyreq_dev_value_, output);
  }

  // .Interactive.Message.QueryDeviceParameterReq_DEV QueryDeviceParameterReq_DEV_Value = 810;
  if (this->has_querydeviceparameterreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      810, *this->querydeviceparameterreq_dev_value_, output);
  }

  // .Interactive.Message.QueryPlatformPushStatusReq_DEV QueryPlatformPushStatusReq_DEV_Value = 900;
  if (this->has_queryplatformpushstatusreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      900, *this->queryplatformpushstatusreq_dev_value_, output);
  }

  // .Interactive.Message.DeviceEventReportReq_DEV DeviceEventReportReq_DEV_Value = 1000;
  if (this->has_deviceeventreportreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, *this->deviceeventreportreq_dev_value_, output);
  }

  // .Interactive.Message.QueryDeviceInfoMultiReq_USR QueryDeviceInfoMultiReq_USR_Value = 1100;
  if (this->has_querydeviceinfomultireq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1100, *this->querydeviceinfomultireq_usr_value_, output);
  }

  // .Interactive.Message.RegisterCmsCallReq_USR RegisterCmsCallReq_USR_Value = 1101;
  if (this->has_registercmscallreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1101, *this->registercmscallreq_usr_value_, output);
  }

  // .Interactive.Message.UnregisterCmsCallReq_USR UnregisterCmsCallReq_USR_Value = 1102;
  if (this->has_unregistercmscallreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1102, *this->unregistercmscallreq_usr_value_, output);
  }

  // .Interactive.Message.QuerySharingDeviceLimitReq_USR QuerySharingDeviceLimitReq_USR_Value = 1103;
  if (this->has_querysharingdevicelimitreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1103, *this->querysharingdevicelimitreq_usr_value_, output);
  }

  // .Interactive.Message.QueryDeviceCapacityReq_USR QueryDeviceCapacityReq_USR_Value = 1104;
  if (this->has_querydevicecapacityreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1104, *this->querydevicecapacityreq_usr_value_, output);
  }

  // .Interactive.Message.QueryALLDeviceCapacityReq_USR QueryALLDeviceCapacityReq_USR_Value = 1105;
  if (this->has_queryalldevicecapacityreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1105, *this->queryalldevicecapacityreq_usr_value_, output);
  }

  // .Interactive.Message.QueryDeviceP2pIDReq_USR QueryDeviceP2pIDReq_USR_Value = 1106;
  if (this->has_querydevicep2pidreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1106, *this->querydevicep2pidreq_usr_value_, output);
  }

  // .Interactive.Message.UploadUserCfgReq_USR UploadUserCfgReq_USR_Value = 1107;
  if (this->has_uploadusercfgreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1107, *this->uploadusercfgreq_usr_value_, output);
  }

  // .Interactive.Message.QueryUserCfgReq_USR QueryUserCfgReq_USR_Value = 1108;
  if (this->has_queryusercfgreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1108, *this->queryusercfgreq_usr_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Req)
}

::google::protobuf::uint8* Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Req)
  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  if (this->has_getaccessaddressreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->getaccessaddressreq_dev_value_, false, target);
  }

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  if (this->has_loginreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->loginreq_dev_value_, false, target);
  }

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  if (this->has_logoutreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->logoutreq_dev_value_, false, target);
  }

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  if (this->has_shakehandreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->shakehandreq_dev_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  if (this->has_configinforeq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->configinforeq_dev_value_, false, target);
  }

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  if (this->has_storageaddressreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        52, *this->storageaddressreq_dev_value_, false, target);
  }

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  if (this->has_p2pinforeq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        54, *this->p2pinforeq_dev_value_, false, target);
  }

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  if (this->has_addfilereq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->addfilereq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryTimeZoneReq_DEV QueryTimeZoneReq_DEV_Value = 61;
  if (this->has_querytimezonereq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        61, *this->querytimezonereq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryAccessDomainNameReq_DEV QueryAccessDomainNameReq_DEV_Value = 62;
  if (this->has_queryaccessdomainnamereq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        62, *this->queryaccessdomainnamereq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryUpgradeSiteReq_DEV QueryUpgradeSiteReq_DEV_Value = 63;
  if (this->has_queryupgradesitereq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        63, *this->queryupgradesitereq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryFirmwareUpgradeReq_DEV QueryFirmwareUpgradeReq_DEV_Value = 64;
  if (this->has_queryfirmwareupgradereq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        64, *this->queryfirmwareupgradereq_dev_value_, false, target);
  }

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  if (this->has_msgprehandlerreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        65, *this->msgprehandlerreq_usr_value_, false, target);
  }

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  if (this->has_getaccessaddressreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->getaccessaddressreq_usr_value_, false, target);
  }

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  if (this->has_registeruserreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->registeruserreq_usr_value_, false, target);
  }

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  if (this->has_unregisteruserreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->unregisteruserreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  if (this->has_queryusrinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->queryusrinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  if (this->has_modifyuserinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *this->modifyuserinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.RetrievePwdReq_USR RetrievePwdReq_USR_Value = 104;
  if (this->has_retrievepwdreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        104, *this->retrievepwdreq_usr_value_, false, target);
  }

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  if (this->has_loginreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        110, *this->loginreq_usr_value_, false, target);
  }

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  if (this->has_logoutreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        120, *this->logoutreq_usr_value_, false, target);
  }

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  if (this->has_shakehandreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        130, *this->shakehandreq_usr_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  if (this->has_configinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        140, *this->configinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  if (this->has_adddevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        150, *this->adddevreq_usr_value_, false, target);
  }

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  if (this->has_deldevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        160, *this->deldevreq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  if (this->has_modifydevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        170, *this->modifydevreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  if (this->has_querydevinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        180, *this->querydevinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  if (this->has_querydevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        190, *this->querydevreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  if (this->has_queryuserreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->queryuserreq_usr_value_, false, target);
  }

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  if (this->has_sharingdevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        210, *this->sharingdevreq_usr_value_, false, target);
  }

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  if (this->has_cancelshareddevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        220, *this->cancelshareddevreq_usr_value_, false, target);
  }

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  if (this->has_addfriendsreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        230, *this->addfriendsreq_usr_value_, false, target);
  }

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  if (this->has_delfriendsreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        240, *this->delfriendsreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  if (this->has_queryfriendsreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        250, *this->queryfriendsreq_usr_value_, false, target);
  }

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  if (this->has_storageaddressreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        252, *this->storageaddressreq_usr_value_, false, target);
  }

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  if (this->has_p2pinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        254, *this->p2pinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  if (this->has_getonlinedevinforeq_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        260, *this->getonlinedevinforeq_inner_value_, false, target);
  }

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  if (this->has_broadcastonlinedevinfo_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        270, *this->broadcastonlinedevinfo_inner_value_, false, target);
  }

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  if (this->has_getonlineuserinforeq_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        280, *this->getonlineuserinforeq_inner_value_, false, target);
  }

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  if (this->has_broadcastonlineuserinfo_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        290, *this->broadcastonlineuserinfo_inner_value_, false, target);
  }

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  if (this->has_deletefilereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        310, *this->deletefilereq_usr_value_, false, target);
  }

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  if (this->has_downloadfilereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        320, *this->downloadfilereq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  if (this->has_queryfilereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        330, *this->queryfilereq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryAccessDomainNameReq_USR QueryAccessDomainNameReq_USR_Value = 350;
  if (this->has_queryaccessdomainnamereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        350, *this->queryaccessdomainnamereq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryAppUpgradeReq_USR QueryAppUpgradeReq_USR_Value = 360;
  if (this->has_queryappupgradereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        360, *this->queryappupgradereq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryIfP2pIDValidReq_USR QueryIfP2pIDValidReq_USR_Value = 370;
  if (this->has_queryifp2pidvalidreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        370, *this->queryifp2pidvalidreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryAllDeviceEventReq_USR QueryAllDeviceEventReq_USR_Value = 400;
  if (this->has_queryalldeviceeventreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        400, *this->queryalldeviceeventreq_usr_value_, false, target);
  }

  // .Interactive.Message.DeleteDeviceEventReq_USR DeleteDeviceEventReq_USR_Value = 410;
  if (this->has_deletedeviceeventreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        410, *this->deletedeviceeventreq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDeviceEventReq_USR ModifyDeviceEventReq_USR_Value = 420;
  if (this->has_modifydeviceeventreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        420, *this->modifydeviceeventreq_usr_value_, false, target);
  }

  // .Interactive.Message.GetDeviceAccessRecordReq_INNER GetDeviceAccessRecordReq_INNER_Value = 440;
  if (this->has_getdeviceaccessrecordreq_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        440, *this->getdeviceaccessrecordreq_inner_value_, false, target);
  }

  // .Interactive.Message.GetUserAccessRecordReq_INNER GetUserAccessRecordReq_INNER_Value = 450;
  if (this->has_getuseraccessrecordreq_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        450, *this->getuseraccessrecordreq_inner_value_, false, target);
  }

  // .Interactive.Message.QueryUploadURLReq_MGR QueryUploadURLReq_MGR_Value = 600;
  if (this->has_queryuploadurlreq_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        600, *this->queryuploadurlreq_mgr_value_, false, target);
  }

  // .Interactive.Message.AddConfigurationReq_MGR AddConfigurationReq_MGR_Value = 610;
  if (this->has_addconfigurationreq_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        610, *this->addconfigurationreq_mgr_value_, false, target);
  }

  // .Interactive.Message.DeleteConfigurationReq_MGR DeleteConfigurationReq_MGR_Value = 620;
  if (this->has_deleteconfigurationreq_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        620, *this->deleteconfigurationreq_mgr_value_, false, target);
  }

  // .Interactive.Message.ModifyConfigurationReq_MGR ModifyConfigurationReq_MGR_Value = 630;
  if (this->has_modifyconfigurationreq_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        630, *this->modifyconfigurationreq_mgr_value_, false, target);
  }

  // .Interactive.Message.QueryAllConfigurationReq_MGR QueryAllConfigurationReq_MGR_Value = 640;
  if (this->has_queryallconfigurationreq_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        640, *this->queryallconfigurationreq_mgr_value_, false, target);
  }

  // .Interactive.Message.AddStorageDetailReq_USR AddStorageDetailReq_USR_Value = 700;
  if (this->has_addstoragedetailreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        700, *this->addstoragedetailreq_usr_value_, false, target);
  }

  // .Interactive.Message.DeleteStorageDetailReq_USR DeleteStorageDetailReq_USR_Value = 710;
  if (this->has_deletestoragedetailreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        710, *this->deletestoragedetailreq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyStorageDetailReq_USR ModifyStorageDetailReq_USR_Value = 720;
  if (this->has_modifystoragedetailreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        720, *this->modifystoragedetailreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryStorageDetailReq_USR QueryStorageDetailReq_USR_Value = 730;
  if (this->has_querystoragedetailreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        730, *this->querystoragedetailreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryRegionStorageInfoReq_USR QueryRegionStorageInfoReq_USR_Value = 740;
  if (this->has_queryregionstorageinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        740, *this->queryregionstorageinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDevicePropertyReq_DEV ModifyDevicePropertyReq_DEV_Value = 800;
  if (this->has_modifydevicepropertyreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        800, *this->modifydevicepropertyreq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceParameterReq_DEV QueryDeviceParameterReq_DEV_Value = 810;
  if (this->has_querydeviceparameterreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        810, *this->querydeviceparameterreq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryPlatformPushStatusReq_DEV QueryPlatformPushStatusReq_DEV_Value = 900;
  if (this->has_queryplatformpushstatusreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        900, *this->queryplatformpushstatusreq_dev_value_, false, target);
  }

  // .Interactive.Message.DeviceEventReportReq_DEV DeviceEventReportReq_DEV_Value = 1000;
  if (this->has_deviceeventreportreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1000, *this->deviceeventreportreq_dev_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceInfoMultiReq_USR QueryDeviceInfoMultiReq_USR_Value = 1100;
  if (this->has_querydeviceinfomultireq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1100, *this->querydeviceinfomultireq_usr_value_, false, target);
  }

  // .Interactive.Message.RegisterCmsCallReq_USR RegisterCmsCallReq_USR_Value = 1101;
  if (this->has_registercmscallreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1101, *this->registercmscallreq_usr_value_, false, target);
  }

  // .Interactive.Message.UnregisterCmsCallReq_USR UnregisterCmsCallReq_USR_Value = 1102;
  if (this->has_unregistercmscallreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1102, *this->unregistercmscallreq_usr_value_, false, target);
  }

  // .Interactive.Message.QuerySharingDeviceLimitReq_USR QuerySharingDeviceLimitReq_USR_Value = 1103;
  if (this->has_querysharingdevicelimitreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1103, *this->querysharingdevicelimitreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceCapacityReq_USR QueryDeviceCapacityReq_USR_Value = 1104;
  if (this->has_querydevicecapacityreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1104, *this->querydevicecapacityreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryALLDeviceCapacityReq_USR QueryALLDeviceCapacityReq_USR_Value = 1105;
  if (this->has_queryalldevicecapacityreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1105, *this->queryalldevicecapacityreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceP2pIDReq_USR QueryDeviceP2pIDReq_USR_Value = 1106;
  if (this->has_querydevicep2pidreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1106, *this->querydevicep2pidreq_usr_value_, false, target);
  }

  // .Interactive.Message.UploadUserCfgReq_USR UploadUserCfgReq_USR_Value = 1107;
  if (this->has_uploadusercfgreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1107, *this->uploadusercfgreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUserCfgReq_USR QueryUserCfgReq_USR_Value = 1108;
  if (this->has_queryusercfgreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1108, *this->queryusercfgreq_usr_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Req)
  return target;
}

size_t Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Req)
  size_t total_size = 0;

  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  if (this->has_getaccessaddressreq_dev_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressreq_dev_value_);
  }

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  if (this->has_loginreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginreq_dev_value_);
  }

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  if (this->has_logoutreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutreq_dev_value_);
  }

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  if (this->has_shakehandreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandreq_dev_value_);
  }

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  if (this->has_configinforeq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforeq_dev_value_);
  }

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  if (this->has_storageaddressreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressreq_dev_value_);
  }

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  if (this->has_p2pinforeq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforeq_dev_value_);
  }

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  if (this->has_addfilereq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfilereq_dev_value_);
  }

  // .Interactive.Message.QueryTimeZoneReq_DEV QueryTimeZoneReq_DEV_Value = 61;
  if (this->has_querytimezonereq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querytimezonereq_dev_value_);
  }

  // .Interactive.Message.QueryAccessDomainNameReq_DEV QueryAccessDomainNameReq_DEV_Value = 62;
  if (this->has_queryaccessdomainnamereq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryaccessdomainnamereq_dev_value_);
  }

  // .Interactive.Message.QueryUpgradeSiteReq_DEV QueryUpgradeSiteReq_DEV_Value = 63;
  if (this->has_queryupgradesitereq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryupgradesitereq_dev_value_);
  }

  // .Interactive.Message.QueryFirmwareUpgradeReq_DEV QueryFirmwareUpgradeReq_DEV_Value = 64;
  if (this->has_queryfirmwareupgradereq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfirmwareupgradereq_dev_value_);
  }

  // .Interactive.Message.ModifyDevicePropertyReq_DEV ModifyDevicePropertyReq_DEV_Value = 800;
  if (this->has_modifydevicepropertyreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydevicepropertyreq_dev_value_);
  }

  // .Interactive.Message.QueryDeviceParameterReq_DEV QueryDeviceParameterReq_DEV_Value = 810;
  if (this->has_querydeviceparameterreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydeviceparameterreq_dev_value_);
  }

  // .Interactive.Message.QueryPlatformPushStatusReq_DEV QueryPlatformPushStatusReq_DEV_Value = 900;
  if (this->has_queryplatformpushstatusreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryplatformpushstatusreq_dev_value_);
  }

  // .Interactive.Message.DeviceEventReportReq_DEV DeviceEventReportReq_DEV_Value = 1000;
  if (this->has_deviceeventreportreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deviceeventreportreq_dev_value_);
  }

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  if (this->has_msgprehandlerreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgprehandlerreq_usr_value_);
  }

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  if (this->has_getaccessaddressreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressreq_usr_value_);
  }

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  if (this->has_registeruserreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->registeruserreq_usr_value_);
  }

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  if (this->has_unregisteruserreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unregisteruserreq_usr_value_);
  }

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  if (this->has_queryusrinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryusrinforeq_usr_value_);
  }

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  if (this->has_modifyuserinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyuserinforeq_usr_value_);
  }

  // .Interactive.Message.RetrievePwdReq_USR RetrievePwdReq_USR_Value = 104;
  if (this->has_retrievepwdreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retrievepwdreq_usr_value_);
  }

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  if (this->has_loginreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginreq_usr_value_);
  }

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  if (this->has_logoutreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutreq_usr_value_);
  }

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  if (this->has_shakehandreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandreq_usr_value_);
  }

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  if (this->has_configinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforeq_usr_value_);
  }

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  if (this->has_adddevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->adddevreq_usr_value_);
  }

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  if (this->has_deldevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deldevreq_usr_value_);
  }

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  if (this->has_modifydevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydevreq_usr_value_);
  }

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  if (this->has_querydevinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevinforeq_usr_value_);
  }

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  if (this->has_querydevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevreq_usr_value_);
  }

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  if (this->has_queryuserreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryuserreq_usr_value_);
  }

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  if (this->has_sharingdevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sharingdevreq_usr_value_);
  }

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  if (this->has_cancelshareddevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cancelshareddevreq_usr_value_);
  }

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  if (this->has_addfriendsreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfriendsreq_usr_value_);
  }

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  if (this->has_delfriendsreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delfriendsreq_usr_value_);
  }

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  if (this->has_queryfriendsreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfriendsreq_usr_value_);
  }

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  if (this->has_storageaddressreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressreq_usr_value_);
  }

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  if (this->has_p2pinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforeq_usr_value_);
  }

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  if (this->has_deletefilereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletefilereq_usr_value_);
  }

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  if (this->has_downloadfilereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->downloadfilereq_usr_value_);
  }

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  if (this->has_queryfilereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfilereq_usr_value_);
  }

  // .Interactive.Message.QueryAccessDomainNameReq_USR QueryAccessDomainNameReq_USR_Value = 350;
  if (this->has_queryaccessdomainnamereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryaccessdomainnamereq_usr_value_);
  }

  // .Interactive.Message.QueryAppUpgradeReq_USR QueryAppUpgradeReq_USR_Value = 360;
  if (this->has_queryappupgradereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryappupgradereq_usr_value_);
  }

  // .Interactive.Message.QueryIfP2pIDValidReq_USR QueryIfP2pIDValidReq_USR_Value = 370;
  if (this->has_queryifp2pidvalidreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryifp2pidvalidreq_usr_value_);
  }

  // .Interactive.Message.QueryAllDeviceEventReq_USR QueryAllDeviceEventReq_USR_Value = 400;
  if (this->has_queryalldeviceeventreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryalldeviceeventreq_usr_value_);
  }

  // .Interactive.Message.DeleteDeviceEventReq_USR DeleteDeviceEventReq_USR_Value = 410;
  if (this->has_deletedeviceeventreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletedeviceeventreq_usr_value_);
  }

  // .Interactive.Message.ModifyDeviceEventReq_USR ModifyDeviceEventReq_USR_Value = 420;
  if (this->has_modifydeviceeventreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydeviceeventreq_usr_value_);
  }

  // .Interactive.Message.AddStorageDetailReq_USR AddStorageDetailReq_USR_Value = 700;
  if (this->has_addstoragedetailreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addstoragedetailreq_usr_value_);
  }

  // .Interactive.Message.DeleteStorageDetailReq_USR DeleteStorageDetailReq_USR_Value = 710;
  if (this->has_deletestoragedetailreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletestoragedetailreq_usr_value_);
  }

  // .Interactive.Message.ModifyStorageDetailReq_USR ModifyStorageDetailReq_USR_Value = 720;
  if (this->has_modifystoragedetailreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifystoragedetailreq_usr_value_);
  }

  // .Interactive.Message.QueryStorageDetailReq_USR QueryStorageDetailReq_USR_Value = 730;
  if (this->has_querystoragedetailreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querystoragedetailreq_usr_value_);
  }

  // .Interactive.Message.QueryRegionStorageInfoReq_USR QueryRegionStorageInfoReq_USR_Value = 740;
  if (this->has_queryregionstorageinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryregionstorageinforeq_usr_value_);
  }

  // .Interactive.Message.QueryDeviceInfoMultiReq_USR QueryDeviceInfoMultiReq_USR_Value = 1100;
  if (this->has_querydeviceinfomultireq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydeviceinfomultireq_usr_value_);
  }

  // .Interactive.Message.RegisterCmsCallReq_USR RegisterCmsCallReq_USR_Value = 1101;
  if (this->has_registercmscallreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->registercmscallreq_usr_value_);
  }

  // .Interactive.Message.UnregisterCmsCallReq_USR UnregisterCmsCallReq_USR_Value = 1102;
  if (this->has_unregistercmscallreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unregistercmscallreq_usr_value_);
  }

  // .Interactive.Message.QuerySharingDeviceLimitReq_USR QuerySharingDeviceLimitReq_USR_Value = 1103;
  if (this->has_querysharingdevicelimitreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querysharingdevicelimitreq_usr_value_);
  }

  // .Interactive.Message.QueryDeviceCapacityReq_USR QueryDeviceCapacityReq_USR_Value = 1104;
  if (this->has_querydevicecapacityreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevicecapacityreq_usr_value_);
  }

  // .Interactive.Message.QueryALLDeviceCapacityReq_USR QueryALLDeviceCapacityReq_USR_Value = 1105;
  if (this->has_queryalldevicecapacityreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryalldevicecapacityreq_usr_value_);
  }

  // .Interactive.Message.QueryDeviceP2pIDReq_USR QueryDeviceP2pIDReq_USR_Value = 1106;
  if (this->has_querydevicep2pidreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevicep2pidreq_usr_value_);
  }

  // .Interactive.Message.UploadUserCfgReq_USR UploadUserCfgReq_USR_Value = 1107;
  if (this->has_uploadusercfgreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->uploadusercfgreq_usr_value_);
  }

  // .Interactive.Message.QueryUserCfgReq_USR QueryUserCfgReq_USR_Value = 1108;
  if (this->has_queryusercfgreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryusercfgreq_usr_value_);
  }

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  if (this->has_getonlinedevinforeq_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlinedevinforeq_inner_value_);
  }

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  if (this->has_broadcastonlinedevinfo_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->broadcastonlinedevinfo_inner_value_);
  }

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  if (this->has_getonlineuserinforeq_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlineuserinforeq_inner_value_);
  }

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  if (this->has_broadcastonlineuserinfo_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->broadcastonlineuserinfo_inner_value_);
  }

  // .Interactive.Message.GetDeviceAccessRecordReq_INNER GetDeviceAccessRecordReq_INNER_Value = 440;
  if (this->has_getdeviceaccessrecordreq_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getdeviceaccessrecordreq_inner_value_);
  }

  // .Interactive.Message.GetUserAccessRecordReq_INNER GetUserAccessRecordReq_INNER_Value = 450;
  if (this->has_getuseraccessrecordreq_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getuseraccessrecordreq_inner_value_);
  }

  // .Interactive.Message.QueryUploadURLReq_MGR QueryUploadURLReq_MGR_Value = 600;
  if (this->has_queryuploadurlreq_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryuploadurlreq_mgr_value_);
  }

  // .Interactive.Message.AddConfigurationReq_MGR AddConfigurationReq_MGR_Value = 610;
  if (this->has_addconfigurationreq_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addconfigurationreq_mgr_value_);
  }

  // .Interactive.Message.DeleteConfigurationReq_MGR DeleteConfigurationReq_MGR_Value = 620;
  if (this->has_deleteconfigurationreq_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deleteconfigurationreq_mgr_value_);
  }

  // .Interactive.Message.ModifyConfigurationReq_MGR ModifyConfigurationReq_MGR_Value = 630;
  if (this->has_modifyconfigurationreq_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyconfigurationreq_mgr_value_);
  }

  // .Interactive.Message.QueryAllConfigurationReq_MGR QueryAllConfigurationReq_MGR_Value = 640;
  if (this->has_queryallconfigurationreq_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryallconfigurationreq_mgr_value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Req)
    MergeFrom(*source);
  }
}

void Req::MergeFrom(const Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_getaccessaddressreq_dev_value()) {
    mutable_getaccessaddressreq_dev_value()->::Interactive::Message::GetAccessAddressReq_DEV::MergeFrom(from.getaccessaddressreq_dev_value());
  }
  if (from.has_loginreq_dev_value()) {
    mutable_loginreq_dev_value()->::Interactive::Message::LoginReq_DEV::MergeFrom(from.loginreq_dev_value());
  }
  if (from.has_logoutreq_dev_value()) {
    mutable_logoutreq_dev_value()->::Interactive::Message::LogoutReq_DEV::MergeFrom(from.logoutreq_dev_value());
  }
  if (from.has_shakehandreq_dev_value()) {
    mutable_shakehandreq_dev_value()->::Interactive::Message::ShakehandReq_DEV::MergeFrom(from.shakehandreq_dev_value());
  }
  if (from.has_configinforeq_dev_value()) {
    mutable_configinforeq_dev_value()->::Interactive::Message::ConfigInfoReq_DEV::MergeFrom(from.configinforeq_dev_value());
  }
  if (from.has_storageaddressreq_dev_value()) {
    mutable_storageaddressreq_dev_value()->::Interactive::Message::StorageAddressReq_DEV::MergeFrom(from.storageaddressreq_dev_value());
  }
  if (from.has_p2pinforeq_dev_value()) {
    mutable_p2pinforeq_dev_value()->::Interactive::Message::P2pInfoReq_DEV::MergeFrom(from.p2pinforeq_dev_value());
  }
  if (from.has_addfilereq_dev_value()) {
    mutable_addfilereq_dev_value()->::Interactive::Message::AddFileReq_DEV::MergeFrom(from.addfilereq_dev_value());
  }
  if (from.has_querytimezonereq_dev_value()) {
    mutable_querytimezonereq_dev_value()->::Interactive::Message::QueryTimeZoneReq_DEV::MergeFrom(from.querytimezonereq_dev_value());
  }
  if (from.has_queryaccessdomainnamereq_dev_value()) {
    mutable_queryaccessdomainnamereq_dev_value()->::Interactive::Message::QueryAccessDomainNameReq_DEV::MergeFrom(from.queryaccessdomainnamereq_dev_value());
  }
  if (from.has_queryupgradesitereq_dev_value()) {
    mutable_queryupgradesitereq_dev_value()->::Interactive::Message::QueryUpgradeSiteReq_DEV::MergeFrom(from.queryupgradesitereq_dev_value());
  }
  if (from.has_queryfirmwareupgradereq_dev_value()) {
    mutable_queryfirmwareupgradereq_dev_value()->::Interactive::Message::QueryFirmwareUpgradeReq_DEV::MergeFrom(from.queryfirmwareupgradereq_dev_value());
  }
  if (from.has_modifydevicepropertyreq_dev_value()) {
    mutable_modifydevicepropertyreq_dev_value()->::Interactive::Message::ModifyDevicePropertyReq_DEV::MergeFrom(from.modifydevicepropertyreq_dev_value());
  }
  if (from.has_querydeviceparameterreq_dev_value()) {
    mutable_querydeviceparameterreq_dev_value()->::Interactive::Message::QueryDeviceParameterReq_DEV::MergeFrom(from.querydeviceparameterreq_dev_value());
  }
  if (from.has_queryplatformpushstatusreq_dev_value()) {
    mutable_queryplatformpushstatusreq_dev_value()->::Interactive::Message::QueryPlatformPushStatusReq_DEV::MergeFrom(from.queryplatformpushstatusreq_dev_value());
  }
  if (from.has_deviceeventreportreq_dev_value()) {
    mutable_deviceeventreportreq_dev_value()->::Interactive::Message::DeviceEventReportReq_DEV::MergeFrom(from.deviceeventreportreq_dev_value());
  }
  if (from.has_msgprehandlerreq_usr_value()) {
    mutable_msgprehandlerreq_usr_value()->::Interactive::Message::MsgPreHandlerReq_USR::MergeFrom(from.msgprehandlerreq_usr_value());
  }
  if (from.has_getaccessaddressreq_usr_value()) {
    mutable_getaccessaddressreq_usr_value()->::Interactive::Message::GetAccessAddressReq_USR::MergeFrom(from.getaccessaddressreq_usr_value());
  }
  if (from.has_registeruserreq_usr_value()) {
    mutable_registeruserreq_usr_value()->::Interactive::Message::RegisterUserReq_USR::MergeFrom(from.registeruserreq_usr_value());
  }
  if (from.has_unregisteruserreq_usr_value()) {
    mutable_unregisteruserreq_usr_value()->::Interactive::Message::UnRegisterUserReq_USR::MergeFrom(from.unregisteruserreq_usr_value());
  }
  if (from.has_queryusrinforeq_usr_value()) {
    mutable_queryusrinforeq_usr_value()->::Interactive::Message::QueryUsrInfoReq_USR::MergeFrom(from.queryusrinforeq_usr_value());
  }
  if (from.has_modifyuserinforeq_usr_value()) {
    mutable_modifyuserinforeq_usr_value()->::Interactive::Message::ModifyUserInfoReq_USR::MergeFrom(from.modifyuserinforeq_usr_value());
  }
  if (from.has_retrievepwdreq_usr_value()) {
    mutable_retrievepwdreq_usr_value()->::Interactive::Message::RetrievePwdReq_USR::MergeFrom(from.retrievepwdreq_usr_value());
  }
  if (from.has_loginreq_usr_value()) {
    mutable_loginreq_usr_value()->::Interactive::Message::LoginReq_USR::MergeFrom(from.loginreq_usr_value());
  }
  if (from.has_logoutreq_usr_value()) {
    mutable_logoutreq_usr_value()->::Interactive::Message::LogoutReq_USR::MergeFrom(from.logoutreq_usr_value());
  }
  if (from.has_shakehandreq_usr_value()) {
    mutable_shakehandreq_usr_value()->::Interactive::Message::ShakehandReq_USR::MergeFrom(from.shakehandreq_usr_value());
  }
  if (from.has_configinforeq_usr_value()) {
    mutable_configinforeq_usr_value()->::Interactive::Message::ConfigInfoReq_USR::MergeFrom(from.configinforeq_usr_value());
  }
  if (from.has_adddevreq_usr_value()) {
    mutable_adddevreq_usr_value()->::Interactive::Message::AddDevReq_USR::MergeFrom(from.adddevreq_usr_value());
  }
  if (from.has_deldevreq_usr_value()) {
    mutable_deldevreq_usr_value()->::Interactive::Message::DelDevReq_USR::MergeFrom(from.deldevreq_usr_value());
  }
  if (from.has_modifydevreq_usr_value()) {
    mutable_modifydevreq_usr_value()->::Interactive::Message::ModifyDevReq_USR::MergeFrom(from.modifydevreq_usr_value());
  }
  if (from.has_querydevinforeq_usr_value()) {
    mutable_querydevinforeq_usr_value()->::Interactive::Message::QueryDevInfoReq_USR::MergeFrom(from.querydevinforeq_usr_value());
  }
  if (from.has_querydevreq_usr_value()) {
    mutable_querydevreq_usr_value()->::Interactive::Message::QueryDevReq_USR::MergeFrom(from.querydevreq_usr_value());
  }
  if (from.has_queryuserreq_usr_value()) {
    mutable_queryuserreq_usr_value()->::Interactive::Message::QueryUserReq_USR::MergeFrom(from.queryuserreq_usr_value());
  }
  if (from.has_sharingdevreq_usr_value()) {
    mutable_sharingdevreq_usr_value()->::Interactive::Message::SharingDevReq_USR::MergeFrom(from.sharingdevreq_usr_value());
  }
  if (from.has_cancelshareddevreq_usr_value()) {
    mutable_cancelshareddevreq_usr_value()->::Interactive::Message::CancelSharedDevReq_USR::MergeFrom(from.cancelshareddevreq_usr_value());
  }
  if (from.has_addfriendsreq_usr_value()) {
    mutable_addfriendsreq_usr_value()->::Interactive::Message::AddFriendsReq_USR::MergeFrom(from.addfriendsreq_usr_value());
  }
  if (from.has_delfriendsreq_usr_value()) {
    mutable_delfriendsreq_usr_value()->::Interactive::Message::DelFriendsReq_USR::MergeFrom(from.delfriendsreq_usr_value());
  }
  if (from.has_queryfriendsreq_usr_value()) {
    mutable_queryfriendsreq_usr_value()->::Interactive::Message::QueryFriendsReq_USR::MergeFrom(from.queryfriendsreq_usr_value());
  }
  if (from.has_storageaddressreq_usr_value()) {
    mutable_storageaddressreq_usr_value()->::Interactive::Message::StorageAddressReq_USR::MergeFrom(from.storageaddressreq_usr_value());
  }
  if (from.has_p2pinforeq_usr_value()) {
    mutable_p2pinforeq_usr_value()->::Interactive::Message::P2pInfoReq_USR::MergeFrom(from.p2pinforeq_usr_value());
  }
  if (from.has_deletefilereq_usr_value()) {
    mutable_deletefilereq_usr_value()->::Interactive::Message::DeleteFileReq_USR::MergeFrom(from.deletefilereq_usr_value());
  }
  if (from.has_downloadfilereq_usr_value()) {
    mutable_downloadfilereq_usr_value()->::Interactive::Message::DownloadFileReq_USR::MergeFrom(from.downloadfilereq_usr_value());
  }
  if (from.has_queryfilereq_usr_value()) {
    mutable_queryfilereq_usr_value()->::Interactive::Message::QueryFileReq_USR::MergeFrom(from.queryfilereq_usr_value());
  }
  if (from.has_queryaccessdomainnamereq_usr_value()) {
    mutable_queryaccessdomainnamereq_usr_value()->::Interactive::Message::QueryAccessDomainNameReq_USR::MergeFrom(from.queryaccessdomainnamereq_usr_value());
  }
  if (from.has_queryappupgradereq_usr_value()) {
    mutable_queryappupgradereq_usr_value()->::Interactive::Message::QueryAppUpgradeReq_USR::MergeFrom(from.queryappupgradereq_usr_value());
  }
  if (from.has_queryifp2pidvalidreq_usr_value()) {
    mutable_queryifp2pidvalidreq_usr_value()->::Interactive::Message::QueryIfP2pIDValidReq_USR::MergeFrom(from.queryifp2pidvalidreq_usr_value());
  }
  if (from.has_queryalldeviceeventreq_usr_value()) {
    mutable_queryalldeviceeventreq_usr_value()->::Interactive::Message::QueryAllDeviceEventReq_USR::MergeFrom(from.queryalldeviceeventreq_usr_value());
  }
  if (from.has_deletedeviceeventreq_usr_value()) {
    mutable_deletedeviceeventreq_usr_value()->::Interactive::Message::DeleteDeviceEventReq_USR::MergeFrom(from.deletedeviceeventreq_usr_value());
  }
  if (from.has_modifydeviceeventreq_usr_value()) {
    mutable_modifydeviceeventreq_usr_value()->::Interactive::Message::ModifyDeviceEventReq_USR::MergeFrom(from.modifydeviceeventreq_usr_value());
  }
  if (from.has_addstoragedetailreq_usr_value()) {
    mutable_addstoragedetailreq_usr_value()->::Interactive::Message::AddStorageDetailReq_USR::MergeFrom(from.addstoragedetailreq_usr_value());
  }
  if (from.has_deletestoragedetailreq_usr_value()) {
    mutable_deletestoragedetailreq_usr_value()->::Interactive::Message::DeleteStorageDetailReq_USR::MergeFrom(from.deletestoragedetailreq_usr_value());
  }
  if (from.has_modifystoragedetailreq_usr_value()) {
    mutable_modifystoragedetailreq_usr_value()->::Interactive::Message::ModifyStorageDetailReq_USR::MergeFrom(from.modifystoragedetailreq_usr_value());
  }
  if (from.has_querystoragedetailreq_usr_value()) {
    mutable_querystoragedetailreq_usr_value()->::Interactive::Message::QueryStorageDetailReq_USR::MergeFrom(from.querystoragedetailreq_usr_value());
  }
  if (from.has_queryregionstorageinforeq_usr_value()) {
    mutable_queryregionstorageinforeq_usr_value()->::Interactive::Message::QueryRegionStorageInfoReq_USR::MergeFrom(from.queryregionstorageinforeq_usr_value());
  }
  if (from.has_querydeviceinfomultireq_usr_value()) {
    mutable_querydeviceinfomultireq_usr_value()->::Interactive::Message::QueryDeviceInfoMultiReq_USR::MergeFrom(from.querydeviceinfomultireq_usr_value());
  }
  if (from.has_registercmscallreq_usr_value()) {
    mutable_registercmscallreq_usr_value()->::Interactive::Message::RegisterCmsCallReq_USR::MergeFrom(from.registercmscallreq_usr_value());
  }
  if (from.has_unregistercmscallreq_usr_value()) {
    mutable_unregistercmscallreq_usr_value()->::Interactive::Message::UnregisterCmsCallReq_USR::MergeFrom(from.unregistercmscallreq_usr_value());
  }
  if (from.has_querysharingdevicelimitreq_usr_value()) {
    mutable_querysharingdevicelimitreq_usr_value()->::Interactive::Message::QuerySharingDeviceLimitReq_USR::MergeFrom(from.querysharingdevicelimitreq_usr_value());
  }
  if (from.has_querydevicecapacityreq_usr_value()) {
    mutable_querydevicecapacityreq_usr_value()->::Interactive::Message::QueryDeviceCapacityReq_USR::MergeFrom(from.querydevicecapacityreq_usr_value());
  }
  if (from.has_queryalldevicecapacityreq_usr_value()) {
    mutable_queryalldevicecapacityreq_usr_value()->::Interactive::Message::QueryALLDeviceCapacityReq_USR::MergeFrom(from.queryalldevicecapacityreq_usr_value());
  }
  if (from.has_querydevicep2pidreq_usr_value()) {
    mutable_querydevicep2pidreq_usr_value()->::Interactive::Message::QueryDeviceP2pIDReq_USR::MergeFrom(from.querydevicep2pidreq_usr_value());
  }
  if (from.has_uploadusercfgreq_usr_value()) {
    mutable_uploadusercfgreq_usr_value()->::Interactive::Message::UploadUserCfgReq_USR::MergeFrom(from.uploadusercfgreq_usr_value());
  }
  if (from.has_queryusercfgreq_usr_value()) {
    mutable_queryusercfgreq_usr_value()->::Interactive::Message::QueryUserCfgReq_USR::MergeFrom(from.queryusercfgreq_usr_value());
  }
  if (from.has_getonlinedevinforeq_inner_value()) {
    mutable_getonlinedevinforeq_inner_value()->::Interactive::Message::GetOnlineDevInfoReq_INNER::MergeFrom(from.getonlinedevinforeq_inner_value());
  }
  if (from.has_broadcastonlinedevinfo_inner_value()) {
    mutable_broadcastonlinedevinfo_inner_value()->::Interactive::Message::BroadcastOnlineDevInfo_INNER::MergeFrom(from.broadcastonlinedevinfo_inner_value());
  }
  if (from.has_getonlineuserinforeq_inner_value()) {
    mutable_getonlineuserinforeq_inner_value()->::Interactive::Message::GetOnlineUserInfoReq_INNER::MergeFrom(from.getonlineuserinforeq_inner_value());
  }
  if (from.has_broadcastonlineuserinfo_inner_value()) {
    mutable_broadcastonlineuserinfo_inner_value()->::Interactive::Message::BroadcastOnlineUserInfo_INNER::MergeFrom(from.broadcastonlineuserinfo_inner_value());
  }
  if (from.has_getdeviceaccessrecordreq_inner_value()) {
    mutable_getdeviceaccessrecordreq_inner_value()->::Interactive::Message::GetDeviceAccessRecordReq_INNER::MergeFrom(from.getdeviceaccessrecordreq_inner_value());
  }
  if (from.has_getuseraccessrecordreq_inner_value()) {
    mutable_getuseraccessrecordreq_inner_value()->::Interactive::Message::GetUserAccessRecordReq_INNER::MergeFrom(from.getuseraccessrecordreq_inner_value());
  }
  if (from.has_queryuploadurlreq_mgr_value()) {
    mutable_queryuploadurlreq_mgr_value()->::Interactive::Message::QueryUploadURLReq_MGR::MergeFrom(from.queryuploadurlreq_mgr_value());
  }
  if (from.has_addconfigurationreq_mgr_value()) {
    mutable_addconfigurationreq_mgr_value()->::Interactive::Message::AddConfigurationReq_MGR::MergeFrom(from.addconfigurationreq_mgr_value());
  }
  if (from.has_deleteconfigurationreq_mgr_value()) {
    mutable_deleteconfigurationreq_mgr_value()->::Interactive::Message::DeleteConfigurationReq_MGR::MergeFrom(from.deleteconfigurationreq_mgr_value());
  }
  if (from.has_modifyconfigurationreq_mgr_value()) {
    mutable_modifyconfigurationreq_mgr_value()->::Interactive::Message::ModifyConfigurationReq_MGR::MergeFrom(from.modifyconfigurationreq_mgr_value());
  }
  if (from.has_queryallconfigurationreq_mgr_value()) {
    mutable_queryallconfigurationreq_mgr_value()->::Interactive::Message::QueryAllConfigurationReq_MGR::MergeFrom(from.queryallconfigurationreq_mgr_value());
  }
}

void Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req::CopyFrom(const Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req::IsInitialized() const {
  return true;
}

void Req::Swap(Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req::InternalSwap(Req* other) {
  std::swap(getaccessaddressreq_dev_value_, other->getaccessaddressreq_dev_value_);
  std::swap(loginreq_dev_value_, other->loginreq_dev_value_);
  std::swap(logoutreq_dev_value_, other->logoutreq_dev_value_);
  std::swap(shakehandreq_dev_value_, other->shakehandreq_dev_value_);
  std::swap(configinforeq_dev_value_, other->configinforeq_dev_value_);
  std::swap(storageaddressreq_dev_value_, other->storageaddressreq_dev_value_);
  std::swap(p2pinforeq_dev_value_, other->p2pinforeq_dev_value_);
  std::swap(addfilereq_dev_value_, other->addfilereq_dev_value_);
  std::swap(querytimezonereq_dev_value_, other->querytimezonereq_dev_value_);
  std::swap(queryaccessdomainnamereq_dev_value_, other->queryaccessdomainnamereq_dev_value_);
  std::swap(queryupgradesitereq_dev_value_, other->queryupgradesitereq_dev_value_);
  std::swap(queryfirmwareupgradereq_dev_value_, other->queryfirmwareupgradereq_dev_value_);
  std::swap(modifydevicepropertyreq_dev_value_, other->modifydevicepropertyreq_dev_value_);
  std::swap(querydeviceparameterreq_dev_value_, other->querydeviceparameterreq_dev_value_);
  std::swap(queryplatformpushstatusreq_dev_value_, other->queryplatformpushstatusreq_dev_value_);
  std::swap(deviceeventreportreq_dev_value_, other->deviceeventreportreq_dev_value_);
  std::swap(msgprehandlerreq_usr_value_, other->msgprehandlerreq_usr_value_);
  std::swap(getaccessaddressreq_usr_value_, other->getaccessaddressreq_usr_value_);
  std::swap(registeruserreq_usr_value_, other->registeruserreq_usr_value_);
  std::swap(unregisteruserreq_usr_value_, other->unregisteruserreq_usr_value_);
  std::swap(queryusrinforeq_usr_value_, other->queryusrinforeq_usr_value_);
  std::swap(modifyuserinforeq_usr_value_, other->modifyuserinforeq_usr_value_);
  std::swap(retrievepwdreq_usr_value_, other->retrievepwdreq_usr_value_);
  std::swap(loginreq_usr_value_, other->loginreq_usr_value_);
  std::swap(logoutreq_usr_value_, other->logoutreq_usr_value_);
  std::swap(shakehandreq_usr_value_, other->shakehandreq_usr_value_);
  std::swap(configinforeq_usr_value_, other->configinforeq_usr_value_);
  std::swap(adddevreq_usr_value_, other->adddevreq_usr_value_);
  std::swap(deldevreq_usr_value_, other->deldevreq_usr_value_);
  std::swap(modifydevreq_usr_value_, other->modifydevreq_usr_value_);
  std::swap(querydevinforeq_usr_value_, other->querydevinforeq_usr_value_);
  std::swap(querydevreq_usr_value_, other->querydevreq_usr_value_);
  std::swap(queryuserreq_usr_value_, other->queryuserreq_usr_value_);
  std::swap(sharingdevreq_usr_value_, other->sharingdevreq_usr_value_);
  std::swap(cancelshareddevreq_usr_value_, other->cancelshareddevreq_usr_value_);
  std::swap(addfriendsreq_usr_value_, other->addfriendsreq_usr_value_);
  std::swap(delfriendsreq_usr_value_, other->delfriendsreq_usr_value_);
  std::swap(queryfriendsreq_usr_value_, other->queryfriendsreq_usr_value_);
  std::swap(storageaddressreq_usr_value_, other->storageaddressreq_usr_value_);
  std::swap(p2pinforeq_usr_value_, other->p2pinforeq_usr_value_);
  std::swap(deletefilereq_usr_value_, other->deletefilereq_usr_value_);
  std::swap(downloadfilereq_usr_value_, other->downloadfilereq_usr_value_);
  std::swap(queryfilereq_usr_value_, other->queryfilereq_usr_value_);
  std::swap(queryaccessdomainnamereq_usr_value_, other->queryaccessdomainnamereq_usr_value_);
  std::swap(queryappupgradereq_usr_value_, other->queryappupgradereq_usr_value_);
  std::swap(queryifp2pidvalidreq_usr_value_, other->queryifp2pidvalidreq_usr_value_);
  std::swap(queryalldeviceeventreq_usr_value_, other->queryalldeviceeventreq_usr_value_);
  std::swap(deletedeviceeventreq_usr_value_, other->deletedeviceeventreq_usr_value_);
  std::swap(modifydeviceeventreq_usr_value_, other->modifydeviceeventreq_usr_value_);
  std::swap(addstoragedetailreq_usr_value_, other->addstoragedetailreq_usr_value_);
  std::swap(deletestoragedetailreq_usr_value_, other->deletestoragedetailreq_usr_value_);
  std::swap(modifystoragedetailreq_usr_value_, other->modifystoragedetailreq_usr_value_);
  std::swap(querystoragedetailreq_usr_value_, other->querystoragedetailreq_usr_value_);
  std::swap(queryregionstorageinforeq_usr_value_, other->queryregionstorageinforeq_usr_value_);
  std::swap(querydeviceinfomultireq_usr_value_, other->querydeviceinfomultireq_usr_value_);
  std::swap(registercmscallreq_usr_value_, other->registercmscallreq_usr_value_);
  std::swap(unregistercmscallreq_usr_value_, other->unregistercmscallreq_usr_value_);
  std::swap(querysharingdevicelimitreq_usr_value_, other->querysharingdevicelimitreq_usr_value_);
  std::swap(querydevicecapacityreq_usr_value_, other->querydevicecapacityreq_usr_value_);
  std::swap(queryalldevicecapacityreq_usr_value_, other->queryalldevicecapacityreq_usr_value_);
  std::swap(querydevicep2pidreq_usr_value_, other->querydevicep2pidreq_usr_value_);
  std::swap(uploadusercfgreq_usr_value_, other->uploadusercfgreq_usr_value_);
  std::swap(queryusercfgreq_usr_value_, other->queryusercfgreq_usr_value_);
  std::swap(getonlinedevinforeq_inner_value_, other->getonlinedevinforeq_inner_value_);
  std::swap(broadcastonlinedevinfo_inner_value_, other->broadcastonlinedevinfo_inner_value_);
  std::swap(getonlineuserinforeq_inner_value_, other->getonlineuserinforeq_inner_value_);
  std::swap(broadcastonlineuserinfo_inner_value_, other->broadcastonlineuserinfo_inner_value_);
  std::swap(getdeviceaccessrecordreq_inner_value_, other->getdeviceaccessrecordreq_inner_value_);
  std::swap(getuseraccessrecordreq_inner_value_, other->getuseraccessrecordreq_inner_value_);
  std::swap(queryuploadurlreq_mgr_value_, other->queryuploadurlreq_mgr_value_);
  std::swap(addconfigurationreq_mgr_value_, other->addconfigurationreq_mgr_value_);
  std::swap(deleteconfigurationreq_mgr_value_, other->deleteconfigurationreq_mgr_value_);
  std::swap(modifyconfigurationreq_mgr_value_, other->modifyconfigurationreq_mgr_value_);
  std::swap(queryallconfigurationreq_mgr_value_, other->queryallconfigurationreq_mgr_value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Req::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[160];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Req

// .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
bool Req::has_getaccessaddressreq_dev_value() const {
  return this != internal_default_instance() && getaccessaddressreq_dev_value_ != NULL;
}
void Req::clear_getaccessaddressreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_dev_value_ != NULL) delete getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressReq_DEV& Req::getaccessaddressreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  return getaccessaddressreq_dev_value_ != NULL ? *getaccessaddressreq_dev_value_
                         : *::Interactive::Message::GetAccessAddressReq_DEV::internal_default_instance();
}
::Interactive::Message::GetAccessAddressReq_DEV* Req::mutable_getaccessaddressreq_dev_value() {
  
  if (getaccessaddressreq_dev_value_ == NULL) {
    getaccessaddressreq_dev_value_ = new ::Interactive::Message::GetAccessAddressReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  return getaccessaddressreq_dev_value_;
}
::Interactive::Message::GetAccessAddressReq_DEV* Req::release_getaccessaddressreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  
  ::Interactive::Message::GetAccessAddressReq_DEV* temp = getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_getaccessaddressreq_dev_value(::Interactive::Message::GetAccessAddressReq_DEV* getaccessaddressreq_dev_value) {
  delete getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = getaccessaddressreq_dev_value;
  if (getaccessaddressreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
}

// .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
bool Req::has_loginreq_dev_value() const {
  return this != internal_default_instance() && loginreq_dev_value_ != NULL;
}
void Req::clear_loginreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && loginreq_dev_value_ != NULL) delete loginreq_dev_value_;
  loginreq_dev_value_ = NULL;
}
const ::Interactive::Message::LoginReq_DEV& Req::loginreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LoginReq_DEV_Value)
  return loginreq_dev_value_ != NULL ? *loginreq_dev_value_
                         : *::Interactive::Message::LoginReq_DEV::internal_default_instance();
}
::Interactive::Message::LoginReq_DEV* Req::mutable_loginreq_dev_value() {
  
  if (loginreq_dev_value_ == NULL) {
    loginreq_dev_value_ = new ::Interactive::Message::LoginReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LoginReq_DEV_Value)
  return loginreq_dev_value_;
}
::Interactive::Message::LoginReq_DEV* Req::release_loginreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LoginReq_DEV_Value)
  
  ::Interactive::Message::LoginReq_DEV* temp = loginreq_dev_value_;
  loginreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_loginreq_dev_value(::Interactive::Message::LoginReq_DEV* loginreq_dev_value) {
  delete loginreq_dev_value_;
  loginreq_dev_value_ = loginreq_dev_value;
  if (loginreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LoginReq_DEV_Value)
}

// .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
bool Req::has_logoutreq_dev_value() const {
  return this != internal_default_instance() && logoutreq_dev_value_ != NULL;
}
void Req::clear_logoutreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && logoutreq_dev_value_ != NULL) delete logoutreq_dev_value_;
  logoutreq_dev_value_ = NULL;
}
const ::Interactive::Message::LogoutReq_DEV& Req::logoutreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LogoutReq_DEV_Value)
  return logoutreq_dev_value_ != NULL ? *logoutreq_dev_value_
                         : *::Interactive::Message::LogoutReq_DEV::internal_default_instance();
}
::Interactive::Message::LogoutReq_DEV* Req::mutable_logoutreq_dev_value() {
  
  if (logoutreq_dev_value_ == NULL) {
    logoutreq_dev_value_ = new ::Interactive::Message::LogoutReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LogoutReq_DEV_Value)
  return logoutreq_dev_value_;
}
::Interactive::Message::LogoutReq_DEV* Req::release_logoutreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LogoutReq_DEV_Value)
  
  ::Interactive::Message::LogoutReq_DEV* temp = logoutreq_dev_value_;
  logoutreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_logoutreq_dev_value(::Interactive::Message::LogoutReq_DEV* logoutreq_dev_value) {
  delete logoutreq_dev_value_;
  logoutreq_dev_value_ = logoutreq_dev_value;
  if (logoutreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LogoutReq_DEV_Value)
}

// .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
bool Req::has_shakehandreq_dev_value() const {
  return this != internal_default_instance() && shakehandreq_dev_value_ != NULL;
}
void Req::clear_shakehandreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_dev_value_ != NULL) delete shakehandreq_dev_value_;
  shakehandreq_dev_value_ = NULL;
}
const ::Interactive::Message::ShakehandReq_DEV& Req::shakehandreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ShakehandReq_DEV_Value)
  return shakehandreq_dev_value_ != NULL ? *shakehandreq_dev_value_
                         : *::Interactive::Message::ShakehandReq_DEV::internal_default_instance();
}
::Interactive::Message::ShakehandReq_DEV* Req::mutable_shakehandreq_dev_value() {
  
  if (shakehandreq_dev_value_ == NULL) {
    shakehandreq_dev_value_ = new ::Interactive::Message::ShakehandReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ShakehandReq_DEV_Value)
  return shakehandreq_dev_value_;
}
::Interactive::Message::ShakehandReq_DEV* Req::release_shakehandreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ShakehandReq_DEV_Value)
  
  ::Interactive::Message::ShakehandReq_DEV* temp = shakehandreq_dev_value_;
  shakehandreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_shakehandreq_dev_value(::Interactive::Message::ShakehandReq_DEV* shakehandreq_dev_value) {
  delete shakehandreq_dev_value_;
  shakehandreq_dev_value_ = shakehandreq_dev_value;
  if (shakehandreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ShakehandReq_DEV_Value)
}

// .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
bool Req::has_configinforeq_dev_value() const {
  return this != internal_default_instance() && configinforeq_dev_value_ != NULL;
}
void Req::clear_configinforeq_dev_value() {
  if (GetArenaNoVirtual() == NULL && configinforeq_dev_value_ != NULL) delete configinforeq_dev_value_;
  configinforeq_dev_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoReq_DEV& Req::configinforeq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  return configinforeq_dev_value_ != NULL ? *configinforeq_dev_value_
                         : *::Interactive::Message::ConfigInfoReq_DEV::internal_default_instance();
}
::Interactive::Message::ConfigInfoReq_DEV* Req::mutable_configinforeq_dev_value() {
  
  if (configinforeq_dev_value_ == NULL) {
    configinforeq_dev_value_ = new ::Interactive::Message::ConfigInfoReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  return configinforeq_dev_value_;
}
::Interactive::Message::ConfigInfoReq_DEV* Req::release_configinforeq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  
  ::Interactive::Message::ConfigInfoReq_DEV* temp = configinforeq_dev_value_;
  configinforeq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_configinforeq_dev_value(::Interactive::Message::ConfigInfoReq_DEV* configinforeq_dev_value) {
  delete configinforeq_dev_value_;
  configinforeq_dev_value_ = configinforeq_dev_value;
  if (configinforeq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
}

// .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
bool Req::has_storageaddressreq_dev_value() const {
  return this != internal_default_instance() && storageaddressreq_dev_value_ != NULL;
}
void Req::clear_storageaddressreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_dev_value_ != NULL) delete storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = NULL;
}
const ::Interactive::Message::StorageAddressReq_DEV& Req::storageaddressreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  return storageaddressreq_dev_value_ != NULL ? *storageaddressreq_dev_value_
                         : *::Interactive::Message::StorageAddressReq_DEV::internal_default_instance();
}
::Interactive::Message::StorageAddressReq_DEV* Req::mutable_storageaddressreq_dev_value() {
  
  if (storageaddressreq_dev_value_ == NULL) {
    storageaddressreq_dev_value_ = new ::Interactive::Message::StorageAddressReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  return storageaddressreq_dev_value_;
}
::Interactive::Message::StorageAddressReq_DEV* Req::release_storageaddressreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  
  ::Interactive::Message::StorageAddressReq_DEV* temp = storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_storageaddressreq_dev_value(::Interactive::Message::StorageAddressReq_DEV* storageaddressreq_dev_value) {
  delete storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = storageaddressreq_dev_value;
  if (storageaddressreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.StorageAddressReq_DEV_Value)
}

// .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
bool Req::has_p2pinforeq_dev_value() const {
  return this != internal_default_instance() && p2pinforeq_dev_value_ != NULL;
}
void Req::clear_p2pinforeq_dev_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforeq_dev_value_ != NULL) delete p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = NULL;
}
const ::Interactive::Message::P2pInfoReq_DEV& Req::p2pinforeq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  return p2pinforeq_dev_value_ != NULL ? *p2pinforeq_dev_value_
                         : *::Interactive::Message::P2pInfoReq_DEV::internal_default_instance();
}
::Interactive::Message::P2pInfoReq_DEV* Req::mutable_p2pinforeq_dev_value() {
  
  if (p2pinforeq_dev_value_ == NULL) {
    p2pinforeq_dev_value_ = new ::Interactive::Message::P2pInfoReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  return p2pinforeq_dev_value_;
}
::Interactive::Message::P2pInfoReq_DEV* Req::release_p2pinforeq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  
  ::Interactive::Message::P2pInfoReq_DEV* temp = p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_p2pinforeq_dev_value(::Interactive::Message::P2pInfoReq_DEV* p2pinforeq_dev_value) {
  delete p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = p2pinforeq_dev_value;
  if (p2pinforeq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.P2pInfoReq_DEV_Value)
}

// .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
bool Req::has_addfilereq_dev_value() const {
  return this != internal_default_instance() && addfilereq_dev_value_ != NULL;
}
void Req::clear_addfilereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && addfilereq_dev_value_ != NULL) delete addfilereq_dev_value_;
  addfilereq_dev_value_ = NULL;
}
const ::Interactive::Message::AddFileReq_DEV& Req::addfilereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddFileReq_DEV_Value)
  return addfilereq_dev_value_ != NULL ? *addfilereq_dev_value_
                         : *::Interactive::Message::AddFileReq_DEV::internal_default_instance();
}
::Interactive::Message::AddFileReq_DEV* Req::mutable_addfilereq_dev_value() {
  
  if (addfilereq_dev_value_ == NULL) {
    addfilereq_dev_value_ = new ::Interactive::Message::AddFileReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddFileReq_DEV_Value)
  return addfilereq_dev_value_;
}
::Interactive::Message::AddFileReq_DEV* Req::release_addfilereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddFileReq_DEV_Value)
  
  ::Interactive::Message::AddFileReq_DEV* temp = addfilereq_dev_value_;
  addfilereq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_addfilereq_dev_value(::Interactive::Message::AddFileReq_DEV* addfilereq_dev_value) {
  delete addfilereq_dev_value_;
  addfilereq_dev_value_ = addfilereq_dev_value;
  if (addfilereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddFileReq_DEV_Value)
}

// .Interactive.Message.QueryTimeZoneReq_DEV QueryTimeZoneReq_DEV_Value = 61;
bool Req::has_querytimezonereq_dev_value() const {
  return this != internal_default_instance() && querytimezonereq_dev_value_ != NULL;
}
void Req::clear_querytimezonereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && querytimezonereq_dev_value_ != NULL) delete querytimezonereq_dev_value_;
  querytimezonereq_dev_value_ = NULL;
}
const ::Interactive::Message::QueryTimeZoneReq_DEV& Req::querytimezonereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryTimeZoneReq_DEV_Value)
  return querytimezonereq_dev_value_ != NULL ? *querytimezonereq_dev_value_
                         : *::Interactive::Message::QueryTimeZoneReq_DEV::internal_default_instance();
}
::Interactive::Message::QueryTimeZoneReq_DEV* Req::mutable_querytimezonereq_dev_value() {
  
  if (querytimezonereq_dev_value_ == NULL) {
    querytimezonereq_dev_value_ = new ::Interactive::Message::QueryTimeZoneReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryTimeZoneReq_DEV_Value)
  return querytimezonereq_dev_value_;
}
::Interactive::Message::QueryTimeZoneReq_DEV* Req::release_querytimezonereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryTimeZoneReq_DEV_Value)
  
  ::Interactive::Message::QueryTimeZoneReq_DEV* temp = querytimezonereq_dev_value_;
  querytimezonereq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_querytimezonereq_dev_value(::Interactive::Message::QueryTimeZoneReq_DEV* querytimezonereq_dev_value) {
  delete querytimezonereq_dev_value_;
  querytimezonereq_dev_value_ = querytimezonereq_dev_value;
  if (querytimezonereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryTimeZoneReq_DEV_Value)
}

// .Interactive.Message.QueryAccessDomainNameReq_DEV QueryAccessDomainNameReq_DEV_Value = 62;
bool Req::has_queryaccessdomainnamereq_dev_value() const {
  return this != internal_default_instance() && queryaccessdomainnamereq_dev_value_ != NULL;
}
void Req::clear_queryaccessdomainnamereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamereq_dev_value_ != NULL) delete queryaccessdomainnamereq_dev_value_;
  queryaccessdomainnamereq_dev_value_ = NULL;
}
const ::Interactive::Message::QueryAccessDomainNameReq_DEV& Req::queryaccessdomainnamereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryAccessDomainNameReq_DEV_Value)
  return queryaccessdomainnamereq_dev_value_ != NULL ? *queryaccessdomainnamereq_dev_value_
                         : *::Interactive::Message::QueryAccessDomainNameReq_DEV::internal_default_instance();
}
::Interactive::Message::QueryAccessDomainNameReq_DEV* Req::mutable_queryaccessdomainnamereq_dev_value() {
  
  if (queryaccessdomainnamereq_dev_value_ == NULL) {
    queryaccessdomainnamereq_dev_value_ = new ::Interactive::Message::QueryAccessDomainNameReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryAccessDomainNameReq_DEV_Value)
  return queryaccessdomainnamereq_dev_value_;
}
::Interactive::Message::QueryAccessDomainNameReq_DEV* Req::release_queryaccessdomainnamereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryAccessDomainNameReq_DEV_Value)
  
  ::Interactive::Message::QueryAccessDomainNameReq_DEV* temp = queryaccessdomainnamereq_dev_value_;
  queryaccessdomainnamereq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryaccessdomainnamereq_dev_value(::Interactive::Message::QueryAccessDomainNameReq_DEV* queryaccessdomainnamereq_dev_value) {
  delete queryaccessdomainnamereq_dev_value_;
  queryaccessdomainnamereq_dev_value_ = queryaccessdomainnamereq_dev_value;
  if (queryaccessdomainnamereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryAccessDomainNameReq_DEV_Value)
}

// .Interactive.Message.QueryUpgradeSiteReq_DEV QueryUpgradeSiteReq_DEV_Value = 63;
bool Req::has_queryupgradesitereq_dev_value() const {
  return this != internal_default_instance() && queryupgradesitereq_dev_value_ != NULL;
}
void Req::clear_queryupgradesitereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryupgradesitereq_dev_value_ != NULL) delete queryupgradesitereq_dev_value_;
  queryupgradesitereq_dev_value_ = NULL;
}
const ::Interactive::Message::QueryUpgradeSiteReq_DEV& Req::queryupgradesitereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUpgradeSiteReq_DEV_Value)
  return queryupgradesitereq_dev_value_ != NULL ? *queryupgradesitereq_dev_value_
                         : *::Interactive::Message::QueryUpgradeSiteReq_DEV::internal_default_instance();
}
::Interactive::Message::QueryUpgradeSiteReq_DEV* Req::mutable_queryupgradesitereq_dev_value() {
  
  if (queryupgradesitereq_dev_value_ == NULL) {
    queryupgradesitereq_dev_value_ = new ::Interactive::Message::QueryUpgradeSiteReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUpgradeSiteReq_DEV_Value)
  return queryupgradesitereq_dev_value_;
}
::Interactive::Message::QueryUpgradeSiteReq_DEV* Req::release_queryupgradesitereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUpgradeSiteReq_DEV_Value)
  
  ::Interactive::Message::QueryUpgradeSiteReq_DEV* temp = queryupgradesitereq_dev_value_;
  queryupgradesitereq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryupgradesitereq_dev_value(::Interactive::Message::QueryUpgradeSiteReq_DEV* queryupgradesitereq_dev_value) {
  delete queryupgradesitereq_dev_value_;
  queryupgradesitereq_dev_value_ = queryupgradesitereq_dev_value;
  if (queryupgradesitereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUpgradeSiteReq_DEV_Value)
}

// .Interactive.Message.QueryFirmwareUpgradeReq_DEV QueryFirmwareUpgradeReq_DEV_Value = 64;
bool Req::has_queryfirmwareupgradereq_dev_value() const {
  return this != internal_default_instance() && queryfirmwareupgradereq_dev_value_ != NULL;
}
void Req::clear_queryfirmwareupgradereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryfirmwareupgradereq_dev_value_ != NULL) delete queryfirmwareupgradereq_dev_value_;
  queryfirmwareupgradereq_dev_value_ = NULL;
}
const ::Interactive::Message::QueryFirmwareUpgradeReq_DEV& Req::queryfirmwareupgradereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFirmwareUpgradeReq_DEV_Value)
  return queryfirmwareupgradereq_dev_value_ != NULL ? *queryfirmwareupgradereq_dev_value_
                         : *::Interactive::Message::QueryFirmwareUpgradeReq_DEV::internal_default_instance();
}
::Interactive::Message::QueryFirmwareUpgradeReq_DEV* Req::mutable_queryfirmwareupgradereq_dev_value() {
  
  if (queryfirmwareupgradereq_dev_value_ == NULL) {
    queryfirmwareupgradereq_dev_value_ = new ::Interactive::Message::QueryFirmwareUpgradeReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFirmwareUpgradeReq_DEV_Value)
  return queryfirmwareupgradereq_dev_value_;
}
::Interactive::Message::QueryFirmwareUpgradeReq_DEV* Req::release_queryfirmwareupgradereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFirmwareUpgradeReq_DEV_Value)
  
  ::Interactive::Message::QueryFirmwareUpgradeReq_DEV* temp = queryfirmwareupgradereq_dev_value_;
  queryfirmwareupgradereq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryfirmwareupgradereq_dev_value(::Interactive::Message::QueryFirmwareUpgradeReq_DEV* queryfirmwareupgradereq_dev_value) {
  delete queryfirmwareupgradereq_dev_value_;
  queryfirmwareupgradereq_dev_value_ = queryfirmwareupgradereq_dev_value;
  if (queryfirmwareupgradereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFirmwareUpgradeReq_DEV_Value)
}

// .Interactive.Message.ModifyDevicePropertyReq_DEV ModifyDevicePropertyReq_DEV_Value = 800;
bool Req::has_modifydevicepropertyreq_dev_value() const {
  return this != internal_default_instance() && modifydevicepropertyreq_dev_value_ != NULL;
}
void Req::clear_modifydevicepropertyreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && modifydevicepropertyreq_dev_value_ != NULL) delete modifydevicepropertyreq_dev_value_;
  modifydevicepropertyreq_dev_value_ = NULL;
}
const ::Interactive::Message::ModifyDevicePropertyReq_DEV& Req::modifydevicepropertyreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyDevicePropertyReq_DEV_Value)
  return modifydevicepropertyreq_dev_value_ != NULL ? *modifydevicepropertyreq_dev_value_
                         : *::Interactive::Message::ModifyDevicePropertyReq_DEV::internal_default_instance();
}
::Interactive::Message::ModifyDevicePropertyReq_DEV* Req::mutable_modifydevicepropertyreq_dev_value() {
  
  if (modifydevicepropertyreq_dev_value_ == NULL) {
    modifydevicepropertyreq_dev_value_ = new ::Interactive::Message::ModifyDevicePropertyReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyDevicePropertyReq_DEV_Value)
  return modifydevicepropertyreq_dev_value_;
}
::Interactive::Message::ModifyDevicePropertyReq_DEV* Req::release_modifydevicepropertyreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyDevicePropertyReq_DEV_Value)
  
  ::Interactive::Message::ModifyDevicePropertyReq_DEV* temp = modifydevicepropertyreq_dev_value_;
  modifydevicepropertyreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifydevicepropertyreq_dev_value(::Interactive::Message::ModifyDevicePropertyReq_DEV* modifydevicepropertyreq_dev_value) {
  delete modifydevicepropertyreq_dev_value_;
  modifydevicepropertyreq_dev_value_ = modifydevicepropertyreq_dev_value;
  if (modifydevicepropertyreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyDevicePropertyReq_DEV_Value)
}

// .Interactive.Message.QueryDeviceParameterReq_DEV QueryDeviceParameterReq_DEV_Value = 810;
bool Req::has_querydeviceparameterreq_dev_value() const {
  return this != internal_default_instance() && querydeviceparameterreq_dev_value_ != NULL;
}
void Req::clear_querydeviceparameterreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && querydeviceparameterreq_dev_value_ != NULL) delete querydeviceparameterreq_dev_value_;
  querydeviceparameterreq_dev_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceParameterReq_DEV& Req::querydeviceparameterreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDeviceParameterReq_DEV_Value)
  return querydeviceparameterreq_dev_value_ != NULL ? *querydeviceparameterreq_dev_value_
                         : *::Interactive::Message::QueryDeviceParameterReq_DEV::internal_default_instance();
}
::Interactive::Message::QueryDeviceParameterReq_DEV* Req::mutable_querydeviceparameterreq_dev_value() {
  
  if (querydeviceparameterreq_dev_value_ == NULL) {
    querydeviceparameterreq_dev_value_ = new ::Interactive::Message::QueryDeviceParameterReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDeviceParameterReq_DEV_Value)
  return querydeviceparameterreq_dev_value_;
}
::Interactive::Message::QueryDeviceParameterReq_DEV* Req::release_querydeviceparameterreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDeviceParameterReq_DEV_Value)
  
  ::Interactive::Message::QueryDeviceParameterReq_DEV* temp = querydeviceparameterreq_dev_value_;
  querydeviceparameterreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydeviceparameterreq_dev_value(::Interactive::Message::QueryDeviceParameterReq_DEV* querydeviceparameterreq_dev_value) {
  delete querydeviceparameterreq_dev_value_;
  querydeviceparameterreq_dev_value_ = querydeviceparameterreq_dev_value;
  if (querydeviceparameterreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDeviceParameterReq_DEV_Value)
}

// .Interactive.Message.QueryPlatformPushStatusReq_DEV QueryPlatformPushStatusReq_DEV_Value = 900;
bool Req::has_queryplatformpushstatusreq_dev_value() const {
  return this != internal_default_instance() && queryplatformpushstatusreq_dev_value_ != NULL;
}
void Req::clear_queryplatformpushstatusreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryplatformpushstatusreq_dev_value_ != NULL) delete queryplatformpushstatusreq_dev_value_;
  queryplatformpushstatusreq_dev_value_ = NULL;
}
const ::Interactive::Message::QueryPlatformPushStatusReq_DEV& Req::queryplatformpushstatusreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryPlatformPushStatusReq_DEV_Value)
  return queryplatformpushstatusreq_dev_value_ != NULL ? *queryplatformpushstatusreq_dev_value_
                         : *::Interactive::Message::QueryPlatformPushStatusReq_DEV::internal_default_instance();
}
::Interactive::Message::QueryPlatformPushStatusReq_DEV* Req::mutable_queryplatformpushstatusreq_dev_value() {
  
  if (queryplatformpushstatusreq_dev_value_ == NULL) {
    queryplatformpushstatusreq_dev_value_ = new ::Interactive::Message::QueryPlatformPushStatusReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryPlatformPushStatusReq_DEV_Value)
  return queryplatformpushstatusreq_dev_value_;
}
::Interactive::Message::QueryPlatformPushStatusReq_DEV* Req::release_queryplatformpushstatusreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryPlatformPushStatusReq_DEV_Value)
  
  ::Interactive::Message::QueryPlatformPushStatusReq_DEV* temp = queryplatformpushstatusreq_dev_value_;
  queryplatformpushstatusreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryplatformpushstatusreq_dev_value(::Interactive::Message::QueryPlatformPushStatusReq_DEV* queryplatformpushstatusreq_dev_value) {
  delete queryplatformpushstatusreq_dev_value_;
  queryplatformpushstatusreq_dev_value_ = queryplatformpushstatusreq_dev_value;
  if (queryplatformpushstatusreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryPlatformPushStatusReq_DEV_Value)
}

// .Interactive.Message.DeviceEventReportReq_DEV DeviceEventReportReq_DEV_Value = 1000;
bool Req::has_deviceeventreportreq_dev_value() const {
  return this != internal_default_instance() && deviceeventreportreq_dev_value_ != NULL;
}
void Req::clear_deviceeventreportreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && deviceeventreportreq_dev_value_ != NULL) delete deviceeventreportreq_dev_value_;
  deviceeventreportreq_dev_value_ = NULL;
}
const ::Interactive::Message::DeviceEventReportReq_DEV& Req::deviceeventreportreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeviceEventReportReq_DEV_Value)
  return deviceeventreportreq_dev_value_ != NULL ? *deviceeventreportreq_dev_value_
                         : *::Interactive::Message::DeviceEventReportReq_DEV::internal_default_instance();
}
::Interactive::Message::DeviceEventReportReq_DEV* Req::mutable_deviceeventreportreq_dev_value() {
  
  if (deviceeventreportreq_dev_value_ == NULL) {
    deviceeventreportreq_dev_value_ = new ::Interactive::Message::DeviceEventReportReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeviceEventReportReq_DEV_Value)
  return deviceeventreportreq_dev_value_;
}
::Interactive::Message::DeviceEventReportReq_DEV* Req::release_deviceeventreportreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeviceEventReportReq_DEV_Value)
  
  ::Interactive::Message::DeviceEventReportReq_DEV* temp = deviceeventreportreq_dev_value_;
  deviceeventreportreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_deviceeventreportreq_dev_value(::Interactive::Message::DeviceEventReportReq_DEV* deviceeventreportreq_dev_value) {
  delete deviceeventreportreq_dev_value_;
  deviceeventreportreq_dev_value_ = deviceeventreportreq_dev_value;
  if (deviceeventreportreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeviceEventReportReq_DEV_Value)
}

// .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
bool Req::has_msgprehandlerreq_usr_value() const {
  return this != internal_default_instance() && msgprehandlerreq_usr_value_ != NULL;
}
void Req::clear_msgprehandlerreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && msgprehandlerreq_usr_value_ != NULL) delete msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = NULL;
}
const ::Interactive::Message::MsgPreHandlerReq_USR& Req::msgprehandlerreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  return msgprehandlerreq_usr_value_ != NULL ? *msgprehandlerreq_usr_value_
                         : *::Interactive::Message::MsgPreHandlerReq_USR::internal_default_instance();
}
::Interactive::Message::MsgPreHandlerReq_USR* Req::mutable_msgprehandlerreq_usr_value() {
  
  if (msgprehandlerreq_usr_value_ == NULL) {
    msgprehandlerreq_usr_value_ = new ::Interactive::Message::MsgPreHandlerReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  return msgprehandlerreq_usr_value_;
}
::Interactive::Message::MsgPreHandlerReq_USR* Req::release_msgprehandlerreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  
  ::Interactive::Message::MsgPreHandlerReq_USR* temp = msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_msgprehandlerreq_usr_value(::Interactive::Message::MsgPreHandlerReq_USR* msgprehandlerreq_usr_value) {
  delete msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = msgprehandlerreq_usr_value;
  if (msgprehandlerreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
}

// .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
bool Req::has_getaccessaddressreq_usr_value() const {
  return this != internal_default_instance() && getaccessaddressreq_usr_value_ != NULL;
}
void Req::clear_getaccessaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_usr_value_ != NULL) delete getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressReq_USR& Req::getaccessaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  return getaccessaddressreq_usr_value_ != NULL ? *getaccessaddressreq_usr_value_
                         : *::Interactive::Message::GetAccessAddressReq_USR::internal_default_instance();
}
::Interactive::Message::GetAccessAddressReq_USR* Req::mutable_getaccessaddressreq_usr_value() {
  
  if (getaccessaddressreq_usr_value_ == NULL) {
    getaccessaddressreq_usr_value_ = new ::Interactive::Message::GetAccessAddressReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  return getaccessaddressreq_usr_value_;
}
::Interactive::Message::GetAccessAddressReq_USR* Req::release_getaccessaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  
  ::Interactive::Message::GetAccessAddressReq_USR* temp = getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_getaccessaddressreq_usr_value(::Interactive::Message::GetAccessAddressReq_USR* getaccessaddressreq_usr_value) {
  delete getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = getaccessaddressreq_usr_value;
  if (getaccessaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
}

// .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
bool Req::has_registeruserreq_usr_value() const {
  return this != internal_default_instance() && registeruserreq_usr_value_ != NULL;
}
void Req::clear_registeruserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && registeruserreq_usr_value_ != NULL) delete registeruserreq_usr_value_;
  registeruserreq_usr_value_ = NULL;
}
const ::Interactive::Message::RegisterUserReq_USR& Req::registeruserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.RegisterUserReq_USR_Value)
  return registeruserreq_usr_value_ != NULL ? *registeruserreq_usr_value_
                         : *::Interactive::Message::RegisterUserReq_USR::internal_default_instance();
}
::Interactive::Message::RegisterUserReq_USR* Req::mutable_registeruserreq_usr_value() {
  
  if (registeruserreq_usr_value_ == NULL) {
    registeruserreq_usr_value_ = new ::Interactive::Message::RegisterUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.RegisterUserReq_USR_Value)
  return registeruserreq_usr_value_;
}
::Interactive::Message::RegisterUserReq_USR* Req::release_registeruserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.RegisterUserReq_USR_Value)
  
  ::Interactive::Message::RegisterUserReq_USR* temp = registeruserreq_usr_value_;
  registeruserreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_registeruserreq_usr_value(::Interactive::Message::RegisterUserReq_USR* registeruserreq_usr_value) {
  delete registeruserreq_usr_value_;
  registeruserreq_usr_value_ = registeruserreq_usr_value;
  if (registeruserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.RegisterUserReq_USR_Value)
}

// .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
bool Req::has_unregisteruserreq_usr_value() const {
  return this != internal_default_instance() && unregisteruserreq_usr_value_ != NULL;
}
void Req::clear_unregisteruserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregisteruserreq_usr_value_ != NULL) delete unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = NULL;
}
const ::Interactive::Message::UnRegisterUserReq_USR& Req::unregisteruserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  return unregisteruserreq_usr_value_ != NULL ? *unregisteruserreq_usr_value_
                         : *::Interactive::Message::UnRegisterUserReq_USR::internal_default_instance();
}
::Interactive::Message::UnRegisterUserReq_USR* Req::mutable_unregisteruserreq_usr_value() {
  
  if (unregisteruserreq_usr_value_ == NULL) {
    unregisteruserreq_usr_value_ = new ::Interactive::Message::UnRegisterUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  return unregisteruserreq_usr_value_;
}
::Interactive::Message::UnRegisterUserReq_USR* Req::release_unregisteruserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  
  ::Interactive::Message::UnRegisterUserReq_USR* temp = unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_unregisteruserreq_usr_value(::Interactive::Message::UnRegisterUserReq_USR* unregisteruserreq_usr_value) {
  delete unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = unregisteruserreq_usr_value;
  if (unregisteruserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
}

// .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
bool Req::has_queryusrinforeq_usr_value() const {
  return this != internal_default_instance() && queryusrinforeq_usr_value_ != NULL;
}
void Req::clear_queryusrinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusrinforeq_usr_value_ != NULL) delete queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUsrInfoReq_USR& Req::queryusrinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  return queryusrinforeq_usr_value_ != NULL ? *queryusrinforeq_usr_value_
                         : *::Interactive::Message::QueryUsrInfoReq_USR::internal_default_instance();
}
::Interactive::Message::QueryUsrInfoReq_USR* Req::mutable_queryusrinforeq_usr_value() {
  
  if (queryusrinforeq_usr_value_ == NULL) {
    queryusrinforeq_usr_value_ = new ::Interactive::Message::QueryUsrInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  return queryusrinforeq_usr_value_;
}
::Interactive::Message::QueryUsrInfoReq_USR* Req::release_queryusrinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  
  ::Interactive::Message::QueryUsrInfoReq_USR* temp = queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryusrinforeq_usr_value(::Interactive::Message::QueryUsrInfoReq_USR* queryusrinforeq_usr_value) {
  delete queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = queryusrinforeq_usr_value;
  if (queryusrinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
}

// .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
bool Req::has_modifyuserinforeq_usr_value() const {
  return this != internal_default_instance() && modifyuserinforeq_usr_value_ != NULL;
}
void Req::clear_modifyuserinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifyuserinforeq_usr_value_ != NULL) delete modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyUserInfoReq_USR& Req::modifyuserinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  return modifyuserinforeq_usr_value_ != NULL ? *modifyuserinforeq_usr_value_
                         : *::Interactive::Message::ModifyUserInfoReq_USR::internal_default_instance();
}
::Interactive::Message::ModifyUserInfoReq_USR* Req::mutable_modifyuserinforeq_usr_value() {
  
  if (modifyuserinforeq_usr_value_ == NULL) {
    modifyuserinforeq_usr_value_ = new ::Interactive::Message::ModifyUserInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  return modifyuserinforeq_usr_value_;
}
::Interactive::Message::ModifyUserInfoReq_USR* Req::release_modifyuserinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  
  ::Interactive::Message::ModifyUserInfoReq_USR* temp = modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifyuserinforeq_usr_value(::Interactive::Message::ModifyUserInfoReq_USR* modifyuserinforeq_usr_value) {
  delete modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = modifyuserinforeq_usr_value;
  if (modifyuserinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
}

// .Interactive.Message.RetrievePwdReq_USR RetrievePwdReq_USR_Value = 104;
bool Req::has_retrievepwdreq_usr_value() const {
  return this != internal_default_instance() && retrievepwdreq_usr_value_ != NULL;
}
void Req::clear_retrievepwdreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && retrievepwdreq_usr_value_ != NULL) delete retrievepwdreq_usr_value_;
  retrievepwdreq_usr_value_ = NULL;
}
const ::Interactive::Message::RetrievePwdReq_USR& Req::retrievepwdreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.RetrievePwdReq_USR_Value)
  return retrievepwdreq_usr_value_ != NULL ? *retrievepwdreq_usr_value_
                         : *::Interactive::Message::RetrievePwdReq_USR::internal_default_instance();
}
::Interactive::Message::RetrievePwdReq_USR* Req::mutable_retrievepwdreq_usr_value() {
  
  if (retrievepwdreq_usr_value_ == NULL) {
    retrievepwdreq_usr_value_ = new ::Interactive::Message::RetrievePwdReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.RetrievePwdReq_USR_Value)
  return retrievepwdreq_usr_value_;
}
::Interactive::Message::RetrievePwdReq_USR* Req::release_retrievepwdreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.RetrievePwdReq_USR_Value)
  
  ::Interactive::Message::RetrievePwdReq_USR* temp = retrievepwdreq_usr_value_;
  retrievepwdreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_retrievepwdreq_usr_value(::Interactive::Message::RetrievePwdReq_USR* retrievepwdreq_usr_value) {
  delete retrievepwdreq_usr_value_;
  retrievepwdreq_usr_value_ = retrievepwdreq_usr_value;
  if (retrievepwdreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.RetrievePwdReq_USR_Value)
}

// .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
bool Req::has_loginreq_usr_value() const {
  return this != internal_default_instance() && loginreq_usr_value_ != NULL;
}
void Req::clear_loginreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && loginreq_usr_value_ != NULL) delete loginreq_usr_value_;
  loginreq_usr_value_ = NULL;
}
const ::Interactive::Message::LoginReq_USR& Req::loginreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LoginReq_USR_Value)
  return loginreq_usr_value_ != NULL ? *loginreq_usr_value_
                         : *::Interactive::Message::LoginReq_USR::internal_default_instance();
}
::Interactive::Message::LoginReq_USR* Req::mutable_loginreq_usr_value() {
  
  if (loginreq_usr_value_ == NULL) {
    loginreq_usr_value_ = new ::Interactive::Message::LoginReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LoginReq_USR_Value)
  return loginreq_usr_value_;
}
::Interactive::Message::LoginReq_USR* Req::release_loginreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LoginReq_USR_Value)
  
  ::Interactive::Message::LoginReq_USR* temp = loginreq_usr_value_;
  loginreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_loginreq_usr_value(::Interactive::Message::LoginReq_USR* loginreq_usr_value) {
  delete loginreq_usr_value_;
  loginreq_usr_value_ = loginreq_usr_value;
  if (loginreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LoginReq_USR_Value)
}

// .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
bool Req::has_logoutreq_usr_value() const {
  return this != internal_default_instance() && logoutreq_usr_value_ != NULL;
}
void Req::clear_logoutreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && logoutreq_usr_value_ != NULL) delete logoutreq_usr_value_;
  logoutreq_usr_value_ = NULL;
}
const ::Interactive::Message::LogoutReq_USR& Req::logoutreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LogoutReq_USR_Value)
  return logoutreq_usr_value_ != NULL ? *logoutreq_usr_value_
                         : *::Interactive::Message::LogoutReq_USR::internal_default_instance();
}
::Interactive::Message::LogoutReq_USR* Req::mutable_logoutreq_usr_value() {
  
  if (logoutreq_usr_value_ == NULL) {
    logoutreq_usr_value_ = new ::Interactive::Message::LogoutReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LogoutReq_USR_Value)
  return logoutreq_usr_value_;
}
::Interactive::Message::LogoutReq_USR* Req::release_logoutreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LogoutReq_USR_Value)
  
  ::Interactive::Message::LogoutReq_USR* temp = logoutreq_usr_value_;
  logoutreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_logoutreq_usr_value(::Interactive::Message::LogoutReq_USR* logoutreq_usr_value) {
  delete logoutreq_usr_value_;
  logoutreq_usr_value_ = logoutreq_usr_value;
  if (logoutreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LogoutReq_USR_Value)
}

// .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
bool Req::has_shakehandreq_usr_value() const {
  return this != internal_default_instance() && shakehandreq_usr_value_ != NULL;
}
void Req::clear_shakehandreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_usr_value_ != NULL) delete shakehandreq_usr_value_;
  shakehandreq_usr_value_ = NULL;
}
const ::Interactive::Message::ShakehandReq_USR& Req::shakehandreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ShakehandReq_USR_Value)
  return shakehandreq_usr_value_ != NULL ? *shakehandreq_usr_value_
                         : *::Interactive::Message::ShakehandReq_USR::internal_default_instance();
}
::Interactive::Message::ShakehandReq_USR* Req::mutable_shakehandreq_usr_value() {
  
  if (shakehandreq_usr_value_ == NULL) {
    shakehandreq_usr_value_ = new ::Interactive::Message::ShakehandReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ShakehandReq_USR_Value)
  return shakehandreq_usr_value_;
}
::Interactive::Message::ShakehandReq_USR* Req::release_shakehandreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ShakehandReq_USR_Value)
  
  ::Interactive::Message::ShakehandReq_USR* temp = shakehandreq_usr_value_;
  shakehandreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_shakehandreq_usr_value(::Interactive::Message::ShakehandReq_USR* shakehandreq_usr_value) {
  delete shakehandreq_usr_value_;
  shakehandreq_usr_value_ = shakehandreq_usr_value;
  if (shakehandreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ShakehandReq_USR_Value)
}

// .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
bool Req::has_configinforeq_usr_value() const {
  return this != internal_default_instance() && configinforeq_usr_value_ != NULL;
}
void Req::clear_configinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && configinforeq_usr_value_ != NULL) delete configinforeq_usr_value_;
  configinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoReq_USR& Req::configinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  return configinforeq_usr_value_ != NULL ? *configinforeq_usr_value_
                         : *::Interactive::Message::ConfigInfoReq_USR::internal_default_instance();
}
::Interactive::Message::ConfigInfoReq_USR* Req::mutable_configinforeq_usr_value() {
  
  if (configinforeq_usr_value_ == NULL) {
    configinforeq_usr_value_ = new ::Interactive::Message::ConfigInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  return configinforeq_usr_value_;
}
::Interactive::Message::ConfigInfoReq_USR* Req::release_configinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  
  ::Interactive::Message::ConfigInfoReq_USR* temp = configinforeq_usr_value_;
  configinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_configinforeq_usr_value(::Interactive::Message::ConfigInfoReq_USR* configinforeq_usr_value) {
  delete configinforeq_usr_value_;
  configinforeq_usr_value_ = configinforeq_usr_value;
  if (configinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ConfigInfoReq_USR_Value)
}

// .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
bool Req::has_adddevreq_usr_value() const {
  return this != internal_default_instance() && adddevreq_usr_value_ != NULL;
}
void Req::clear_adddevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && adddevreq_usr_value_ != NULL) delete adddevreq_usr_value_;
  adddevreq_usr_value_ = NULL;
}
const ::Interactive::Message::AddDevReq_USR& Req::adddevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddDevReq_USR_Value)
  return adddevreq_usr_value_ != NULL ? *adddevreq_usr_value_
                         : *::Interactive::Message::AddDevReq_USR::internal_default_instance();
}
::Interactive::Message::AddDevReq_USR* Req::mutable_adddevreq_usr_value() {
  
  if (adddevreq_usr_value_ == NULL) {
    adddevreq_usr_value_ = new ::Interactive::Message::AddDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddDevReq_USR_Value)
  return adddevreq_usr_value_;
}
::Interactive::Message::AddDevReq_USR* Req::release_adddevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddDevReq_USR_Value)
  
  ::Interactive::Message::AddDevReq_USR* temp = adddevreq_usr_value_;
  adddevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_adddevreq_usr_value(::Interactive::Message::AddDevReq_USR* adddevreq_usr_value) {
  delete adddevreq_usr_value_;
  adddevreq_usr_value_ = adddevreq_usr_value;
  if (adddevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddDevReq_USR_Value)
}

// .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
bool Req::has_deldevreq_usr_value() const {
  return this != internal_default_instance() && deldevreq_usr_value_ != NULL;
}
void Req::clear_deldevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deldevreq_usr_value_ != NULL) delete deldevreq_usr_value_;
  deldevreq_usr_value_ = NULL;
}
const ::Interactive::Message::DelDevReq_USR& Req::deldevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DelDevReq_USR_Value)
  return deldevreq_usr_value_ != NULL ? *deldevreq_usr_value_
                         : *::Interactive::Message::DelDevReq_USR::internal_default_instance();
}
::Interactive::Message::DelDevReq_USR* Req::mutable_deldevreq_usr_value() {
  
  if (deldevreq_usr_value_ == NULL) {
    deldevreq_usr_value_ = new ::Interactive::Message::DelDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DelDevReq_USR_Value)
  return deldevreq_usr_value_;
}
::Interactive::Message::DelDevReq_USR* Req::release_deldevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DelDevReq_USR_Value)
  
  ::Interactive::Message::DelDevReq_USR* temp = deldevreq_usr_value_;
  deldevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deldevreq_usr_value(::Interactive::Message::DelDevReq_USR* deldevreq_usr_value) {
  delete deldevreq_usr_value_;
  deldevreq_usr_value_ = deldevreq_usr_value;
  if (deldevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DelDevReq_USR_Value)
}

// .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
bool Req::has_modifydevreq_usr_value() const {
  return this != internal_default_instance() && modifydevreq_usr_value_ != NULL;
}
void Req::clear_modifydevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydevreq_usr_value_ != NULL) delete modifydevreq_usr_value_;
  modifydevreq_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyDevReq_USR& Req::modifydevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyDevReq_USR_Value)
  return modifydevreq_usr_value_ != NULL ? *modifydevreq_usr_value_
                         : *::Interactive::Message::ModifyDevReq_USR::internal_default_instance();
}
::Interactive::Message::ModifyDevReq_USR* Req::mutable_modifydevreq_usr_value() {
  
  if (modifydevreq_usr_value_ == NULL) {
    modifydevreq_usr_value_ = new ::Interactive::Message::ModifyDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyDevReq_USR_Value)
  return modifydevreq_usr_value_;
}
::Interactive::Message::ModifyDevReq_USR* Req::release_modifydevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyDevReq_USR_Value)
  
  ::Interactive::Message::ModifyDevReq_USR* temp = modifydevreq_usr_value_;
  modifydevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifydevreq_usr_value(::Interactive::Message::ModifyDevReq_USR* modifydevreq_usr_value) {
  delete modifydevreq_usr_value_;
  modifydevreq_usr_value_ = modifydevreq_usr_value;
  if (modifydevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyDevReq_USR_Value)
}

// .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
bool Req::has_querydevinforeq_usr_value() const {
  return this != internal_default_instance() && querydevinforeq_usr_value_ != NULL;
}
void Req::clear_querydevinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevinforeq_usr_value_ != NULL) delete querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevInfoReq_USR& Req::querydevinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  return querydevinforeq_usr_value_ != NULL ? *querydevinforeq_usr_value_
                         : *::Interactive::Message::QueryDevInfoReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDevInfoReq_USR* Req::mutable_querydevinforeq_usr_value() {
  
  if (querydevinforeq_usr_value_ == NULL) {
    querydevinforeq_usr_value_ = new ::Interactive::Message::QueryDevInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  return querydevinforeq_usr_value_;
}
::Interactive::Message::QueryDevInfoReq_USR* Req::release_querydevinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  
  ::Interactive::Message::QueryDevInfoReq_USR* temp = querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydevinforeq_usr_value(::Interactive::Message::QueryDevInfoReq_USR* querydevinforeq_usr_value) {
  delete querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = querydevinforeq_usr_value;
  if (querydevinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
}

// .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
bool Req::has_querydevreq_usr_value() const {
  return this != internal_default_instance() && querydevreq_usr_value_ != NULL;
}
void Req::clear_querydevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevreq_usr_value_ != NULL) delete querydevreq_usr_value_;
  querydevreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevReq_USR& Req::querydevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDevReq_USR_Value)
  return querydevreq_usr_value_ != NULL ? *querydevreq_usr_value_
                         : *::Interactive::Message::QueryDevReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDevReq_USR* Req::mutable_querydevreq_usr_value() {
  
  if (querydevreq_usr_value_ == NULL) {
    querydevreq_usr_value_ = new ::Interactive::Message::QueryDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDevReq_USR_Value)
  return querydevreq_usr_value_;
}
::Interactive::Message::QueryDevReq_USR* Req::release_querydevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDevReq_USR_Value)
  
  ::Interactive::Message::QueryDevReq_USR* temp = querydevreq_usr_value_;
  querydevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydevreq_usr_value(::Interactive::Message::QueryDevReq_USR* querydevreq_usr_value) {
  delete querydevreq_usr_value_;
  querydevreq_usr_value_ = querydevreq_usr_value;
  if (querydevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDevReq_USR_Value)
}

// .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
bool Req::has_queryuserreq_usr_value() const {
  return this != internal_default_instance() && queryuserreq_usr_value_ != NULL;
}
void Req::clear_queryuserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryuserreq_usr_value_ != NULL) delete queryuserreq_usr_value_;
  queryuserreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUserReq_USR& Req::queryuserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUserReq_USR_Value)
  return queryuserreq_usr_value_ != NULL ? *queryuserreq_usr_value_
                         : *::Interactive::Message::QueryUserReq_USR::internal_default_instance();
}
::Interactive::Message::QueryUserReq_USR* Req::mutable_queryuserreq_usr_value() {
  
  if (queryuserreq_usr_value_ == NULL) {
    queryuserreq_usr_value_ = new ::Interactive::Message::QueryUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUserReq_USR_Value)
  return queryuserreq_usr_value_;
}
::Interactive::Message::QueryUserReq_USR* Req::release_queryuserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUserReq_USR_Value)
  
  ::Interactive::Message::QueryUserReq_USR* temp = queryuserreq_usr_value_;
  queryuserreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryuserreq_usr_value(::Interactive::Message::QueryUserReq_USR* queryuserreq_usr_value) {
  delete queryuserreq_usr_value_;
  queryuserreq_usr_value_ = queryuserreq_usr_value;
  if (queryuserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUserReq_USR_Value)
}

// .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
bool Req::has_sharingdevreq_usr_value() const {
  return this != internal_default_instance() && sharingdevreq_usr_value_ != NULL;
}
void Req::clear_sharingdevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && sharingdevreq_usr_value_ != NULL) delete sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = NULL;
}
const ::Interactive::Message::SharingDevReq_USR& Req::sharingdevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.SharingDevReq_USR_Value)
  return sharingdevreq_usr_value_ != NULL ? *sharingdevreq_usr_value_
                         : *::Interactive::Message::SharingDevReq_USR::internal_default_instance();
}
::Interactive::Message::SharingDevReq_USR* Req::mutable_sharingdevreq_usr_value() {
  
  if (sharingdevreq_usr_value_ == NULL) {
    sharingdevreq_usr_value_ = new ::Interactive::Message::SharingDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.SharingDevReq_USR_Value)
  return sharingdevreq_usr_value_;
}
::Interactive::Message::SharingDevReq_USR* Req::release_sharingdevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.SharingDevReq_USR_Value)
  
  ::Interactive::Message::SharingDevReq_USR* temp = sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_sharingdevreq_usr_value(::Interactive::Message::SharingDevReq_USR* sharingdevreq_usr_value) {
  delete sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = sharingdevreq_usr_value;
  if (sharingdevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.SharingDevReq_USR_Value)
}

// .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
bool Req::has_cancelshareddevreq_usr_value() const {
  return this != internal_default_instance() && cancelshareddevreq_usr_value_ != NULL;
}
void Req::clear_cancelshareddevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && cancelshareddevreq_usr_value_ != NULL) delete cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = NULL;
}
const ::Interactive::Message::CancelSharedDevReq_USR& Req::cancelshareddevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  return cancelshareddevreq_usr_value_ != NULL ? *cancelshareddevreq_usr_value_
                         : *::Interactive::Message::CancelSharedDevReq_USR::internal_default_instance();
}
::Interactive::Message::CancelSharedDevReq_USR* Req::mutable_cancelshareddevreq_usr_value() {
  
  if (cancelshareddevreq_usr_value_ == NULL) {
    cancelshareddevreq_usr_value_ = new ::Interactive::Message::CancelSharedDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  return cancelshareddevreq_usr_value_;
}
::Interactive::Message::CancelSharedDevReq_USR* Req::release_cancelshareddevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  
  ::Interactive::Message::CancelSharedDevReq_USR* temp = cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_cancelshareddevreq_usr_value(::Interactive::Message::CancelSharedDevReq_USR* cancelshareddevreq_usr_value) {
  delete cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = cancelshareddevreq_usr_value;
  if (cancelshareddevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
}

// .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
bool Req::has_addfriendsreq_usr_value() const {
  return this != internal_default_instance() && addfriendsreq_usr_value_ != NULL;
}
void Req::clear_addfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && addfriendsreq_usr_value_ != NULL) delete addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = NULL;
}
const ::Interactive::Message::AddFriendsReq_USR& Req::addfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddFriendsReq_USR_Value)
  return addfriendsreq_usr_value_ != NULL ? *addfriendsreq_usr_value_
                         : *::Interactive::Message::AddFriendsReq_USR::internal_default_instance();
}
::Interactive::Message::AddFriendsReq_USR* Req::mutable_addfriendsreq_usr_value() {
  
  if (addfriendsreq_usr_value_ == NULL) {
    addfriendsreq_usr_value_ = new ::Interactive::Message::AddFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddFriendsReq_USR_Value)
  return addfriendsreq_usr_value_;
}
::Interactive::Message::AddFriendsReq_USR* Req::release_addfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddFriendsReq_USR_Value)
  
  ::Interactive::Message::AddFriendsReq_USR* temp = addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_addfriendsreq_usr_value(::Interactive::Message::AddFriendsReq_USR* addfriendsreq_usr_value) {
  delete addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = addfriendsreq_usr_value;
  if (addfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddFriendsReq_USR_Value)
}

// .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
bool Req::has_delfriendsreq_usr_value() const {
  return this != internal_default_instance() && delfriendsreq_usr_value_ != NULL;
}
void Req::clear_delfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && delfriendsreq_usr_value_ != NULL) delete delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = NULL;
}
const ::Interactive::Message::DelFriendsReq_USR& Req::delfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DelFriendsReq_USR_Value)
  return delfriendsreq_usr_value_ != NULL ? *delfriendsreq_usr_value_
                         : *::Interactive::Message::DelFriendsReq_USR::internal_default_instance();
}
::Interactive::Message::DelFriendsReq_USR* Req::mutable_delfriendsreq_usr_value() {
  
  if (delfriendsreq_usr_value_ == NULL) {
    delfriendsreq_usr_value_ = new ::Interactive::Message::DelFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DelFriendsReq_USR_Value)
  return delfriendsreq_usr_value_;
}
::Interactive::Message::DelFriendsReq_USR* Req::release_delfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DelFriendsReq_USR_Value)
  
  ::Interactive::Message::DelFriendsReq_USR* temp = delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_delfriendsreq_usr_value(::Interactive::Message::DelFriendsReq_USR* delfriendsreq_usr_value) {
  delete delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = delfriendsreq_usr_value;
  if (delfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DelFriendsReq_USR_Value)
}

// .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
bool Req::has_queryfriendsreq_usr_value() const {
  return this != internal_default_instance() && queryfriendsreq_usr_value_ != NULL;
}
void Req::clear_queryfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfriendsreq_usr_value_ != NULL) delete queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFriendsReq_USR& Req::queryfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  return queryfriendsreq_usr_value_ != NULL ? *queryfriendsreq_usr_value_
                         : *::Interactive::Message::QueryFriendsReq_USR::internal_default_instance();
}
::Interactive::Message::QueryFriendsReq_USR* Req::mutable_queryfriendsreq_usr_value() {
  
  if (queryfriendsreq_usr_value_ == NULL) {
    queryfriendsreq_usr_value_ = new ::Interactive::Message::QueryFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  return queryfriendsreq_usr_value_;
}
::Interactive::Message::QueryFriendsReq_USR* Req::release_queryfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  
  ::Interactive::Message::QueryFriendsReq_USR* temp = queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryfriendsreq_usr_value(::Interactive::Message::QueryFriendsReq_USR* queryfriendsreq_usr_value) {
  delete queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = queryfriendsreq_usr_value;
  if (queryfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFriendsReq_USR_Value)
}

// .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
bool Req::has_storageaddressreq_usr_value() const {
  return this != internal_default_instance() && storageaddressreq_usr_value_ != NULL;
}
void Req::clear_storageaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
}
const ::Interactive::Message::StorageAddressReq_USR& Req::storageaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_ != NULL ? *storageaddressreq_usr_value_
                         : *::Interactive::Message::StorageAddressReq_USR::internal_default_instance();
}
::Interactive::Message::StorageAddressReq_USR* Req::mutable_storageaddressreq_usr_value() {
  
  if (storageaddressreq_usr_value_ == NULL) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_;
}
::Interactive::Message::StorageAddressReq_USR* Req::release_storageaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.StorageAddressReq_USR_Value)
  
  ::Interactive::Message::StorageAddressReq_USR* temp = storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressReq_USR* storageaddressreq_usr_value) {
  delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = storageaddressreq_usr_value;
  if (storageaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.StorageAddressReq_USR_Value)
}

// .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
bool Req::has_p2pinforeq_usr_value() const {
  return this != internal_default_instance() && p2pinforeq_usr_value_ != NULL;
}
void Req::clear_p2pinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforeq_usr_value_ != NULL) delete p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::P2pInfoReq_USR& Req::p2pinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.P2pInfoReq_USR_Value)
  return p2pinforeq_usr_value_ != NULL ? *p2pinforeq_usr_value_
                         : *::Interactive::Message::P2pInfoReq_USR::internal_default_instance();
}
::Interactive::Message::P2pInfoReq_USR* Req::mutable_p2pinforeq_usr_value() {
  
  if (p2pinforeq_usr_value_ == NULL) {
    p2pinforeq_usr_value_ = new ::Interactive::Message::P2pInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.P2pInfoReq_USR_Value)
  return p2pinforeq_usr_value_;
}
::Interactive::Message::P2pInfoReq_USR* Req::release_p2pinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.P2pInfoReq_USR_Value)
  
  ::Interactive::Message::P2pInfoReq_USR* temp = p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_p2pinforeq_usr_value(::Interactive::Message::P2pInfoReq_USR* p2pinforeq_usr_value) {
  delete p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = p2pinforeq_usr_value;
  if (p2pinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.P2pInfoReq_USR_Value)
}

// .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
bool Req::has_deletefilereq_usr_value() const {
  return this != internal_default_instance() && deletefilereq_usr_value_ != NULL;
}
void Req::clear_deletefilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletefilereq_usr_value_ != NULL) delete deletefilereq_usr_value_;
  deletefilereq_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteFileReq_USR& Req::deletefilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeleteFileReq_USR_Value)
  return deletefilereq_usr_value_ != NULL ? *deletefilereq_usr_value_
                         : *::Interactive::Message::DeleteFileReq_USR::internal_default_instance();
}
::Interactive::Message::DeleteFileReq_USR* Req::mutable_deletefilereq_usr_value() {
  
  if (deletefilereq_usr_value_ == NULL) {
    deletefilereq_usr_value_ = new ::Interactive::Message::DeleteFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeleteFileReq_USR_Value)
  return deletefilereq_usr_value_;
}
::Interactive::Message::DeleteFileReq_USR* Req::release_deletefilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeleteFileReq_USR_Value)
  
  ::Interactive::Message::DeleteFileReq_USR* temp = deletefilereq_usr_value_;
  deletefilereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deletefilereq_usr_value(::Interactive::Message::DeleteFileReq_USR* deletefilereq_usr_value) {
  delete deletefilereq_usr_value_;
  deletefilereq_usr_value_ = deletefilereq_usr_value;
  if (deletefilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeleteFileReq_USR_Value)
}

// .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
bool Req::has_downloadfilereq_usr_value() const {
  return this != internal_default_instance() && downloadfilereq_usr_value_ != NULL;
}
void Req::clear_downloadfilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && downloadfilereq_usr_value_ != NULL) delete downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = NULL;
}
const ::Interactive::Message::DownloadFileReq_USR& Req::downloadfilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DownloadFileReq_USR_Value)
  return downloadfilereq_usr_value_ != NULL ? *downloadfilereq_usr_value_
                         : *::Interactive::Message::DownloadFileReq_USR::internal_default_instance();
}
::Interactive::Message::DownloadFileReq_USR* Req::mutable_downloadfilereq_usr_value() {
  
  if (downloadfilereq_usr_value_ == NULL) {
    downloadfilereq_usr_value_ = new ::Interactive::Message::DownloadFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DownloadFileReq_USR_Value)
  return downloadfilereq_usr_value_;
}
::Interactive::Message::DownloadFileReq_USR* Req::release_downloadfilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DownloadFileReq_USR_Value)
  
  ::Interactive::Message::DownloadFileReq_USR* temp = downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_downloadfilereq_usr_value(::Interactive::Message::DownloadFileReq_USR* downloadfilereq_usr_value) {
  delete downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = downloadfilereq_usr_value;
  if (downloadfilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DownloadFileReq_USR_Value)
}

// .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
bool Req::has_queryfilereq_usr_value() const {
  return this != internal_default_instance() && queryfilereq_usr_value_ != NULL;
}
void Req::clear_queryfilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfilereq_usr_value_ != NULL) delete queryfilereq_usr_value_;
  queryfilereq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFileReq_USR& Req::queryfilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFileReq_USR_Value)
  return queryfilereq_usr_value_ != NULL ? *queryfilereq_usr_value_
                         : *::Interactive::Message::QueryFileReq_USR::internal_default_instance();
}
::Interactive::Message::QueryFileReq_USR* Req::mutable_queryfilereq_usr_value() {
  
  if (queryfilereq_usr_value_ == NULL) {
    queryfilereq_usr_value_ = new ::Interactive::Message::QueryFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFileReq_USR_Value)
  return queryfilereq_usr_value_;
}
::Interactive::Message::QueryFileReq_USR* Req::release_queryfilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFileReq_USR_Value)
  
  ::Interactive::Message::QueryFileReq_USR* temp = queryfilereq_usr_value_;
  queryfilereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryfilereq_usr_value(::Interactive::Message::QueryFileReq_USR* queryfilereq_usr_value) {
  delete queryfilereq_usr_value_;
  queryfilereq_usr_value_ = queryfilereq_usr_value;
  if (queryfilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFileReq_USR_Value)
}

// .Interactive.Message.QueryAccessDomainNameReq_USR QueryAccessDomainNameReq_USR_Value = 350;
bool Req::has_queryaccessdomainnamereq_usr_value() const {
  return this != internal_default_instance() && queryaccessdomainnamereq_usr_value_ != NULL;
}
void Req::clear_queryaccessdomainnamereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamereq_usr_value_ != NULL) delete queryaccessdomainnamereq_usr_value_;
  queryaccessdomainnamereq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryAccessDomainNameReq_USR& Req::queryaccessdomainnamereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryAccessDomainNameReq_USR_Value)
  return queryaccessdomainnamereq_usr_value_ != NULL ? *queryaccessdomainnamereq_usr_value_
                         : *::Interactive::Message::QueryAccessDomainNameReq_USR::internal_default_instance();
}
::Interactive::Message::QueryAccessDomainNameReq_USR* Req::mutable_queryaccessdomainnamereq_usr_value() {
  
  if (queryaccessdomainnamereq_usr_value_ == NULL) {
    queryaccessdomainnamereq_usr_value_ = new ::Interactive::Message::QueryAccessDomainNameReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryAccessDomainNameReq_USR_Value)
  return queryaccessdomainnamereq_usr_value_;
}
::Interactive::Message::QueryAccessDomainNameReq_USR* Req::release_queryaccessdomainnamereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryAccessDomainNameReq_USR_Value)
  
  ::Interactive::Message::QueryAccessDomainNameReq_USR* temp = queryaccessdomainnamereq_usr_value_;
  queryaccessdomainnamereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryaccessdomainnamereq_usr_value(::Interactive::Message::QueryAccessDomainNameReq_USR* queryaccessdomainnamereq_usr_value) {
  delete queryaccessdomainnamereq_usr_value_;
  queryaccessdomainnamereq_usr_value_ = queryaccessdomainnamereq_usr_value;
  if (queryaccessdomainnamereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryAccessDomainNameReq_USR_Value)
}

// .Interactive.Message.QueryAppUpgradeReq_USR QueryAppUpgradeReq_USR_Value = 360;
bool Req::has_queryappupgradereq_usr_value() const {
  return this != internal_default_instance() && queryappupgradereq_usr_value_ != NULL;
}
void Req::clear_queryappupgradereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryappupgradereq_usr_value_ != NULL) delete queryappupgradereq_usr_value_;
  queryappupgradereq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryAppUpgradeReq_USR& Req::queryappupgradereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryAppUpgradeReq_USR_Value)
  return queryappupgradereq_usr_value_ != NULL ? *queryappupgradereq_usr_value_
                         : *::Interactive::Message::QueryAppUpgradeReq_USR::internal_default_instance();
}
::Interactive::Message::QueryAppUpgradeReq_USR* Req::mutable_queryappupgradereq_usr_value() {
  
  if (queryappupgradereq_usr_value_ == NULL) {
    queryappupgradereq_usr_value_ = new ::Interactive::Message::QueryAppUpgradeReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryAppUpgradeReq_USR_Value)
  return queryappupgradereq_usr_value_;
}
::Interactive::Message::QueryAppUpgradeReq_USR* Req::release_queryappupgradereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryAppUpgradeReq_USR_Value)
  
  ::Interactive::Message::QueryAppUpgradeReq_USR* temp = queryappupgradereq_usr_value_;
  queryappupgradereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryappupgradereq_usr_value(::Interactive::Message::QueryAppUpgradeReq_USR* queryappupgradereq_usr_value) {
  delete queryappupgradereq_usr_value_;
  queryappupgradereq_usr_value_ = queryappupgradereq_usr_value;
  if (queryappupgradereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryAppUpgradeReq_USR_Value)
}

// .Interactive.Message.QueryIfP2pIDValidReq_USR QueryIfP2pIDValidReq_USR_Value = 370;
bool Req::has_queryifp2pidvalidreq_usr_value() const {
  return this != internal_default_instance() && queryifp2pidvalidreq_usr_value_ != NULL;
}
void Req::clear_queryifp2pidvalidreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryifp2pidvalidreq_usr_value_ != NULL) delete queryifp2pidvalidreq_usr_value_;
  queryifp2pidvalidreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryIfP2pIDValidReq_USR& Req::queryifp2pidvalidreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryIfP2pIDValidReq_USR_Value)
  return queryifp2pidvalidreq_usr_value_ != NULL ? *queryifp2pidvalidreq_usr_value_
                         : *::Interactive::Message::QueryIfP2pIDValidReq_USR::internal_default_instance();
}
::Interactive::Message::QueryIfP2pIDValidReq_USR* Req::mutable_queryifp2pidvalidreq_usr_value() {
  
  if (queryifp2pidvalidreq_usr_value_ == NULL) {
    queryifp2pidvalidreq_usr_value_ = new ::Interactive::Message::QueryIfP2pIDValidReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryIfP2pIDValidReq_USR_Value)
  return queryifp2pidvalidreq_usr_value_;
}
::Interactive::Message::QueryIfP2pIDValidReq_USR* Req::release_queryifp2pidvalidreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryIfP2pIDValidReq_USR_Value)
  
  ::Interactive::Message::QueryIfP2pIDValidReq_USR* temp = queryifp2pidvalidreq_usr_value_;
  queryifp2pidvalidreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryifp2pidvalidreq_usr_value(::Interactive::Message::QueryIfP2pIDValidReq_USR* queryifp2pidvalidreq_usr_value) {
  delete queryifp2pidvalidreq_usr_value_;
  queryifp2pidvalidreq_usr_value_ = queryifp2pidvalidreq_usr_value;
  if (queryifp2pidvalidreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryIfP2pIDValidReq_USR_Value)
}

// .Interactive.Message.QueryAllDeviceEventReq_USR QueryAllDeviceEventReq_USR_Value = 400;
bool Req::has_queryalldeviceeventreq_usr_value() const {
  return this != internal_default_instance() && queryalldeviceeventreq_usr_value_ != NULL;
}
void Req::clear_queryalldeviceeventreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryalldeviceeventreq_usr_value_ != NULL) delete queryalldeviceeventreq_usr_value_;
  queryalldeviceeventreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryAllDeviceEventReq_USR& Req::queryalldeviceeventreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryAllDeviceEventReq_USR_Value)
  return queryalldeviceeventreq_usr_value_ != NULL ? *queryalldeviceeventreq_usr_value_
                         : *::Interactive::Message::QueryAllDeviceEventReq_USR::internal_default_instance();
}
::Interactive::Message::QueryAllDeviceEventReq_USR* Req::mutable_queryalldeviceeventreq_usr_value() {
  
  if (queryalldeviceeventreq_usr_value_ == NULL) {
    queryalldeviceeventreq_usr_value_ = new ::Interactive::Message::QueryAllDeviceEventReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryAllDeviceEventReq_USR_Value)
  return queryalldeviceeventreq_usr_value_;
}
::Interactive::Message::QueryAllDeviceEventReq_USR* Req::release_queryalldeviceeventreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryAllDeviceEventReq_USR_Value)
  
  ::Interactive::Message::QueryAllDeviceEventReq_USR* temp = queryalldeviceeventreq_usr_value_;
  queryalldeviceeventreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryalldeviceeventreq_usr_value(::Interactive::Message::QueryAllDeviceEventReq_USR* queryalldeviceeventreq_usr_value) {
  delete queryalldeviceeventreq_usr_value_;
  queryalldeviceeventreq_usr_value_ = queryalldeviceeventreq_usr_value;
  if (queryalldeviceeventreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryAllDeviceEventReq_USR_Value)
}

// .Interactive.Message.DeleteDeviceEventReq_USR DeleteDeviceEventReq_USR_Value = 410;
bool Req::has_deletedeviceeventreq_usr_value() const {
  return this != internal_default_instance() && deletedeviceeventreq_usr_value_ != NULL;
}
void Req::clear_deletedeviceeventreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletedeviceeventreq_usr_value_ != NULL) delete deletedeviceeventreq_usr_value_;
  deletedeviceeventreq_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteDeviceEventReq_USR& Req::deletedeviceeventreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeleteDeviceEventReq_USR_Value)
  return deletedeviceeventreq_usr_value_ != NULL ? *deletedeviceeventreq_usr_value_
                         : *::Interactive::Message::DeleteDeviceEventReq_USR::internal_default_instance();
}
::Interactive::Message::DeleteDeviceEventReq_USR* Req::mutable_deletedeviceeventreq_usr_value() {
  
  if (deletedeviceeventreq_usr_value_ == NULL) {
    deletedeviceeventreq_usr_value_ = new ::Interactive::Message::DeleteDeviceEventReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeleteDeviceEventReq_USR_Value)
  return deletedeviceeventreq_usr_value_;
}
::Interactive::Message::DeleteDeviceEventReq_USR* Req::release_deletedeviceeventreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeleteDeviceEventReq_USR_Value)
  
  ::Interactive::Message::DeleteDeviceEventReq_USR* temp = deletedeviceeventreq_usr_value_;
  deletedeviceeventreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deletedeviceeventreq_usr_value(::Interactive::Message::DeleteDeviceEventReq_USR* deletedeviceeventreq_usr_value) {
  delete deletedeviceeventreq_usr_value_;
  deletedeviceeventreq_usr_value_ = deletedeviceeventreq_usr_value;
  if (deletedeviceeventreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeleteDeviceEventReq_USR_Value)
}

// .Interactive.Message.ModifyDeviceEventReq_USR ModifyDeviceEventReq_USR_Value = 420;
bool Req::has_modifydeviceeventreq_usr_value() const {
  return this != internal_default_instance() && modifydeviceeventreq_usr_value_ != NULL;
}
void Req::clear_modifydeviceeventreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydeviceeventreq_usr_value_ != NULL) delete modifydeviceeventreq_usr_value_;
  modifydeviceeventreq_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyDeviceEventReq_USR& Req::modifydeviceeventreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyDeviceEventReq_USR_Value)
  return modifydeviceeventreq_usr_value_ != NULL ? *modifydeviceeventreq_usr_value_
                         : *::Interactive::Message::ModifyDeviceEventReq_USR::internal_default_instance();
}
::Interactive::Message::ModifyDeviceEventReq_USR* Req::mutable_modifydeviceeventreq_usr_value() {
  
  if (modifydeviceeventreq_usr_value_ == NULL) {
    modifydeviceeventreq_usr_value_ = new ::Interactive::Message::ModifyDeviceEventReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyDeviceEventReq_USR_Value)
  return modifydeviceeventreq_usr_value_;
}
::Interactive::Message::ModifyDeviceEventReq_USR* Req::release_modifydeviceeventreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyDeviceEventReq_USR_Value)
  
  ::Interactive::Message::ModifyDeviceEventReq_USR* temp = modifydeviceeventreq_usr_value_;
  modifydeviceeventreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifydeviceeventreq_usr_value(::Interactive::Message::ModifyDeviceEventReq_USR* modifydeviceeventreq_usr_value) {
  delete modifydeviceeventreq_usr_value_;
  modifydeviceeventreq_usr_value_ = modifydeviceeventreq_usr_value;
  if (modifydeviceeventreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyDeviceEventReq_USR_Value)
}

// .Interactive.Message.AddStorageDetailReq_USR AddStorageDetailReq_USR_Value = 700;
bool Req::has_addstoragedetailreq_usr_value() const {
  return this != internal_default_instance() && addstoragedetailreq_usr_value_ != NULL;
}
void Req::clear_addstoragedetailreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && addstoragedetailreq_usr_value_ != NULL) delete addstoragedetailreq_usr_value_;
  addstoragedetailreq_usr_value_ = NULL;
}
const ::Interactive::Message::AddStorageDetailReq_USR& Req::addstoragedetailreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddStorageDetailReq_USR_Value)
  return addstoragedetailreq_usr_value_ != NULL ? *addstoragedetailreq_usr_value_
                         : *::Interactive::Message::AddStorageDetailReq_USR::internal_default_instance();
}
::Interactive::Message::AddStorageDetailReq_USR* Req::mutable_addstoragedetailreq_usr_value() {
  
  if (addstoragedetailreq_usr_value_ == NULL) {
    addstoragedetailreq_usr_value_ = new ::Interactive::Message::AddStorageDetailReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddStorageDetailReq_USR_Value)
  return addstoragedetailreq_usr_value_;
}
::Interactive::Message::AddStorageDetailReq_USR* Req::release_addstoragedetailreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddStorageDetailReq_USR_Value)
  
  ::Interactive::Message::AddStorageDetailReq_USR* temp = addstoragedetailreq_usr_value_;
  addstoragedetailreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_addstoragedetailreq_usr_value(::Interactive::Message::AddStorageDetailReq_USR* addstoragedetailreq_usr_value) {
  delete addstoragedetailreq_usr_value_;
  addstoragedetailreq_usr_value_ = addstoragedetailreq_usr_value;
  if (addstoragedetailreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddStorageDetailReq_USR_Value)
}

// .Interactive.Message.DeleteStorageDetailReq_USR DeleteStorageDetailReq_USR_Value = 710;
bool Req::has_deletestoragedetailreq_usr_value() const {
  return this != internal_default_instance() && deletestoragedetailreq_usr_value_ != NULL;
}
void Req::clear_deletestoragedetailreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletestoragedetailreq_usr_value_ != NULL) delete deletestoragedetailreq_usr_value_;
  deletestoragedetailreq_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteStorageDetailReq_USR& Req::deletestoragedetailreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeleteStorageDetailReq_USR_Value)
  return deletestoragedetailreq_usr_value_ != NULL ? *deletestoragedetailreq_usr_value_
                         : *::Interactive::Message::DeleteStorageDetailReq_USR::internal_default_instance();
}
::Interactive::Message::DeleteStorageDetailReq_USR* Req::mutable_deletestoragedetailreq_usr_value() {
  
  if (deletestoragedetailreq_usr_value_ == NULL) {
    deletestoragedetailreq_usr_value_ = new ::Interactive::Message::DeleteStorageDetailReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeleteStorageDetailReq_USR_Value)
  return deletestoragedetailreq_usr_value_;
}
::Interactive::Message::DeleteStorageDetailReq_USR* Req::release_deletestoragedetailreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeleteStorageDetailReq_USR_Value)
  
  ::Interactive::Message::DeleteStorageDetailReq_USR* temp = deletestoragedetailreq_usr_value_;
  deletestoragedetailreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deletestoragedetailreq_usr_value(::Interactive::Message::DeleteStorageDetailReq_USR* deletestoragedetailreq_usr_value) {
  delete deletestoragedetailreq_usr_value_;
  deletestoragedetailreq_usr_value_ = deletestoragedetailreq_usr_value;
  if (deletestoragedetailreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeleteStorageDetailReq_USR_Value)
}

// .Interactive.Message.ModifyStorageDetailReq_USR ModifyStorageDetailReq_USR_Value = 720;
bool Req::has_modifystoragedetailreq_usr_value() const {
  return this != internal_default_instance() && modifystoragedetailreq_usr_value_ != NULL;
}
void Req::clear_modifystoragedetailreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifystoragedetailreq_usr_value_ != NULL) delete modifystoragedetailreq_usr_value_;
  modifystoragedetailreq_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyStorageDetailReq_USR& Req::modifystoragedetailreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyStorageDetailReq_USR_Value)
  return modifystoragedetailreq_usr_value_ != NULL ? *modifystoragedetailreq_usr_value_
                         : *::Interactive::Message::ModifyStorageDetailReq_USR::internal_default_instance();
}
::Interactive::Message::ModifyStorageDetailReq_USR* Req::mutable_modifystoragedetailreq_usr_value() {
  
  if (modifystoragedetailreq_usr_value_ == NULL) {
    modifystoragedetailreq_usr_value_ = new ::Interactive::Message::ModifyStorageDetailReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyStorageDetailReq_USR_Value)
  return modifystoragedetailreq_usr_value_;
}
::Interactive::Message::ModifyStorageDetailReq_USR* Req::release_modifystoragedetailreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyStorageDetailReq_USR_Value)
  
  ::Interactive::Message::ModifyStorageDetailReq_USR* temp = modifystoragedetailreq_usr_value_;
  modifystoragedetailreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifystoragedetailreq_usr_value(::Interactive::Message::ModifyStorageDetailReq_USR* modifystoragedetailreq_usr_value) {
  delete modifystoragedetailreq_usr_value_;
  modifystoragedetailreq_usr_value_ = modifystoragedetailreq_usr_value;
  if (modifystoragedetailreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyStorageDetailReq_USR_Value)
}

// .Interactive.Message.QueryStorageDetailReq_USR QueryStorageDetailReq_USR_Value = 730;
bool Req::has_querystoragedetailreq_usr_value() const {
  return this != internal_default_instance() && querystoragedetailreq_usr_value_ != NULL;
}
void Req::clear_querystoragedetailreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querystoragedetailreq_usr_value_ != NULL) delete querystoragedetailreq_usr_value_;
  querystoragedetailreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryStorageDetailReq_USR& Req::querystoragedetailreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryStorageDetailReq_USR_Value)
  return querystoragedetailreq_usr_value_ != NULL ? *querystoragedetailreq_usr_value_
                         : *::Interactive::Message::QueryStorageDetailReq_USR::internal_default_instance();
}
::Interactive::Message::QueryStorageDetailReq_USR* Req::mutable_querystoragedetailreq_usr_value() {
  
  if (querystoragedetailreq_usr_value_ == NULL) {
    querystoragedetailreq_usr_value_ = new ::Interactive::Message::QueryStorageDetailReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryStorageDetailReq_USR_Value)
  return querystoragedetailreq_usr_value_;
}
::Interactive::Message::QueryStorageDetailReq_USR* Req::release_querystoragedetailreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryStorageDetailReq_USR_Value)
  
  ::Interactive::Message::QueryStorageDetailReq_USR* temp = querystoragedetailreq_usr_value_;
  querystoragedetailreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querystoragedetailreq_usr_value(::Interactive::Message::QueryStorageDetailReq_USR* querystoragedetailreq_usr_value) {
  delete querystoragedetailreq_usr_value_;
  querystoragedetailreq_usr_value_ = querystoragedetailreq_usr_value;
  if (querystoragedetailreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryStorageDetailReq_USR_Value)
}

// .Interactive.Message.QueryRegionStorageInfoReq_USR QueryRegionStorageInfoReq_USR_Value = 740;
bool Req::has_queryregionstorageinforeq_usr_value() const {
  return this != internal_default_instance() && queryregionstorageinforeq_usr_value_ != NULL;
}
void Req::clear_queryregionstorageinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryregionstorageinforeq_usr_value_ != NULL) delete queryregionstorageinforeq_usr_value_;
  queryregionstorageinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryRegionStorageInfoReq_USR& Req::queryregionstorageinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryRegionStorageInfoReq_USR_Value)
  return queryregionstorageinforeq_usr_value_ != NULL ? *queryregionstorageinforeq_usr_value_
                         : *::Interactive::Message::QueryRegionStorageInfoReq_USR::internal_default_instance();
}
::Interactive::Message::QueryRegionStorageInfoReq_USR* Req::mutable_queryregionstorageinforeq_usr_value() {
  
  if (queryregionstorageinforeq_usr_value_ == NULL) {
    queryregionstorageinforeq_usr_value_ = new ::Interactive::Message::QueryRegionStorageInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryRegionStorageInfoReq_USR_Value)
  return queryregionstorageinforeq_usr_value_;
}
::Interactive::Message::QueryRegionStorageInfoReq_USR* Req::release_queryregionstorageinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryRegionStorageInfoReq_USR_Value)
  
  ::Interactive::Message::QueryRegionStorageInfoReq_USR* temp = queryregionstorageinforeq_usr_value_;
  queryregionstorageinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryregionstorageinforeq_usr_value(::Interactive::Message::QueryRegionStorageInfoReq_USR* queryregionstorageinforeq_usr_value) {
  delete queryregionstorageinforeq_usr_value_;
  queryregionstorageinforeq_usr_value_ = queryregionstorageinforeq_usr_value;
  if (queryregionstorageinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryRegionStorageInfoReq_USR_Value)
}

// .Interactive.Message.QueryDeviceInfoMultiReq_USR QueryDeviceInfoMultiReq_USR_Value = 1100;
bool Req::has_querydeviceinfomultireq_usr_value() const {
  return this != internal_default_instance() && querydeviceinfomultireq_usr_value_ != NULL;
}
void Req::clear_querydeviceinfomultireq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydeviceinfomultireq_usr_value_ != NULL) delete querydeviceinfomultireq_usr_value_;
  querydeviceinfomultireq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceInfoMultiReq_USR& Req::querydeviceinfomultireq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDeviceInfoMultiReq_USR_Value)
  return querydeviceinfomultireq_usr_value_ != NULL ? *querydeviceinfomultireq_usr_value_
                         : *::Interactive::Message::QueryDeviceInfoMultiReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDeviceInfoMultiReq_USR* Req::mutable_querydeviceinfomultireq_usr_value() {
  
  if (querydeviceinfomultireq_usr_value_ == NULL) {
    querydeviceinfomultireq_usr_value_ = new ::Interactive::Message::QueryDeviceInfoMultiReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDeviceInfoMultiReq_USR_Value)
  return querydeviceinfomultireq_usr_value_;
}
::Interactive::Message::QueryDeviceInfoMultiReq_USR* Req::release_querydeviceinfomultireq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDeviceInfoMultiReq_USR_Value)
  
  ::Interactive::Message::QueryDeviceInfoMultiReq_USR* temp = querydeviceinfomultireq_usr_value_;
  querydeviceinfomultireq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydeviceinfomultireq_usr_value(::Interactive::Message::QueryDeviceInfoMultiReq_USR* querydeviceinfomultireq_usr_value) {
  delete querydeviceinfomultireq_usr_value_;
  querydeviceinfomultireq_usr_value_ = querydeviceinfomultireq_usr_value;
  if (querydeviceinfomultireq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDeviceInfoMultiReq_USR_Value)
}

// .Interactive.Message.RegisterCmsCallReq_USR RegisterCmsCallReq_USR_Value = 1101;
bool Req::has_registercmscallreq_usr_value() const {
  return this != internal_default_instance() && registercmscallreq_usr_value_ != NULL;
}
void Req::clear_registercmscallreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && registercmscallreq_usr_value_ != NULL) delete registercmscallreq_usr_value_;
  registercmscallreq_usr_value_ = NULL;
}
const ::Interactive::Message::RegisterCmsCallReq_USR& Req::registercmscallreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.RegisterCmsCallReq_USR_Value)
  return registercmscallreq_usr_value_ != NULL ? *registercmscallreq_usr_value_
                         : *::Interactive::Message::RegisterCmsCallReq_USR::internal_default_instance();
}
::Interactive::Message::RegisterCmsCallReq_USR* Req::mutable_registercmscallreq_usr_value() {
  
  if (registercmscallreq_usr_value_ == NULL) {
    registercmscallreq_usr_value_ = new ::Interactive::Message::RegisterCmsCallReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.RegisterCmsCallReq_USR_Value)
  return registercmscallreq_usr_value_;
}
::Interactive::Message::RegisterCmsCallReq_USR* Req::release_registercmscallreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.RegisterCmsCallReq_USR_Value)
  
  ::Interactive::Message::RegisterCmsCallReq_USR* temp = registercmscallreq_usr_value_;
  registercmscallreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_registercmscallreq_usr_value(::Interactive::Message::RegisterCmsCallReq_USR* registercmscallreq_usr_value) {
  delete registercmscallreq_usr_value_;
  registercmscallreq_usr_value_ = registercmscallreq_usr_value;
  if (registercmscallreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.RegisterCmsCallReq_USR_Value)
}

// .Interactive.Message.UnregisterCmsCallReq_USR UnregisterCmsCallReq_USR_Value = 1102;
bool Req::has_unregistercmscallreq_usr_value() const {
  return this != internal_default_instance() && unregistercmscallreq_usr_value_ != NULL;
}
void Req::clear_unregistercmscallreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregistercmscallreq_usr_value_ != NULL) delete unregistercmscallreq_usr_value_;
  unregistercmscallreq_usr_value_ = NULL;
}
const ::Interactive::Message::UnregisterCmsCallReq_USR& Req::unregistercmscallreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.UnregisterCmsCallReq_USR_Value)
  return unregistercmscallreq_usr_value_ != NULL ? *unregistercmscallreq_usr_value_
                         : *::Interactive::Message::UnregisterCmsCallReq_USR::internal_default_instance();
}
::Interactive::Message::UnregisterCmsCallReq_USR* Req::mutable_unregistercmscallreq_usr_value() {
  
  if (unregistercmscallreq_usr_value_ == NULL) {
    unregistercmscallreq_usr_value_ = new ::Interactive::Message::UnregisterCmsCallReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.UnregisterCmsCallReq_USR_Value)
  return unregistercmscallreq_usr_value_;
}
::Interactive::Message::UnregisterCmsCallReq_USR* Req::release_unregistercmscallreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.UnregisterCmsCallReq_USR_Value)
  
  ::Interactive::Message::UnregisterCmsCallReq_USR* temp = unregistercmscallreq_usr_value_;
  unregistercmscallreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_unregistercmscallreq_usr_value(::Interactive::Message::UnregisterCmsCallReq_USR* unregistercmscallreq_usr_value) {
  delete unregistercmscallreq_usr_value_;
  unregistercmscallreq_usr_value_ = unregistercmscallreq_usr_value;
  if (unregistercmscallreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.UnregisterCmsCallReq_USR_Value)
}

// .Interactive.Message.QuerySharingDeviceLimitReq_USR QuerySharingDeviceLimitReq_USR_Value = 1103;
bool Req::has_querysharingdevicelimitreq_usr_value() const {
  return this != internal_default_instance() && querysharingdevicelimitreq_usr_value_ != NULL;
}
void Req::clear_querysharingdevicelimitreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querysharingdevicelimitreq_usr_value_ != NULL) delete querysharingdevicelimitreq_usr_value_;
  querysharingdevicelimitreq_usr_value_ = NULL;
}
const ::Interactive::Message::QuerySharingDeviceLimitReq_USR& Req::querysharingdevicelimitreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QuerySharingDeviceLimitReq_USR_Value)
  return querysharingdevicelimitreq_usr_value_ != NULL ? *querysharingdevicelimitreq_usr_value_
                         : *::Interactive::Message::QuerySharingDeviceLimitReq_USR::internal_default_instance();
}
::Interactive::Message::QuerySharingDeviceLimitReq_USR* Req::mutable_querysharingdevicelimitreq_usr_value() {
  
  if (querysharingdevicelimitreq_usr_value_ == NULL) {
    querysharingdevicelimitreq_usr_value_ = new ::Interactive::Message::QuerySharingDeviceLimitReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QuerySharingDeviceLimitReq_USR_Value)
  return querysharingdevicelimitreq_usr_value_;
}
::Interactive::Message::QuerySharingDeviceLimitReq_USR* Req::release_querysharingdevicelimitreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QuerySharingDeviceLimitReq_USR_Value)
  
  ::Interactive::Message::QuerySharingDeviceLimitReq_USR* temp = querysharingdevicelimitreq_usr_value_;
  querysharingdevicelimitreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querysharingdevicelimitreq_usr_value(::Interactive::Message::QuerySharingDeviceLimitReq_USR* querysharingdevicelimitreq_usr_value) {
  delete querysharingdevicelimitreq_usr_value_;
  querysharingdevicelimitreq_usr_value_ = querysharingdevicelimitreq_usr_value;
  if (querysharingdevicelimitreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QuerySharingDeviceLimitReq_USR_Value)
}

// .Interactive.Message.QueryDeviceCapacityReq_USR QueryDeviceCapacityReq_USR_Value = 1104;
bool Req::has_querydevicecapacityreq_usr_value() const {
  return this != internal_default_instance() && querydevicecapacityreq_usr_value_ != NULL;
}
void Req::clear_querydevicecapacityreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevicecapacityreq_usr_value_ != NULL) delete querydevicecapacityreq_usr_value_;
  querydevicecapacityreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceCapacityReq_USR& Req::querydevicecapacityreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDeviceCapacityReq_USR_Value)
  return querydevicecapacityreq_usr_value_ != NULL ? *querydevicecapacityreq_usr_value_
                         : *::Interactive::Message::QueryDeviceCapacityReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDeviceCapacityReq_USR* Req::mutable_querydevicecapacityreq_usr_value() {
  
  if (querydevicecapacityreq_usr_value_ == NULL) {
    querydevicecapacityreq_usr_value_ = new ::Interactive::Message::QueryDeviceCapacityReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDeviceCapacityReq_USR_Value)
  return querydevicecapacityreq_usr_value_;
}
::Interactive::Message::QueryDeviceCapacityReq_USR* Req::release_querydevicecapacityreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDeviceCapacityReq_USR_Value)
  
  ::Interactive::Message::QueryDeviceCapacityReq_USR* temp = querydevicecapacityreq_usr_value_;
  querydevicecapacityreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydevicecapacityreq_usr_value(::Interactive::Message::QueryDeviceCapacityReq_USR* querydevicecapacityreq_usr_value) {
  delete querydevicecapacityreq_usr_value_;
  querydevicecapacityreq_usr_value_ = querydevicecapacityreq_usr_value;
  if (querydevicecapacityreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDeviceCapacityReq_USR_Value)
}

// .Interactive.Message.QueryALLDeviceCapacityReq_USR QueryALLDeviceCapacityReq_USR_Value = 1105;
bool Req::has_queryalldevicecapacityreq_usr_value() const {
  return this != internal_default_instance() && queryalldevicecapacityreq_usr_value_ != NULL;
}
void Req::clear_queryalldevicecapacityreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryalldevicecapacityreq_usr_value_ != NULL) delete queryalldevicecapacityreq_usr_value_;
  queryalldevicecapacityreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryALLDeviceCapacityReq_USR& Req::queryalldevicecapacityreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryALLDeviceCapacityReq_USR_Value)
  return queryalldevicecapacityreq_usr_value_ != NULL ? *queryalldevicecapacityreq_usr_value_
                         : *::Interactive::Message::QueryALLDeviceCapacityReq_USR::internal_default_instance();
}
::Interactive::Message::QueryALLDeviceCapacityReq_USR* Req::mutable_queryalldevicecapacityreq_usr_value() {
  
  if (queryalldevicecapacityreq_usr_value_ == NULL) {
    queryalldevicecapacityreq_usr_value_ = new ::Interactive::Message::QueryALLDeviceCapacityReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryALLDeviceCapacityReq_USR_Value)
  return queryalldevicecapacityreq_usr_value_;
}
::Interactive::Message::QueryALLDeviceCapacityReq_USR* Req::release_queryalldevicecapacityreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryALLDeviceCapacityReq_USR_Value)
  
  ::Interactive::Message::QueryALLDeviceCapacityReq_USR* temp = queryalldevicecapacityreq_usr_value_;
  queryalldevicecapacityreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryalldevicecapacityreq_usr_value(::Interactive::Message::QueryALLDeviceCapacityReq_USR* queryalldevicecapacityreq_usr_value) {
  delete queryalldevicecapacityreq_usr_value_;
  queryalldevicecapacityreq_usr_value_ = queryalldevicecapacityreq_usr_value;
  if (queryalldevicecapacityreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryALLDeviceCapacityReq_USR_Value)
}

// .Interactive.Message.QueryDeviceP2pIDReq_USR QueryDeviceP2pIDReq_USR_Value = 1106;
bool Req::has_querydevicep2pidreq_usr_value() const {
  return this != internal_default_instance() && querydevicep2pidreq_usr_value_ != NULL;
}
void Req::clear_querydevicep2pidreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevicep2pidreq_usr_value_ != NULL) delete querydevicep2pidreq_usr_value_;
  querydevicep2pidreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceP2pIDReq_USR& Req::querydevicep2pidreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDeviceP2pIDReq_USR_Value)
  return querydevicep2pidreq_usr_value_ != NULL ? *querydevicep2pidreq_usr_value_
                         : *::Interactive::Message::QueryDeviceP2pIDReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDeviceP2pIDReq_USR* Req::mutable_querydevicep2pidreq_usr_value() {
  
  if (querydevicep2pidreq_usr_value_ == NULL) {
    querydevicep2pidreq_usr_value_ = new ::Interactive::Message::QueryDeviceP2pIDReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDeviceP2pIDReq_USR_Value)
  return querydevicep2pidreq_usr_value_;
}
::Interactive::Message::QueryDeviceP2pIDReq_USR* Req::release_querydevicep2pidreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDeviceP2pIDReq_USR_Value)
  
  ::Interactive::Message::QueryDeviceP2pIDReq_USR* temp = querydevicep2pidreq_usr_value_;
  querydevicep2pidreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydevicep2pidreq_usr_value(::Interactive::Message::QueryDeviceP2pIDReq_USR* querydevicep2pidreq_usr_value) {
  delete querydevicep2pidreq_usr_value_;
  querydevicep2pidreq_usr_value_ = querydevicep2pidreq_usr_value;
  if (querydevicep2pidreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDeviceP2pIDReq_USR_Value)
}

// .Interactive.Message.UploadUserCfgReq_USR UploadUserCfgReq_USR_Value = 1107;
bool Req::has_uploadusercfgreq_usr_value() const {
  return this != internal_default_instance() && uploadusercfgreq_usr_value_ != NULL;
}
void Req::clear_uploadusercfgreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && uploadusercfgreq_usr_value_ != NULL) delete uploadusercfgreq_usr_value_;
  uploadusercfgreq_usr_value_ = NULL;
}
const ::Interactive::Message::UploadUserCfgReq_USR& Req::uploadusercfgreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.UploadUserCfgReq_USR_Value)
  return uploadusercfgreq_usr_value_ != NULL ? *uploadusercfgreq_usr_value_
                         : *::Interactive::Message::UploadUserCfgReq_USR::internal_default_instance();
}
::Interactive::Message::UploadUserCfgReq_USR* Req::mutable_uploadusercfgreq_usr_value() {
  
  if (uploadusercfgreq_usr_value_ == NULL) {
    uploadusercfgreq_usr_value_ = new ::Interactive::Message::UploadUserCfgReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.UploadUserCfgReq_USR_Value)
  return uploadusercfgreq_usr_value_;
}
::Interactive::Message::UploadUserCfgReq_USR* Req::release_uploadusercfgreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.UploadUserCfgReq_USR_Value)
  
  ::Interactive::Message::UploadUserCfgReq_USR* temp = uploadusercfgreq_usr_value_;
  uploadusercfgreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_uploadusercfgreq_usr_value(::Interactive::Message::UploadUserCfgReq_USR* uploadusercfgreq_usr_value) {
  delete uploadusercfgreq_usr_value_;
  uploadusercfgreq_usr_value_ = uploadusercfgreq_usr_value;
  if (uploadusercfgreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.UploadUserCfgReq_USR_Value)
}

// .Interactive.Message.QueryUserCfgReq_USR QueryUserCfgReq_USR_Value = 1108;
bool Req::has_queryusercfgreq_usr_value() const {
  return this != internal_default_instance() && queryusercfgreq_usr_value_ != NULL;
}
void Req::clear_queryusercfgreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusercfgreq_usr_value_ != NULL) delete queryusercfgreq_usr_value_;
  queryusercfgreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUserCfgReq_USR& Req::queryusercfgreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUserCfgReq_USR_Value)
  return queryusercfgreq_usr_value_ != NULL ? *queryusercfgreq_usr_value_
                         : *::Interactive::Message::QueryUserCfgReq_USR::internal_default_instance();
}
::Interactive::Message::QueryUserCfgReq_USR* Req::mutable_queryusercfgreq_usr_value() {
  
  if (queryusercfgreq_usr_value_ == NULL) {
    queryusercfgreq_usr_value_ = new ::Interactive::Message::QueryUserCfgReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUserCfgReq_USR_Value)
  return queryusercfgreq_usr_value_;
}
::Interactive::Message::QueryUserCfgReq_USR* Req::release_queryusercfgreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUserCfgReq_USR_Value)
  
  ::Interactive::Message::QueryUserCfgReq_USR* temp = queryusercfgreq_usr_value_;
  queryusercfgreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryusercfgreq_usr_value(::Interactive::Message::QueryUserCfgReq_USR* queryusercfgreq_usr_value) {
  delete queryusercfgreq_usr_value_;
  queryusercfgreq_usr_value_ = queryusercfgreq_usr_value;
  if (queryusercfgreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUserCfgReq_USR_Value)
}

// .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
bool Req::has_getonlinedevinforeq_inner_value() const {
  return this != internal_default_instance() && getonlinedevinforeq_inner_value_ != NULL;
}
void Req::clear_getonlinedevinforeq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlinedevinforeq_inner_value_ != NULL) delete getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineDevInfoReq_INNER& Req::getonlinedevinforeq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  return getonlinedevinforeq_inner_value_ != NULL ? *getonlinedevinforeq_inner_value_
                         : *::Interactive::Message::GetOnlineDevInfoReq_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineDevInfoReq_INNER* Req::mutable_getonlinedevinforeq_inner_value() {
  
  if (getonlinedevinforeq_inner_value_ == NULL) {
    getonlinedevinforeq_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  return getonlinedevinforeq_inner_value_;
}
::Interactive::Message::GetOnlineDevInfoReq_INNER* Req::release_getonlinedevinforeq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  
  ::Interactive::Message::GetOnlineDevInfoReq_INNER* temp = getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_getonlinedevinforeq_inner_value(::Interactive::Message::GetOnlineDevInfoReq_INNER* getonlinedevinforeq_inner_value) {
  delete getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = getonlinedevinforeq_inner_value;
  if (getonlinedevinforeq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
}

// .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
bool Req::has_broadcastonlinedevinfo_inner_value() const {
  return this != internal_default_instance() && broadcastonlinedevinfo_inner_value_ != NULL;
}
void Req::clear_broadcastonlinedevinfo_inner_value() {
  if (GetArenaNoVirtual() == NULL && broadcastonlinedevinfo_inner_value_ != NULL) delete broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = NULL;
}
const ::Interactive::Message::BroadcastOnlineDevInfo_INNER& Req::broadcastonlinedevinfo_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  return broadcastonlinedevinfo_inner_value_ != NULL ? *broadcastonlinedevinfo_inner_value_
                         : *::Interactive::Message::BroadcastOnlineDevInfo_INNER::internal_default_instance();
}
::Interactive::Message::BroadcastOnlineDevInfo_INNER* Req::mutable_broadcastonlinedevinfo_inner_value() {
  
  if (broadcastonlinedevinfo_inner_value_ == NULL) {
    broadcastonlinedevinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineDevInfo_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  return broadcastonlinedevinfo_inner_value_;
}
::Interactive::Message::BroadcastOnlineDevInfo_INNER* Req::release_broadcastonlinedevinfo_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  
  ::Interactive::Message::BroadcastOnlineDevInfo_INNER* temp = broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_broadcastonlinedevinfo_inner_value(::Interactive::Message::BroadcastOnlineDevInfo_INNER* broadcastonlinedevinfo_inner_value) {
  delete broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = broadcastonlinedevinfo_inner_value;
  if (broadcastonlinedevinfo_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
}

// .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
bool Req::has_getonlineuserinforeq_inner_value() const {
  return this != internal_default_instance() && getonlineuserinforeq_inner_value_ != NULL;
}
void Req::clear_getonlineuserinforeq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlineuserinforeq_inner_value_ != NULL) delete getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineUserInfoReq_INNER& Req::getonlineuserinforeq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  return getonlineuserinforeq_inner_value_ != NULL ? *getonlineuserinforeq_inner_value_
                         : *::Interactive::Message::GetOnlineUserInfoReq_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineUserInfoReq_INNER* Req::mutable_getonlineuserinforeq_inner_value() {
  
  if (getonlineuserinforeq_inner_value_ == NULL) {
    getonlineuserinforeq_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  return getonlineuserinforeq_inner_value_;
}
::Interactive::Message::GetOnlineUserInfoReq_INNER* Req::release_getonlineuserinforeq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  
  ::Interactive::Message::GetOnlineUserInfoReq_INNER* temp = getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_getonlineuserinforeq_inner_value(::Interactive::Message::GetOnlineUserInfoReq_INNER* getonlineuserinforeq_inner_value) {
  delete getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = getonlineuserinforeq_inner_value;
  if (getonlineuserinforeq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
}

// .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
bool Req::has_broadcastonlineuserinfo_inner_value() const {
  return this != internal_default_instance() && broadcastonlineuserinfo_inner_value_ != NULL;
}
void Req::clear_broadcastonlineuserinfo_inner_value() {
  if (GetArenaNoVirtual() == NULL && broadcastonlineuserinfo_inner_value_ != NULL) delete broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = NULL;
}
const ::Interactive::Message::BroadcastOnlineUserInfo_INNER& Req::broadcastonlineuserinfo_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  return broadcastonlineuserinfo_inner_value_ != NULL ? *broadcastonlineuserinfo_inner_value_
                         : *::Interactive::Message::BroadcastOnlineUserInfo_INNER::internal_default_instance();
}
::Interactive::Message::BroadcastOnlineUserInfo_INNER* Req::mutable_broadcastonlineuserinfo_inner_value() {
  
  if (broadcastonlineuserinfo_inner_value_ == NULL) {
    broadcastonlineuserinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineUserInfo_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  return broadcastonlineuserinfo_inner_value_;
}
::Interactive::Message::BroadcastOnlineUserInfo_INNER* Req::release_broadcastonlineuserinfo_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  
  ::Interactive::Message::BroadcastOnlineUserInfo_INNER* temp = broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_broadcastonlineuserinfo_inner_value(::Interactive::Message::BroadcastOnlineUserInfo_INNER* broadcastonlineuserinfo_inner_value) {
  delete broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = broadcastonlineuserinfo_inner_value;
  if (broadcastonlineuserinfo_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
}

// .Interactive.Message.GetDeviceAccessRecordReq_INNER GetDeviceAccessRecordReq_INNER_Value = 440;
bool Req::has_getdeviceaccessrecordreq_inner_value() const {
  return this != internal_default_instance() && getdeviceaccessrecordreq_inner_value_ != NULL;
}
void Req::clear_getdeviceaccessrecordreq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getdeviceaccessrecordreq_inner_value_ != NULL) delete getdeviceaccessrecordreq_inner_value_;
  getdeviceaccessrecordreq_inner_value_ = NULL;
}
const ::Interactive::Message::GetDeviceAccessRecordReq_INNER& Req::getdeviceaccessrecordreq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetDeviceAccessRecordReq_INNER_Value)
  return getdeviceaccessrecordreq_inner_value_ != NULL ? *getdeviceaccessrecordreq_inner_value_
                         : *::Interactive::Message::GetDeviceAccessRecordReq_INNER::internal_default_instance();
}
::Interactive::Message::GetDeviceAccessRecordReq_INNER* Req::mutable_getdeviceaccessrecordreq_inner_value() {
  
  if (getdeviceaccessrecordreq_inner_value_ == NULL) {
    getdeviceaccessrecordreq_inner_value_ = new ::Interactive::Message::GetDeviceAccessRecordReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetDeviceAccessRecordReq_INNER_Value)
  return getdeviceaccessrecordreq_inner_value_;
}
::Interactive::Message::GetDeviceAccessRecordReq_INNER* Req::release_getdeviceaccessrecordreq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetDeviceAccessRecordReq_INNER_Value)
  
  ::Interactive::Message::GetDeviceAccessRecordReq_INNER* temp = getdeviceaccessrecordreq_inner_value_;
  getdeviceaccessrecordreq_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_getdeviceaccessrecordreq_inner_value(::Interactive::Message::GetDeviceAccessRecordReq_INNER* getdeviceaccessrecordreq_inner_value) {
  delete getdeviceaccessrecordreq_inner_value_;
  getdeviceaccessrecordreq_inner_value_ = getdeviceaccessrecordreq_inner_value;
  if (getdeviceaccessrecordreq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetDeviceAccessRecordReq_INNER_Value)
}

// .Interactive.Message.GetUserAccessRecordReq_INNER GetUserAccessRecordReq_INNER_Value = 450;
bool Req::has_getuseraccessrecordreq_inner_value() const {
  return this != internal_default_instance() && getuseraccessrecordreq_inner_value_ != NULL;
}
void Req::clear_getuseraccessrecordreq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getuseraccessrecordreq_inner_value_ != NULL) delete getuseraccessrecordreq_inner_value_;
  getuseraccessrecordreq_inner_value_ = NULL;
}
const ::Interactive::Message::GetUserAccessRecordReq_INNER& Req::getuseraccessrecordreq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetUserAccessRecordReq_INNER_Value)
  return getuseraccessrecordreq_inner_value_ != NULL ? *getuseraccessrecordreq_inner_value_
                         : *::Interactive::Message::GetUserAccessRecordReq_INNER::internal_default_instance();
}
::Interactive::Message::GetUserAccessRecordReq_INNER* Req::mutable_getuseraccessrecordreq_inner_value() {
  
  if (getuseraccessrecordreq_inner_value_ == NULL) {
    getuseraccessrecordreq_inner_value_ = new ::Interactive::Message::GetUserAccessRecordReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetUserAccessRecordReq_INNER_Value)
  return getuseraccessrecordreq_inner_value_;
}
::Interactive::Message::GetUserAccessRecordReq_INNER* Req::release_getuseraccessrecordreq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetUserAccessRecordReq_INNER_Value)
  
  ::Interactive::Message::GetUserAccessRecordReq_INNER* temp = getuseraccessrecordreq_inner_value_;
  getuseraccessrecordreq_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_getuseraccessrecordreq_inner_value(::Interactive::Message::GetUserAccessRecordReq_INNER* getuseraccessrecordreq_inner_value) {
  delete getuseraccessrecordreq_inner_value_;
  getuseraccessrecordreq_inner_value_ = getuseraccessrecordreq_inner_value;
  if (getuseraccessrecordreq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetUserAccessRecordReq_INNER_Value)
}

// .Interactive.Message.QueryUploadURLReq_MGR QueryUploadURLReq_MGR_Value = 600;
bool Req::has_queryuploadurlreq_mgr_value() const {
  return this != internal_default_instance() && queryuploadurlreq_mgr_value_ != NULL;
}
void Req::clear_queryuploadurlreq_mgr_value() {
  if (GetArenaNoVirtual() == NULL && queryuploadurlreq_mgr_value_ != NULL) delete queryuploadurlreq_mgr_value_;
  queryuploadurlreq_mgr_value_ = NULL;
}
const ::Interactive::Message::QueryUploadURLReq_MGR& Req::queryuploadurlreq_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUploadURLReq_MGR_Value)
  return queryuploadurlreq_mgr_value_ != NULL ? *queryuploadurlreq_mgr_value_
                         : *::Interactive::Message::QueryUploadURLReq_MGR::internal_default_instance();
}
::Interactive::Message::QueryUploadURLReq_MGR* Req::mutable_queryuploadurlreq_mgr_value() {
  
  if (queryuploadurlreq_mgr_value_ == NULL) {
    queryuploadurlreq_mgr_value_ = new ::Interactive::Message::QueryUploadURLReq_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUploadURLReq_MGR_Value)
  return queryuploadurlreq_mgr_value_;
}
::Interactive::Message::QueryUploadURLReq_MGR* Req::release_queryuploadurlreq_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUploadURLReq_MGR_Value)
  
  ::Interactive::Message::QueryUploadURLReq_MGR* temp = queryuploadurlreq_mgr_value_;
  queryuploadurlreq_mgr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryuploadurlreq_mgr_value(::Interactive::Message::QueryUploadURLReq_MGR* queryuploadurlreq_mgr_value) {
  delete queryuploadurlreq_mgr_value_;
  queryuploadurlreq_mgr_value_ = queryuploadurlreq_mgr_value;
  if (queryuploadurlreq_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUploadURLReq_MGR_Value)
}

// .Interactive.Message.AddConfigurationReq_MGR AddConfigurationReq_MGR_Value = 610;
bool Req::has_addconfigurationreq_mgr_value() const {
  return this != internal_default_instance() && addconfigurationreq_mgr_value_ != NULL;
}
void Req::clear_addconfigurationreq_mgr_value() {
  if (GetArenaNoVirtual() == NULL && addconfigurationreq_mgr_value_ != NULL) delete addconfigurationreq_mgr_value_;
  addconfigurationreq_mgr_value_ = NULL;
}
const ::Interactive::Message::AddConfigurationReq_MGR& Req::addconfigurationreq_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddConfigurationReq_MGR_Value)
  return addconfigurationreq_mgr_value_ != NULL ? *addconfigurationreq_mgr_value_
                         : *::Interactive::Message::AddConfigurationReq_MGR::internal_default_instance();
}
::Interactive::Message::AddConfigurationReq_MGR* Req::mutable_addconfigurationreq_mgr_value() {
  
  if (addconfigurationreq_mgr_value_ == NULL) {
    addconfigurationreq_mgr_value_ = new ::Interactive::Message::AddConfigurationReq_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddConfigurationReq_MGR_Value)
  return addconfigurationreq_mgr_value_;
}
::Interactive::Message::AddConfigurationReq_MGR* Req::release_addconfigurationreq_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddConfigurationReq_MGR_Value)
  
  ::Interactive::Message::AddConfigurationReq_MGR* temp = addconfigurationreq_mgr_value_;
  addconfigurationreq_mgr_value_ = NULL;
  return temp;
}
void Req::set_allocated_addconfigurationreq_mgr_value(::Interactive::Message::AddConfigurationReq_MGR* addconfigurationreq_mgr_value) {
  delete addconfigurationreq_mgr_value_;
  addconfigurationreq_mgr_value_ = addconfigurationreq_mgr_value;
  if (addconfigurationreq_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddConfigurationReq_MGR_Value)
}

// .Interactive.Message.DeleteConfigurationReq_MGR DeleteConfigurationReq_MGR_Value = 620;
bool Req::has_deleteconfigurationreq_mgr_value() const {
  return this != internal_default_instance() && deleteconfigurationreq_mgr_value_ != NULL;
}
void Req::clear_deleteconfigurationreq_mgr_value() {
  if (GetArenaNoVirtual() == NULL && deleteconfigurationreq_mgr_value_ != NULL) delete deleteconfigurationreq_mgr_value_;
  deleteconfigurationreq_mgr_value_ = NULL;
}
const ::Interactive::Message::DeleteConfigurationReq_MGR& Req::deleteconfigurationreq_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeleteConfigurationReq_MGR_Value)
  return deleteconfigurationreq_mgr_value_ != NULL ? *deleteconfigurationreq_mgr_value_
                         : *::Interactive::Message::DeleteConfigurationReq_MGR::internal_default_instance();
}
::Interactive::Message::DeleteConfigurationReq_MGR* Req::mutable_deleteconfigurationreq_mgr_value() {
  
  if (deleteconfigurationreq_mgr_value_ == NULL) {
    deleteconfigurationreq_mgr_value_ = new ::Interactive::Message::DeleteConfigurationReq_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeleteConfigurationReq_MGR_Value)
  return deleteconfigurationreq_mgr_value_;
}
::Interactive::Message::DeleteConfigurationReq_MGR* Req::release_deleteconfigurationreq_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeleteConfigurationReq_MGR_Value)
  
  ::Interactive::Message::DeleteConfigurationReq_MGR* temp = deleteconfigurationreq_mgr_value_;
  deleteconfigurationreq_mgr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deleteconfigurationreq_mgr_value(::Interactive::Message::DeleteConfigurationReq_MGR* deleteconfigurationreq_mgr_value) {
  delete deleteconfigurationreq_mgr_value_;
  deleteconfigurationreq_mgr_value_ = deleteconfigurationreq_mgr_value;
  if (deleteconfigurationreq_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeleteConfigurationReq_MGR_Value)
}

// .Interactive.Message.ModifyConfigurationReq_MGR ModifyConfigurationReq_MGR_Value = 630;
bool Req::has_modifyconfigurationreq_mgr_value() const {
  return this != internal_default_instance() && modifyconfigurationreq_mgr_value_ != NULL;
}
void Req::clear_modifyconfigurationreq_mgr_value() {
  if (GetArenaNoVirtual() == NULL && modifyconfigurationreq_mgr_value_ != NULL) delete modifyconfigurationreq_mgr_value_;
  modifyconfigurationreq_mgr_value_ = NULL;
}
const ::Interactive::Message::ModifyConfigurationReq_MGR& Req::modifyconfigurationreq_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyConfigurationReq_MGR_Value)
  return modifyconfigurationreq_mgr_value_ != NULL ? *modifyconfigurationreq_mgr_value_
                         : *::Interactive::Message::ModifyConfigurationReq_MGR::internal_default_instance();
}
::Interactive::Message::ModifyConfigurationReq_MGR* Req::mutable_modifyconfigurationreq_mgr_value() {
  
  if (modifyconfigurationreq_mgr_value_ == NULL) {
    modifyconfigurationreq_mgr_value_ = new ::Interactive::Message::ModifyConfigurationReq_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyConfigurationReq_MGR_Value)
  return modifyconfigurationreq_mgr_value_;
}
::Interactive::Message::ModifyConfigurationReq_MGR* Req::release_modifyconfigurationreq_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyConfigurationReq_MGR_Value)
  
  ::Interactive::Message::ModifyConfigurationReq_MGR* temp = modifyconfigurationreq_mgr_value_;
  modifyconfigurationreq_mgr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifyconfigurationreq_mgr_value(::Interactive::Message::ModifyConfigurationReq_MGR* modifyconfigurationreq_mgr_value) {
  delete modifyconfigurationreq_mgr_value_;
  modifyconfigurationreq_mgr_value_ = modifyconfigurationreq_mgr_value;
  if (modifyconfigurationreq_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyConfigurationReq_MGR_Value)
}

// .Interactive.Message.QueryAllConfigurationReq_MGR QueryAllConfigurationReq_MGR_Value = 640;
bool Req::has_queryallconfigurationreq_mgr_value() const {
  return this != internal_default_instance() && queryallconfigurationreq_mgr_value_ != NULL;
}
void Req::clear_queryallconfigurationreq_mgr_value() {
  if (GetArenaNoVirtual() == NULL && queryallconfigurationreq_mgr_value_ != NULL) delete queryallconfigurationreq_mgr_value_;
  queryallconfigurationreq_mgr_value_ = NULL;
}
const ::Interactive::Message::QueryAllConfigurationReq_MGR& Req::queryallconfigurationreq_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryAllConfigurationReq_MGR_Value)
  return queryallconfigurationreq_mgr_value_ != NULL ? *queryallconfigurationreq_mgr_value_
                         : *::Interactive::Message::QueryAllConfigurationReq_MGR::internal_default_instance();
}
::Interactive::Message::QueryAllConfigurationReq_MGR* Req::mutable_queryallconfigurationreq_mgr_value() {
  
  if (queryallconfigurationreq_mgr_value_ == NULL) {
    queryallconfigurationreq_mgr_value_ = new ::Interactive::Message::QueryAllConfigurationReq_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryAllConfigurationReq_MGR_Value)
  return queryallconfigurationreq_mgr_value_;
}
::Interactive::Message::QueryAllConfigurationReq_MGR* Req::release_queryallconfigurationreq_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryAllConfigurationReq_MGR_Value)
  
  ::Interactive::Message::QueryAllConfigurationReq_MGR* temp = queryallconfigurationreq_mgr_value_;
  queryallconfigurationreq_mgr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryallconfigurationreq_mgr_value(::Interactive::Message::QueryAllConfigurationReq_MGR* queryallconfigurationreq_mgr_value) {
  delete queryallconfigurationreq_mgr_value_;
  queryallconfigurationreq_mgr_value_ = queryallconfigurationreq_mgr_value;
  if (queryallconfigurationreq_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryAllConfigurationReq_MGR_Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp::kIRetcodeFieldNumber;
const int Rsp::kStrRetMsgFieldNumber;
const int Rsp::kGetAccessAddressRspDEVValueFieldNumber;
const int Rsp::kLoginRspDEVValueFieldNumber;
const int Rsp::kLogoutRspDEVValueFieldNumber;
const int Rsp::kShakehandRspDEVValueFieldNumber;
const int Rsp::kConfigInfoRspDEVValueFieldNumber;
const int Rsp::kStorageAddressRspDEVValueFieldNumber;
const int Rsp::kP2PInfoRspDEVValueFieldNumber;
const int Rsp::kAddFileRspDEVValueFieldNumber;
const int Rsp::kQueryTimeZoneRspDEVValueFieldNumber;
const int Rsp::kQueryAccessDomainNameRspDEVValueFieldNumber;
const int Rsp::kQueryUpgradeSiteRspDEVValueFieldNumber;
const int Rsp::kQueryFirmwareUpgradeRspDEVValueFieldNumber;
const int Rsp::kModifyDevicePropertyRspDEVValueFieldNumber;
const int Rsp::kQueryDeviceParameterRspDEVValueFieldNumber;
const int Rsp::kQueryPlatformPushStatusRspDEVValueFieldNumber;
const int Rsp::kDeviceEventReportRspDEVValueFieldNumber;
const int Rsp::kMsgPreHandlerRspUSRValueFieldNumber;
const int Rsp::kGetAccessAddressRspUSRValueFieldNumber;
const int Rsp::kRegisterUserRspUSRValueFieldNumber;
const int Rsp::kUnRegisterUserRspUSRValueFieldNumber;
const int Rsp::kQueryUsrInfoRspUSRValueFieldNumber;
const int Rsp::kModifyUserInfoRspUSRValueFieldNumber;
const int Rsp::kRetrievePwdRspUSRValueFieldNumber;
const int Rsp::kLoginRspUSRValueFieldNumber;
const int Rsp::kLogoutRspUSRValueFieldNumber;
const int Rsp::kShakehandRspUSRValueFieldNumber;
const int Rsp::kConfigInfoRspUSRValueFieldNumber;
const int Rsp::kAddDevRspUSRValueFieldNumber;
const int Rsp::kDelDevRspUSRValueFieldNumber;
const int Rsp::kModifyDevRspUSRValueFieldNumber;
const int Rsp::kQueryDevInfoRspUSRValueFieldNumber;
const int Rsp::kQueryDevRspUSRValueFieldNumber;
const int Rsp::kQueryUserRspUSRValueFieldNumber;
const int Rsp::kSharingDevRspUSRValueFieldNumber;
const int Rsp::kCancelSharedDevRspUSRValueFieldNumber;
const int Rsp::kAddFriendsRspUSRValueFieldNumber;
const int Rsp::kDelFriendsRspUSRValueFieldNumber;
const int Rsp::kQueryFriendsRspUSRValueFieldNumber;
const int Rsp::kStorageAddressReqUSRValueFieldNumber;
const int Rsp::kP2PInfoRspUSRValueFieldNumber;
const int Rsp::kDeleteFileRspUSRValueFieldNumber;
const int Rsp::kDownloadFileRspUSRValueFieldNumber;
const int Rsp::kQueryFileRspUSRValueFieldNumber;
const int Rsp::kQueryAccessDomainNameRspUSRValueFieldNumber;
const int Rsp::kQueryAppUpgradeRspUSRValueFieldNumber;
const int Rsp::kQueryIfP2PIDValidRspUSRValueFieldNumber;
const int Rsp::kQueryAllDeviceEventRspUSRValueFieldNumber;
const int Rsp::kDeleteDeviceEventRspUSRValueFieldNumber;
const int Rsp::kModifyDeviceEventRspUSRValueFieldNumber;
const int Rsp::kAddStorageDetailRspUSRValueFieldNumber;
const int Rsp::kDeleteStorageDetailRspUSRValueFieldNumber;
const int Rsp::kModifyStorageDetailRspUSRValueFieldNumber;
const int Rsp::kQueryStorageDetailRspUSRValueFieldNumber;
const int Rsp::kQueryRegionStorageInfoRspUSRValueFieldNumber;
const int Rsp::kQueryDeviceInfoMultiRspUSRValueFieldNumber;
const int Rsp::kRegisterCmsCallRspUSRValueFieldNumber;
const int Rsp::kUnregisterCmsCallRspUSRValueFieldNumber;
const int Rsp::kQuerySharingDeviceLimitRspUSRValueFieldNumber;
const int Rsp::kQueryDeviceCapacityRspUSRValueFieldNumber;
const int Rsp::kQueryALLDeviceCapacityRspUSRValueFieldNumber;
const int Rsp::kQueryDeviceP2PIDRspUSRValueFieldNumber;
const int Rsp::kUploadUserCfgRspUSRValueFieldNumber;
const int Rsp::kQueryUserCfgRspUSRValueFieldNumber;
const int Rsp::kGetOnlineDevInfoRspINNERValueFieldNumber;
const int Rsp::kGetOnlineUserInfoRspINNERValueFieldNumber;
const int Rsp::kGetDeviceAccessRecordRspINNERValueFieldNumber;
const int Rsp::kGetUserAccessRecordRspINNERValueFieldNumber;
const int Rsp::kQueryUploadURLRspMGRValueFieldNumber;
const int Rsp::kAddConfigurationRspMGRValueFieldNumber;
const int Rsp::kDeleteConfigurationRspMGRValueFieldNumber;
const int Rsp::kModifyConfigurationRspMGRValueFieldNumber;
const int Rsp::kQueryAllConfigurationRspMGRValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp::Rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Rsp)
}
Rsp::Rsp(const Rsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strretmsg().size() > 0) {
    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_getaccessaddressrsp_dev_value()) {
    getaccessaddressrsp_dev_value_ = new ::Interactive::Message::GetAccessAddressRsp_DEV(*from.getaccessaddressrsp_dev_value_);
  } else {
    getaccessaddressrsp_dev_value_ = NULL;
  }
  if (from.has_loginrsp_dev_value()) {
    loginrsp_dev_value_ = new ::Interactive::Message::LoginRsp_DEV(*from.loginrsp_dev_value_);
  } else {
    loginrsp_dev_value_ = NULL;
  }
  if (from.has_logoutrsp_dev_value()) {
    logoutrsp_dev_value_ = new ::Interactive::Message::LogoutRsp_DEV(*from.logoutrsp_dev_value_);
  } else {
    logoutrsp_dev_value_ = NULL;
  }
  if (from.has_shakehandrsp_dev_value()) {
    shakehandrsp_dev_value_ = new ::Interactive::Message::ShakehandRsp_DEV(*from.shakehandrsp_dev_value_);
  } else {
    shakehandrsp_dev_value_ = NULL;
  }
  if (from.has_configinforsp_dev_value()) {
    configinforsp_dev_value_ = new ::Interactive::Message::ConfigInfoRsp_DEV(*from.configinforsp_dev_value_);
  } else {
    configinforsp_dev_value_ = NULL;
  }
  if (from.has_storageaddressrsp_dev_value()) {
    storageaddressrsp_dev_value_ = new ::Interactive::Message::StorageAddressRsp_DEV(*from.storageaddressrsp_dev_value_);
  } else {
    storageaddressrsp_dev_value_ = NULL;
  }
  if (from.has_p2pinforsp_dev_value()) {
    p2pinforsp_dev_value_ = new ::Interactive::Message::P2pInfoRsp_DEV(*from.p2pinforsp_dev_value_);
  } else {
    p2pinforsp_dev_value_ = NULL;
  }
  if (from.has_addfilersp_dev_value()) {
    addfilersp_dev_value_ = new ::Interactive::Message::AddFileRsp_DEV(*from.addfilersp_dev_value_);
  } else {
    addfilersp_dev_value_ = NULL;
  }
  if (from.has_querytimezonersp_dev_value()) {
    querytimezonersp_dev_value_ = new ::Interactive::Message::QueryTimeZoneRsp_DEV(*from.querytimezonersp_dev_value_);
  } else {
    querytimezonersp_dev_value_ = NULL;
  }
  if (from.has_queryaccessdomainnamersp_dev_value()) {
    queryaccessdomainnamersp_dev_value_ = new ::Interactive::Message::QueryAccessDomainNameRsp_DEV(*from.queryaccessdomainnamersp_dev_value_);
  } else {
    queryaccessdomainnamersp_dev_value_ = NULL;
  }
  if (from.has_queryupgradesitersp_dev_value()) {
    queryupgradesitersp_dev_value_ = new ::Interactive::Message::QueryUpgradeSiteRsp_DEV(*from.queryupgradesitersp_dev_value_);
  } else {
    queryupgradesitersp_dev_value_ = NULL;
  }
  if (from.has_queryfirmwareupgradersp_dev_value()) {
    queryfirmwareupgradersp_dev_value_ = new ::Interactive::Message::QueryFirmwareUpgradeRsp_DEV(*from.queryfirmwareupgradersp_dev_value_);
  } else {
    queryfirmwareupgradersp_dev_value_ = NULL;
  }
  if (from.has_modifydevicepropertyrsp_dev_value()) {
    modifydevicepropertyrsp_dev_value_ = new ::Interactive::Message::ModifyDevicePropertyRsp_DEV(*from.modifydevicepropertyrsp_dev_value_);
  } else {
    modifydevicepropertyrsp_dev_value_ = NULL;
  }
  if (from.has_querydeviceparameterrsp_dev_value()) {
    querydeviceparameterrsp_dev_value_ = new ::Interactive::Message::QueryDeviceParameterRsp_DEV(*from.querydeviceparameterrsp_dev_value_);
  } else {
    querydeviceparameterrsp_dev_value_ = NULL;
  }
  if (from.has_queryplatformpushstatusrsp_dev_value()) {
    queryplatformpushstatusrsp_dev_value_ = new ::Interactive::Message::QueryPlatformPushStatusRsp_DEV(*from.queryplatformpushstatusrsp_dev_value_);
  } else {
    queryplatformpushstatusrsp_dev_value_ = NULL;
  }
  if (from.has_deviceeventreportrsp_dev_value()) {
    deviceeventreportrsp_dev_value_ = new ::Interactive::Message::DeviceEventReportRsp_DEV(*from.deviceeventreportrsp_dev_value_);
  } else {
    deviceeventreportrsp_dev_value_ = NULL;
  }
  if (from.has_msgprehandlerrsp_usr_value()) {
    msgprehandlerrsp_usr_value_ = new ::Interactive::Message::MsgPreHandlerRsp_USR(*from.msgprehandlerrsp_usr_value_);
  } else {
    msgprehandlerrsp_usr_value_ = NULL;
  }
  if (from.has_getaccessaddressrsp_usr_value()) {
    getaccessaddressrsp_usr_value_ = new ::Interactive::Message::GetAccessAddressRsp_USR(*from.getaccessaddressrsp_usr_value_);
  } else {
    getaccessaddressrsp_usr_value_ = NULL;
  }
  if (from.has_registeruserrsp_usr_value()) {
    registeruserrsp_usr_value_ = new ::Interactive::Message::RegisterUserRsp_USR(*from.registeruserrsp_usr_value_);
  } else {
    registeruserrsp_usr_value_ = NULL;
  }
  if (from.has_unregisteruserrsp_usr_value()) {
    unregisteruserrsp_usr_value_ = new ::Interactive::Message::UnRegisterUserRsp_USR(*from.unregisteruserrsp_usr_value_);
  } else {
    unregisteruserrsp_usr_value_ = NULL;
  }
  if (from.has_queryusrinforsp_usr_value()) {
    queryusrinforsp_usr_value_ = new ::Interactive::Message::QueryUsrInfoRsp_USR(*from.queryusrinforsp_usr_value_);
  } else {
    queryusrinforsp_usr_value_ = NULL;
  }
  if (from.has_modifyuserinforsp_usr_value()) {
    modifyuserinforsp_usr_value_ = new ::Interactive::Message::ModifyUserInfoRsp_USR(*from.modifyuserinforsp_usr_value_);
  } else {
    modifyuserinforsp_usr_value_ = NULL;
  }
  if (from.has_retrievepwdrsp_usr_value()) {
    retrievepwdrsp_usr_value_ = new ::Interactive::Message::RetrievePwdRsp_USR(*from.retrievepwdrsp_usr_value_);
  } else {
    retrievepwdrsp_usr_value_ = NULL;
  }
  if (from.has_loginrsp_usr_value()) {
    loginrsp_usr_value_ = new ::Interactive::Message::LoginRsp_USR(*from.loginrsp_usr_value_);
  } else {
    loginrsp_usr_value_ = NULL;
  }
  if (from.has_logoutrsp_usr_value()) {
    logoutrsp_usr_value_ = new ::Interactive::Message::LogoutRsp_USR(*from.logoutrsp_usr_value_);
  } else {
    logoutrsp_usr_value_ = NULL;
  }
  if (from.has_shakehandrsp_usr_value()) {
    shakehandrsp_usr_value_ = new ::Interactive::Message::ShakehandRsp_USR(*from.shakehandrsp_usr_value_);
  } else {
    shakehandrsp_usr_value_ = NULL;
  }
  if (from.has_configinforsp_usr_value()) {
    configinforsp_usr_value_ = new ::Interactive::Message::ConfigInfoRsp_USR(*from.configinforsp_usr_value_);
  } else {
    configinforsp_usr_value_ = NULL;
  }
  if (from.has_adddevrsp_usr_value()) {
    adddevrsp_usr_value_ = new ::Interactive::Message::AddDevRsp_USR(*from.adddevrsp_usr_value_);
  } else {
    adddevrsp_usr_value_ = NULL;
  }
  if (from.has_deldevrsp_usr_value()) {
    deldevrsp_usr_value_ = new ::Interactive::Message::DelDevRsp_USR(*from.deldevrsp_usr_value_);
  } else {
    deldevrsp_usr_value_ = NULL;
  }
  if (from.has_modifydevrsp_usr_value()) {
    modifydevrsp_usr_value_ = new ::Interactive::Message::ModifyDevRsp_USR(*from.modifydevrsp_usr_value_);
  } else {
    modifydevrsp_usr_value_ = NULL;
  }
  if (from.has_querydevinforsp_usr_value()) {
    querydevinforsp_usr_value_ = new ::Interactive::Message::QueryDevInfoRsp_USR(*from.querydevinforsp_usr_value_);
  } else {
    querydevinforsp_usr_value_ = NULL;
  }
  if (from.has_querydevrsp_usr_value()) {
    querydevrsp_usr_value_ = new ::Interactive::Message::QueryDevRsp_USR(*from.querydevrsp_usr_value_);
  } else {
    querydevrsp_usr_value_ = NULL;
  }
  if (from.has_queryuserrsp_usr_value()) {
    queryuserrsp_usr_value_ = new ::Interactive::Message::QueryUserRsp_USR(*from.queryuserrsp_usr_value_);
  } else {
    queryuserrsp_usr_value_ = NULL;
  }
  if (from.has_sharingdevrsp_usr_value()) {
    sharingdevrsp_usr_value_ = new ::Interactive::Message::SharingDevRsp_USR(*from.sharingdevrsp_usr_value_);
  } else {
    sharingdevrsp_usr_value_ = NULL;
  }
  if (from.has_cancelshareddevrsp_usr_value()) {
    cancelshareddevrsp_usr_value_ = new ::Interactive::Message::CancelSharedDevRsp_USR(*from.cancelshareddevrsp_usr_value_);
  } else {
    cancelshareddevrsp_usr_value_ = NULL;
  }
  if (from.has_addfriendsrsp_usr_value()) {
    addfriendsrsp_usr_value_ = new ::Interactive::Message::AddFriendsRsp_USR(*from.addfriendsrsp_usr_value_);
  } else {
    addfriendsrsp_usr_value_ = NULL;
  }
  if (from.has_delfriendsrsp_usr_value()) {
    delfriendsrsp_usr_value_ = new ::Interactive::Message::DelFriendsRsp_USR(*from.delfriendsrsp_usr_value_);
  } else {
    delfriendsrsp_usr_value_ = NULL;
  }
  if (from.has_queryfriendsrsp_usr_value()) {
    queryfriendsrsp_usr_value_ = new ::Interactive::Message::QueryFriendsRsp_USR(*from.queryfriendsrsp_usr_value_);
  } else {
    queryfriendsrsp_usr_value_ = NULL;
  }
  if (from.has_storageaddressreq_usr_value()) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressRsp_USR(*from.storageaddressreq_usr_value_);
  } else {
    storageaddressreq_usr_value_ = NULL;
  }
  if (from.has_p2pinforsp_usr_value()) {
    p2pinforsp_usr_value_ = new ::Interactive::Message::P2pInfoRsp_USR(*from.p2pinforsp_usr_value_);
  } else {
    p2pinforsp_usr_value_ = NULL;
  }
  if (from.has_deletefilersp_usr_value()) {
    deletefilersp_usr_value_ = new ::Interactive::Message::DeleteFileRsp_USR(*from.deletefilersp_usr_value_);
  } else {
    deletefilersp_usr_value_ = NULL;
  }
  if (from.has_downloadfilersp_usr_value()) {
    downloadfilersp_usr_value_ = new ::Interactive::Message::DownloadFileRsp_USR(*from.downloadfilersp_usr_value_);
  } else {
    downloadfilersp_usr_value_ = NULL;
  }
  if (from.has_queryfilersp_usr_value()) {
    queryfilersp_usr_value_ = new ::Interactive::Message::QueryFileRsp_USR(*from.queryfilersp_usr_value_);
  } else {
    queryfilersp_usr_value_ = NULL;
  }
  if (from.has_queryaccessdomainnamersp_usr_value()) {
    queryaccessdomainnamersp_usr_value_ = new ::Interactive::Message::QueryAccessDomainNameRsp_USR(*from.queryaccessdomainnamersp_usr_value_);
  } else {
    queryaccessdomainnamersp_usr_value_ = NULL;
  }
  if (from.has_queryappupgradersp_usr_value()) {
    queryappupgradersp_usr_value_ = new ::Interactive::Message::QueryAppUpgradeRsp_USR(*from.queryappupgradersp_usr_value_);
  } else {
    queryappupgradersp_usr_value_ = NULL;
  }
  if (from.has_queryifp2pidvalidrsp_usr_value()) {
    queryifp2pidvalidrsp_usr_value_ = new ::Interactive::Message::QueryIfP2pIDValidRsp_USR(*from.queryifp2pidvalidrsp_usr_value_);
  } else {
    queryifp2pidvalidrsp_usr_value_ = NULL;
  }
  if (from.has_queryalldeviceeventrsp_usr_value()) {
    queryalldeviceeventrsp_usr_value_ = new ::Interactive::Message::QueryAllDeviceEventRsp_USR(*from.queryalldeviceeventrsp_usr_value_);
  } else {
    queryalldeviceeventrsp_usr_value_ = NULL;
  }
  if (from.has_deletedeviceeventrsp_usr_value()) {
    deletedeviceeventrsp_usr_value_ = new ::Interactive::Message::DeleteDeviceEventRsp_USR(*from.deletedeviceeventrsp_usr_value_);
  } else {
    deletedeviceeventrsp_usr_value_ = NULL;
  }
  if (from.has_modifydeviceeventrsp_usr_value()) {
    modifydeviceeventrsp_usr_value_ = new ::Interactive::Message::ModifyDeviceEventRsp_USR(*from.modifydeviceeventrsp_usr_value_);
  } else {
    modifydeviceeventrsp_usr_value_ = NULL;
  }
  if (from.has_addstoragedetailrsp_usr_value()) {
    addstoragedetailrsp_usr_value_ = new ::Interactive::Message::AddStorageDetailRsp_USR(*from.addstoragedetailrsp_usr_value_);
  } else {
    addstoragedetailrsp_usr_value_ = NULL;
  }
  if (from.has_deletestoragedetailrsp_usr_value()) {
    deletestoragedetailrsp_usr_value_ = new ::Interactive::Message::DeleteStorageDetailRsp_USR(*from.deletestoragedetailrsp_usr_value_);
  } else {
    deletestoragedetailrsp_usr_value_ = NULL;
  }
  if (from.has_modifystoragedetailrsp_usr_value()) {
    modifystoragedetailrsp_usr_value_ = new ::Interactive::Message::ModifyStorageDetailRsp_USR(*from.modifystoragedetailrsp_usr_value_);
  } else {
    modifystoragedetailrsp_usr_value_ = NULL;
  }
  if (from.has_querystoragedetailrsp_usr_value()) {
    querystoragedetailrsp_usr_value_ = new ::Interactive::Message::QueryStorageDetailRsp_USR(*from.querystoragedetailrsp_usr_value_);
  } else {
    querystoragedetailrsp_usr_value_ = NULL;
  }
  if (from.has_queryregionstorageinforsp_usr_value()) {
    queryregionstorageinforsp_usr_value_ = new ::Interactive::Message::QueryRegionStorageInfoRsp_USR(*from.queryregionstorageinforsp_usr_value_);
  } else {
    queryregionstorageinforsp_usr_value_ = NULL;
  }
  if (from.has_querydeviceinfomultirsp_usr_value()) {
    querydeviceinfomultirsp_usr_value_ = new ::Interactive::Message::QueryDeviceInfoMultiRsp_USR(*from.querydeviceinfomultirsp_usr_value_);
  } else {
    querydeviceinfomultirsp_usr_value_ = NULL;
  }
  if (from.has_registercmscallrsp_usr_value()) {
    registercmscallrsp_usr_value_ = new ::Interactive::Message::RegisterCmsCallRsp_USR(*from.registercmscallrsp_usr_value_);
  } else {
    registercmscallrsp_usr_value_ = NULL;
  }
  if (from.has_unregistercmscallrsp_usr_value()) {
    unregistercmscallrsp_usr_value_ = new ::Interactive::Message::UnregisterCmsCallRsp_USR(*from.unregistercmscallrsp_usr_value_);
  } else {
    unregistercmscallrsp_usr_value_ = NULL;
  }
  if (from.has_querysharingdevicelimitrsp_usr_value()) {
    querysharingdevicelimitrsp_usr_value_ = new ::Interactive::Message::QuerySharingDeviceLimitRsp_USR(*from.querysharingdevicelimitrsp_usr_value_);
  } else {
    querysharingdevicelimitrsp_usr_value_ = NULL;
  }
  if (from.has_querydevicecapacityrsp_usr_value()) {
    querydevicecapacityrsp_usr_value_ = new ::Interactive::Message::QueryDeviceCapacityRsp_USR(*from.querydevicecapacityrsp_usr_value_);
  } else {
    querydevicecapacityrsp_usr_value_ = NULL;
  }
  if (from.has_queryalldevicecapacityrsp_usr_value()) {
    queryalldevicecapacityrsp_usr_value_ = new ::Interactive::Message::QueryALLDeviceCapacityRsp_USR(*from.queryalldevicecapacityrsp_usr_value_);
  } else {
    queryalldevicecapacityrsp_usr_value_ = NULL;
  }
  if (from.has_querydevicep2pidrsp_usr_value()) {
    querydevicep2pidrsp_usr_value_ = new ::Interactive::Message::QueryDeviceP2pIDRsp_USR(*from.querydevicep2pidrsp_usr_value_);
  } else {
    querydevicep2pidrsp_usr_value_ = NULL;
  }
  if (from.has_uploadusercfgrsp_usr_value()) {
    uploadusercfgrsp_usr_value_ = new ::Interactive::Message::UploadUserCfgRsp_USR(*from.uploadusercfgrsp_usr_value_);
  } else {
    uploadusercfgrsp_usr_value_ = NULL;
  }
  if (from.has_queryusercfgrsp_usr_value()) {
    queryusercfgrsp_usr_value_ = new ::Interactive::Message::QueryUserCfgRsp_USR(*from.queryusercfgrsp_usr_value_);
  } else {
    queryusercfgrsp_usr_value_ = NULL;
  }
  if (from.has_getonlinedevinforsp_inner_value()) {
    getonlinedevinforsp_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoRsp_INNER(*from.getonlinedevinforsp_inner_value_);
  } else {
    getonlinedevinforsp_inner_value_ = NULL;
  }
  if (from.has_getonlineuserinforsp_inner_value()) {
    getonlineuserinforsp_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoRsp_INNER(*from.getonlineuserinforsp_inner_value_);
  } else {
    getonlineuserinforsp_inner_value_ = NULL;
  }
  if (from.has_getdeviceaccessrecordrsp_inner_value()) {
    getdeviceaccessrecordrsp_inner_value_ = new ::Interactive::Message::GetDeviceAccessRecordRsp_INNER(*from.getdeviceaccessrecordrsp_inner_value_);
  } else {
    getdeviceaccessrecordrsp_inner_value_ = NULL;
  }
  if (from.has_getuseraccessrecordrsp_inner_value()) {
    getuseraccessrecordrsp_inner_value_ = new ::Interactive::Message::GetUserAccessRecordRsp_INNER(*from.getuseraccessrecordrsp_inner_value_);
  } else {
    getuseraccessrecordrsp_inner_value_ = NULL;
  }
  if (from.has_queryuploadurlrsp_mgr_value()) {
    queryuploadurlrsp_mgr_value_ = new ::Interactive::Message::QueryUploadURLRsp_MGR(*from.queryuploadurlrsp_mgr_value_);
  } else {
    queryuploadurlrsp_mgr_value_ = NULL;
  }
  if (from.has_addconfigurationrsp_mgr_value()) {
    addconfigurationrsp_mgr_value_ = new ::Interactive::Message::AddConfigurationRsp_MGR(*from.addconfigurationrsp_mgr_value_);
  } else {
    addconfigurationrsp_mgr_value_ = NULL;
  }
  if (from.has_deleteconfigurationrsp_mgr_value()) {
    deleteconfigurationrsp_mgr_value_ = new ::Interactive::Message::DeleteConfigurationRsp_MGR(*from.deleteconfigurationrsp_mgr_value_);
  } else {
    deleteconfigurationrsp_mgr_value_ = NULL;
  }
  if (from.has_modifyconfigurationrsp_mgr_value()) {
    modifyconfigurationrsp_mgr_value_ = new ::Interactive::Message::ModifyConfigurationRsp_MGR(*from.modifyconfigurationrsp_mgr_value_);
  } else {
    modifyconfigurationrsp_mgr_value_ = NULL;
  }
  if (from.has_queryallconfigurationrsp_mgr_value()) {
    queryallconfigurationrsp_mgr_value_ = new ::Interactive::Message::QueryAllConfigurationRsp_MGR(*from.queryallconfigurationrsp_mgr_value_);
  } else {
    queryallconfigurationrsp_mgr_value_ = NULL;
  }
  iretcode_ = from.iretcode_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Rsp)
}

void Rsp::SharedCtor() {
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&getaccessaddressrsp_dev_value_, 0, reinterpret_cast<char*>(&iretcode_) -
    reinterpret_cast<char*>(&getaccessaddressrsp_dev_value_) + sizeof(iretcode_));
  _cached_size_ = 0;
}

Rsp::~Rsp() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Rsp)
  SharedDtor();
}

void Rsp::SharedDtor() {
  strretmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete getaccessaddressrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete loginrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete addfilersp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete querytimezonersp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryaccessdomainnamersp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryupgradesitersp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfirmwareupgradersp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydevicepropertyrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete querydeviceparameterrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete queryplatformpushstatusrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete deviceeventreportrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete msgprehandlerrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getaccessaddressrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete registeruserrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete unregisteruserrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryusrinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyuserinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete retrievepwdrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete loginrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete adddevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deldevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryuserrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete sharingdevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete cancelshareddevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete addfriendsrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete delfriendsrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfriendsrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletefilersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete downloadfilersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfilersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryaccessdomainnamersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryappupgradersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryifp2pidvalidrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryalldeviceeventrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletedeviceeventrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydeviceeventrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete addstoragedetailrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletestoragedetailrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifystoragedetailrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querystoragedetailrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryregionstorageinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydeviceinfomultirsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete registercmscallrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete unregistercmscallrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querysharingdevicelimitrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevicecapacityrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryalldevicecapacityrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevicep2pidrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete uploadusercfgrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryusercfgrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlinedevinforsp_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlineuserinforsp_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getdeviceaccessrecordrsp_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getuseraccessrecordrsp_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete queryuploadurlrsp_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete addconfigurationrsp_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete deleteconfigurationrsp_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyconfigurationrsp_mgr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryallconfigurationrsp_mgr_value_;
  }
}

void Rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rsp::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[161].descriptor;
}

const Rsp& Rsp::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Rsp* Rsp::New(::google::protobuf::Arena* arena) const {
  Rsp* n = new Rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Rsp)
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_dev_value_ != NULL) {
    delete getaccessaddressrsp_dev_value_;
  }
  getaccessaddressrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginrsp_dev_value_ != NULL) {
    delete loginrsp_dev_value_;
  }
  loginrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutrsp_dev_value_ != NULL) {
    delete logoutrsp_dev_value_;
  }
  logoutrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandrsp_dev_value_ != NULL) {
    delete shakehandrsp_dev_value_;
  }
  shakehandrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforsp_dev_value_ != NULL) {
    delete configinforsp_dev_value_;
  }
  configinforsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressrsp_dev_value_ != NULL) {
    delete storageaddressrsp_dev_value_;
  }
  storageaddressrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforsp_dev_value_ != NULL) {
    delete p2pinforsp_dev_value_;
  }
  p2pinforsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfilersp_dev_value_ != NULL) {
    delete addfilersp_dev_value_;
  }
  addfilersp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querytimezonersp_dev_value_ != NULL) {
    delete querytimezonersp_dev_value_;
  }
  querytimezonersp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamersp_dev_value_ != NULL) {
    delete queryaccessdomainnamersp_dev_value_;
  }
  queryaccessdomainnamersp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryupgradesitersp_dev_value_ != NULL) {
    delete queryupgradesitersp_dev_value_;
  }
  queryupgradesitersp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfirmwareupgradersp_dev_value_ != NULL) {
    delete queryfirmwareupgradersp_dev_value_;
  }
  queryfirmwareupgradersp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydevicepropertyrsp_dev_value_ != NULL) {
    delete modifydevicepropertyrsp_dev_value_;
  }
  modifydevicepropertyrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydeviceparameterrsp_dev_value_ != NULL) {
    delete querydeviceparameterrsp_dev_value_;
  }
  querydeviceparameterrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryplatformpushstatusrsp_dev_value_ != NULL) {
    delete queryplatformpushstatusrsp_dev_value_;
  }
  queryplatformpushstatusrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deviceeventreportrsp_dev_value_ != NULL) {
    delete deviceeventreportrsp_dev_value_;
  }
  deviceeventreportrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgprehandlerrsp_usr_value_ != NULL) {
    delete msgprehandlerrsp_usr_value_;
  }
  msgprehandlerrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_usr_value_ != NULL) {
    delete getaccessaddressrsp_usr_value_;
  }
  getaccessaddressrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && registeruserrsp_usr_value_ != NULL) {
    delete registeruserrsp_usr_value_;
  }
  registeruserrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unregisteruserrsp_usr_value_ != NULL) {
    delete unregisteruserrsp_usr_value_;
  }
  unregisteruserrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryusrinforsp_usr_value_ != NULL) {
    delete queryusrinforsp_usr_value_;
  }
  queryusrinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyuserinforsp_usr_value_ != NULL) {
    delete modifyuserinforsp_usr_value_;
  }
  modifyuserinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && retrievepwdrsp_usr_value_ != NULL) {
    delete retrievepwdrsp_usr_value_;
  }
  retrievepwdrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginrsp_usr_value_ != NULL) {
    delete loginrsp_usr_value_;
  }
  loginrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutrsp_usr_value_ != NULL) {
    delete logoutrsp_usr_value_;
  }
  logoutrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandrsp_usr_value_ != NULL) {
    delete shakehandrsp_usr_value_;
  }
  shakehandrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforsp_usr_value_ != NULL) {
    delete configinforsp_usr_value_;
  }
  configinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && adddevrsp_usr_value_ != NULL) {
    delete adddevrsp_usr_value_;
  }
  adddevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deldevrsp_usr_value_ != NULL) {
    delete deldevrsp_usr_value_;
  }
  deldevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydevrsp_usr_value_ != NULL) {
    delete modifydevrsp_usr_value_;
  }
  modifydevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevinforsp_usr_value_ != NULL) {
    delete querydevinforsp_usr_value_;
  }
  querydevinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevrsp_usr_value_ != NULL) {
    delete querydevrsp_usr_value_;
  }
  querydevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryuserrsp_usr_value_ != NULL) {
    delete queryuserrsp_usr_value_;
  }
  queryuserrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && sharingdevrsp_usr_value_ != NULL) {
    delete sharingdevrsp_usr_value_;
  }
  sharingdevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancelshareddevrsp_usr_value_ != NULL) {
    delete cancelshareddevrsp_usr_value_;
  }
  cancelshareddevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfriendsrsp_usr_value_ != NULL) {
    delete addfriendsrsp_usr_value_;
  }
  addfriendsrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && delfriendsrsp_usr_value_ != NULL) {
    delete delfriendsrsp_usr_value_;
  }
  delfriendsrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfriendsrsp_usr_value_ != NULL) {
    delete queryfriendsrsp_usr_value_;
  }
  queryfriendsrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) {
    delete storageaddressreq_usr_value_;
  }
  storageaddressreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforsp_usr_value_ != NULL) {
    delete p2pinforsp_usr_value_;
  }
  p2pinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletefilersp_usr_value_ != NULL) {
    delete deletefilersp_usr_value_;
  }
  deletefilersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && downloadfilersp_usr_value_ != NULL) {
    delete downloadfilersp_usr_value_;
  }
  downloadfilersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfilersp_usr_value_ != NULL) {
    delete queryfilersp_usr_value_;
  }
  queryfilersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamersp_usr_value_ != NULL) {
    delete queryaccessdomainnamersp_usr_value_;
  }
  queryaccessdomainnamersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryappupgradersp_usr_value_ != NULL) {
    delete queryappupgradersp_usr_value_;
  }
  queryappupgradersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryifp2pidvalidrsp_usr_value_ != NULL) {
    delete queryifp2pidvalidrsp_usr_value_;
  }
  queryifp2pidvalidrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryalldeviceeventrsp_usr_value_ != NULL) {
    delete queryalldeviceeventrsp_usr_value_;
  }
  queryalldeviceeventrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletedeviceeventrsp_usr_value_ != NULL) {
    delete deletedeviceeventrsp_usr_value_;
  }
  deletedeviceeventrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydeviceeventrsp_usr_value_ != NULL) {
    delete modifydeviceeventrsp_usr_value_;
  }
  modifydeviceeventrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addstoragedetailrsp_usr_value_ != NULL) {
    delete addstoragedetailrsp_usr_value_;
  }
  addstoragedetailrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletestoragedetailrsp_usr_value_ != NULL) {
    delete deletestoragedetailrsp_usr_value_;
  }
  deletestoragedetailrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifystoragedetailrsp_usr_value_ != NULL) {
    delete modifystoragedetailrsp_usr_value_;
  }
  modifystoragedetailrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querystoragedetailrsp_usr_value_ != NULL) {
    delete querystoragedetailrsp_usr_value_;
  }
  querystoragedetailrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryregionstorageinforsp_usr_value_ != NULL) {
    delete queryregionstorageinforsp_usr_value_;
  }
  queryregionstorageinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydeviceinfomultirsp_usr_value_ != NULL) {
    delete querydeviceinfomultirsp_usr_value_;
  }
  querydeviceinfomultirsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && registercmscallrsp_usr_value_ != NULL) {
    delete registercmscallrsp_usr_value_;
  }
  registercmscallrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unregistercmscallrsp_usr_value_ != NULL) {
    delete unregistercmscallrsp_usr_value_;
  }
  unregistercmscallrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querysharingdevicelimitrsp_usr_value_ != NULL) {
    delete querysharingdevicelimitrsp_usr_value_;
  }
  querysharingdevicelimitrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevicecapacityrsp_usr_value_ != NULL) {
    delete querydevicecapacityrsp_usr_value_;
  }
  querydevicecapacityrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryalldevicecapacityrsp_usr_value_ != NULL) {
    delete queryalldevicecapacityrsp_usr_value_;
  }
  queryalldevicecapacityrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevicep2pidrsp_usr_value_ != NULL) {
    delete querydevicep2pidrsp_usr_value_;
  }
  querydevicep2pidrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && uploadusercfgrsp_usr_value_ != NULL) {
    delete uploadusercfgrsp_usr_value_;
  }
  uploadusercfgrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryusercfgrsp_usr_value_ != NULL) {
    delete queryusercfgrsp_usr_value_;
  }
  queryusercfgrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlinedevinforsp_inner_value_ != NULL) {
    delete getonlinedevinforsp_inner_value_;
  }
  getonlinedevinforsp_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlineuserinforsp_inner_value_ != NULL) {
    delete getonlineuserinforsp_inner_value_;
  }
  getonlineuserinforsp_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getdeviceaccessrecordrsp_inner_value_ != NULL) {
    delete getdeviceaccessrecordrsp_inner_value_;
  }
  getdeviceaccessrecordrsp_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getuseraccessrecordrsp_inner_value_ != NULL) {
    delete getuseraccessrecordrsp_inner_value_;
  }
  getuseraccessrecordrsp_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryuploadurlrsp_mgr_value_ != NULL) {
    delete queryuploadurlrsp_mgr_value_;
  }
  queryuploadurlrsp_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addconfigurationrsp_mgr_value_ != NULL) {
    delete addconfigurationrsp_mgr_value_;
  }
  addconfigurationrsp_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deleteconfigurationrsp_mgr_value_ != NULL) {
    delete deleteconfigurationrsp_mgr_value_;
  }
  deleteconfigurationrsp_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyconfigurationrsp_mgr_value_ != NULL) {
    delete modifyconfigurationrsp_mgr_value_;
  }
  modifyconfigurationrsp_mgr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryallconfigurationrsp_mgr_value_ != NULL) {
    delete queryallconfigurationrsp_mgr_value_;
  }
  queryallconfigurationrsp_mgr_value_ = NULL;
  iretcode_ = 0;
}

bool Rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 iRetcode = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRetMsg = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strretmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strretmsg().data(), this->strretmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Rsp.strRetMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
      case 72: {
        if (tag == 578u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
      case 74: {
        if (tag == 594u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfilersp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryTimeZoneRsp_DEV QueryTimeZoneRsp_DEV_Value = 81;
      case 81: {
        if (tag == 650u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querytimezonersp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAccessDomainNameRsp_DEV QueryAccessDomainNameRsp_DEV_Value = 82;
      case 82: {
        if (tag == 658u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryaccessdomainnamersp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUpgradeSiteRsp_DEV QueryUpgradeSiteRsp_DEV_Value = 83;
      case 83: {
        if (tag == 666u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryupgradesitersp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFirmwareUpgradeRsp_DEV QueryFirmwareUpgradeRsp_DEV_Value = 84;
      case 84: {
        if (tag == 674u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfirmwareupgradersp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
      case 85: {
        if (tag == 682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgprehandlerrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
      case 90: {
        if (tag == 722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registeruserrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
      case 110: {
        if (tag == 882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unregisteruserrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
      case 120: {
        if (tag == 962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryusrinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
      case 122: {
        if (tag == 978u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyuserinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RetrievePwdRsp_USR RetrievePwdRsp_USR_Value = 124;
      case 124: {
        if (tag == 994u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retrievepwdrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
      case 130: {
        if (tag == 1042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
      case 140: {
        if (tag == 1122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
      case 150: {
        if (tag == 1202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
      case 160: {
        if (tag == 1282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
      case 170: {
        if (tag == 1362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adddevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
      case 180: {
        if (tag == 1442u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deldevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
      case 190: {
        if (tag == 1522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
      case 200: {
        if (tag == 1602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
      case 210: {
        if (tag == 1682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
      case 220: {
        if (tag == 1762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryuserrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
      case 230: {
        if (tag == 1842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sharingdevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
      case 240: {
        if (tag == 1922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancelshareddevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
      case 250: {
        if (tag == 2002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfriendsrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
      case 260: {
        if (tag == 2082u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delfriendsrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
      case 270: {
        if (tag == 2162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfriendsrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
      case 272: {
        if (tag == 2178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
      case 274: {
        if (tag == 2194u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
      case 280: {
        if (tag == 2242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlinedevinforsp_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
      case 290: {
        if (tag == 2322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlineuserinforsp_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
      case 310: {
        if (tag == 2482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletefilersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
      case 320: {
        if (tag == 2562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_downloadfilersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
      case 330: {
        if (tag == 2642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfilersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAccessDomainNameRsp_USR QueryAccessDomainNameRsp_USR_Value = 350;
      case 350: {
        if (tag == 2802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryaccessdomainnamersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAppUpgradeRsp_USR QueryAppUpgradeRsp_USR_Value = 360;
      case 360: {
        if (tag == 2882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryappupgradersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryIfP2pIDValidRsp_USR QueryIfP2pIDValidRsp_USR_Value = 370;
      case 370: {
        if (tag == 2962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryifp2pidvalidrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetDeviceAccessRecordRsp_INNER GetDeviceAccessRecordRsp_INNER_Value = 440;
      case 440: {
        if (tag == 3522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getdeviceaccessrecordrsp_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetUserAccessRecordRsp_INNER GetUserAccessRecordRsp_INNER_Value = 450;
      case 450: {
        if (tag == 3602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getuseraccessrecordrsp_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAllDeviceEventRsp_USR QueryAllDeviceEventRsp_USR_Value = 500;
      case 500: {
        if (tag == 4002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryalldeviceeventrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteDeviceEventRsp_USR DeleteDeviceEventRsp_USR_Value = 510;
      case 510: {
        if (tag == 4082u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletedeviceeventrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDeviceEventRsp_USR ModifyDeviceEventRsp_USR_Value = 520;
      case 520: {
        if (tag == 4162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydeviceeventrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUploadURLRsp_MGR QueryUploadURLRsp_MGR_Value = 600;
      case 600: {
        if (tag == 4802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryuploadurlrsp_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddConfigurationRsp_MGR AddConfigurationRsp_MGR_Value = 610;
      case 610: {
        if (tag == 4882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addconfigurationrsp_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteConfigurationRsp_MGR DeleteConfigurationRsp_MGR_Value = 620;
      case 620: {
        if (tag == 4962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleteconfigurationrsp_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyConfigurationRsp_MGR ModifyConfigurationRsp_MGR_Value = 630;
      case 630: {
        if (tag == 5042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyconfigurationrsp_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryAllConfigurationRsp_MGR QueryAllConfigurationRsp_MGR_Value = 640;
      case 640: {
        if (tag == 5122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryallconfigurationrsp_mgr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddStorageDetailRsp_USR AddStorageDetailRsp_USR_Value = 700;
      case 700: {
        if (tag == 5602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addstoragedetailrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteStorageDetailRsp_USR DeleteStorageDetailRsp_USR_Value = 710;
      case 710: {
        if (tag == 5682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletestoragedetailrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyStorageDetailRsp_USR ModifyStorageDetailRsp_USR_Value = 720;
      case 720: {
        if (tag == 5762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifystoragedetailrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryStorageDetailRsp_USR QueryStorageDetailRsp_USR_Value = 730;
      case 730: {
        if (tag == 5842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querystoragedetailrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryRegionStorageInfoRsp_USR QueryRegionStorageInfoRsp_USR_Value = 740;
      case 740: {
        if (tag == 5922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryregionstorageinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDevicePropertyRsp_DEV ModifyDevicePropertyRsp_DEV_Value = 800;
      case 800: {
        if (tag == 6402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydevicepropertyrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceParameterRsp_DEV QueryDeviceParameterRsp_DEV_Value = 810;
      case 810: {
        if (tag == 6482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydeviceparameterrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryPlatformPushStatusRsp_DEV QueryPlatformPushStatusRsp_DEV_Value = 900;
      case 900: {
        if (tag == 7202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryplatformpushstatusrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeviceEventReportRsp_DEV DeviceEventReportRsp_DEV_Value = 1000;
      case 1000: {
        if (tag == 8002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deviceeventreportrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceInfoMultiRsp_USR QueryDeviceInfoMultiRsp_USR_Value = 1100;
      case 1100: {
        if (tag == 8802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydeviceinfomultirsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RegisterCmsCallRsp_USR RegisterCmsCallRsp_USR_Value = 1101;
      case 1101: {
        if (tag == 8810u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registercmscallrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UnregisterCmsCallRsp_USR UnregisterCmsCallRsp_USR_Value = 1102;
      case 1102: {
        if (tag == 8818u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unregistercmscallrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QuerySharingDeviceLimitRsp_USR QuerySharingDeviceLimitRsp_USR_Value = 1103;
      case 1103: {
        if (tag == 8826u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querysharingdevicelimitrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceCapacityRsp_USR QueryDeviceCapacityRsp_USR_Value = 1104;
      case 1104: {
        if (tag == 8834u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevicecapacityrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryALLDeviceCapacityRsp_USR QueryALLDeviceCapacityRsp_USR_Value = 1105;
      case 1105: {
        if (tag == 8842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryalldevicecapacityrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDeviceP2pIDRsp_USR QueryDeviceP2pIDRsp_USR_Value = 1106;
      case 1106: {
        if (tag == 8850u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevicep2pidrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UploadUserCfgRsp_USR UploadUserCfgRsp_USR_Value = 1107;
      case 1107: {
        if (tag == 8858u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uploadusercfgrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUserCfgRsp_USR QueryUserCfgRsp_USR_Value = 1108;
      case 1108: {
        if (tag == 8866u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryusercfgrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Rsp)
  return false;
#undef DO_
}

void Rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Rsp)
  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->iretcode(), output);
  }

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Rsp.strRetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->strretmsg(), output);
  }

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  if (this->has_getaccessaddressrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->getaccessaddressrsp_dev_value_, output);
  }

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  if (this->has_loginrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->loginrsp_dev_value_, output);
  }

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  if (this->has_logoutrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->logoutrsp_dev_value_, output);
  }

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  if (this->has_shakehandrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->shakehandrsp_dev_value_, output);
  }

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  if (this->has_configinforsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->configinforsp_dev_value_, output);
  }

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  if (this->has_storageaddressrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, *this->storageaddressrsp_dev_value_, output);
  }

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  if (this->has_p2pinforsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74, *this->p2pinforsp_dev_value_, output);
  }

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  if (this->has_addfilersp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->addfilersp_dev_value_, output);
  }

  // .Interactive.Message.QueryTimeZoneRsp_DEV QueryTimeZoneRsp_DEV_Value = 81;
  if (this->has_querytimezonersp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      81, *this->querytimezonersp_dev_value_, output);
  }

  // .Interactive.Message.QueryAccessDomainNameRsp_DEV QueryAccessDomainNameRsp_DEV_Value = 82;
  if (this->has_queryaccessdomainnamersp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      82, *this->queryaccessdomainnamersp_dev_value_, output);
  }

  // .Interactive.Message.QueryUpgradeSiteRsp_DEV QueryUpgradeSiteRsp_DEV_Value = 83;
  if (this->has_queryupgradesitersp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      83, *this->queryupgradesitersp_dev_value_, output);
  }

  // .Interactive.Message.QueryFirmwareUpgradeRsp_DEV QueryFirmwareUpgradeRsp_DEV_Value = 84;
  if (this->has_queryfirmwareupgradersp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      84, *this->queryfirmwareupgradersp_dev_value_, output);
  }

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  if (this->has_msgprehandlerrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85, *this->msgprehandlerrsp_usr_value_, output);
  }

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  if (this->has_getaccessaddressrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->getaccessaddressrsp_usr_value_, output);
  }

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  if (this->has_registeruserrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->registeruserrsp_usr_value_, output);
  }

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  if (this->has_unregisteruserrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, *this->unregisteruserrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  if (this->has_queryusrinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, *this->queryusrinforsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  if (this->has_modifyuserinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122, *this->modifyuserinforsp_usr_value_, output);
  }

  // .Interactive.Message.RetrievePwdRsp_USR RetrievePwdRsp_USR_Value = 124;
  if (this->has_retrievepwdrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      124, *this->retrievepwdrsp_usr_value_, output);
  }

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  if (this->has_loginrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      130, *this->loginrsp_usr_value_, output);
  }

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  if (this->has_logoutrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140, *this->logoutrsp_usr_value_, output);
  }

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  if (this->has_shakehandrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150, *this->shakehandrsp_usr_value_, output);
  }

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  if (this->has_configinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160, *this->configinforsp_usr_value_, output);
  }

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  if (this->has_adddevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170, *this->adddevrsp_usr_value_, output);
  }

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  if (this->has_deldevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180, *this->deldevrsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  if (this->has_modifydevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190, *this->modifydevrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  if (this->has_querydevinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->querydevinforsp_usr_value_, output);
  }

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  if (this->has_querydevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      210, *this->querydevrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  if (this->has_queryuserrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, *this->queryuserrsp_usr_value_, output);
  }

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  if (this->has_sharingdevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230, *this->sharingdevrsp_usr_value_, output);
  }

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  if (this->has_cancelshareddevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      240, *this->cancelshareddevrsp_usr_value_, output);
  }

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  if (this->has_addfriendsrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250, *this->addfriendsrsp_usr_value_, output);
  }

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  if (this->has_delfriendsrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      260, *this->delfriendsrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  if (this->has_queryfriendsrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270, *this->queryfriendsrsp_usr_value_, output);
  }

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  if (this->has_storageaddressreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      272, *this->storageaddressreq_usr_value_, output);
  }

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  if (this->has_p2pinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      274, *this->p2pinforsp_usr_value_, output);
  }

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  if (this->has_getonlinedevinforsp_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      280, *this->getonlinedevinforsp_inner_value_, output);
  }

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  if (this->has_getonlineuserinforsp_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290, *this->getonlineuserinforsp_inner_value_, output);
  }

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  if (this->has_deletefilersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      310, *this->deletefilersp_usr_value_, output);
  }

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  if (this->has_downloadfilersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      320, *this->downloadfilersp_usr_value_, output);
  }

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  if (this->has_queryfilersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330, *this->queryfilersp_usr_value_, output);
  }

  // .Interactive.Message.QueryAccessDomainNameRsp_USR QueryAccessDomainNameRsp_USR_Value = 350;
  if (this->has_queryaccessdomainnamersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      350, *this->queryaccessdomainnamersp_usr_value_, output);
  }

  // .Interactive.Message.QueryAppUpgradeRsp_USR QueryAppUpgradeRsp_USR_Value = 360;
  if (this->has_queryappupgradersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      360, *this->queryappupgradersp_usr_value_, output);
  }

  // .Interactive.Message.QueryIfP2pIDValidRsp_USR QueryIfP2pIDValidRsp_USR_Value = 370;
  if (this->has_queryifp2pidvalidrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      370, *this->queryifp2pidvalidrsp_usr_value_, output);
  }

  // .Interactive.Message.GetDeviceAccessRecordRsp_INNER GetDeviceAccessRecordRsp_INNER_Value = 440;
  if (this->has_getdeviceaccessrecordrsp_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      440, *this->getdeviceaccessrecordrsp_inner_value_, output);
  }

  // .Interactive.Message.GetUserAccessRecordRsp_INNER GetUserAccessRecordRsp_INNER_Value = 450;
  if (this->has_getuseraccessrecordrsp_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      450, *this->getuseraccessrecordrsp_inner_value_, output);
  }

  // .Interactive.Message.QueryAllDeviceEventRsp_USR QueryAllDeviceEventRsp_USR_Value = 500;
  if (this->has_queryalldeviceeventrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      500, *this->queryalldeviceeventrsp_usr_value_, output);
  }

  // .Interactive.Message.DeleteDeviceEventRsp_USR DeleteDeviceEventRsp_USR_Value = 510;
  if (this->has_deletedeviceeventrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      510, *this->deletedeviceeventrsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyDeviceEventRsp_USR ModifyDeviceEventRsp_USR_Value = 520;
  if (this->has_modifydeviceeventrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      520, *this->modifydeviceeventrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryUploadURLRsp_MGR QueryUploadURLRsp_MGR_Value = 600;
  if (this->has_queryuploadurlrsp_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      600, *this->queryuploadurlrsp_mgr_value_, output);
  }

  // .Interactive.Message.AddConfigurationRsp_MGR AddConfigurationRsp_MGR_Value = 610;
  if (this->has_addconfigurationrsp_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      610, *this->addconfigurationrsp_mgr_value_, output);
  }

  // .Interactive.Message.DeleteConfigurationRsp_MGR DeleteConfigurationRsp_MGR_Value = 620;
  if (this->has_deleteconfigurationrsp_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      620, *this->deleteconfigurationrsp_mgr_value_, output);
  }

  // .Interactive.Message.ModifyConfigurationRsp_MGR ModifyConfigurationRsp_MGR_Value = 630;
  if (this->has_modifyconfigurationrsp_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      630, *this->modifyconfigurationrsp_mgr_value_, output);
  }

  // .Interactive.Message.QueryAllConfigurationRsp_MGR QueryAllConfigurationRsp_MGR_Value = 640;
  if (this->has_queryallconfigurationrsp_mgr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      640, *this->queryallconfigurationrsp_mgr_value_, output);
  }

  // .Interactive.Message.AddStorageDetailRsp_USR AddStorageDetailRsp_USR_Value = 700;
  if (this->has_addstoragedetailrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      700, *this->addstoragedetailrsp_usr_value_, output);
  }

  // .Interactive.Message.DeleteStorageDetailRsp_USR DeleteStorageDetailRsp_USR_Value = 710;
  if (this->has_deletestoragedetailrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      710, *this->deletestoragedetailrsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyStorageDetailRsp_USR ModifyStorageDetailRsp_USR_Value = 720;
  if (this->has_modifystoragedetailrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      720, *this->modifystoragedetailrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryStorageDetailRsp_USR QueryStorageDetailRsp_USR_Value = 730;
  if (this->has_querystoragedetailrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      730, *this->querystoragedetailrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryRegionStorageInfoRsp_USR QueryRegionStorageInfoRsp_USR_Value = 740;
  if (this->has_queryregionstorageinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      740, *this->queryregionstorageinforsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyDevicePropertyRsp_DEV ModifyDevicePropertyRsp_DEV_Value = 800;
  if (this->has_modifydevicepropertyrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      800, *this->modifydevicepropertyrsp_dev_value_, output);
  }

  // .Interactive.Message.QueryDeviceParameterRsp_DEV QueryDeviceParameterRsp_DEV_Value = 810;
  if (this->has_querydeviceparameterrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      810, *this->querydeviceparameterrsp_dev_value_, output);
  }

  // .Interactive.Message.QueryPlatformPushStatusRsp_DEV QueryPlatformPushStatusRsp_DEV_Value = 900;
  if (this->has_queryplatformpushstatusrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      900, *this->queryplatformpushstatusrsp_dev_value_, output);
  }

  // .Interactive.Message.DeviceEventReportRsp_DEV DeviceEventReportRsp_DEV_Value = 1000;
  if (this->has_deviceeventreportrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, *this->deviceeventreportrsp_dev_value_, output);
  }

  // .Interactive.Message.QueryDeviceInfoMultiRsp_USR QueryDeviceInfoMultiRsp_USR_Value = 1100;
  if (this->has_querydeviceinfomultirsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1100, *this->querydeviceinfomultirsp_usr_value_, output);
  }

  // .Interactive.Message.RegisterCmsCallRsp_USR RegisterCmsCallRsp_USR_Value = 1101;
  if (this->has_registercmscallrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1101, *this->registercmscallrsp_usr_value_, output);
  }

  // .Interactive.Message.UnregisterCmsCallRsp_USR UnregisterCmsCallRsp_USR_Value = 1102;
  if (this->has_unregistercmscallrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1102, *this->unregistercmscallrsp_usr_value_, output);
  }

  // .Interactive.Message.QuerySharingDeviceLimitRsp_USR QuerySharingDeviceLimitRsp_USR_Value = 1103;
  if (this->has_querysharingdevicelimitrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1103, *this->querysharingdevicelimitrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryDeviceCapacityRsp_USR QueryDeviceCapacityRsp_USR_Value = 1104;
  if (this->has_querydevicecapacityrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1104, *this->querydevicecapacityrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryALLDeviceCapacityRsp_USR QueryALLDeviceCapacityRsp_USR_Value = 1105;
  if (this->has_queryalldevicecapacityrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1105, *this->queryalldevicecapacityrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryDeviceP2pIDRsp_USR QueryDeviceP2pIDRsp_USR_Value = 1106;
  if (this->has_querydevicep2pidrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1106, *this->querydevicep2pidrsp_usr_value_, output);
  }

  // .Interactive.Message.UploadUserCfgRsp_USR UploadUserCfgRsp_USR_Value = 1107;
  if (this->has_uploadusercfgrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1107, *this->uploadusercfgrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryUserCfgRsp_USR QueryUserCfgRsp_USR_Value = 1108;
  if (this->has_queryusercfgrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1108, *this->queryusercfgrsp_usr_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Rsp)
}

::google::protobuf::uint8* Rsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Rsp)
  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->iretcode(), target);
  }

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Rsp.strRetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strretmsg(), target);
  }

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  if (this->has_getaccessaddressrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->getaccessaddressrsp_dev_value_, false, target);
  }

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  if (this->has_loginrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->loginrsp_dev_value_, false, target);
  }

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  if (this->has_logoutrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->logoutrsp_dev_value_, false, target);
  }

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  if (this->has_shakehandrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->shakehandrsp_dev_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  if (this->has_configinforsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->configinforsp_dev_value_, false, target);
  }

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  if (this->has_storageaddressrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        72, *this->storageaddressrsp_dev_value_, false, target);
  }

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  if (this->has_p2pinforsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        74, *this->p2pinforsp_dev_value_, false, target);
  }

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  if (this->has_addfilersp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->addfilersp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryTimeZoneRsp_DEV QueryTimeZoneRsp_DEV_Value = 81;
  if (this->has_querytimezonersp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        81, *this->querytimezonersp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryAccessDomainNameRsp_DEV QueryAccessDomainNameRsp_DEV_Value = 82;
  if (this->has_queryaccessdomainnamersp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        82, *this->queryaccessdomainnamersp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryUpgradeSiteRsp_DEV QueryUpgradeSiteRsp_DEV_Value = 83;
  if (this->has_queryupgradesitersp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        83, *this->queryupgradesitersp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryFirmwareUpgradeRsp_DEV QueryFirmwareUpgradeRsp_DEV_Value = 84;
  if (this->has_queryfirmwareupgradersp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        84, *this->queryfirmwareupgradersp_dev_value_, false, target);
  }

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  if (this->has_msgprehandlerrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        85, *this->msgprehandlerrsp_usr_value_, false, target);
  }

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  if (this->has_getaccessaddressrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->getaccessaddressrsp_usr_value_, false, target);
  }

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  if (this->has_registeruserrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->registeruserrsp_usr_value_, false, target);
  }

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  if (this->has_unregisteruserrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        110, *this->unregisteruserrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  if (this->has_queryusrinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        120, *this->queryusrinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  if (this->has_modifyuserinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        122, *this->modifyuserinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.RetrievePwdRsp_USR RetrievePwdRsp_USR_Value = 124;
  if (this->has_retrievepwdrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        124, *this->retrievepwdrsp_usr_value_, false, target);
  }

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  if (this->has_loginrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        130, *this->loginrsp_usr_value_, false, target);
  }

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  if (this->has_logoutrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        140, *this->logoutrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  if (this->has_shakehandrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        150, *this->shakehandrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  if (this->has_configinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        160, *this->configinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  if (this->has_adddevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        170, *this->adddevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  if (this->has_deldevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        180, *this->deldevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  if (this->has_modifydevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        190, *this->modifydevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  if (this->has_querydevinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->querydevinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  if (this->has_querydevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        210, *this->querydevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  if (this->has_queryuserrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        220, *this->queryuserrsp_usr_value_, false, target);
  }

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  if (this->has_sharingdevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        230, *this->sharingdevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  if (this->has_cancelshareddevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        240, *this->cancelshareddevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  if (this->has_addfriendsrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        250, *this->addfriendsrsp_usr_value_, false, target);
  }

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  if (this->has_delfriendsrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        260, *this->delfriendsrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  if (this->has_queryfriendsrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        270, *this->queryfriendsrsp_usr_value_, false, target);
  }

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  if (this->has_storageaddressreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        272, *this->storageaddressreq_usr_value_, false, target);
  }

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  if (this->has_p2pinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        274, *this->p2pinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  if (this->has_getonlinedevinforsp_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        280, *this->getonlinedevinforsp_inner_value_, false, target);
  }

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  if (this->has_getonlineuserinforsp_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        290, *this->getonlineuserinforsp_inner_value_, false, target);
  }

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  if (this->has_deletefilersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        310, *this->deletefilersp_usr_value_, false, target);
  }

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  if (this->has_downloadfilersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        320, *this->downloadfilersp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  if (this->has_queryfilersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        330, *this->queryfilersp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryAccessDomainNameRsp_USR QueryAccessDomainNameRsp_USR_Value = 350;
  if (this->has_queryaccessdomainnamersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        350, *this->queryaccessdomainnamersp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryAppUpgradeRsp_USR QueryAppUpgradeRsp_USR_Value = 360;
  if (this->has_queryappupgradersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        360, *this->queryappupgradersp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryIfP2pIDValidRsp_USR QueryIfP2pIDValidRsp_USR_Value = 370;
  if (this->has_queryifp2pidvalidrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        370, *this->queryifp2pidvalidrsp_usr_value_, false, target);
  }

  // .Interactive.Message.GetDeviceAccessRecordRsp_INNER GetDeviceAccessRecordRsp_INNER_Value = 440;
  if (this->has_getdeviceaccessrecordrsp_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        440, *this->getdeviceaccessrecordrsp_inner_value_, false, target);
  }

  // .Interactive.Message.GetUserAccessRecordRsp_INNER GetUserAccessRecordRsp_INNER_Value = 450;
  if (this->has_getuseraccessrecordrsp_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        450, *this->getuseraccessrecordrsp_inner_value_, false, target);
  }

  // .Interactive.Message.QueryAllDeviceEventRsp_USR QueryAllDeviceEventRsp_USR_Value = 500;
  if (this->has_queryalldeviceeventrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        500, *this->queryalldeviceeventrsp_usr_value_, false, target);
  }

  // .Interactive.Message.DeleteDeviceEventRsp_USR DeleteDeviceEventRsp_USR_Value = 510;
  if (this->has_deletedeviceeventrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        510, *this->deletedeviceeventrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDeviceEventRsp_USR ModifyDeviceEventRsp_USR_Value = 520;
  if (this->has_modifydeviceeventrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        520, *this->modifydeviceeventrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUploadURLRsp_MGR QueryUploadURLRsp_MGR_Value = 600;
  if (this->has_queryuploadurlrsp_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        600, *this->queryuploadurlrsp_mgr_value_, false, target);
  }

  // .Interactive.Message.AddConfigurationRsp_MGR AddConfigurationRsp_MGR_Value = 610;
  if (this->has_addconfigurationrsp_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        610, *this->addconfigurationrsp_mgr_value_, false, target);
  }

  // .Interactive.Message.DeleteConfigurationRsp_MGR DeleteConfigurationRsp_MGR_Value = 620;
  if (this->has_deleteconfigurationrsp_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        620, *this->deleteconfigurationrsp_mgr_value_, false, target);
  }

  // .Interactive.Message.ModifyConfigurationRsp_MGR ModifyConfigurationRsp_MGR_Value = 630;
  if (this->has_modifyconfigurationrsp_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        630, *this->modifyconfigurationrsp_mgr_value_, false, target);
  }

  // .Interactive.Message.QueryAllConfigurationRsp_MGR QueryAllConfigurationRsp_MGR_Value = 640;
  if (this->has_queryallconfigurationrsp_mgr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        640, *this->queryallconfigurationrsp_mgr_value_, false, target);
  }

  // .Interactive.Message.AddStorageDetailRsp_USR AddStorageDetailRsp_USR_Value = 700;
  if (this->has_addstoragedetailrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        700, *this->addstoragedetailrsp_usr_value_, false, target);
  }

  // .Interactive.Message.DeleteStorageDetailRsp_USR DeleteStorageDetailRsp_USR_Value = 710;
  if (this->has_deletestoragedetailrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        710, *this->deletestoragedetailrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyStorageDetailRsp_USR ModifyStorageDetailRsp_USR_Value = 720;
  if (this->has_modifystoragedetailrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        720, *this->modifystoragedetailrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryStorageDetailRsp_USR QueryStorageDetailRsp_USR_Value = 730;
  if (this->has_querystoragedetailrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        730, *this->querystoragedetailrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryRegionStorageInfoRsp_USR QueryRegionStorageInfoRsp_USR_Value = 740;
  if (this->has_queryregionstorageinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        740, *this->queryregionstorageinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDevicePropertyRsp_DEV ModifyDevicePropertyRsp_DEV_Value = 800;
  if (this->has_modifydevicepropertyrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        800, *this->modifydevicepropertyrsp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceParameterRsp_DEV QueryDeviceParameterRsp_DEV_Value = 810;
  if (this->has_querydeviceparameterrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        810, *this->querydeviceparameterrsp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryPlatformPushStatusRsp_DEV QueryPlatformPushStatusRsp_DEV_Value = 900;
  if (this->has_queryplatformpushstatusrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        900, *this->queryplatformpushstatusrsp_dev_value_, false, target);
  }

  // .Interactive.Message.DeviceEventReportRsp_DEV DeviceEventReportRsp_DEV_Value = 1000;
  if (this->has_deviceeventreportrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1000, *this->deviceeventreportrsp_dev_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceInfoMultiRsp_USR QueryDeviceInfoMultiRsp_USR_Value = 1100;
  if (this->has_querydeviceinfomultirsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1100, *this->querydeviceinfomultirsp_usr_value_, false, target);
  }

  // .Interactive.Message.RegisterCmsCallRsp_USR RegisterCmsCallRsp_USR_Value = 1101;
  if (this->has_registercmscallrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1101, *this->registercmscallrsp_usr_value_, false, target);
  }

  // .Interactive.Message.UnregisterCmsCallRsp_USR UnregisterCmsCallRsp_USR_Value = 1102;
  if (this->has_unregistercmscallrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1102, *this->unregistercmscallrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QuerySharingDeviceLimitRsp_USR QuerySharingDeviceLimitRsp_USR_Value = 1103;
  if (this->has_querysharingdevicelimitrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1103, *this->querysharingdevicelimitrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceCapacityRsp_USR QueryDeviceCapacityRsp_USR_Value = 1104;
  if (this->has_querydevicecapacityrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1104, *this->querydevicecapacityrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryALLDeviceCapacityRsp_USR QueryALLDeviceCapacityRsp_USR_Value = 1105;
  if (this->has_queryalldevicecapacityrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1105, *this->queryalldevicecapacityrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDeviceP2pIDRsp_USR QueryDeviceP2pIDRsp_USR_Value = 1106;
  if (this->has_querydevicep2pidrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1106, *this->querydevicep2pidrsp_usr_value_, false, target);
  }

  // .Interactive.Message.UploadUserCfgRsp_USR UploadUserCfgRsp_USR_Value = 1107;
  if (this->has_uploadusercfgrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1107, *this->uploadusercfgrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUserCfgRsp_USR QueryUserCfgRsp_USR_Value = 1108;
  if (this->has_queryusercfgrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1108, *this->queryusercfgrsp_usr_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Rsp)
  return target;
}

size_t Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Rsp)
  size_t total_size = 0;

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strretmsg());
  }

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  if (this->has_getaccessaddressrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressrsp_dev_value_);
  }

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  if (this->has_loginrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginrsp_dev_value_);
  }

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  if (this->has_logoutrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutrsp_dev_value_);
  }

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  if (this->has_shakehandrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandrsp_dev_value_);
  }

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  if (this->has_configinforsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforsp_dev_value_);
  }

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  if (this->has_storageaddressrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressrsp_dev_value_);
  }

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  if (this->has_p2pinforsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforsp_dev_value_);
  }

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  if (this->has_addfilersp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfilersp_dev_value_);
  }

  // .Interactive.Message.QueryTimeZoneRsp_DEV QueryTimeZoneRsp_DEV_Value = 81;
  if (this->has_querytimezonersp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querytimezonersp_dev_value_);
  }

  // .Interactive.Message.QueryAccessDomainNameRsp_DEV QueryAccessDomainNameRsp_DEV_Value = 82;
  if (this->has_queryaccessdomainnamersp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryaccessdomainnamersp_dev_value_);
  }

  // .Interactive.Message.QueryUpgradeSiteRsp_DEV QueryUpgradeSiteRsp_DEV_Value = 83;
  if (this->has_queryupgradesitersp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryupgradesitersp_dev_value_);
  }

  // .Interactive.Message.QueryFirmwareUpgradeRsp_DEV QueryFirmwareUpgradeRsp_DEV_Value = 84;
  if (this->has_queryfirmwareupgradersp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfirmwareupgradersp_dev_value_);
  }

  // .Interactive.Message.ModifyDevicePropertyRsp_DEV ModifyDevicePropertyRsp_DEV_Value = 800;
  if (this->has_modifydevicepropertyrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydevicepropertyrsp_dev_value_);
  }

  // .Interactive.Message.QueryDeviceParameterRsp_DEV QueryDeviceParameterRsp_DEV_Value = 810;
  if (this->has_querydeviceparameterrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydeviceparameterrsp_dev_value_);
  }

  // .Interactive.Message.QueryPlatformPushStatusRsp_DEV QueryPlatformPushStatusRsp_DEV_Value = 900;
  if (this->has_queryplatformpushstatusrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryplatformpushstatusrsp_dev_value_);
  }

  // .Interactive.Message.DeviceEventReportRsp_DEV DeviceEventReportRsp_DEV_Value = 1000;
  if (this->has_deviceeventreportrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deviceeventreportrsp_dev_value_);
  }

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  if (this->has_msgprehandlerrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgprehandlerrsp_usr_value_);
  }

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  if (this->has_getaccessaddressrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressrsp_usr_value_);
  }

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  if (this->has_registeruserrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->registeruserrsp_usr_value_);
  }

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  if (this->has_unregisteruserrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unregisteruserrsp_usr_value_);
  }

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  if (this->has_queryusrinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryusrinforsp_usr_value_);
  }

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  if (this->has_modifyuserinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyuserinforsp_usr_value_);
  }

  // .Interactive.Message.RetrievePwdRsp_USR RetrievePwdRsp_USR_Value = 124;
  if (this->has_retrievepwdrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retrievepwdrsp_usr_value_);
  }

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  if (this->has_loginrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginrsp_usr_value_);
  }

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  if (this->has_logoutrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutrsp_usr_value_);
  }

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  if (this->has_shakehandrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandrsp_usr_value_);
  }

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  if (this->has_configinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforsp_usr_value_);
  }

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  if (this->has_adddevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->adddevrsp_usr_value_);
  }

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  if (this->has_deldevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deldevrsp_usr_value_);
  }

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  if (this->has_modifydevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydevrsp_usr_value_);
  }

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  if (this->has_querydevinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevinforsp_usr_value_);
  }

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  if (this->has_querydevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevrsp_usr_value_);
  }

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  if (this->has_queryuserrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryuserrsp_usr_value_);
  }

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  if (this->has_sharingdevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sharingdevrsp_usr_value_);
  }

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  if (this->has_cancelshareddevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cancelshareddevrsp_usr_value_);
  }

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  if (this->has_addfriendsrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfriendsrsp_usr_value_);
  }

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  if (this->has_delfriendsrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delfriendsrsp_usr_value_);
  }

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  if (this->has_queryfriendsrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfriendsrsp_usr_value_);
  }

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  if (this->has_storageaddressreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressreq_usr_value_);
  }

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  if (this->has_p2pinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforsp_usr_value_);
  }

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  if (this->has_deletefilersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletefilersp_usr_value_);
  }

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  if (this->has_downloadfilersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->downloadfilersp_usr_value_);
  }

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  if (this->has_queryfilersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfilersp_usr_value_);
  }

  // .Interactive.Message.QueryAccessDomainNameRsp_USR QueryAccessDomainNameRsp_USR_Value = 350;
  if (this->has_queryaccessdomainnamersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryaccessdomainnamersp_usr_value_);
  }

  // .Interactive.Message.QueryAppUpgradeRsp_USR QueryAppUpgradeRsp_USR_Value = 360;
  if (this->has_queryappupgradersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryappupgradersp_usr_value_);
  }

  // .Interactive.Message.QueryIfP2pIDValidRsp_USR QueryIfP2pIDValidRsp_USR_Value = 370;
  if (this->has_queryifp2pidvalidrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryifp2pidvalidrsp_usr_value_);
  }

  // .Interactive.Message.QueryAllDeviceEventRsp_USR QueryAllDeviceEventRsp_USR_Value = 500;
  if (this->has_queryalldeviceeventrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryalldeviceeventrsp_usr_value_);
  }

  // .Interactive.Message.DeleteDeviceEventRsp_USR DeleteDeviceEventRsp_USR_Value = 510;
  if (this->has_deletedeviceeventrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletedeviceeventrsp_usr_value_);
  }

  // .Interactive.Message.ModifyDeviceEventRsp_USR ModifyDeviceEventRsp_USR_Value = 520;
  if (this->has_modifydeviceeventrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydeviceeventrsp_usr_value_);
  }

  // .Interactive.Message.AddStorageDetailRsp_USR AddStorageDetailRsp_USR_Value = 700;
  if (this->has_addstoragedetailrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addstoragedetailrsp_usr_value_);
  }

  // .Interactive.Message.DeleteStorageDetailRsp_USR DeleteStorageDetailRsp_USR_Value = 710;
  if (this->has_deletestoragedetailrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletestoragedetailrsp_usr_value_);
  }

  // .Interactive.Message.ModifyStorageDetailRsp_USR ModifyStorageDetailRsp_USR_Value = 720;
  if (this->has_modifystoragedetailrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifystoragedetailrsp_usr_value_);
  }

  // .Interactive.Message.QueryStorageDetailRsp_USR QueryStorageDetailRsp_USR_Value = 730;
  if (this->has_querystoragedetailrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querystoragedetailrsp_usr_value_);
  }

  // .Interactive.Message.QueryRegionStorageInfoRsp_USR QueryRegionStorageInfoRsp_USR_Value = 740;
  if (this->has_queryregionstorageinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryregionstorageinforsp_usr_value_);
  }

  // .Interactive.Message.QueryDeviceInfoMultiRsp_USR QueryDeviceInfoMultiRsp_USR_Value = 1100;
  if (this->has_querydeviceinfomultirsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydeviceinfomultirsp_usr_value_);
  }

  // .Interactive.Message.RegisterCmsCallRsp_USR RegisterCmsCallRsp_USR_Value = 1101;
  if (this->has_registercmscallrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->registercmscallrsp_usr_value_);
  }

  // .Interactive.Message.UnregisterCmsCallRsp_USR UnregisterCmsCallRsp_USR_Value = 1102;
  if (this->has_unregistercmscallrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unregistercmscallrsp_usr_value_);
  }

  // .Interactive.Message.QuerySharingDeviceLimitRsp_USR QuerySharingDeviceLimitRsp_USR_Value = 1103;
  if (this->has_querysharingdevicelimitrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querysharingdevicelimitrsp_usr_value_);
  }

  // .Interactive.Message.QueryDeviceCapacityRsp_USR QueryDeviceCapacityRsp_USR_Value = 1104;
  if (this->has_querydevicecapacityrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevicecapacityrsp_usr_value_);
  }

  // .Interactive.Message.QueryALLDeviceCapacityRsp_USR QueryALLDeviceCapacityRsp_USR_Value = 1105;
  if (this->has_queryalldevicecapacityrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryalldevicecapacityrsp_usr_value_);
  }

  // .Interactive.Message.QueryDeviceP2pIDRsp_USR QueryDeviceP2pIDRsp_USR_Value = 1106;
  if (this->has_querydevicep2pidrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevicep2pidrsp_usr_value_);
  }

  // .Interactive.Message.UploadUserCfgRsp_USR UploadUserCfgRsp_USR_Value = 1107;
  if (this->has_uploadusercfgrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->uploadusercfgrsp_usr_value_);
  }

  // .Interactive.Message.QueryUserCfgRsp_USR QueryUserCfgRsp_USR_Value = 1108;
  if (this->has_queryusercfgrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryusercfgrsp_usr_value_);
  }

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  if (this->has_getonlinedevinforsp_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlinedevinforsp_inner_value_);
  }

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  if (this->has_getonlineuserinforsp_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlineuserinforsp_inner_value_);
  }

  // .Interactive.Message.GetDeviceAccessRecordRsp_INNER GetDeviceAccessRecordRsp_INNER_Value = 440;
  if (this->has_getdeviceaccessrecordrsp_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getdeviceaccessrecordrsp_inner_value_);
  }

  // .Interactive.Message.GetUserAccessRecordRsp_INNER GetUserAccessRecordRsp_INNER_Value = 450;
  if (this->has_getuseraccessrecordrsp_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getuseraccessrecordrsp_inner_value_);
  }

  // .Interactive.Message.QueryUploadURLRsp_MGR QueryUploadURLRsp_MGR_Value = 600;
  if (this->has_queryuploadurlrsp_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryuploadurlrsp_mgr_value_);
  }

  // .Interactive.Message.AddConfigurationRsp_MGR AddConfigurationRsp_MGR_Value = 610;
  if (this->has_addconfigurationrsp_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addconfigurationrsp_mgr_value_);
  }

  // .Interactive.Message.DeleteConfigurationRsp_MGR DeleteConfigurationRsp_MGR_Value = 620;
  if (this->has_deleteconfigurationrsp_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deleteconfigurationrsp_mgr_value_);
  }

  // .Interactive.Message.ModifyConfigurationRsp_MGR ModifyConfigurationRsp_MGR_Value = 630;
  if (this->has_modifyconfigurationrsp_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyconfigurationrsp_mgr_value_);
  }

  // .Interactive.Message.QueryAllConfigurationRsp_MGR QueryAllConfigurationRsp_MGR_Value = 640;
  if (this->has_queryallconfigurationrsp_mgr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryallconfigurationrsp_mgr_value_);
  }

  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iretcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Rsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Rsp)
    MergeFrom(*source);
  }
}

void Rsp::MergeFrom(const Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strretmsg().size() > 0) {

    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_getaccessaddressrsp_dev_value()) {
    mutable_getaccessaddressrsp_dev_value()->::Interactive::Message::GetAccessAddressRsp_DEV::MergeFrom(from.getaccessaddressrsp_dev_value());
  }
  if (from.has_loginrsp_dev_value()) {
    mutable_loginrsp_dev_value()->::Interactive::Message::LoginRsp_DEV::MergeFrom(from.loginrsp_dev_value());
  }
  if (from.has_logoutrsp_dev_value()) {
    mutable_logoutrsp_dev_value()->::Interactive::Message::LogoutRsp_DEV::MergeFrom(from.logoutrsp_dev_value());
  }
  if (from.has_shakehandrsp_dev_value()) {
    mutable_shakehandrsp_dev_value()->::Interactive::Message::ShakehandRsp_DEV::MergeFrom(from.shakehandrsp_dev_value());
  }
  if (from.has_configinforsp_dev_value()) {
    mutable_configinforsp_dev_value()->::Interactive::Message::ConfigInfoRsp_DEV::MergeFrom(from.configinforsp_dev_value());
  }
  if (from.has_storageaddressrsp_dev_value()) {
    mutable_storageaddressrsp_dev_value()->::Interactive::Message::StorageAddressRsp_DEV::MergeFrom(from.storageaddressrsp_dev_value());
  }
  if (from.has_p2pinforsp_dev_value()) {
    mutable_p2pinforsp_dev_value()->::Interactive::Message::P2pInfoRsp_DEV::MergeFrom(from.p2pinforsp_dev_value());
  }
  if (from.has_addfilersp_dev_value()) {
    mutable_addfilersp_dev_value()->::Interactive::Message::AddFileRsp_DEV::MergeFrom(from.addfilersp_dev_value());
  }
  if (from.has_querytimezonersp_dev_value()) {
    mutable_querytimezonersp_dev_value()->::Interactive::Message::QueryTimeZoneRsp_DEV::MergeFrom(from.querytimezonersp_dev_value());
  }
  if (from.has_queryaccessdomainnamersp_dev_value()) {
    mutable_queryaccessdomainnamersp_dev_value()->::Interactive::Message::QueryAccessDomainNameRsp_DEV::MergeFrom(from.queryaccessdomainnamersp_dev_value());
  }
  if (from.has_queryupgradesitersp_dev_value()) {
    mutable_queryupgradesitersp_dev_value()->::Interactive::Message::QueryUpgradeSiteRsp_DEV::MergeFrom(from.queryupgradesitersp_dev_value());
  }
  if (from.has_queryfirmwareupgradersp_dev_value()) {
    mutable_queryfirmwareupgradersp_dev_value()->::Interactive::Message::QueryFirmwareUpgradeRsp_DEV::MergeFrom(from.queryfirmwareupgradersp_dev_value());
  }
  if (from.has_modifydevicepropertyrsp_dev_value()) {
    mutable_modifydevicepropertyrsp_dev_value()->::Interactive::Message::ModifyDevicePropertyRsp_DEV::MergeFrom(from.modifydevicepropertyrsp_dev_value());
  }
  if (from.has_querydeviceparameterrsp_dev_value()) {
    mutable_querydeviceparameterrsp_dev_value()->::Interactive::Message::QueryDeviceParameterRsp_DEV::MergeFrom(from.querydeviceparameterrsp_dev_value());
  }
  if (from.has_queryplatformpushstatusrsp_dev_value()) {
    mutable_queryplatformpushstatusrsp_dev_value()->::Interactive::Message::QueryPlatformPushStatusRsp_DEV::MergeFrom(from.queryplatformpushstatusrsp_dev_value());
  }
  if (from.has_deviceeventreportrsp_dev_value()) {
    mutable_deviceeventreportrsp_dev_value()->::Interactive::Message::DeviceEventReportRsp_DEV::MergeFrom(from.deviceeventreportrsp_dev_value());
  }
  if (from.has_msgprehandlerrsp_usr_value()) {
    mutable_msgprehandlerrsp_usr_value()->::Interactive::Message::MsgPreHandlerRsp_USR::MergeFrom(from.msgprehandlerrsp_usr_value());
  }
  if (from.has_getaccessaddressrsp_usr_value()) {
    mutable_getaccessaddressrsp_usr_value()->::Interactive::Message::GetAccessAddressRsp_USR::MergeFrom(from.getaccessaddressrsp_usr_value());
  }
  if (from.has_registeruserrsp_usr_value()) {
    mutable_registeruserrsp_usr_value()->::Interactive::Message::RegisterUserRsp_USR::MergeFrom(from.registeruserrsp_usr_value());
  }
  if (from.has_unregisteruserrsp_usr_value()) {
    mutable_unregisteruserrsp_usr_value()->::Interactive::Message::UnRegisterUserRsp_USR::MergeFrom(from.unregisteruserrsp_usr_value());
  }
  if (from.has_queryusrinforsp_usr_value()) {
    mutable_queryusrinforsp_usr_value()->::Interactive::Message::QueryUsrInfoRsp_USR::MergeFrom(from.queryusrinforsp_usr_value());
  }
  if (from.has_modifyuserinforsp_usr_value()) {
    mutable_modifyuserinforsp_usr_value()->::Interactive::Message::ModifyUserInfoRsp_USR::MergeFrom(from.modifyuserinforsp_usr_value());
  }
  if (from.has_retrievepwdrsp_usr_value()) {
    mutable_retrievepwdrsp_usr_value()->::Interactive::Message::RetrievePwdRsp_USR::MergeFrom(from.retrievepwdrsp_usr_value());
  }
  if (from.has_loginrsp_usr_value()) {
    mutable_loginrsp_usr_value()->::Interactive::Message::LoginRsp_USR::MergeFrom(from.loginrsp_usr_value());
  }
  if (from.has_logoutrsp_usr_value()) {
    mutable_logoutrsp_usr_value()->::Interactive::Message::LogoutRsp_USR::MergeFrom(from.logoutrsp_usr_value());
  }
  if (from.has_shakehandrsp_usr_value()) {
    mutable_shakehandrsp_usr_value()->::Interactive::Message::ShakehandRsp_USR::MergeFrom(from.shakehandrsp_usr_value());
  }
  if (from.has_configinforsp_usr_value()) {
    mutable_configinforsp_usr_value()->::Interactive::Message::ConfigInfoRsp_USR::MergeFrom(from.configinforsp_usr_value());
  }
  if (from.has_adddevrsp_usr_value()) {
    mutable_adddevrsp_usr_value()->::Interactive::Message::AddDevRsp_USR::MergeFrom(from.adddevrsp_usr_value());
  }
  if (from.has_deldevrsp_usr_value()) {
    mutable_deldevrsp_usr_value()->::Interactive::Message::DelDevRsp_USR::MergeFrom(from.deldevrsp_usr_value());
  }
  if (from.has_modifydevrsp_usr_value()) {
    mutable_modifydevrsp_usr_value()->::Interactive::Message::ModifyDevRsp_USR::MergeFrom(from.modifydevrsp_usr_value());
  }
  if (from.has_querydevinforsp_usr_value()) {
    mutable_querydevinforsp_usr_value()->::Interactive::Message::QueryDevInfoRsp_USR::MergeFrom(from.querydevinforsp_usr_value());
  }
  if (from.has_querydevrsp_usr_value()) {
    mutable_querydevrsp_usr_value()->::Interactive::Message::QueryDevRsp_USR::MergeFrom(from.querydevrsp_usr_value());
  }
  if (from.has_queryuserrsp_usr_value()) {
    mutable_queryuserrsp_usr_value()->::Interactive::Message::QueryUserRsp_USR::MergeFrom(from.queryuserrsp_usr_value());
  }
  if (from.has_sharingdevrsp_usr_value()) {
    mutable_sharingdevrsp_usr_value()->::Interactive::Message::SharingDevRsp_USR::MergeFrom(from.sharingdevrsp_usr_value());
  }
  if (from.has_cancelshareddevrsp_usr_value()) {
    mutable_cancelshareddevrsp_usr_value()->::Interactive::Message::CancelSharedDevRsp_USR::MergeFrom(from.cancelshareddevrsp_usr_value());
  }
  if (from.has_addfriendsrsp_usr_value()) {
    mutable_addfriendsrsp_usr_value()->::Interactive::Message::AddFriendsRsp_USR::MergeFrom(from.addfriendsrsp_usr_value());
  }
  if (from.has_delfriendsrsp_usr_value()) {
    mutable_delfriendsrsp_usr_value()->::Interactive::Message::DelFriendsRsp_USR::MergeFrom(from.delfriendsrsp_usr_value());
  }
  if (from.has_queryfriendsrsp_usr_value()) {
    mutable_queryfriendsrsp_usr_value()->::Interactive::Message::QueryFriendsRsp_USR::MergeFrom(from.queryfriendsrsp_usr_value());
  }
  if (from.has_storageaddressreq_usr_value()) {
    mutable_storageaddressreq_usr_value()->::Interactive::Message::StorageAddressRsp_USR::MergeFrom(from.storageaddressreq_usr_value());
  }
  if (from.has_p2pinforsp_usr_value()) {
    mutable_p2pinforsp_usr_value()->::Interactive::Message::P2pInfoRsp_USR::MergeFrom(from.p2pinforsp_usr_value());
  }
  if (from.has_deletefilersp_usr_value()) {
    mutable_deletefilersp_usr_value()->::Interactive::Message::DeleteFileRsp_USR::MergeFrom(from.deletefilersp_usr_value());
  }
  if (from.has_downloadfilersp_usr_value()) {
    mutable_downloadfilersp_usr_value()->::Interactive::Message::DownloadFileRsp_USR::MergeFrom(from.downloadfilersp_usr_value());
  }
  if (from.has_queryfilersp_usr_value()) {
    mutable_queryfilersp_usr_value()->::Interactive::Message::QueryFileRsp_USR::MergeFrom(from.queryfilersp_usr_value());
  }
  if (from.has_queryaccessdomainnamersp_usr_value()) {
    mutable_queryaccessdomainnamersp_usr_value()->::Interactive::Message::QueryAccessDomainNameRsp_USR::MergeFrom(from.queryaccessdomainnamersp_usr_value());
  }
  if (from.has_queryappupgradersp_usr_value()) {
    mutable_queryappupgradersp_usr_value()->::Interactive::Message::QueryAppUpgradeRsp_USR::MergeFrom(from.queryappupgradersp_usr_value());
  }
  if (from.has_queryifp2pidvalidrsp_usr_value()) {
    mutable_queryifp2pidvalidrsp_usr_value()->::Interactive::Message::QueryIfP2pIDValidRsp_USR::MergeFrom(from.queryifp2pidvalidrsp_usr_value());
  }
  if (from.has_queryalldeviceeventrsp_usr_value()) {
    mutable_queryalldeviceeventrsp_usr_value()->::Interactive::Message::QueryAllDeviceEventRsp_USR::MergeFrom(from.queryalldeviceeventrsp_usr_value());
  }
  if (from.has_deletedeviceeventrsp_usr_value()) {
    mutable_deletedeviceeventrsp_usr_value()->::Interactive::Message::DeleteDeviceEventRsp_USR::MergeFrom(from.deletedeviceeventrsp_usr_value());
  }
  if (from.has_modifydeviceeventrsp_usr_value()) {
    mutable_modifydeviceeventrsp_usr_value()->::Interactive::Message::ModifyDeviceEventRsp_USR::MergeFrom(from.modifydeviceeventrsp_usr_value());
  }
  if (from.has_addstoragedetailrsp_usr_value()) {
    mutable_addstoragedetailrsp_usr_value()->::Interactive::Message::AddStorageDetailRsp_USR::MergeFrom(from.addstoragedetailrsp_usr_value());
  }
  if (from.has_deletestoragedetailrsp_usr_value()) {
    mutable_deletestoragedetailrsp_usr_value()->::Interactive::Message::DeleteStorageDetailRsp_USR::MergeFrom(from.deletestoragedetailrsp_usr_value());
  }
  if (from.has_modifystoragedetailrsp_usr_value()) {
    mutable_modifystoragedetailrsp_usr_value()->::Interactive::Message::ModifyStorageDetailRsp_USR::MergeFrom(from.modifystoragedetailrsp_usr_value());
  }
  if (from.has_querystoragedetailrsp_usr_value()) {
    mutable_querystoragedetailrsp_usr_value()->::Interactive::Message::QueryStorageDetailRsp_USR::MergeFrom(from.querystoragedetailrsp_usr_value());
  }
  if (from.has_queryregionstorageinforsp_usr_value()) {
    mutable_queryregionstorageinforsp_usr_value()->::Interactive::Message::QueryRegionStorageInfoRsp_USR::MergeFrom(from.queryregionstorageinforsp_usr_value());
  }
  if (from.has_querydeviceinfomultirsp_usr_value()) {
    mutable_querydeviceinfomultirsp_usr_value()->::Interactive::Message::QueryDeviceInfoMultiRsp_USR::MergeFrom(from.querydeviceinfomultirsp_usr_value());
  }
  if (from.has_registercmscallrsp_usr_value()) {
    mutable_registercmscallrsp_usr_value()->::Interactive::Message::RegisterCmsCallRsp_USR::MergeFrom(from.registercmscallrsp_usr_value());
  }
  if (from.has_unregistercmscallrsp_usr_value()) {
    mutable_unregistercmscallrsp_usr_value()->::Interactive::Message::UnregisterCmsCallRsp_USR::MergeFrom(from.unregistercmscallrsp_usr_value());
  }
  if (from.has_querysharingdevicelimitrsp_usr_value()) {
    mutable_querysharingdevicelimitrsp_usr_value()->::Interactive::Message::QuerySharingDeviceLimitRsp_USR::MergeFrom(from.querysharingdevicelimitrsp_usr_value());
  }
  if (from.has_querydevicecapacityrsp_usr_value()) {
    mutable_querydevicecapacityrsp_usr_value()->::Interactive::Message::QueryDeviceCapacityRsp_USR::MergeFrom(from.querydevicecapacityrsp_usr_value());
  }
  if (from.has_queryalldevicecapacityrsp_usr_value()) {
    mutable_queryalldevicecapacityrsp_usr_value()->::Interactive::Message::QueryALLDeviceCapacityRsp_USR::MergeFrom(from.queryalldevicecapacityrsp_usr_value());
  }
  if (from.has_querydevicep2pidrsp_usr_value()) {
    mutable_querydevicep2pidrsp_usr_value()->::Interactive::Message::QueryDeviceP2pIDRsp_USR::MergeFrom(from.querydevicep2pidrsp_usr_value());
  }
  if (from.has_uploadusercfgrsp_usr_value()) {
    mutable_uploadusercfgrsp_usr_value()->::Interactive::Message::UploadUserCfgRsp_USR::MergeFrom(from.uploadusercfgrsp_usr_value());
  }
  if (from.has_queryusercfgrsp_usr_value()) {
    mutable_queryusercfgrsp_usr_value()->::Interactive::Message::QueryUserCfgRsp_USR::MergeFrom(from.queryusercfgrsp_usr_value());
  }
  if (from.has_getonlinedevinforsp_inner_value()) {
    mutable_getonlinedevinforsp_inner_value()->::Interactive::Message::GetOnlineDevInfoRsp_INNER::MergeFrom(from.getonlinedevinforsp_inner_value());
  }
  if (from.has_getonlineuserinforsp_inner_value()) {
    mutable_getonlineuserinforsp_inner_value()->::Interactive::Message::GetOnlineUserInfoRsp_INNER::MergeFrom(from.getonlineuserinforsp_inner_value());
  }
  if (from.has_getdeviceaccessrecordrsp_inner_value()) {
    mutable_getdeviceaccessrecordrsp_inner_value()->::Interactive::Message::GetDeviceAccessRecordRsp_INNER::MergeFrom(from.getdeviceaccessrecordrsp_inner_value());
  }
  if (from.has_getuseraccessrecordrsp_inner_value()) {
    mutable_getuseraccessrecordrsp_inner_value()->::Interactive::Message::GetUserAccessRecordRsp_INNER::MergeFrom(from.getuseraccessrecordrsp_inner_value());
  }
  if (from.has_queryuploadurlrsp_mgr_value()) {
    mutable_queryuploadurlrsp_mgr_value()->::Interactive::Message::QueryUploadURLRsp_MGR::MergeFrom(from.queryuploadurlrsp_mgr_value());
  }
  if (from.has_addconfigurationrsp_mgr_value()) {
    mutable_addconfigurationrsp_mgr_value()->::Interactive::Message::AddConfigurationRsp_MGR::MergeFrom(from.addconfigurationrsp_mgr_value());
  }
  if (from.has_deleteconfigurationrsp_mgr_value()) {
    mutable_deleteconfigurationrsp_mgr_value()->::Interactive::Message::DeleteConfigurationRsp_MGR::MergeFrom(from.deleteconfigurationrsp_mgr_value());
  }
  if (from.has_modifyconfigurationrsp_mgr_value()) {
    mutable_modifyconfigurationrsp_mgr_value()->::Interactive::Message::ModifyConfigurationRsp_MGR::MergeFrom(from.modifyconfigurationrsp_mgr_value());
  }
  if (from.has_queryallconfigurationrsp_mgr_value()) {
    mutable_queryallconfigurationrsp_mgr_value()->::Interactive::Message::QueryAllConfigurationRsp_MGR::MergeFrom(from.queryallconfigurationrsp_mgr_value());
  }
  if (from.iretcode() != 0) {
    set_iretcode(from.iretcode());
  }
}

void Rsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp::CopyFrom(const Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp::IsInitialized() const {
  return true;
}

void Rsp::Swap(Rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp::InternalSwap(Rsp* other) {
  strretmsg_.Swap(&other->strretmsg_);
  std::swap(getaccessaddressrsp_dev_value_, other->getaccessaddressrsp_dev_value_);
  std::swap(loginrsp_dev_value_, other->loginrsp_dev_value_);
  std::swap(logoutrsp_dev_value_, other->logoutrsp_dev_value_);
  std::swap(shakehandrsp_dev_value_, other->shakehandrsp_dev_value_);
  std::swap(configinforsp_dev_value_, other->configinforsp_dev_value_);
  std::swap(storageaddressrsp_dev_value_, other->storageaddressrsp_dev_value_);
  std::swap(p2pinforsp_dev_value_, other->p2pinforsp_dev_value_);
  std::swap(addfilersp_dev_value_, other->addfilersp_dev_value_);
  std::swap(querytimezonersp_dev_value_, other->querytimezonersp_dev_value_);
  std::swap(queryaccessdomainnamersp_dev_value_, other->queryaccessdomainnamersp_dev_value_);
  std::swap(queryupgradesitersp_dev_value_, other->queryupgradesitersp_dev_value_);
  std::swap(queryfirmwareupgradersp_dev_value_, other->queryfirmwareupgradersp_dev_value_);
  std::swap(modifydevicepropertyrsp_dev_value_, other->modifydevicepropertyrsp_dev_value_);
  std::swap(querydeviceparameterrsp_dev_value_, other->querydeviceparameterrsp_dev_value_);
  std::swap(queryplatformpushstatusrsp_dev_value_, other->queryplatformpushstatusrsp_dev_value_);
  std::swap(deviceeventreportrsp_dev_value_, other->deviceeventreportrsp_dev_value_);
  std::swap(msgprehandlerrsp_usr_value_, other->msgprehandlerrsp_usr_value_);
  std::swap(getaccessaddressrsp_usr_value_, other->getaccessaddressrsp_usr_value_);
  std::swap(registeruserrsp_usr_value_, other->registeruserrsp_usr_value_);
  std::swap(unregisteruserrsp_usr_value_, other->unregisteruserrsp_usr_value_);
  std::swap(queryusrinforsp_usr_value_, other->queryusrinforsp_usr_value_);
  std::swap(modifyuserinforsp_usr_value_, other->modifyuserinforsp_usr_value_);
  std::swap(retrievepwdrsp_usr_value_, other->retrievepwdrsp_usr_value_);
  std::swap(loginrsp_usr_value_, other->loginrsp_usr_value_);
  std::swap(logoutrsp_usr_value_, other->logoutrsp_usr_value_);
  std::swap(shakehandrsp_usr_value_, other->shakehandrsp_usr_value_);
  std::swap(configinforsp_usr_value_, other->configinforsp_usr_value_);
  std::swap(adddevrsp_usr_value_, other->adddevrsp_usr_value_);
  std::swap(deldevrsp_usr_value_, other->deldevrsp_usr_value_);
  std::swap(modifydevrsp_usr_value_, other->modifydevrsp_usr_value_);
  std::swap(querydevinforsp_usr_value_, other->querydevinforsp_usr_value_);
  std::swap(querydevrsp_usr_value_, other->querydevrsp_usr_value_);
  std::swap(queryuserrsp_usr_value_, other->queryuserrsp_usr_value_);
  std::swap(sharingdevrsp_usr_value_, other->sharingdevrsp_usr_value_);
  std::swap(cancelshareddevrsp_usr_value_, other->cancelshareddevrsp_usr_value_);
  std::swap(addfriendsrsp_usr_value_, other->addfriendsrsp_usr_value_);
  std::swap(delfriendsrsp_usr_value_, other->delfriendsrsp_usr_value_);
  std::swap(queryfriendsrsp_usr_value_, other->queryfriendsrsp_usr_value_);
  std::swap(storageaddressreq_usr_value_, other->storageaddressreq_usr_value_);
  std::swap(p2pinforsp_usr_value_, other->p2pinforsp_usr_value_);
  std::swap(deletefilersp_usr_value_, other->deletefilersp_usr_value_);
  std::swap(downloadfilersp_usr_value_, other->downloadfilersp_usr_value_);
  std::swap(queryfilersp_usr_value_, other->queryfilersp_usr_value_);
  std::swap(queryaccessdomainnamersp_usr_value_, other->queryaccessdomainnamersp_usr_value_);
  std::swap(queryappupgradersp_usr_value_, other->queryappupgradersp_usr_value_);
  std::swap(queryifp2pidvalidrsp_usr_value_, other->queryifp2pidvalidrsp_usr_value_);
  std::swap(queryalldeviceeventrsp_usr_value_, other->queryalldeviceeventrsp_usr_value_);
  std::swap(deletedeviceeventrsp_usr_value_, other->deletedeviceeventrsp_usr_value_);
  std::swap(modifydeviceeventrsp_usr_value_, other->modifydeviceeventrsp_usr_value_);
  std::swap(addstoragedetailrsp_usr_value_, other->addstoragedetailrsp_usr_value_);
  std::swap(deletestoragedetailrsp_usr_value_, other->deletestoragedetailrsp_usr_value_);
  std::swap(modifystoragedetailrsp_usr_value_, other->modifystoragedetailrsp_usr_value_);
  std::swap(querystoragedetailrsp_usr_value_, other->querystoragedetailrsp_usr_value_);
  std::swap(queryregionstorageinforsp_usr_value_, other->queryregionstorageinforsp_usr_value_);
  std::swap(querydeviceinfomultirsp_usr_value_, other->querydeviceinfomultirsp_usr_value_);
  std::swap(registercmscallrsp_usr_value_, other->registercmscallrsp_usr_value_);
  std::swap(unregistercmscallrsp_usr_value_, other->unregistercmscallrsp_usr_value_);
  std::swap(querysharingdevicelimitrsp_usr_value_, other->querysharingdevicelimitrsp_usr_value_);
  std::swap(querydevicecapacityrsp_usr_value_, other->querydevicecapacityrsp_usr_value_);
  std::swap(queryalldevicecapacityrsp_usr_value_, other->queryalldevicecapacityrsp_usr_value_);
  std::swap(querydevicep2pidrsp_usr_value_, other->querydevicep2pidrsp_usr_value_);
  std::swap(uploadusercfgrsp_usr_value_, other->uploadusercfgrsp_usr_value_);
  std::swap(queryusercfgrsp_usr_value_, other->queryusercfgrsp_usr_value_);
  std::swap(getonlinedevinforsp_inner_value_, other->getonlinedevinforsp_inner_value_);
  std::swap(getonlineuserinforsp_inner_value_, other->getonlineuserinforsp_inner_value_);
  std::swap(getdeviceaccessrecordrsp_inner_value_, other->getdeviceaccessrecordrsp_inner_value_);
  std::swap(getuseraccessrecordrsp_inner_value_, other->getuseraccessrecordrsp_inner_value_);
  std::swap(queryuploadurlrsp_mgr_value_, other->queryuploadurlrsp_mgr_value_);
  std::swap(addconfigurationrsp_mgr_value_, other->addconfigurationrsp_mgr_value_);
  std::swap(deleteconfigurationrsp_mgr_value_, other->deleteconfigurationrsp_mgr_value_);
  std::swap(modifyconfigurationrsp_mgr_value_, other->modifyconfigurationrsp_mgr_value_);
  std::swap(queryallconfigurationrsp_mgr_value_, other->queryallconfigurationrsp_mgr_value_);
  std::swap(iretcode_, other->iretcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rsp::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[161];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rsp

// int32 iRetcode = 10;
void Rsp::clear_iretcode() {
  iretcode_ = 0;
}
::google::protobuf::int32 Rsp::iretcode() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.iRetcode)
  return iretcode_;
}
void Rsp::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Rsp.iRetcode)
}

// string strRetMsg = 20;
void Rsp::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Rsp::strretmsg() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.strRetMsg)
  return strretmsg_.GetNoArena();
}
void Rsp::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Rsp.strRetMsg)
}
#if LANG_CXX11
void Rsp::set_strretmsg(::std::string&& value) {
  
  strretmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Rsp.strRetMsg)
}
#endif
void Rsp::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Rsp.strRetMsg)
}
void Rsp::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Rsp.strRetMsg)
}
::std::string* Rsp::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Rsp::release_strretmsg() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Rsp::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.strRetMsg)
}

// .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
bool Rsp::has_getaccessaddressrsp_dev_value() const {
  return this != internal_default_instance() && getaccessaddressrsp_dev_value_ != NULL;
}
void Rsp::clear_getaccessaddressrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_dev_value_ != NULL) delete getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressRsp_DEV& Rsp::getaccessaddressrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  return getaccessaddressrsp_dev_value_ != NULL ? *getaccessaddressrsp_dev_value_
                         : *::Interactive::Message::GetAccessAddressRsp_DEV::internal_default_instance();
}
::Interactive::Message::GetAccessAddressRsp_DEV* Rsp::mutable_getaccessaddressrsp_dev_value() {
  
  if (getaccessaddressrsp_dev_value_ == NULL) {
    getaccessaddressrsp_dev_value_ = new ::Interactive::Message::GetAccessAddressRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  return getaccessaddressrsp_dev_value_;
}
::Interactive::Message::GetAccessAddressRsp_DEV* Rsp::release_getaccessaddressrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  
  ::Interactive::Message::GetAccessAddressRsp_DEV* temp = getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getaccessaddressrsp_dev_value(::Interactive::Message::GetAccessAddressRsp_DEV* getaccessaddressrsp_dev_value) {
  delete getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = getaccessaddressrsp_dev_value;
  if (getaccessaddressrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
}

// .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
bool Rsp::has_loginrsp_dev_value() const {
  return this != internal_default_instance() && loginrsp_dev_value_ != NULL;
}
void Rsp::clear_loginrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && loginrsp_dev_value_ != NULL) delete loginrsp_dev_value_;
  loginrsp_dev_value_ = NULL;
}
const ::Interactive::Message::LoginRsp_DEV& Rsp::loginrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  return loginrsp_dev_value_ != NULL ? *loginrsp_dev_value_
                         : *::Interactive::Message::LoginRsp_DEV::internal_default_instance();
}
::Interactive::Message::LoginRsp_DEV* Rsp::mutable_loginrsp_dev_value() {
  
  if (loginrsp_dev_value_ == NULL) {
    loginrsp_dev_value_ = new ::Interactive::Message::LoginRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  return loginrsp_dev_value_;
}
::Interactive::Message::LoginRsp_DEV* Rsp::release_loginrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  
  ::Interactive::Message::LoginRsp_DEV* temp = loginrsp_dev_value_;
  loginrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_loginrsp_dev_value(::Interactive::Message::LoginRsp_DEV* loginrsp_dev_value) {
  delete loginrsp_dev_value_;
  loginrsp_dev_value_ = loginrsp_dev_value;
  if (loginrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LoginRsp_DEV_Value)
}

// .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
bool Rsp::has_logoutrsp_dev_value() const {
  return this != internal_default_instance() && logoutrsp_dev_value_ != NULL;
}
void Rsp::clear_logoutrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && logoutrsp_dev_value_ != NULL) delete logoutrsp_dev_value_;
  logoutrsp_dev_value_ = NULL;
}
const ::Interactive::Message::LogoutRsp_DEV& Rsp::logoutrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  return logoutrsp_dev_value_ != NULL ? *logoutrsp_dev_value_
                         : *::Interactive::Message::LogoutRsp_DEV::internal_default_instance();
}
::Interactive::Message::LogoutRsp_DEV* Rsp::mutable_logoutrsp_dev_value() {
  
  if (logoutrsp_dev_value_ == NULL) {
    logoutrsp_dev_value_ = new ::Interactive::Message::LogoutRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  return logoutrsp_dev_value_;
}
::Interactive::Message::LogoutRsp_DEV* Rsp::release_logoutrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  
  ::Interactive::Message::LogoutRsp_DEV* temp = logoutrsp_dev_value_;
  logoutrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_logoutrsp_dev_value(::Interactive::Message::LogoutRsp_DEV* logoutrsp_dev_value) {
  delete logoutrsp_dev_value_;
  logoutrsp_dev_value_ = logoutrsp_dev_value;
  if (logoutrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
}

// .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
bool Rsp::has_shakehandrsp_dev_value() const {
  return this != internal_default_instance() && shakehandrsp_dev_value_ != NULL;
}
void Rsp::clear_shakehandrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_dev_value_ != NULL) delete shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = NULL;
}
const ::Interactive::Message::ShakehandRsp_DEV& Rsp::shakehandrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  return shakehandrsp_dev_value_ != NULL ? *shakehandrsp_dev_value_
                         : *::Interactive::Message::ShakehandRsp_DEV::internal_default_instance();
}
::Interactive::Message::ShakehandRsp_DEV* Rsp::mutable_shakehandrsp_dev_value() {
  
  if (shakehandrsp_dev_value_ == NULL) {
    shakehandrsp_dev_value_ = new ::Interactive::Message::ShakehandRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  return shakehandrsp_dev_value_;
}
::Interactive::Message::ShakehandRsp_DEV* Rsp::release_shakehandrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  
  ::Interactive::Message::ShakehandRsp_DEV* temp = shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_shakehandrsp_dev_value(::Interactive::Message::ShakehandRsp_DEV* shakehandrsp_dev_value) {
  delete shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = shakehandrsp_dev_value;
  if (shakehandrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
}

// .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
bool Rsp::has_configinforsp_dev_value() const {
  return this != internal_default_instance() && configinforsp_dev_value_ != NULL;
}
void Rsp::clear_configinforsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && configinforsp_dev_value_ != NULL) delete configinforsp_dev_value_;
  configinforsp_dev_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoRsp_DEV& Rsp::configinforsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  return configinforsp_dev_value_ != NULL ? *configinforsp_dev_value_
                         : *::Interactive::Message::ConfigInfoRsp_DEV::internal_default_instance();
}
::Interactive::Message::ConfigInfoRsp_DEV* Rsp::mutable_configinforsp_dev_value() {
  
  if (configinforsp_dev_value_ == NULL) {
    configinforsp_dev_value_ = new ::Interactive::Message::ConfigInfoRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  return configinforsp_dev_value_;
}
::Interactive::Message::ConfigInfoRsp_DEV* Rsp::release_configinforsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  
  ::Interactive::Message::ConfigInfoRsp_DEV* temp = configinforsp_dev_value_;
  configinforsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_configinforsp_dev_value(::Interactive::Message::ConfigInfoRsp_DEV* configinforsp_dev_value) {
  delete configinforsp_dev_value_;
  configinforsp_dev_value_ = configinforsp_dev_value;
  if (configinforsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
}

// .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
bool Rsp::has_storageaddressrsp_dev_value() const {
  return this != internal_default_instance() && storageaddressrsp_dev_value_ != NULL;
}
void Rsp::clear_storageaddressrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressrsp_dev_value_ != NULL) delete storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = NULL;
}
const ::Interactive::Message::StorageAddressRsp_DEV& Rsp::storageaddressrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  return storageaddressrsp_dev_value_ != NULL ? *storageaddressrsp_dev_value_
                         : *::Interactive::Message::StorageAddressRsp_DEV::internal_default_instance();
}
::Interactive::Message::StorageAddressRsp_DEV* Rsp::mutable_storageaddressrsp_dev_value() {
  
  if (storageaddressrsp_dev_value_ == NULL) {
    storageaddressrsp_dev_value_ = new ::Interactive::Message::StorageAddressRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  return storageaddressrsp_dev_value_;
}
::Interactive::Message::StorageAddressRsp_DEV* Rsp::release_storageaddressrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  
  ::Interactive::Message::StorageAddressRsp_DEV* temp = storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_storageaddressrsp_dev_value(::Interactive::Message::StorageAddressRsp_DEV* storageaddressrsp_dev_value) {
  delete storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = storageaddressrsp_dev_value;
  if (storageaddressrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
}

// .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
bool Rsp::has_p2pinforsp_dev_value() const {
  return this != internal_default_instance() && p2pinforsp_dev_value_ != NULL;
}
void Rsp::clear_p2pinforsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforsp_dev_value_ != NULL) delete p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = NULL;
}
const ::Interactive::Message::P2pInfoRsp_DEV& Rsp::p2pinforsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  return p2pinforsp_dev_value_ != NULL ? *p2pinforsp_dev_value_
                         : *::Interactive::Message::P2pInfoRsp_DEV::internal_default_instance();
}
::Interactive::Message::P2pInfoRsp_DEV* Rsp::mutable_p2pinforsp_dev_value() {
  
  if (p2pinforsp_dev_value_ == NULL) {
    p2pinforsp_dev_value_ = new ::Interactive::Message::P2pInfoRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  return p2pinforsp_dev_value_;
}
::Interactive::Message::P2pInfoRsp_DEV* Rsp::release_p2pinforsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  
  ::Interactive::Message::P2pInfoRsp_DEV* temp = p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_p2pinforsp_dev_value(::Interactive::Message::P2pInfoRsp_DEV* p2pinforsp_dev_value) {
  delete p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = p2pinforsp_dev_value;
  if (p2pinforsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
}

// .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
bool Rsp::has_addfilersp_dev_value() const {
  return this != internal_default_instance() && addfilersp_dev_value_ != NULL;
}
void Rsp::clear_addfilersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && addfilersp_dev_value_ != NULL) delete addfilersp_dev_value_;
  addfilersp_dev_value_ = NULL;
}
const ::Interactive::Message::AddFileRsp_DEV& Rsp::addfilersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  return addfilersp_dev_value_ != NULL ? *addfilersp_dev_value_
                         : *::Interactive::Message::AddFileRsp_DEV::internal_default_instance();
}
::Interactive::Message::AddFileRsp_DEV* Rsp::mutable_addfilersp_dev_value() {
  
  if (addfilersp_dev_value_ == NULL) {
    addfilersp_dev_value_ = new ::Interactive::Message::AddFileRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  return addfilersp_dev_value_;
}
::Interactive::Message::AddFileRsp_DEV* Rsp::release_addfilersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  
  ::Interactive::Message::AddFileRsp_DEV* temp = addfilersp_dev_value_;
  addfilersp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_addfilersp_dev_value(::Interactive::Message::AddFileRsp_DEV* addfilersp_dev_value) {
  delete addfilersp_dev_value_;
  addfilersp_dev_value_ = addfilersp_dev_value;
  if (addfilersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
}

// .Interactive.Message.QueryTimeZoneRsp_DEV QueryTimeZoneRsp_DEV_Value = 81;
bool Rsp::has_querytimezonersp_dev_value() const {
  return this != internal_default_instance() && querytimezonersp_dev_value_ != NULL;
}
void Rsp::clear_querytimezonersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && querytimezonersp_dev_value_ != NULL) delete querytimezonersp_dev_value_;
  querytimezonersp_dev_value_ = NULL;
}
const ::Interactive::Message::QueryTimeZoneRsp_DEV& Rsp::querytimezonersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryTimeZoneRsp_DEV_Value)
  return querytimezonersp_dev_value_ != NULL ? *querytimezonersp_dev_value_
                         : *::Interactive::Message::QueryTimeZoneRsp_DEV::internal_default_instance();
}
::Interactive::Message::QueryTimeZoneRsp_DEV* Rsp::mutable_querytimezonersp_dev_value() {
  
  if (querytimezonersp_dev_value_ == NULL) {
    querytimezonersp_dev_value_ = new ::Interactive::Message::QueryTimeZoneRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryTimeZoneRsp_DEV_Value)
  return querytimezonersp_dev_value_;
}
::Interactive::Message::QueryTimeZoneRsp_DEV* Rsp::release_querytimezonersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryTimeZoneRsp_DEV_Value)
  
  ::Interactive::Message::QueryTimeZoneRsp_DEV* temp = querytimezonersp_dev_value_;
  querytimezonersp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querytimezonersp_dev_value(::Interactive::Message::QueryTimeZoneRsp_DEV* querytimezonersp_dev_value) {
  delete querytimezonersp_dev_value_;
  querytimezonersp_dev_value_ = querytimezonersp_dev_value;
  if (querytimezonersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryTimeZoneRsp_DEV_Value)
}

// .Interactive.Message.QueryAccessDomainNameRsp_DEV QueryAccessDomainNameRsp_DEV_Value = 82;
bool Rsp::has_queryaccessdomainnamersp_dev_value() const {
  return this != internal_default_instance() && queryaccessdomainnamersp_dev_value_ != NULL;
}
void Rsp::clear_queryaccessdomainnamersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamersp_dev_value_ != NULL) delete queryaccessdomainnamersp_dev_value_;
  queryaccessdomainnamersp_dev_value_ = NULL;
}
const ::Interactive::Message::QueryAccessDomainNameRsp_DEV& Rsp::queryaccessdomainnamersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryAccessDomainNameRsp_DEV_Value)
  return queryaccessdomainnamersp_dev_value_ != NULL ? *queryaccessdomainnamersp_dev_value_
                         : *::Interactive::Message::QueryAccessDomainNameRsp_DEV::internal_default_instance();
}
::Interactive::Message::QueryAccessDomainNameRsp_DEV* Rsp::mutable_queryaccessdomainnamersp_dev_value() {
  
  if (queryaccessdomainnamersp_dev_value_ == NULL) {
    queryaccessdomainnamersp_dev_value_ = new ::Interactive::Message::QueryAccessDomainNameRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryAccessDomainNameRsp_DEV_Value)
  return queryaccessdomainnamersp_dev_value_;
}
::Interactive::Message::QueryAccessDomainNameRsp_DEV* Rsp::release_queryaccessdomainnamersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryAccessDomainNameRsp_DEV_Value)
  
  ::Interactive::Message::QueryAccessDomainNameRsp_DEV* temp = queryaccessdomainnamersp_dev_value_;
  queryaccessdomainnamersp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryaccessdomainnamersp_dev_value(::Interactive::Message::QueryAccessDomainNameRsp_DEV* queryaccessdomainnamersp_dev_value) {
  delete queryaccessdomainnamersp_dev_value_;
  queryaccessdomainnamersp_dev_value_ = queryaccessdomainnamersp_dev_value;
  if (queryaccessdomainnamersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryAccessDomainNameRsp_DEV_Value)
}

// .Interactive.Message.QueryUpgradeSiteRsp_DEV QueryUpgradeSiteRsp_DEV_Value = 83;
bool Rsp::has_queryupgradesitersp_dev_value() const {
  return this != internal_default_instance() && queryupgradesitersp_dev_value_ != NULL;
}
void Rsp::clear_queryupgradesitersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryupgradesitersp_dev_value_ != NULL) delete queryupgradesitersp_dev_value_;
  queryupgradesitersp_dev_value_ = NULL;
}
const ::Interactive::Message::QueryUpgradeSiteRsp_DEV& Rsp::queryupgradesitersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUpgradeSiteRsp_DEV_Value)
  return queryupgradesitersp_dev_value_ != NULL ? *queryupgradesitersp_dev_value_
                         : *::Interactive::Message::QueryUpgradeSiteRsp_DEV::internal_default_instance();
}
::Interactive::Message::QueryUpgradeSiteRsp_DEV* Rsp::mutable_queryupgradesitersp_dev_value() {
  
  if (queryupgradesitersp_dev_value_ == NULL) {
    queryupgradesitersp_dev_value_ = new ::Interactive::Message::QueryUpgradeSiteRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUpgradeSiteRsp_DEV_Value)
  return queryupgradesitersp_dev_value_;
}
::Interactive::Message::QueryUpgradeSiteRsp_DEV* Rsp::release_queryupgradesitersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUpgradeSiteRsp_DEV_Value)
  
  ::Interactive::Message::QueryUpgradeSiteRsp_DEV* temp = queryupgradesitersp_dev_value_;
  queryupgradesitersp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryupgradesitersp_dev_value(::Interactive::Message::QueryUpgradeSiteRsp_DEV* queryupgradesitersp_dev_value) {
  delete queryupgradesitersp_dev_value_;
  queryupgradesitersp_dev_value_ = queryupgradesitersp_dev_value;
  if (queryupgradesitersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUpgradeSiteRsp_DEV_Value)
}

// .Interactive.Message.QueryFirmwareUpgradeRsp_DEV QueryFirmwareUpgradeRsp_DEV_Value = 84;
bool Rsp::has_queryfirmwareupgradersp_dev_value() const {
  return this != internal_default_instance() && queryfirmwareupgradersp_dev_value_ != NULL;
}
void Rsp::clear_queryfirmwareupgradersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryfirmwareupgradersp_dev_value_ != NULL) delete queryfirmwareupgradersp_dev_value_;
  queryfirmwareupgradersp_dev_value_ = NULL;
}
const ::Interactive::Message::QueryFirmwareUpgradeRsp_DEV& Rsp::queryfirmwareupgradersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFirmwareUpgradeRsp_DEV_Value)
  return queryfirmwareupgradersp_dev_value_ != NULL ? *queryfirmwareupgradersp_dev_value_
                         : *::Interactive::Message::QueryFirmwareUpgradeRsp_DEV::internal_default_instance();
}
::Interactive::Message::QueryFirmwareUpgradeRsp_DEV* Rsp::mutable_queryfirmwareupgradersp_dev_value() {
  
  if (queryfirmwareupgradersp_dev_value_ == NULL) {
    queryfirmwareupgradersp_dev_value_ = new ::Interactive::Message::QueryFirmwareUpgradeRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFirmwareUpgradeRsp_DEV_Value)
  return queryfirmwareupgradersp_dev_value_;
}
::Interactive::Message::QueryFirmwareUpgradeRsp_DEV* Rsp::release_queryfirmwareupgradersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFirmwareUpgradeRsp_DEV_Value)
  
  ::Interactive::Message::QueryFirmwareUpgradeRsp_DEV* temp = queryfirmwareupgradersp_dev_value_;
  queryfirmwareupgradersp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryfirmwareupgradersp_dev_value(::Interactive::Message::QueryFirmwareUpgradeRsp_DEV* queryfirmwareupgradersp_dev_value) {
  delete queryfirmwareupgradersp_dev_value_;
  queryfirmwareupgradersp_dev_value_ = queryfirmwareupgradersp_dev_value;
  if (queryfirmwareupgradersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFirmwareUpgradeRsp_DEV_Value)
}

// .Interactive.Message.ModifyDevicePropertyRsp_DEV ModifyDevicePropertyRsp_DEV_Value = 800;
bool Rsp::has_modifydevicepropertyrsp_dev_value() const {
  return this != internal_default_instance() && modifydevicepropertyrsp_dev_value_ != NULL;
}
void Rsp::clear_modifydevicepropertyrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && modifydevicepropertyrsp_dev_value_ != NULL) delete modifydevicepropertyrsp_dev_value_;
  modifydevicepropertyrsp_dev_value_ = NULL;
}
const ::Interactive::Message::ModifyDevicePropertyRsp_DEV& Rsp::modifydevicepropertyrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyDevicePropertyRsp_DEV_Value)
  return modifydevicepropertyrsp_dev_value_ != NULL ? *modifydevicepropertyrsp_dev_value_
                         : *::Interactive::Message::ModifyDevicePropertyRsp_DEV::internal_default_instance();
}
::Interactive::Message::ModifyDevicePropertyRsp_DEV* Rsp::mutable_modifydevicepropertyrsp_dev_value() {
  
  if (modifydevicepropertyrsp_dev_value_ == NULL) {
    modifydevicepropertyrsp_dev_value_ = new ::Interactive::Message::ModifyDevicePropertyRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyDevicePropertyRsp_DEV_Value)
  return modifydevicepropertyrsp_dev_value_;
}
::Interactive::Message::ModifyDevicePropertyRsp_DEV* Rsp::release_modifydevicepropertyrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyDevicePropertyRsp_DEV_Value)
  
  ::Interactive::Message::ModifyDevicePropertyRsp_DEV* temp = modifydevicepropertyrsp_dev_value_;
  modifydevicepropertyrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifydevicepropertyrsp_dev_value(::Interactive::Message::ModifyDevicePropertyRsp_DEV* modifydevicepropertyrsp_dev_value) {
  delete modifydevicepropertyrsp_dev_value_;
  modifydevicepropertyrsp_dev_value_ = modifydevicepropertyrsp_dev_value;
  if (modifydevicepropertyrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyDevicePropertyRsp_DEV_Value)
}

// .Interactive.Message.QueryDeviceParameterRsp_DEV QueryDeviceParameterRsp_DEV_Value = 810;
bool Rsp::has_querydeviceparameterrsp_dev_value() const {
  return this != internal_default_instance() && querydeviceparameterrsp_dev_value_ != NULL;
}
void Rsp::clear_querydeviceparameterrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && querydeviceparameterrsp_dev_value_ != NULL) delete querydeviceparameterrsp_dev_value_;
  querydeviceparameterrsp_dev_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceParameterRsp_DEV& Rsp::querydeviceparameterrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDeviceParameterRsp_DEV_Value)
  return querydeviceparameterrsp_dev_value_ != NULL ? *querydeviceparameterrsp_dev_value_
                         : *::Interactive::Message::QueryDeviceParameterRsp_DEV::internal_default_instance();
}
::Interactive::Message::QueryDeviceParameterRsp_DEV* Rsp::mutable_querydeviceparameterrsp_dev_value() {
  
  if (querydeviceparameterrsp_dev_value_ == NULL) {
    querydeviceparameterrsp_dev_value_ = new ::Interactive::Message::QueryDeviceParameterRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDeviceParameterRsp_DEV_Value)
  return querydeviceparameterrsp_dev_value_;
}
::Interactive::Message::QueryDeviceParameterRsp_DEV* Rsp::release_querydeviceparameterrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDeviceParameterRsp_DEV_Value)
  
  ::Interactive::Message::QueryDeviceParameterRsp_DEV* temp = querydeviceparameterrsp_dev_value_;
  querydeviceparameterrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydeviceparameterrsp_dev_value(::Interactive::Message::QueryDeviceParameterRsp_DEV* querydeviceparameterrsp_dev_value) {
  delete querydeviceparameterrsp_dev_value_;
  querydeviceparameterrsp_dev_value_ = querydeviceparameterrsp_dev_value;
  if (querydeviceparameterrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDeviceParameterRsp_DEV_Value)
}

// .Interactive.Message.QueryPlatformPushStatusRsp_DEV QueryPlatformPushStatusRsp_DEV_Value = 900;
bool Rsp::has_queryplatformpushstatusrsp_dev_value() const {
  return this != internal_default_instance() && queryplatformpushstatusrsp_dev_value_ != NULL;
}
void Rsp::clear_queryplatformpushstatusrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && queryplatformpushstatusrsp_dev_value_ != NULL) delete queryplatformpushstatusrsp_dev_value_;
  queryplatformpushstatusrsp_dev_value_ = NULL;
}
const ::Interactive::Message::QueryPlatformPushStatusRsp_DEV& Rsp::queryplatformpushstatusrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryPlatformPushStatusRsp_DEV_Value)
  return queryplatformpushstatusrsp_dev_value_ != NULL ? *queryplatformpushstatusrsp_dev_value_
                         : *::Interactive::Message::QueryPlatformPushStatusRsp_DEV::internal_default_instance();
}
::Interactive::Message::QueryPlatformPushStatusRsp_DEV* Rsp::mutable_queryplatformpushstatusrsp_dev_value() {
  
  if (queryplatformpushstatusrsp_dev_value_ == NULL) {
    queryplatformpushstatusrsp_dev_value_ = new ::Interactive::Message::QueryPlatformPushStatusRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryPlatformPushStatusRsp_DEV_Value)
  return queryplatformpushstatusrsp_dev_value_;
}
::Interactive::Message::QueryPlatformPushStatusRsp_DEV* Rsp::release_queryplatformpushstatusrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryPlatformPushStatusRsp_DEV_Value)
  
  ::Interactive::Message::QueryPlatformPushStatusRsp_DEV* temp = queryplatformpushstatusrsp_dev_value_;
  queryplatformpushstatusrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryplatformpushstatusrsp_dev_value(::Interactive::Message::QueryPlatformPushStatusRsp_DEV* queryplatformpushstatusrsp_dev_value) {
  delete queryplatformpushstatusrsp_dev_value_;
  queryplatformpushstatusrsp_dev_value_ = queryplatformpushstatusrsp_dev_value;
  if (queryplatformpushstatusrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryPlatformPushStatusRsp_DEV_Value)
}

// .Interactive.Message.DeviceEventReportRsp_DEV DeviceEventReportRsp_DEV_Value = 1000;
bool Rsp::has_deviceeventreportrsp_dev_value() const {
  return this != internal_default_instance() && deviceeventreportrsp_dev_value_ != NULL;
}
void Rsp::clear_deviceeventreportrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && deviceeventreportrsp_dev_value_ != NULL) delete deviceeventreportrsp_dev_value_;
  deviceeventreportrsp_dev_value_ = NULL;
}
const ::Interactive::Message::DeviceEventReportRsp_DEV& Rsp::deviceeventreportrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeviceEventReportRsp_DEV_Value)
  return deviceeventreportrsp_dev_value_ != NULL ? *deviceeventreportrsp_dev_value_
                         : *::Interactive::Message::DeviceEventReportRsp_DEV::internal_default_instance();
}
::Interactive::Message::DeviceEventReportRsp_DEV* Rsp::mutable_deviceeventreportrsp_dev_value() {
  
  if (deviceeventreportrsp_dev_value_ == NULL) {
    deviceeventreportrsp_dev_value_ = new ::Interactive::Message::DeviceEventReportRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeviceEventReportRsp_DEV_Value)
  return deviceeventreportrsp_dev_value_;
}
::Interactive::Message::DeviceEventReportRsp_DEV* Rsp::release_deviceeventreportrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeviceEventReportRsp_DEV_Value)
  
  ::Interactive::Message::DeviceEventReportRsp_DEV* temp = deviceeventreportrsp_dev_value_;
  deviceeventreportrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deviceeventreportrsp_dev_value(::Interactive::Message::DeviceEventReportRsp_DEV* deviceeventreportrsp_dev_value) {
  delete deviceeventreportrsp_dev_value_;
  deviceeventreportrsp_dev_value_ = deviceeventreportrsp_dev_value;
  if (deviceeventreportrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeviceEventReportRsp_DEV_Value)
}

// .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
bool Rsp::has_msgprehandlerrsp_usr_value() const {
  return this != internal_default_instance() && msgprehandlerrsp_usr_value_ != NULL;
}
void Rsp::clear_msgprehandlerrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && msgprehandlerrsp_usr_value_ != NULL) delete msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = NULL;
}
const ::Interactive::Message::MsgPreHandlerRsp_USR& Rsp::msgprehandlerrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  return msgprehandlerrsp_usr_value_ != NULL ? *msgprehandlerrsp_usr_value_
                         : *::Interactive::Message::MsgPreHandlerRsp_USR::internal_default_instance();
}
::Interactive::Message::MsgPreHandlerRsp_USR* Rsp::mutable_msgprehandlerrsp_usr_value() {
  
  if (msgprehandlerrsp_usr_value_ == NULL) {
    msgprehandlerrsp_usr_value_ = new ::Interactive::Message::MsgPreHandlerRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  return msgprehandlerrsp_usr_value_;
}
::Interactive::Message::MsgPreHandlerRsp_USR* Rsp::release_msgprehandlerrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  
  ::Interactive::Message::MsgPreHandlerRsp_USR* temp = msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_msgprehandlerrsp_usr_value(::Interactive::Message::MsgPreHandlerRsp_USR* msgprehandlerrsp_usr_value) {
  delete msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = msgprehandlerrsp_usr_value;
  if (msgprehandlerrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
}

// .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
bool Rsp::has_getaccessaddressrsp_usr_value() const {
  return this != internal_default_instance() && getaccessaddressrsp_usr_value_ != NULL;
}
void Rsp::clear_getaccessaddressrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_usr_value_ != NULL) delete getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressRsp_USR& Rsp::getaccessaddressrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  return getaccessaddressrsp_usr_value_ != NULL ? *getaccessaddressrsp_usr_value_
                         : *::Interactive::Message::GetAccessAddressRsp_USR::internal_default_instance();
}
::Interactive::Message::GetAccessAddressRsp_USR* Rsp::mutable_getaccessaddressrsp_usr_value() {
  
  if (getaccessaddressrsp_usr_value_ == NULL) {
    getaccessaddressrsp_usr_value_ = new ::Interactive::Message::GetAccessAddressRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  return getaccessaddressrsp_usr_value_;
}
::Interactive::Message::GetAccessAddressRsp_USR* Rsp::release_getaccessaddressrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  
  ::Interactive::Message::GetAccessAddressRsp_USR* temp = getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getaccessaddressrsp_usr_value(::Interactive::Message::GetAccessAddressRsp_USR* getaccessaddressrsp_usr_value) {
  delete getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = getaccessaddressrsp_usr_value;
  if (getaccessaddressrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
}

// .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
bool Rsp::has_registeruserrsp_usr_value() const {
  return this != internal_default_instance() && registeruserrsp_usr_value_ != NULL;
}
void Rsp::clear_registeruserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && registeruserrsp_usr_value_ != NULL) delete registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = NULL;
}
const ::Interactive::Message::RegisterUserRsp_USR& Rsp::registeruserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  return registeruserrsp_usr_value_ != NULL ? *registeruserrsp_usr_value_
                         : *::Interactive::Message::RegisterUserRsp_USR::internal_default_instance();
}
::Interactive::Message::RegisterUserRsp_USR* Rsp::mutable_registeruserrsp_usr_value() {
  
  if (registeruserrsp_usr_value_ == NULL) {
    registeruserrsp_usr_value_ = new ::Interactive::Message::RegisterUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  return registeruserrsp_usr_value_;
}
::Interactive::Message::RegisterUserRsp_USR* Rsp::release_registeruserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  
  ::Interactive::Message::RegisterUserRsp_USR* temp = registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_registeruserrsp_usr_value(::Interactive::Message::RegisterUserRsp_USR* registeruserrsp_usr_value) {
  delete registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = registeruserrsp_usr_value;
  if (registeruserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
}

// .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
bool Rsp::has_unregisteruserrsp_usr_value() const {
  return this != internal_default_instance() && unregisteruserrsp_usr_value_ != NULL;
}
void Rsp::clear_unregisteruserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregisteruserrsp_usr_value_ != NULL) delete unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = NULL;
}
const ::Interactive::Message::UnRegisterUserRsp_USR& Rsp::unregisteruserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  return unregisteruserrsp_usr_value_ != NULL ? *unregisteruserrsp_usr_value_
                         : *::Interactive::Message::UnRegisterUserRsp_USR::internal_default_instance();
}
::Interactive::Message::UnRegisterUserRsp_USR* Rsp::mutable_unregisteruserrsp_usr_value() {
  
  if (unregisteruserrsp_usr_value_ == NULL) {
    unregisteruserrsp_usr_value_ = new ::Interactive::Message::UnRegisterUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  return unregisteruserrsp_usr_value_;
}
::Interactive::Message::UnRegisterUserRsp_USR* Rsp::release_unregisteruserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  
  ::Interactive::Message::UnRegisterUserRsp_USR* temp = unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_unregisteruserrsp_usr_value(::Interactive::Message::UnRegisterUserRsp_USR* unregisteruserrsp_usr_value) {
  delete unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = unregisteruserrsp_usr_value;
  if (unregisteruserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
}

// .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
bool Rsp::has_queryusrinforsp_usr_value() const {
  return this != internal_default_instance() && queryusrinforsp_usr_value_ != NULL;
}
void Rsp::clear_queryusrinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusrinforsp_usr_value_ != NULL) delete queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUsrInfoRsp_USR& Rsp::queryusrinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  return queryusrinforsp_usr_value_ != NULL ? *queryusrinforsp_usr_value_
                         : *::Interactive::Message::QueryUsrInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryUsrInfoRsp_USR* Rsp::mutable_queryusrinforsp_usr_value() {
  
  if (queryusrinforsp_usr_value_ == NULL) {
    queryusrinforsp_usr_value_ = new ::Interactive::Message::QueryUsrInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  return queryusrinforsp_usr_value_;
}
::Interactive::Message::QueryUsrInfoRsp_USR* Rsp::release_queryusrinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryUsrInfoRsp_USR* temp = queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryusrinforsp_usr_value(::Interactive::Message::QueryUsrInfoRsp_USR* queryusrinforsp_usr_value) {
  delete queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = queryusrinforsp_usr_value;
  if (queryusrinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
}

// .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
bool Rsp::has_modifyuserinforsp_usr_value() const {
  return this != internal_default_instance() && modifyuserinforsp_usr_value_ != NULL;
}
void Rsp::clear_modifyuserinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifyuserinforsp_usr_value_ != NULL) delete modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyUserInfoRsp_USR& Rsp::modifyuserinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  return modifyuserinforsp_usr_value_ != NULL ? *modifyuserinforsp_usr_value_
                         : *::Interactive::Message::ModifyUserInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::ModifyUserInfoRsp_USR* Rsp::mutable_modifyuserinforsp_usr_value() {
  
  if (modifyuserinforsp_usr_value_ == NULL) {
    modifyuserinforsp_usr_value_ = new ::Interactive::Message::ModifyUserInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  return modifyuserinforsp_usr_value_;
}
::Interactive::Message::ModifyUserInfoRsp_USR* Rsp::release_modifyuserinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  
  ::Interactive::Message::ModifyUserInfoRsp_USR* temp = modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifyuserinforsp_usr_value(::Interactive::Message::ModifyUserInfoRsp_USR* modifyuserinforsp_usr_value) {
  delete modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = modifyuserinforsp_usr_value;
  if (modifyuserinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
}

// .Interactive.Message.RetrievePwdRsp_USR RetrievePwdRsp_USR_Value = 124;
bool Rsp::has_retrievepwdrsp_usr_value() const {
  return this != internal_default_instance() && retrievepwdrsp_usr_value_ != NULL;
}
void Rsp::clear_retrievepwdrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && retrievepwdrsp_usr_value_ != NULL) delete retrievepwdrsp_usr_value_;
  retrievepwdrsp_usr_value_ = NULL;
}
const ::Interactive::Message::RetrievePwdRsp_USR& Rsp::retrievepwdrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.RetrievePwdRsp_USR_Value)
  return retrievepwdrsp_usr_value_ != NULL ? *retrievepwdrsp_usr_value_
                         : *::Interactive::Message::RetrievePwdRsp_USR::internal_default_instance();
}
::Interactive::Message::RetrievePwdRsp_USR* Rsp::mutable_retrievepwdrsp_usr_value() {
  
  if (retrievepwdrsp_usr_value_ == NULL) {
    retrievepwdrsp_usr_value_ = new ::Interactive::Message::RetrievePwdRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.RetrievePwdRsp_USR_Value)
  return retrievepwdrsp_usr_value_;
}
::Interactive::Message::RetrievePwdRsp_USR* Rsp::release_retrievepwdrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.RetrievePwdRsp_USR_Value)
  
  ::Interactive::Message::RetrievePwdRsp_USR* temp = retrievepwdrsp_usr_value_;
  retrievepwdrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_retrievepwdrsp_usr_value(::Interactive::Message::RetrievePwdRsp_USR* retrievepwdrsp_usr_value) {
  delete retrievepwdrsp_usr_value_;
  retrievepwdrsp_usr_value_ = retrievepwdrsp_usr_value;
  if (retrievepwdrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.RetrievePwdRsp_USR_Value)
}

// .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
bool Rsp::has_loginrsp_usr_value() const {
  return this != internal_default_instance() && loginrsp_usr_value_ != NULL;
}
void Rsp::clear_loginrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && loginrsp_usr_value_ != NULL) delete loginrsp_usr_value_;
  loginrsp_usr_value_ = NULL;
}
const ::Interactive::Message::LoginRsp_USR& Rsp::loginrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LoginRsp_USR_Value)
  return loginrsp_usr_value_ != NULL ? *loginrsp_usr_value_
                         : *::Interactive::Message::LoginRsp_USR::internal_default_instance();
}
::Interactive::Message::LoginRsp_USR* Rsp::mutable_loginrsp_usr_value() {
  
  if (loginrsp_usr_value_ == NULL) {
    loginrsp_usr_value_ = new ::Interactive::Message::LoginRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LoginRsp_USR_Value)
  return loginrsp_usr_value_;
}
::Interactive::Message::LoginRsp_USR* Rsp::release_loginrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LoginRsp_USR_Value)
  
  ::Interactive::Message::LoginRsp_USR* temp = loginrsp_usr_value_;
  loginrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_loginrsp_usr_value(::Interactive::Message::LoginRsp_USR* loginrsp_usr_value) {
  delete loginrsp_usr_value_;
  loginrsp_usr_value_ = loginrsp_usr_value;
  if (loginrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LoginRsp_USR_Value)
}

// .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
bool Rsp::has_logoutrsp_usr_value() const {
  return this != internal_default_instance() && logoutrsp_usr_value_ != NULL;
}
void Rsp::clear_logoutrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && logoutrsp_usr_value_ != NULL) delete logoutrsp_usr_value_;
  logoutrsp_usr_value_ = NULL;
}
const ::Interactive::Message::LogoutRsp_USR& Rsp::logoutrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  return logoutrsp_usr_value_ != NULL ? *logoutrsp_usr_value_
                         : *::Interactive::Message::LogoutRsp_USR::internal_default_instance();
}
::Interactive::Message::LogoutRsp_USR* Rsp::mutable_logoutrsp_usr_value() {
  
  if (logoutrsp_usr_value_ == NULL) {
    logoutrsp_usr_value_ = new ::Interactive::Message::LogoutRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  return logoutrsp_usr_value_;
}
::Interactive::Message::LogoutRsp_USR* Rsp::release_logoutrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  
  ::Interactive::Message::LogoutRsp_USR* temp = logoutrsp_usr_value_;
  logoutrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_logoutrsp_usr_value(::Interactive::Message::LogoutRsp_USR* logoutrsp_usr_value) {
  delete logoutrsp_usr_value_;
  logoutrsp_usr_value_ = logoutrsp_usr_value;
  if (logoutrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LogoutRsp_USR_Value)
}

// .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
bool Rsp::has_shakehandrsp_usr_value() const {
  return this != internal_default_instance() && shakehandrsp_usr_value_ != NULL;
}
void Rsp::clear_shakehandrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_usr_value_ != NULL) delete shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = NULL;
}
const ::Interactive::Message::ShakehandRsp_USR& Rsp::shakehandrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  return shakehandrsp_usr_value_ != NULL ? *shakehandrsp_usr_value_
                         : *::Interactive::Message::ShakehandRsp_USR::internal_default_instance();
}
::Interactive::Message::ShakehandRsp_USR* Rsp::mutable_shakehandrsp_usr_value() {
  
  if (shakehandrsp_usr_value_ == NULL) {
    shakehandrsp_usr_value_ = new ::Interactive::Message::ShakehandRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  return shakehandrsp_usr_value_;
}
::Interactive::Message::ShakehandRsp_USR* Rsp::release_shakehandrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  
  ::Interactive::Message::ShakehandRsp_USR* temp = shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_shakehandrsp_usr_value(::Interactive::Message::ShakehandRsp_USR* shakehandrsp_usr_value) {
  delete shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = shakehandrsp_usr_value;
  if (shakehandrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
}

// .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
bool Rsp::has_configinforsp_usr_value() const {
  return this != internal_default_instance() && configinforsp_usr_value_ != NULL;
}
void Rsp::clear_configinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && configinforsp_usr_value_ != NULL) delete configinforsp_usr_value_;
  configinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoRsp_USR& Rsp::configinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  return configinforsp_usr_value_ != NULL ? *configinforsp_usr_value_
                         : *::Interactive::Message::ConfigInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::ConfigInfoRsp_USR* Rsp::mutable_configinforsp_usr_value() {
  
  if (configinforsp_usr_value_ == NULL) {
    configinforsp_usr_value_ = new ::Interactive::Message::ConfigInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  return configinforsp_usr_value_;
}
::Interactive::Message::ConfigInfoRsp_USR* Rsp::release_configinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  
  ::Interactive::Message::ConfigInfoRsp_USR* temp = configinforsp_usr_value_;
  configinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_configinforsp_usr_value(::Interactive::Message::ConfigInfoRsp_USR* configinforsp_usr_value) {
  delete configinforsp_usr_value_;
  configinforsp_usr_value_ = configinforsp_usr_value;
  if (configinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
}

// .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
bool Rsp::has_adddevrsp_usr_value() const {
  return this != internal_default_instance() && adddevrsp_usr_value_ != NULL;
}
void Rsp::clear_adddevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && adddevrsp_usr_value_ != NULL) delete adddevrsp_usr_value_;
  adddevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::AddDevRsp_USR& Rsp::adddevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  return adddevrsp_usr_value_ != NULL ? *adddevrsp_usr_value_
                         : *::Interactive::Message::AddDevRsp_USR::internal_default_instance();
}
::Interactive::Message::AddDevRsp_USR* Rsp::mutable_adddevrsp_usr_value() {
  
  if (adddevrsp_usr_value_ == NULL) {
    adddevrsp_usr_value_ = new ::Interactive::Message::AddDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  return adddevrsp_usr_value_;
}
::Interactive::Message::AddDevRsp_USR* Rsp::release_adddevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  
  ::Interactive::Message::AddDevRsp_USR* temp = adddevrsp_usr_value_;
  adddevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_adddevrsp_usr_value(::Interactive::Message::AddDevRsp_USR* adddevrsp_usr_value) {
  delete adddevrsp_usr_value_;
  adddevrsp_usr_value_ = adddevrsp_usr_value;
  if (adddevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddDevRsp_USR_Value)
}

// .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
bool Rsp::has_deldevrsp_usr_value() const {
  return this != internal_default_instance() && deldevrsp_usr_value_ != NULL;
}
void Rsp::clear_deldevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deldevrsp_usr_value_ != NULL) delete deldevrsp_usr_value_;
  deldevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::DelDevRsp_USR& Rsp::deldevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  return deldevrsp_usr_value_ != NULL ? *deldevrsp_usr_value_
                         : *::Interactive::Message::DelDevRsp_USR::internal_default_instance();
}
::Interactive::Message::DelDevRsp_USR* Rsp::mutable_deldevrsp_usr_value() {
  
  if (deldevrsp_usr_value_ == NULL) {
    deldevrsp_usr_value_ = new ::Interactive::Message::DelDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  return deldevrsp_usr_value_;
}
::Interactive::Message::DelDevRsp_USR* Rsp::release_deldevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  
  ::Interactive::Message::DelDevRsp_USR* temp = deldevrsp_usr_value_;
  deldevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deldevrsp_usr_value(::Interactive::Message::DelDevRsp_USR* deldevrsp_usr_value) {
  delete deldevrsp_usr_value_;
  deldevrsp_usr_value_ = deldevrsp_usr_value;
  if (deldevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DelDevRsp_USR_Value)
}

// .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
bool Rsp::has_modifydevrsp_usr_value() const {
  return this != internal_default_instance() && modifydevrsp_usr_value_ != NULL;
}
void Rsp::clear_modifydevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydevrsp_usr_value_ != NULL) delete modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyDevRsp_USR& Rsp::modifydevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  return modifydevrsp_usr_value_ != NULL ? *modifydevrsp_usr_value_
                         : *::Interactive::Message::ModifyDevRsp_USR::internal_default_instance();
}
::Interactive::Message::ModifyDevRsp_USR* Rsp::mutable_modifydevrsp_usr_value() {
  
  if (modifydevrsp_usr_value_ == NULL) {
    modifydevrsp_usr_value_ = new ::Interactive::Message::ModifyDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  return modifydevrsp_usr_value_;
}
::Interactive::Message::ModifyDevRsp_USR* Rsp::release_modifydevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  
  ::Interactive::Message::ModifyDevRsp_USR* temp = modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifydevrsp_usr_value(::Interactive::Message::ModifyDevRsp_USR* modifydevrsp_usr_value) {
  delete modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = modifydevrsp_usr_value;
  if (modifydevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
}

// .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
bool Rsp::has_querydevinforsp_usr_value() const {
  return this != internal_default_instance() && querydevinforsp_usr_value_ != NULL;
}
void Rsp::clear_querydevinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevinforsp_usr_value_ != NULL) delete querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevInfoRsp_USR& Rsp::querydevinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  return querydevinforsp_usr_value_ != NULL ? *querydevinforsp_usr_value_
                         : *::Interactive::Message::QueryDevInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDevInfoRsp_USR* Rsp::mutable_querydevinforsp_usr_value() {
  
  if (querydevinforsp_usr_value_ == NULL) {
    querydevinforsp_usr_value_ = new ::Interactive::Message::QueryDevInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  return querydevinforsp_usr_value_;
}
::Interactive::Message::QueryDevInfoRsp_USR* Rsp::release_querydevinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryDevInfoRsp_USR* temp = querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydevinforsp_usr_value(::Interactive::Message::QueryDevInfoRsp_USR* querydevinforsp_usr_value) {
  delete querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = querydevinforsp_usr_value;
  if (querydevinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
}

// .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
bool Rsp::has_querydevrsp_usr_value() const {
  return this != internal_default_instance() && querydevrsp_usr_value_ != NULL;
}
void Rsp::clear_querydevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevrsp_usr_value_ != NULL) delete querydevrsp_usr_value_;
  querydevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevRsp_USR& Rsp::querydevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  return querydevrsp_usr_value_ != NULL ? *querydevrsp_usr_value_
                         : *::Interactive::Message::QueryDevRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDevRsp_USR* Rsp::mutable_querydevrsp_usr_value() {
  
  if (querydevrsp_usr_value_ == NULL) {
    querydevrsp_usr_value_ = new ::Interactive::Message::QueryDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  return querydevrsp_usr_value_;
}
::Interactive::Message::QueryDevRsp_USR* Rsp::release_querydevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  
  ::Interactive::Message::QueryDevRsp_USR* temp = querydevrsp_usr_value_;
  querydevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydevrsp_usr_value(::Interactive::Message::QueryDevRsp_USR* querydevrsp_usr_value) {
  delete querydevrsp_usr_value_;
  querydevrsp_usr_value_ = querydevrsp_usr_value;
  if (querydevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
}

// .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
bool Rsp::has_queryuserrsp_usr_value() const {
  return this != internal_default_instance() && queryuserrsp_usr_value_ != NULL;
}
void Rsp::clear_queryuserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryuserrsp_usr_value_ != NULL) delete queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUserRsp_USR& Rsp::queryuserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  return queryuserrsp_usr_value_ != NULL ? *queryuserrsp_usr_value_
                         : *::Interactive::Message::QueryUserRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryUserRsp_USR* Rsp::mutable_queryuserrsp_usr_value() {
  
  if (queryuserrsp_usr_value_ == NULL) {
    queryuserrsp_usr_value_ = new ::Interactive::Message::QueryUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  return queryuserrsp_usr_value_;
}
::Interactive::Message::QueryUserRsp_USR* Rsp::release_queryuserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  
  ::Interactive::Message::QueryUserRsp_USR* temp = queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryuserrsp_usr_value(::Interactive::Message::QueryUserRsp_USR* queryuserrsp_usr_value) {
  delete queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = queryuserrsp_usr_value;
  if (queryuserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
}

// .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
bool Rsp::has_sharingdevrsp_usr_value() const {
  return this != internal_default_instance() && sharingdevrsp_usr_value_ != NULL;
}
void Rsp::clear_sharingdevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && sharingdevrsp_usr_value_ != NULL) delete sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::SharingDevRsp_USR& Rsp::sharingdevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  return sharingdevrsp_usr_value_ != NULL ? *sharingdevrsp_usr_value_
                         : *::Interactive::Message::SharingDevRsp_USR::internal_default_instance();
}
::Interactive::Message::SharingDevRsp_USR* Rsp::mutable_sharingdevrsp_usr_value() {
  
  if (sharingdevrsp_usr_value_ == NULL) {
    sharingdevrsp_usr_value_ = new ::Interactive::Message::SharingDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  return sharingdevrsp_usr_value_;
}
::Interactive::Message::SharingDevRsp_USR* Rsp::release_sharingdevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  
  ::Interactive::Message::SharingDevRsp_USR* temp = sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_sharingdevrsp_usr_value(::Interactive::Message::SharingDevRsp_USR* sharingdevrsp_usr_value) {
  delete sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = sharingdevrsp_usr_value;
  if (sharingdevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
}

// .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
bool Rsp::has_cancelshareddevrsp_usr_value() const {
  return this != internal_default_instance() && cancelshareddevrsp_usr_value_ != NULL;
}
void Rsp::clear_cancelshareddevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && cancelshareddevrsp_usr_value_ != NULL) delete cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::CancelSharedDevRsp_USR& Rsp::cancelshareddevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  return cancelshareddevrsp_usr_value_ != NULL ? *cancelshareddevrsp_usr_value_
                         : *::Interactive::Message::CancelSharedDevRsp_USR::internal_default_instance();
}
::Interactive::Message::CancelSharedDevRsp_USR* Rsp::mutable_cancelshareddevrsp_usr_value() {
  
  if (cancelshareddevrsp_usr_value_ == NULL) {
    cancelshareddevrsp_usr_value_ = new ::Interactive::Message::CancelSharedDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  return cancelshareddevrsp_usr_value_;
}
::Interactive::Message::CancelSharedDevRsp_USR* Rsp::release_cancelshareddevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  
  ::Interactive::Message::CancelSharedDevRsp_USR* temp = cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_cancelshareddevrsp_usr_value(::Interactive::Message::CancelSharedDevRsp_USR* cancelshareddevrsp_usr_value) {
  delete cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = cancelshareddevrsp_usr_value;
  if (cancelshareddevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
}

// .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
bool Rsp::has_addfriendsrsp_usr_value() const {
  return this != internal_default_instance() && addfriendsrsp_usr_value_ != NULL;
}
void Rsp::clear_addfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && addfriendsrsp_usr_value_ != NULL) delete addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = NULL;
}
const ::Interactive::Message::AddFriendsRsp_USR& Rsp::addfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  return addfriendsrsp_usr_value_ != NULL ? *addfriendsrsp_usr_value_
                         : *::Interactive::Message::AddFriendsRsp_USR::internal_default_instance();
}
::Interactive::Message::AddFriendsRsp_USR* Rsp::mutable_addfriendsrsp_usr_value() {
  
  if (addfriendsrsp_usr_value_ == NULL) {
    addfriendsrsp_usr_value_ = new ::Interactive::Message::AddFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  return addfriendsrsp_usr_value_;
}
::Interactive::Message::AddFriendsRsp_USR* Rsp::release_addfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  
  ::Interactive::Message::AddFriendsRsp_USR* temp = addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_addfriendsrsp_usr_value(::Interactive::Message::AddFriendsRsp_USR* addfriendsrsp_usr_value) {
  delete addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = addfriendsrsp_usr_value;
  if (addfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
}

// .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
bool Rsp::has_delfriendsrsp_usr_value() const {
  return this != internal_default_instance() && delfriendsrsp_usr_value_ != NULL;
}
void Rsp::clear_delfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && delfriendsrsp_usr_value_ != NULL) delete delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = NULL;
}
const ::Interactive::Message::DelFriendsRsp_USR& Rsp::delfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  return delfriendsrsp_usr_value_ != NULL ? *delfriendsrsp_usr_value_
                         : *::Interactive::Message::DelFriendsRsp_USR::internal_default_instance();
}
::Interactive::Message::DelFriendsRsp_USR* Rsp::mutable_delfriendsrsp_usr_value() {
  
  if (delfriendsrsp_usr_value_ == NULL) {
    delfriendsrsp_usr_value_ = new ::Interactive::Message::DelFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  return delfriendsrsp_usr_value_;
}
::Interactive::Message::DelFriendsRsp_USR* Rsp::release_delfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  
  ::Interactive::Message::DelFriendsRsp_USR* temp = delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_delfriendsrsp_usr_value(::Interactive::Message::DelFriendsRsp_USR* delfriendsrsp_usr_value) {
  delete delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = delfriendsrsp_usr_value;
  if (delfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
}

// .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
bool Rsp::has_queryfriendsrsp_usr_value() const {
  return this != internal_default_instance() && queryfriendsrsp_usr_value_ != NULL;
}
void Rsp::clear_queryfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfriendsrsp_usr_value_ != NULL) delete queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFriendsRsp_USR& Rsp::queryfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  return queryfriendsrsp_usr_value_ != NULL ? *queryfriendsrsp_usr_value_
                         : *::Interactive::Message::QueryFriendsRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryFriendsRsp_USR* Rsp::mutable_queryfriendsrsp_usr_value() {
  
  if (queryfriendsrsp_usr_value_ == NULL) {
    queryfriendsrsp_usr_value_ = new ::Interactive::Message::QueryFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  return queryfriendsrsp_usr_value_;
}
::Interactive::Message::QueryFriendsRsp_USR* Rsp::release_queryfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  
  ::Interactive::Message::QueryFriendsRsp_USR* temp = queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryfriendsrsp_usr_value(::Interactive::Message::QueryFriendsRsp_USR* queryfriendsrsp_usr_value) {
  delete queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = queryfriendsrsp_usr_value;
  if (queryfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
}

// .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
bool Rsp::has_storageaddressreq_usr_value() const {
  return this != internal_default_instance() && storageaddressreq_usr_value_ != NULL;
}
void Rsp::clear_storageaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
}
const ::Interactive::Message::StorageAddressRsp_USR& Rsp::storageaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_ != NULL ? *storageaddressreq_usr_value_
                         : *::Interactive::Message::StorageAddressRsp_USR::internal_default_instance();
}
::Interactive::Message::StorageAddressRsp_USR* Rsp::mutable_storageaddressreq_usr_value() {
  
  if (storageaddressreq_usr_value_ == NULL) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_;
}
::Interactive::Message::StorageAddressRsp_USR* Rsp::release_storageaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  
  ::Interactive::Message::StorageAddressRsp_USR* temp = storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressRsp_USR* storageaddressreq_usr_value) {
  delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = storageaddressreq_usr_value;
  if (storageaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
}

// .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
bool Rsp::has_p2pinforsp_usr_value() const {
  return this != internal_default_instance() && p2pinforsp_usr_value_ != NULL;
}
void Rsp::clear_p2pinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforsp_usr_value_ != NULL) delete p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::P2pInfoRsp_USR& Rsp::p2pinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  return p2pinforsp_usr_value_ != NULL ? *p2pinforsp_usr_value_
                         : *::Interactive::Message::P2pInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::P2pInfoRsp_USR* Rsp::mutable_p2pinforsp_usr_value() {
  
  if (p2pinforsp_usr_value_ == NULL) {
    p2pinforsp_usr_value_ = new ::Interactive::Message::P2pInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  return p2pinforsp_usr_value_;
}
::Interactive::Message::P2pInfoRsp_USR* Rsp::release_p2pinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  
  ::Interactive::Message::P2pInfoRsp_USR* temp = p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_p2pinforsp_usr_value(::Interactive::Message::P2pInfoRsp_USR* p2pinforsp_usr_value) {
  delete p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = p2pinforsp_usr_value;
  if (p2pinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
}

// .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
bool Rsp::has_deletefilersp_usr_value() const {
  return this != internal_default_instance() && deletefilersp_usr_value_ != NULL;
}
void Rsp::clear_deletefilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletefilersp_usr_value_ != NULL) delete deletefilersp_usr_value_;
  deletefilersp_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteFileRsp_USR& Rsp::deletefilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  return deletefilersp_usr_value_ != NULL ? *deletefilersp_usr_value_
                         : *::Interactive::Message::DeleteFileRsp_USR::internal_default_instance();
}
::Interactive::Message::DeleteFileRsp_USR* Rsp::mutable_deletefilersp_usr_value() {
  
  if (deletefilersp_usr_value_ == NULL) {
    deletefilersp_usr_value_ = new ::Interactive::Message::DeleteFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  return deletefilersp_usr_value_;
}
::Interactive::Message::DeleteFileRsp_USR* Rsp::release_deletefilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  
  ::Interactive::Message::DeleteFileRsp_USR* temp = deletefilersp_usr_value_;
  deletefilersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deletefilersp_usr_value(::Interactive::Message::DeleteFileRsp_USR* deletefilersp_usr_value) {
  delete deletefilersp_usr_value_;
  deletefilersp_usr_value_ = deletefilersp_usr_value;
  if (deletefilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
}

// .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
bool Rsp::has_downloadfilersp_usr_value() const {
  return this != internal_default_instance() && downloadfilersp_usr_value_ != NULL;
}
void Rsp::clear_downloadfilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && downloadfilersp_usr_value_ != NULL) delete downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = NULL;
}
const ::Interactive::Message::DownloadFileRsp_USR& Rsp::downloadfilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  return downloadfilersp_usr_value_ != NULL ? *downloadfilersp_usr_value_
                         : *::Interactive::Message::DownloadFileRsp_USR::internal_default_instance();
}
::Interactive::Message::DownloadFileRsp_USR* Rsp::mutable_downloadfilersp_usr_value() {
  
  if (downloadfilersp_usr_value_ == NULL) {
    downloadfilersp_usr_value_ = new ::Interactive::Message::DownloadFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  return downloadfilersp_usr_value_;
}
::Interactive::Message::DownloadFileRsp_USR* Rsp::release_downloadfilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  
  ::Interactive::Message::DownloadFileRsp_USR* temp = downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_downloadfilersp_usr_value(::Interactive::Message::DownloadFileRsp_USR* downloadfilersp_usr_value) {
  delete downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = downloadfilersp_usr_value;
  if (downloadfilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
}

// .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
bool Rsp::has_queryfilersp_usr_value() const {
  return this != internal_default_instance() && queryfilersp_usr_value_ != NULL;
}
void Rsp::clear_queryfilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfilersp_usr_value_ != NULL) delete queryfilersp_usr_value_;
  queryfilersp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFileRsp_USR& Rsp::queryfilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  return queryfilersp_usr_value_ != NULL ? *queryfilersp_usr_value_
                         : *::Interactive::Message::QueryFileRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryFileRsp_USR* Rsp::mutable_queryfilersp_usr_value() {
  
  if (queryfilersp_usr_value_ == NULL) {
    queryfilersp_usr_value_ = new ::Interactive::Message::QueryFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  return queryfilersp_usr_value_;
}
::Interactive::Message::QueryFileRsp_USR* Rsp::release_queryfilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  
  ::Interactive::Message::QueryFileRsp_USR* temp = queryfilersp_usr_value_;
  queryfilersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryfilersp_usr_value(::Interactive::Message::QueryFileRsp_USR* queryfilersp_usr_value) {
  delete queryfilersp_usr_value_;
  queryfilersp_usr_value_ = queryfilersp_usr_value;
  if (queryfilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
}

// .Interactive.Message.QueryAccessDomainNameRsp_USR QueryAccessDomainNameRsp_USR_Value = 350;
bool Rsp::has_queryaccessdomainnamersp_usr_value() const {
  return this != internal_default_instance() && queryaccessdomainnamersp_usr_value_ != NULL;
}
void Rsp::clear_queryaccessdomainnamersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryaccessdomainnamersp_usr_value_ != NULL) delete queryaccessdomainnamersp_usr_value_;
  queryaccessdomainnamersp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryAccessDomainNameRsp_USR& Rsp::queryaccessdomainnamersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryAccessDomainNameRsp_USR_Value)
  return queryaccessdomainnamersp_usr_value_ != NULL ? *queryaccessdomainnamersp_usr_value_
                         : *::Interactive::Message::QueryAccessDomainNameRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryAccessDomainNameRsp_USR* Rsp::mutable_queryaccessdomainnamersp_usr_value() {
  
  if (queryaccessdomainnamersp_usr_value_ == NULL) {
    queryaccessdomainnamersp_usr_value_ = new ::Interactive::Message::QueryAccessDomainNameRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryAccessDomainNameRsp_USR_Value)
  return queryaccessdomainnamersp_usr_value_;
}
::Interactive::Message::QueryAccessDomainNameRsp_USR* Rsp::release_queryaccessdomainnamersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryAccessDomainNameRsp_USR_Value)
  
  ::Interactive::Message::QueryAccessDomainNameRsp_USR* temp = queryaccessdomainnamersp_usr_value_;
  queryaccessdomainnamersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryaccessdomainnamersp_usr_value(::Interactive::Message::QueryAccessDomainNameRsp_USR* queryaccessdomainnamersp_usr_value) {
  delete queryaccessdomainnamersp_usr_value_;
  queryaccessdomainnamersp_usr_value_ = queryaccessdomainnamersp_usr_value;
  if (queryaccessdomainnamersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryAccessDomainNameRsp_USR_Value)
}

// .Interactive.Message.QueryAppUpgradeRsp_USR QueryAppUpgradeRsp_USR_Value = 360;
bool Rsp::has_queryappupgradersp_usr_value() const {
  return this != internal_default_instance() && queryappupgradersp_usr_value_ != NULL;
}
void Rsp::clear_queryappupgradersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryappupgradersp_usr_value_ != NULL) delete queryappupgradersp_usr_value_;
  queryappupgradersp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryAppUpgradeRsp_USR& Rsp::queryappupgradersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryAppUpgradeRsp_USR_Value)
  return queryappupgradersp_usr_value_ != NULL ? *queryappupgradersp_usr_value_
                         : *::Interactive::Message::QueryAppUpgradeRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryAppUpgradeRsp_USR* Rsp::mutable_queryappupgradersp_usr_value() {
  
  if (queryappupgradersp_usr_value_ == NULL) {
    queryappupgradersp_usr_value_ = new ::Interactive::Message::QueryAppUpgradeRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryAppUpgradeRsp_USR_Value)
  return queryappupgradersp_usr_value_;
}
::Interactive::Message::QueryAppUpgradeRsp_USR* Rsp::release_queryappupgradersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryAppUpgradeRsp_USR_Value)
  
  ::Interactive::Message::QueryAppUpgradeRsp_USR* temp = queryappupgradersp_usr_value_;
  queryappupgradersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryappupgradersp_usr_value(::Interactive::Message::QueryAppUpgradeRsp_USR* queryappupgradersp_usr_value) {
  delete queryappupgradersp_usr_value_;
  queryappupgradersp_usr_value_ = queryappupgradersp_usr_value;
  if (queryappupgradersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryAppUpgradeRsp_USR_Value)
}

// .Interactive.Message.QueryIfP2pIDValidRsp_USR QueryIfP2pIDValidRsp_USR_Value = 370;
bool Rsp::has_queryifp2pidvalidrsp_usr_value() const {
  return this != internal_default_instance() && queryifp2pidvalidrsp_usr_value_ != NULL;
}
void Rsp::clear_queryifp2pidvalidrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryifp2pidvalidrsp_usr_value_ != NULL) delete queryifp2pidvalidrsp_usr_value_;
  queryifp2pidvalidrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryIfP2pIDValidRsp_USR& Rsp::queryifp2pidvalidrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryIfP2pIDValidRsp_USR_Value)
  return queryifp2pidvalidrsp_usr_value_ != NULL ? *queryifp2pidvalidrsp_usr_value_
                         : *::Interactive::Message::QueryIfP2pIDValidRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryIfP2pIDValidRsp_USR* Rsp::mutable_queryifp2pidvalidrsp_usr_value() {
  
  if (queryifp2pidvalidrsp_usr_value_ == NULL) {
    queryifp2pidvalidrsp_usr_value_ = new ::Interactive::Message::QueryIfP2pIDValidRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryIfP2pIDValidRsp_USR_Value)
  return queryifp2pidvalidrsp_usr_value_;
}
::Interactive::Message::QueryIfP2pIDValidRsp_USR* Rsp::release_queryifp2pidvalidrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryIfP2pIDValidRsp_USR_Value)
  
  ::Interactive::Message::QueryIfP2pIDValidRsp_USR* temp = queryifp2pidvalidrsp_usr_value_;
  queryifp2pidvalidrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryifp2pidvalidrsp_usr_value(::Interactive::Message::QueryIfP2pIDValidRsp_USR* queryifp2pidvalidrsp_usr_value) {
  delete queryifp2pidvalidrsp_usr_value_;
  queryifp2pidvalidrsp_usr_value_ = queryifp2pidvalidrsp_usr_value;
  if (queryifp2pidvalidrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryIfP2pIDValidRsp_USR_Value)
}

// .Interactive.Message.QueryAllDeviceEventRsp_USR QueryAllDeviceEventRsp_USR_Value = 500;
bool Rsp::has_queryalldeviceeventrsp_usr_value() const {
  return this != internal_default_instance() && queryalldeviceeventrsp_usr_value_ != NULL;
}
void Rsp::clear_queryalldeviceeventrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryalldeviceeventrsp_usr_value_ != NULL) delete queryalldeviceeventrsp_usr_value_;
  queryalldeviceeventrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryAllDeviceEventRsp_USR& Rsp::queryalldeviceeventrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryAllDeviceEventRsp_USR_Value)
  return queryalldeviceeventrsp_usr_value_ != NULL ? *queryalldeviceeventrsp_usr_value_
                         : *::Interactive::Message::QueryAllDeviceEventRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryAllDeviceEventRsp_USR* Rsp::mutable_queryalldeviceeventrsp_usr_value() {
  
  if (queryalldeviceeventrsp_usr_value_ == NULL) {
    queryalldeviceeventrsp_usr_value_ = new ::Interactive::Message::QueryAllDeviceEventRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryAllDeviceEventRsp_USR_Value)
  return queryalldeviceeventrsp_usr_value_;
}
::Interactive::Message::QueryAllDeviceEventRsp_USR* Rsp::release_queryalldeviceeventrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryAllDeviceEventRsp_USR_Value)
  
  ::Interactive::Message::QueryAllDeviceEventRsp_USR* temp = queryalldeviceeventrsp_usr_value_;
  queryalldeviceeventrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryalldeviceeventrsp_usr_value(::Interactive::Message::QueryAllDeviceEventRsp_USR* queryalldeviceeventrsp_usr_value) {
  delete queryalldeviceeventrsp_usr_value_;
  queryalldeviceeventrsp_usr_value_ = queryalldeviceeventrsp_usr_value;
  if (queryalldeviceeventrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryAllDeviceEventRsp_USR_Value)
}

// .Interactive.Message.DeleteDeviceEventRsp_USR DeleteDeviceEventRsp_USR_Value = 510;
bool Rsp::has_deletedeviceeventrsp_usr_value() const {
  return this != internal_default_instance() && deletedeviceeventrsp_usr_value_ != NULL;
}
void Rsp::clear_deletedeviceeventrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletedeviceeventrsp_usr_value_ != NULL) delete deletedeviceeventrsp_usr_value_;
  deletedeviceeventrsp_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteDeviceEventRsp_USR& Rsp::deletedeviceeventrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeleteDeviceEventRsp_USR_Value)
  return deletedeviceeventrsp_usr_value_ != NULL ? *deletedeviceeventrsp_usr_value_
                         : *::Interactive::Message::DeleteDeviceEventRsp_USR::internal_default_instance();
}
::Interactive::Message::DeleteDeviceEventRsp_USR* Rsp::mutable_deletedeviceeventrsp_usr_value() {
  
  if (deletedeviceeventrsp_usr_value_ == NULL) {
    deletedeviceeventrsp_usr_value_ = new ::Interactive::Message::DeleteDeviceEventRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeleteDeviceEventRsp_USR_Value)
  return deletedeviceeventrsp_usr_value_;
}
::Interactive::Message::DeleteDeviceEventRsp_USR* Rsp::release_deletedeviceeventrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeleteDeviceEventRsp_USR_Value)
  
  ::Interactive::Message::DeleteDeviceEventRsp_USR* temp = deletedeviceeventrsp_usr_value_;
  deletedeviceeventrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deletedeviceeventrsp_usr_value(::Interactive::Message::DeleteDeviceEventRsp_USR* deletedeviceeventrsp_usr_value) {
  delete deletedeviceeventrsp_usr_value_;
  deletedeviceeventrsp_usr_value_ = deletedeviceeventrsp_usr_value;
  if (deletedeviceeventrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeleteDeviceEventRsp_USR_Value)
}

// .Interactive.Message.ModifyDeviceEventRsp_USR ModifyDeviceEventRsp_USR_Value = 520;
bool Rsp::has_modifydeviceeventrsp_usr_value() const {
  return this != internal_default_instance() && modifydeviceeventrsp_usr_value_ != NULL;
}
void Rsp::clear_modifydeviceeventrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydeviceeventrsp_usr_value_ != NULL) delete modifydeviceeventrsp_usr_value_;
  modifydeviceeventrsp_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyDeviceEventRsp_USR& Rsp::modifydeviceeventrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyDeviceEventRsp_USR_Value)
  return modifydeviceeventrsp_usr_value_ != NULL ? *modifydeviceeventrsp_usr_value_
                         : *::Interactive::Message::ModifyDeviceEventRsp_USR::internal_default_instance();
}
::Interactive::Message::ModifyDeviceEventRsp_USR* Rsp::mutable_modifydeviceeventrsp_usr_value() {
  
  if (modifydeviceeventrsp_usr_value_ == NULL) {
    modifydeviceeventrsp_usr_value_ = new ::Interactive::Message::ModifyDeviceEventRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyDeviceEventRsp_USR_Value)
  return modifydeviceeventrsp_usr_value_;
}
::Interactive::Message::ModifyDeviceEventRsp_USR* Rsp::release_modifydeviceeventrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyDeviceEventRsp_USR_Value)
  
  ::Interactive::Message::ModifyDeviceEventRsp_USR* temp = modifydeviceeventrsp_usr_value_;
  modifydeviceeventrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifydeviceeventrsp_usr_value(::Interactive::Message::ModifyDeviceEventRsp_USR* modifydeviceeventrsp_usr_value) {
  delete modifydeviceeventrsp_usr_value_;
  modifydeviceeventrsp_usr_value_ = modifydeviceeventrsp_usr_value;
  if (modifydeviceeventrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyDeviceEventRsp_USR_Value)
}

// .Interactive.Message.AddStorageDetailRsp_USR AddStorageDetailRsp_USR_Value = 700;
bool Rsp::has_addstoragedetailrsp_usr_value() const {
  return this != internal_default_instance() && addstoragedetailrsp_usr_value_ != NULL;
}
void Rsp::clear_addstoragedetailrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && addstoragedetailrsp_usr_value_ != NULL) delete addstoragedetailrsp_usr_value_;
  addstoragedetailrsp_usr_value_ = NULL;
}
const ::Interactive::Message::AddStorageDetailRsp_USR& Rsp::addstoragedetailrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddStorageDetailRsp_USR_Value)
  return addstoragedetailrsp_usr_value_ != NULL ? *addstoragedetailrsp_usr_value_
                         : *::Interactive::Message::AddStorageDetailRsp_USR::internal_default_instance();
}
::Interactive::Message::AddStorageDetailRsp_USR* Rsp::mutable_addstoragedetailrsp_usr_value() {
  
  if (addstoragedetailrsp_usr_value_ == NULL) {
    addstoragedetailrsp_usr_value_ = new ::Interactive::Message::AddStorageDetailRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddStorageDetailRsp_USR_Value)
  return addstoragedetailrsp_usr_value_;
}
::Interactive::Message::AddStorageDetailRsp_USR* Rsp::release_addstoragedetailrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddStorageDetailRsp_USR_Value)
  
  ::Interactive::Message::AddStorageDetailRsp_USR* temp = addstoragedetailrsp_usr_value_;
  addstoragedetailrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_addstoragedetailrsp_usr_value(::Interactive::Message::AddStorageDetailRsp_USR* addstoragedetailrsp_usr_value) {
  delete addstoragedetailrsp_usr_value_;
  addstoragedetailrsp_usr_value_ = addstoragedetailrsp_usr_value;
  if (addstoragedetailrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddStorageDetailRsp_USR_Value)
}

// .Interactive.Message.DeleteStorageDetailRsp_USR DeleteStorageDetailRsp_USR_Value = 710;
bool Rsp::has_deletestoragedetailrsp_usr_value() const {
  return this != internal_default_instance() && deletestoragedetailrsp_usr_value_ != NULL;
}
void Rsp::clear_deletestoragedetailrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletestoragedetailrsp_usr_value_ != NULL) delete deletestoragedetailrsp_usr_value_;
  deletestoragedetailrsp_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteStorageDetailRsp_USR& Rsp::deletestoragedetailrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeleteStorageDetailRsp_USR_Value)
  return deletestoragedetailrsp_usr_value_ != NULL ? *deletestoragedetailrsp_usr_value_
                         : *::Interactive::Message::DeleteStorageDetailRsp_USR::internal_default_instance();
}
::Interactive::Message::DeleteStorageDetailRsp_USR* Rsp::mutable_deletestoragedetailrsp_usr_value() {
  
  if (deletestoragedetailrsp_usr_value_ == NULL) {
    deletestoragedetailrsp_usr_value_ = new ::Interactive::Message::DeleteStorageDetailRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeleteStorageDetailRsp_USR_Value)
  return deletestoragedetailrsp_usr_value_;
}
::Interactive::Message::DeleteStorageDetailRsp_USR* Rsp::release_deletestoragedetailrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeleteStorageDetailRsp_USR_Value)
  
  ::Interactive::Message::DeleteStorageDetailRsp_USR* temp = deletestoragedetailrsp_usr_value_;
  deletestoragedetailrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deletestoragedetailrsp_usr_value(::Interactive::Message::DeleteStorageDetailRsp_USR* deletestoragedetailrsp_usr_value) {
  delete deletestoragedetailrsp_usr_value_;
  deletestoragedetailrsp_usr_value_ = deletestoragedetailrsp_usr_value;
  if (deletestoragedetailrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeleteStorageDetailRsp_USR_Value)
}

// .Interactive.Message.ModifyStorageDetailRsp_USR ModifyStorageDetailRsp_USR_Value = 720;
bool Rsp::has_modifystoragedetailrsp_usr_value() const {
  return this != internal_default_instance() && modifystoragedetailrsp_usr_value_ != NULL;
}
void Rsp::clear_modifystoragedetailrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifystoragedetailrsp_usr_value_ != NULL) delete modifystoragedetailrsp_usr_value_;
  modifystoragedetailrsp_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyStorageDetailRsp_USR& Rsp::modifystoragedetailrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyStorageDetailRsp_USR_Value)
  return modifystoragedetailrsp_usr_value_ != NULL ? *modifystoragedetailrsp_usr_value_
                         : *::Interactive::Message::ModifyStorageDetailRsp_USR::internal_default_instance();
}
::Interactive::Message::ModifyStorageDetailRsp_USR* Rsp::mutable_modifystoragedetailrsp_usr_value() {
  
  if (modifystoragedetailrsp_usr_value_ == NULL) {
    modifystoragedetailrsp_usr_value_ = new ::Interactive::Message::ModifyStorageDetailRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyStorageDetailRsp_USR_Value)
  return modifystoragedetailrsp_usr_value_;
}
::Interactive::Message::ModifyStorageDetailRsp_USR* Rsp::release_modifystoragedetailrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyStorageDetailRsp_USR_Value)
  
  ::Interactive::Message::ModifyStorageDetailRsp_USR* temp = modifystoragedetailrsp_usr_value_;
  modifystoragedetailrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifystoragedetailrsp_usr_value(::Interactive::Message::ModifyStorageDetailRsp_USR* modifystoragedetailrsp_usr_value) {
  delete modifystoragedetailrsp_usr_value_;
  modifystoragedetailrsp_usr_value_ = modifystoragedetailrsp_usr_value;
  if (modifystoragedetailrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyStorageDetailRsp_USR_Value)
}

// .Interactive.Message.QueryStorageDetailRsp_USR QueryStorageDetailRsp_USR_Value = 730;
bool Rsp::has_querystoragedetailrsp_usr_value() const {
  return this != internal_default_instance() && querystoragedetailrsp_usr_value_ != NULL;
}
void Rsp::clear_querystoragedetailrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querystoragedetailrsp_usr_value_ != NULL) delete querystoragedetailrsp_usr_value_;
  querystoragedetailrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryStorageDetailRsp_USR& Rsp::querystoragedetailrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryStorageDetailRsp_USR_Value)
  return querystoragedetailrsp_usr_value_ != NULL ? *querystoragedetailrsp_usr_value_
                         : *::Interactive::Message::QueryStorageDetailRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryStorageDetailRsp_USR* Rsp::mutable_querystoragedetailrsp_usr_value() {
  
  if (querystoragedetailrsp_usr_value_ == NULL) {
    querystoragedetailrsp_usr_value_ = new ::Interactive::Message::QueryStorageDetailRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryStorageDetailRsp_USR_Value)
  return querystoragedetailrsp_usr_value_;
}
::Interactive::Message::QueryStorageDetailRsp_USR* Rsp::release_querystoragedetailrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryStorageDetailRsp_USR_Value)
  
  ::Interactive::Message::QueryStorageDetailRsp_USR* temp = querystoragedetailrsp_usr_value_;
  querystoragedetailrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querystoragedetailrsp_usr_value(::Interactive::Message::QueryStorageDetailRsp_USR* querystoragedetailrsp_usr_value) {
  delete querystoragedetailrsp_usr_value_;
  querystoragedetailrsp_usr_value_ = querystoragedetailrsp_usr_value;
  if (querystoragedetailrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryStorageDetailRsp_USR_Value)
}

// .Interactive.Message.QueryRegionStorageInfoRsp_USR QueryRegionStorageInfoRsp_USR_Value = 740;
bool Rsp::has_queryregionstorageinforsp_usr_value() const {
  return this != internal_default_instance() && queryregionstorageinforsp_usr_value_ != NULL;
}
void Rsp::clear_queryregionstorageinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryregionstorageinforsp_usr_value_ != NULL) delete queryregionstorageinforsp_usr_value_;
  queryregionstorageinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryRegionStorageInfoRsp_USR& Rsp::queryregionstorageinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryRegionStorageInfoRsp_USR_Value)
  return queryregionstorageinforsp_usr_value_ != NULL ? *queryregionstorageinforsp_usr_value_
                         : *::Interactive::Message::QueryRegionStorageInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryRegionStorageInfoRsp_USR* Rsp::mutable_queryregionstorageinforsp_usr_value() {
  
  if (queryregionstorageinforsp_usr_value_ == NULL) {
    queryregionstorageinforsp_usr_value_ = new ::Interactive::Message::QueryRegionStorageInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryRegionStorageInfoRsp_USR_Value)
  return queryregionstorageinforsp_usr_value_;
}
::Interactive::Message::QueryRegionStorageInfoRsp_USR* Rsp::release_queryregionstorageinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryRegionStorageInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryRegionStorageInfoRsp_USR* temp = queryregionstorageinforsp_usr_value_;
  queryregionstorageinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryregionstorageinforsp_usr_value(::Interactive::Message::QueryRegionStorageInfoRsp_USR* queryregionstorageinforsp_usr_value) {
  delete queryregionstorageinforsp_usr_value_;
  queryregionstorageinforsp_usr_value_ = queryregionstorageinforsp_usr_value;
  if (queryregionstorageinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryRegionStorageInfoRsp_USR_Value)
}

// .Interactive.Message.QueryDeviceInfoMultiRsp_USR QueryDeviceInfoMultiRsp_USR_Value = 1100;
bool Rsp::has_querydeviceinfomultirsp_usr_value() const {
  return this != internal_default_instance() && querydeviceinfomultirsp_usr_value_ != NULL;
}
void Rsp::clear_querydeviceinfomultirsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydeviceinfomultirsp_usr_value_ != NULL) delete querydeviceinfomultirsp_usr_value_;
  querydeviceinfomultirsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceInfoMultiRsp_USR& Rsp::querydeviceinfomultirsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDeviceInfoMultiRsp_USR_Value)
  return querydeviceinfomultirsp_usr_value_ != NULL ? *querydeviceinfomultirsp_usr_value_
                         : *::Interactive::Message::QueryDeviceInfoMultiRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDeviceInfoMultiRsp_USR* Rsp::mutable_querydeviceinfomultirsp_usr_value() {
  
  if (querydeviceinfomultirsp_usr_value_ == NULL) {
    querydeviceinfomultirsp_usr_value_ = new ::Interactive::Message::QueryDeviceInfoMultiRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDeviceInfoMultiRsp_USR_Value)
  return querydeviceinfomultirsp_usr_value_;
}
::Interactive::Message::QueryDeviceInfoMultiRsp_USR* Rsp::release_querydeviceinfomultirsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDeviceInfoMultiRsp_USR_Value)
  
  ::Interactive::Message::QueryDeviceInfoMultiRsp_USR* temp = querydeviceinfomultirsp_usr_value_;
  querydeviceinfomultirsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydeviceinfomultirsp_usr_value(::Interactive::Message::QueryDeviceInfoMultiRsp_USR* querydeviceinfomultirsp_usr_value) {
  delete querydeviceinfomultirsp_usr_value_;
  querydeviceinfomultirsp_usr_value_ = querydeviceinfomultirsp_usr_value;
  if (querydeviceinfomultirsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDeviceInfoMultiRsp_USR_Value)
}

// .Interactive.Message.RegisterCmsCallRsp_USR RegisterCmsCallRsp_USR_Value = 1101;
bool Rsp::has_registercmscallrsp_usr_value() const {
  return this != internal_default_instance() && registercmscallrsp_usr_value_ != NULL;
}
void Rsp::clear_registercmscallrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && registercmscallrsp_usr_value_ != NULL) delete registercmscallrsp_usr_value_;
  registercmscallrsp_usr_value_ = NULL;
}
const ::Interactive::Message::RegisterCmsCallRsp_USR& Rsp::registercmscallrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.RegisterCmsCallRsp_USR_Value)
  return registercmscallrsp_usr_value_ != NULL ? *registercmscallrsp_usr_value_
                         : *::Interactive::Message::RegisterCmsCallRsp_USR::internal_default_instance();
}
::Interactive::Message::RegisterCmsCallRsp_USR* Rsp::mutable_registercmscallrsp_usr_value() {
  
  if (registercmscallrsp_usr_value_ == NULL) {
    registercmscallrsp_usr_value_ = new ::Interactive::Message::RegisterCmsCallRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.RegisterCmsCallRsp_USR_Value)
  return registercmscallrsp_usr_value_;
}
::Interactive::Message::RegisterCmsCallRsp_USR* Rsp::release_registercmscallrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.RegisterCmsCallRsp_USR_Value)
  
  ::Interactive::Message::RegisterCmsCallRsp_USR* temp = registercmscallrsp_usr_value_;
  registercmscallrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_registercmscallrsp_usr_value(::Interactive::Message::RegisterCmsCallRsp_USR* registercmscallrsp_usr_value) {
  delete registercmscallrsp_usr_value_;
  registercmscallrsp_usr_value_ = registercmscallrsp_usr_value;
  if (registercmscallrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.RegisterCmsCallRsp_USR_Value)
}

// .Interactive.Message.UnregisterCmsCallRsp_USR UnregisterCmsCallRsp_USR_Value = 1102;
bool Rsp::has_unregistercmscallrsp_usr_value() const {
  return this != internal_default_instance() && unregistercmscallrsp_usr_value_ != NULL;
}
void Rsp::clear_unregistercmscallrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregistercmscallrsp_usr_value_ != NULL) delete unregistercmscallrsp_usr_value_;
  unregistercmscallrsp_usr_value_ = NULL;
}
const ::Interactive::Message::UnregisterCmsCallRsp_USR& Rsp::unregistercmscallrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.UnregisterCmsCallRsp_USR_Value)
  return unregistercmscallrsp_usr_value_ != NULL ? *unregistercmscallrsp_usr_value_
                         : *::Interactive::Message::UnregisterCmsCallRsp_USR::internal_default_instance();
}
::Interactive::Message::UnregisterCmsCallRsp_USR* Rsp::mutable_unregistercmscallrsp_usr_value() {
  
  if (unregistercmscallrsp_usr_value_ == NULL) {
    unregistercmscallrsp_usr_value_ = new ::Interactive::Message::UnregisterCmsCallRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.UnregisterCmsCallRsp_USR_Value)
  return unregistercmscallrsp_usr_value_;
}
::Interactive::Message::UnregisterCmsCallRsp_USR* Rsp::release_unregistercmscallrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.UnregisterCmsCallRsp_USR_Value)
  
  ::Interactive::Message::UnregisterCmsCallRsp_USR* temp = unregistercmscallrsp_usr_value_;
  unregistercmscallrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_unregistercmscallrsp_usr_value(::Interactive::Message::UnregisterCmsCallRsp_USR* unregistercmscallrsp_usr_value) {
  delete unregistercmscallrsp_usr_value_;
  unregistercmscallrsp_usr_value_ = unregistercmscallrsp_usr_value;
  if (unregistercmscallrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.UnregisterCmsCallRsp_USR_Value)
}

// .Interactive.Message.QuerySharingDeviceLimitRsp_USR QuerySharingDeviceLimitRsp_USR_Value = 1103;
bool Rsp::has_querysharingdevicelimitrsp_usr_value() const {
  return this != internal_default_instance() && querysharingdevicelimitrsp_usr_value_ != NULL;
}
void Rsp::clear_querysharingdevicelimitrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querysharingdevicelimitrsp_usr_value_ != NULL) delete querysharingdevicelimitrsp_usr_value_;
  querysharingdevicelimitrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QuerySharingDeviceLimitRsp_USR& Rsp::querysharingdevicelimitrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QuerySharingDeviceLimitRsp_USR_Value)
  return querysharingdevicelimitrsp_usr_value_ != NULL ? *querysharingdevicelimitrsp_usr_value_
                         : *::Interactive::Message::QuerySharingDeviceLimitRsp_USR::internal_default_instance();
}
::Interactive::Message::QuerySharingDeviceLimitRsp_USR* Rsp::mutable_querysharingdevicelimitrsp_usr_value() {
  
  if (querysharingdevicelimitrsp_usr_value_ == NULL) {
    querysharingdevicelimitrsp_usr_value_ = new ::Interactive::Message::QuerySharingDeviceLimitRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QuerySharingDeviceLimitRsp_USR_Value)
  return querysharingdevicelimitrsp_usr_value_;
}
::Interactive::Message::QuerySharingDeviceLimitRsp_USR* Rsp::release_querysharingdevicelimitrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QuerySharingDeviceLimitRsp_USR_Value)
  
  ::Interactive::Message::QuerySharingDeviceLimitRsp_USR* temp = querysharingdevicelimitrsp_usr_value_;
  querysharingdevicelimitrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querysharingdevicelimitrsp_usr_value(::Interactive::Message::QuerySharingDeviceLimitRsp_USR* querysharingdevicelimitrsp_usr_value) {
  delete querysharingdevicelimitrsp_usr_value_;
  querysharingdevicelimitrsp_usr_value_ = querysharingdevicelimitrsp_usr_value;
  if (querysharingdevicelimitrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QuerySharingDeviceLimitRsp_USR_Value)
}

// .Interactive.Message.QueryDeviceCapacityRsp_USR QueryDeviceCapacityRsp_USR_Value = 1104;
bool Rsp::has_querydevicecapacityrsp_usr_value() const {
  return this != internal_default_instance() && querydevicecapacityrsp_usr_value_ != NULL;
}
void Rsp::clear_querydevicecapacityrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevicecapacityrsp_usr_value_ != NULL) delete querydevicecapacityrsp_usr_value_;
  querydevicecapacityrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceCapacityRsp_USR& Rsp::querydevicecapacityrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDeviceCapacityRsp_USR_Value)
  return querydevicecapacityrsp_usr_value_ != NULL ? *querydevicecapacityrsp_usr_value_
                         : *::Interactive::Message::QueryDeviceCapacityRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDeviceCapacityRsp_USR* Rsp::mutable_querydevicecapacityrsp_usr_value() {
  
  if (querydevicecapacityrsp_usr_value_ == NULL) {
    querydevicecapacityrsp_usr_value_ = new ::Interactive::Message::QueryDeviceCapacityRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDeviceCapacityRsp_USR_Value)
  return querydevicecapacityrsp_usr_value_;
}
::Interactive::Message::QueryDeviceCapacityRsp_USR* Rsp::release_querydevicecapacityrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDeviceCapacityRsp_USR_Value)
  
  ::Interactive::Message::QueryDeviceCapacityRsp_USR* temp = querydevicecapacityrsp_usr_value_;
  querydevicecapacityrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydevicecapacityrsp_usr_value(::Interactive::Message::QueryDeviceCapacityRsp_USR* querydevicecapacityrsp_usr_value) {
  delete querydevicecapacityrsp_usr_value_;
  querydevicecapacityrsp_usr_value_ = querydevicecapacityrsp_usr_value;
  if (querydevicecapacityrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDeviceCapacityRsp_USR_Value)
}

// .Interactive.Message.QueryALLDeviceCapacityRsp_USR QueryALLDeviceCapacityRsp_USR_Value = 1105;
bool Rsp::has_queryalldevicecapacityrsp_usr_value() const {
  return this != internal_default_instance() && queryalldevicecapacityrsp_usr_value_ != NULL;
}
void Rsp::clear_queryalldevicecapacityrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryalldevicecapacityrsp_usr_value_ != NULL) delete queryalldevicecapacityrsp_usr_value_;
  queryalldevicecapacityrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryALLDeviceCapacityRsp_USR& Rsp::queryalldevicecapacityrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryALLDeviceCapacityRsp_USR_Value)
  return queryalldevicecapacityrsp_usr_value_ != NULL ? *queryalldevicecapacityrsp_usr_value_
                         : *::Interactive::Message::QueryALLDeviceCapacityRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryALLDeviceCapacityRsp_USR* Rsp::mutable_queryalldevicecapacityrsp_usr_value() {
  
  if (queryalldevicecapacityrsp_usr_value_ == NULL) {
    queryalldevicecapacityrsp_usr_value_ = new ::Interactive::Message::QueryALLDeviceCapacityRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryALLDeviceCapacityRsp_USR_Value)
  return queryalldevicecapacityrsp_usr_value_;
}
::Interactive::Message::QueryALLDeviceCapacityRsp_USR* Rsp::release_queryalldevicecapacityrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryALLDeviceCapacityRsp_USR_Value)
  
  ::Interactive::Message::QueryALLDeviceCapacityRsp_USR* temp = queryalldevicecapacityrsp_usr_value_;
  queryalldevicecapacityrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryalldevicecapacityrsp_usr_value(::Interactive::Message::QueryALLDeviceCapacityRsp_USR* queryalldevicecapacityrsp_usr_value) {
  delete queryalldevicecapacityrsp_usr_value_;
  queryalldevicecapacityrsp_usr_value_ = queryalldevicecapacityrsp_usr_value;
  if (queryalldevicecapacityrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryALLDeviceCapacityRsp_USR_Value)
}

// .Interactive.Message.QueryDeviceP2pIDRsp_USR QueryDeviceP2pIDRsp_USR_Value = 1106;
bool Rsp::has_querydevicep2pidrsp_usr_value() const {
  return this != internal_default_instance() && querydevicep2pidrsp_usr_value_ != NULL;
}
void Rsp::clear_querydevicep2pidrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevicep2pidrsp_usr_value_ != NULL) delete querydevicep2pidrsp_usr_value_;
  querydevicep2pidrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDeviceP2pIDRsp_USR& Rsp::querydevicep2pidrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDeviceP2pIDRsp_USR_Value)
  return querydevicep2pidrsp_usr_value_ != NULL ? *querydevicep2pidrsp_usr_value_
                         : *::Interactive::Message::QueryDeviceP2pIDRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDeviceP2pIDRsp_USR* Rsp::mutable_querydevicep2pidrsp_usr_value() {
  
  if (querydevicep2pidrsp_usr_value_ == NULL) {
    querydevicep2pidrsp_usr_value_ = new ::Interactive::Message::QueryDeviceP2pIDRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDeviceP2pIDRsp_USR_Value)
  return querydevicep2pidrsp_usr_value_;
}
::Interactive::Message::QueryDeviceP2pIDRsp_USR* Rsp::release_querydevicep2pidrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDeviceP2pIDRsp_USR_Value)
  
  ::Interactive::Message::QueryDeviceP2pIDRsp_USR* temp = querydevicep2pidrsp_usr_value_;
  querydevicep2pidrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydevicep2pidrsp_usr_value(::Interactive::Message::QueryDeviceP2pIDRsp_USR* querydevicep2pidrsp_usr_value) {
  delete querydevicep2pidrsp_usr_value_;
  querydevicep2pidrsp_usr_value_ = querydevicep2pidrsp_usr_value;
  if (querydevicep2pidrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDeviceP2pIDRsp_USR_Value)
}

// .Interactive.Message.UploadUserCfgRsp_USR UploadUserCfgRsp_USR_Value = 1107;
bool Rsp::has_uploadusercfgrsp_usr_value() const {
  return this != internal_default_instance() && uploadusercfgrsp_usr_value_ != NULL;
}
void Rsp::clear_uploadusercfgrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && uploadusercfgrsp_usr_value_ != NULL) delete uploadusercfgrsp_usr_value_;
  uploadusercfgrsp_usr_value_ = NULL;
}
const ::Interactive::Message::UploadUserCfgRsp_USR& Rsp::uploadusercfgrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.UploadUserCfgRsp_USR_Value)
  return uploadusercfgrsp_usr_value_ != NULL ? *uploadusercfgrsp_usr_value_
                         : *::Interactive::Message::UploadUserCfgRsp_USR::internal_default_instance();
}
::Interactive::Message::UploadUserCfgRsp_USR* Rsp::mutable_uploadusercfgrsp_usr_value() {
  
  if (uploadusercfgrsp_usr_value_ == NULL) {
    uploadusercfgrsp_usr_value_ = new ::Interactive::Message::UploadUserCfgRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.UploadUserCfgRsp_USR_Value)
  return uploadusercfgrsp_usr_value_;
}
::Interactive::Message::UploadUserCfgRsp_USR* Rsp::release_uploadusercfgrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.UploadUserCfgRsp_USR_Value)
  
  ::Interactive::Message::UploadUserCfgRsp_USR* temp = uploadusercfgrsp_usr_value_;
  uploadusercfgrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_uploadusercfgrsp_usr_value(::Interactive::Message::UploadUserCfgRsp_USR* uploadusercfgrsp_usr_value) {
  delete uploadusercfgrsp_usr_value_;
  uploadusercfgrsp_usr_value_ = uploadusercfgrsp_usr_value;
  if (uploadusercfgrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.UploadUserCfgRsp_USR_Value)
}

// .Interactive.Message.QueryUserCfgRsp_USR QueryUserCfgRsp_USR_Value = 1108;
bool Rsp::has_queryusercfgrsp_usr_value() const {
  return this != internal_default_instance() && queryusercfgrsp_usr_value_ != NULL;
}
void Rsp::clear_queryusercfgrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusercfgrsp_usr_value_ != NULL) delete queryusercfgrsp_usr_value_;
  queryusercfgrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUserCfgRsp_USR& Rsp::queryusercfgrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUserCfgRsp_USR_Value)
  return queryusercfgrsp_usr_value_ != NULL ? *queryusercfgrsp_usr_value_
                         : *::Interactive::Message::QueryUserCfgRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryUserCfgRsp_USR* Rsp::mutable_queryusercfgrsp_usr_value() {
  
  if (queryusercfgrsp_usr_value_ == NULL) {
    queryusercfgrsp_usr_value_ = new ::Interactive::Message::QueryUserCfgRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUserCfgRsp_USR_Value)
  return queryusercfgrsp_usr_value_;
}
::Interactive::Message::QueryUserCfgRsp_USR* Rsp::release_queryusercfgrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUserCfgRsp_USR_Value)
  
  ::Interactive::Message::QueryUserCfgRsp_USR* temp = queryusercfgrsp_usr_value_;
  queryusercfgrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryusercfgrsp_usr_value(::Interactive::Message::QueryUserCfgRsp_USR* queryusercfgrsp_usr_value) {
  delete queryusercfgrsp_usr_value_;
  queryusercfgrsp_usr_value_ = queryusercfgrsp_usr_value;
  if (queryusercfgrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUserCfgRsp_USR_Value)
}

// .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
bool Rsp::has_getonlinedevinforsp_inner_value() const {
  return this != internal_default_instance() && getonlinedevinforsp_inner_value_ != NULL;
}
void Rsp::clear_getonlinedevinforsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlinedevinforsp_inner_value_ != NULL) delete getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineDevInfoRsp_INNER& Rsp::getonlinedevinforsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  return getonlinedevinforsp_inner_value_ != NULL ? *getonlinedevinforsp_inner_value_
                         : *::Interactive::Message::GetOnlineDevInfoRsp_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineDevInfoRsp_INNER* Rsp::mutable_getonlinedevinforsp_inner_value() {
  
  if (getonlinedevinforsp_inner_value_ == NULL) {
    getonlinedevinforsp_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  return getonlinedevinforsp_inner_value_;
}
::Interactive::Message::GetOnlineDevInfoRsp_INNER* Rsp::release_getonlinedevinforsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  
  ::Interactive::Message::GetOnlineDevInfoRsp_INNER* temp = getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getonlinedevinforsp_inner_value(::Interactive::Message::GetOnlineDevInfoRsp_INNER* getonlinedevinforsp_inner_value) {
  delete getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = getonlinedevinforsp_inner_value;
  if (getonlinedevinforsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
}

// .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
bool Rsp::has_getonlineuserinforsp_inner_value() const {
  return this != internal_default_instance() && getonlineuserinforsp_inner_value_ != NULL;
}
void Rsp::clear_getonlineuserinforsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlineuserinforsp_inner_value_ != NULL) delete getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineUserInfoRsp_INNER& Rsp::getonlineuserinforsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  return getonlineuserinforsp_inner_value_ != NULL ? *getonlineuserinforsp_inner_value_
                         : *::Interactive::Message::GetOnlineUserInfoRsp_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineUserInfoRsp_INNER* Rsp::mutable_getonlineuserinforsp_inner_value() {
  
  if (getonlineuserinforsp_inner_value_ == NULL) {
    getonlineuserinforsp_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  return getonlineuserinforsp_inner_value_;
}
::Interactive::Message::GetOnlineUserInfoRsp_INNER* Rsp::release_getonlineuserinforsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  
  ::Interactive::Message::GetOnlineUserInfoRsp_INNER* temp = getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getonlineuserinforsp_inner_value(::Interactive::Message::GetOnlineUserInfoRsp_INNER* getonlineuserinforsp_inner_value) {
  delete getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = getonlineuserinforsp_inner_value;
  if (getonlineuserinforsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
}

// .Interactive.Message.GetDeviceAccessRecordRsp_INNER GetDeviceAccessRecordRsp_INNER_Value = 440;
bool Rsp::has_getdeviceaccessrecordrsp_inner_value() const {
  return this != internal_default_instance() && getdeviceaccessrecordrsp_inner_value_ != NULL;
}
void Rsp::clear_getdeviceaccessrecordrsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getdeviceaccessrecordrsp_inner_value_ != NULL) delete getdeviceaccessrecordrsp_inner_value_;
  getdeviceaccessrecordrsp_inner_value_ = NULL;
}
const ::Interactive::Message::GetDeviceAccessRecordRsp_INNER& Rsp::getdeviceaccessrecordrsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetDeviceAccessRecordRsp_INNER_Value)
  return getdeviceaccessrecordrsp_inner_value_ != NULL ? *getdeviceaccessrecordrsp_inner_value_
                         : *::Interactive::Message::GetDeviceAccessRecordRsp_INNER::internal_default_instance();
}
::Interactive::Message::GetDeviceAccessRecordRsp_INNER* Rsp::mutable_getdeviceaccessrecordrsp_inner_value() {
  
  if (getdeviceaccessrecordrsp_inner_value_ == NULL) {
    getdeviceaccessrecordrsp_inner_value_ = new ::Interactive::Message::GetDeviceAccessRecordRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetDeviceAccessRecordRsp_INNER_Value)
  return getdeviceaccessrecordrsp_inner_value_;
}
::Interactive::Message::GetDeviceAccessRecordRsp_INNER* Rsp::release_getdeviceaccessrecordrsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetDeviceAccessRecordRsp_INNER_Value)
  
  ::Interactive::Message::GetDeviceAccessRecordRsp_INNER* temp = getdeviceaccessrecordrsp_inner_value_;
  getdeviceaccessrecordrsp_inner_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getdeviceaccessrecordrsp_inner_value(::Interactive::Message::GetDeviceAccessRecordRsp_INNER* getdeviceaccessrecordrsp_inner_value) {
  delete getdeviceaccessrecordrsp_inner_value_;
  getdeviceaccessrecordrsp_inner_value_ = getdeviceaccessrecordrsp_inner_value;
  if (getdeviceaccessrecordrsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetDeviceAccessRecordRsp_INNER_Value)
}

// .Interactive.Message.GetUserAccessRecordRsp_INNER GetUserAccessRecordRsp_INNER_Value = 450;
bool Rsp::has_getuseraccessrecordrsp_inner_value() const {
  return this != internal_default_instance() && getuseraccessrecordrsp_inner_value_ != NULL;
}
void Rsp::clear_getuseraccessrecordrsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getuseraccessrecordrsp_inner_value_ != NULL) delete getuseraccessrecordrsp_inner_value_;
  getuseraccessrecordrsp_inner_value_ = NULL;
}
const ::Interactive::Message::GetUserAccessRecordRsp_INNER& Rsp::getuseraccessrecordrsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetUserAccessRecordRsp_INNER_Value)
  return getuseraccessrecordrsp_inner_value_ != NULL ? *getuseraccessrecordrsp_inner_value_
                         : *::Interactive::Message::GetUserAccessRecordRsp_INNER::internal_default_instance();
}
::Interactive::Message::GetUserAccessRecordRsp_INNER* Rsp::mutable_getuseraccessrecordrsp_inner_value() {
  
  if (getuseraccessrecordrsp_inner_value_ == NULL) {
    getuseraccessrecordrsp_inner_value_ = new ::Interactive::Message::GetUserAccessRecordRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetUserAccessRecordRsp_INNER_Value)
  return getuseraccessrecordrsp_inner_value_;
}
::Interactive::Message::GetUserAccessRecordRsp_INNER* Rsp::release_getuseraccessrecordrsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetUserAccessRecordRsp_INNER_Value)
  
  ::Interactive::Message::GetUserAccessRecordRsp_INNER* temp = getuseraccessrecordrsp_inner_value_;
  getuseraccessrecordrsp_inner_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getuseraccessrecordrsp_inner_value(::Interactive::Message::GetUserAccessRecordRsp_INNER* getuseraccessrecordrsp_inner_value) {
  delete getuseraccessrecordrsp_inner_value_;
  getuseraccessrecordrsp_inner_value_ = getuseraccessrecordrsp_inner_value;
  if (getuseraccessrecordrsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetUserAccessRecordRsp_INNER_Value)
}

// .Interactive.Message.QueryUploadURLRsp_MGR QueryUploadURLRsp_MGR_Value = 600;
bool Rsp::has_queryuploadurlrsp_mgr_value() const {
  return this != internal_default_instance() && queryuploadurlrsp_mgr_value_ != NULL;
}
void Rsp::clear_queryuploadurlrsp_mgr_value() {
  if (GetArenaNoVirtual() == NULL && queryuploadurlrsp_mgr_value_ != NULL) delete queryuploadurlrsp_mgr_value_;
  queryuploadurlrsp_mgr_value_ = NULL;
}
const ::Interactive::Message::QueryUploadURLRsp_MGR& Rsp::queryuploadurlrsp_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUploadURLRsp_MGR_Value)
  return queryuploadurlrsp_mgr_value_ != NULL ? *queryuploadurlrsp_mgr_value_
                         : *::Interactive::Message::QueryUploadURLRsp_MGR::internal_default_instance();
}
::Interactive::Message::QueryUploadURLRsp_MGR* Rsp::mutable_queryuploadurlrsp_mgr_value() {
  
  if (queryuploadurlrsp_mgr_value_ == NULL) {
    queryuploadurlrsp_mgr_value_ = new ::Interactive::Message::QueryUploadURLRsp_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUploadURLRsp_MGR_Value)
  return queryuploadurlrsp_mgr_value_;
}
::Interactive::Message::QueryUploadURLRsp_MGR* Rsp::release_queryuploadurlrsp_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUploadURLRsp_MGR_Value)
  
  ::Interactive::Message::QueryUploadURLRsp_MGR* temp = queryuploadurlrsp_mgr_value_;
  queryuploadurlrsp_mgr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryuploadurlrsp_mgr_value(::Interactive::Message::QueryUploadURLRsp_MGR* queryuploadurlrsp_mgr_value) {
  delete queryuploadurlrsp_mgr_value_;
  queryuploadurlrsp_mgr_value_ = queryuploadurlrsp_mgr_value;
  if (queryuploadurlrsp_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUploadURLRsp_MGR_Value)
}

// .Interactive.Message.AddConfigurationRsp_MGR AddConfigurationRsp_MGR_Value = 610;
bool Rsp::has_addconfigurationrsp_mgr_value() const {
  return this != internal_default_instance() && addconfigurationrsp_mgr_value_ != NULL;
}
void Rsp::clear_addconfigurationrsp_mgr_value() {
  if (GetArenaNoVirtual() == NULL && addconfigurationrsp_mgr_value_ != NULL) delete addconfigurationrsp_mgr_value_;
  addconfigurationrsp_mgr_value_ = NULL;
}
const ::Interactive::Message::AddConfigurationRsp_MGR& Rsp::addconfigurationrsp_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddConfigurationRsp_MGR_Value)
  return addconfigurationrsp_mgr_value_ != NULL ? *addconfigurationrsp_mgr_value_
                         : *::Interactive::Message::AddConfigurationRsp_MGR::internal_default_instance();
}
::Interactive::Message::AddConfigurationRsp_MGR* Rsp::mutable_addconfigurationrsp_mgr_value() {
  
  if (addconfigurationrsp_mgr_value_ == NULL) {
    addconfigurationrsp_mgr_value_ = new ::Interactive::Message::AddConfigurationRsp_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddConfigurationRsp_MGR_Value)
  return addconfigurationrsp_mgr_value_;
}
::Interactive::Message::AddConfigurationRsp_MGR* Rsp::release_addconfigurationrsp_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddConfigurationRsp_MGR_Value)
  
  ::Interactive::Message::AddConfigurationRsp_MGR* temp = addconfigurationrsp_mgr_value_;
  addconfigurationrsp_mgr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_addconfigurationrsp_mgr_value(::Interactive::Message::AddConfigurationRsp_MGR* addconfigurationrsp_mgr_value) {
  delete addconfigurationrsp_mgr_value_;
  addconfigurationrsp_mgr_value_ = addconfigurationrsp_mgr_value;
  if (addconfigurationrsp_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddConfigurationRsp_MGR_Value)
}

// .Interactive.Message.DeleteConfigurationRsp_MGR DeleteConfigurationRsp_MGR_Value = 620;
bool Rsp::has_deleteconfigurationrsp_mgr_value() const {
  return this != internal_default_instance() && deleteconfigurationrsp_mgr_value_ != NULL;
}
void Rsp::clear_deleteconfigurationrsp_mgr_value() {
  if (GetArenaNoVirtual() == NULL && deleteconfigurationrsp_mgr_value_ != NULL) delete deleteconfigurationrsp_mgr_value_;
  deleteconfigurationrsp_mgr_value_ = NULL;
}
const ::Interactive::Message::DeleteConfigurationRsp_MGR& Rsp::deleteconfigurationrsp_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeleteConfigurationRsp_MGR_Value)
  return deleteconfigurationrsp_mgr_value_ != NULL ? *deleteconfigurationrsp_mgr_value_
                         : *::Interactive::Message::DeleteConfigurationRsp_MGR::internal_default_instance();
}
::Interactive::Message::DeleteConfigurationRsp_MGR* Rsp::mutable_deleteconfigurationrsp_mgr_value() {
  
  if (deleteconfigurationrsp_mgr_value_ == NULL) {
    deleteconfigurationrsp_mgr_value_ = new ::Interactive::Message::DeleteConfigurationRsp_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeleteConfigurationRsp_MGR_Value)
  return deleteconfigurationrsp_mgr_value_;
}
::Interactive::Message::DeleteConfigurationRsp_MGR* Rsp::release_deleteconfigurationrsp_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeleteConfigurationRsp_MGR_Value)
  
  ::Interactive::Message::DeleteConfigurationRsp_MGR* temp = deleteconfigurationrsp_mgr_value_;
  deleteconfigurationrsp_mgr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deleteconfigurationrsp_mgr_value(::Interactive::Message::DeleteConfigurationRsp_MGR* deleteconfigurationrsp_mgr_value) {
  delete deleteconfigurationrsp_mgr_value_;
  deleteconfigurationrsp_mgr_value_ = deleteconfigurationrsp_mgr_value;
  if (deleteconfigurationrsp_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeleteConfigurationRsp_MGR_Value)
}

// .Interactive.Message.ModifyConfigurationRsp_MGR ModifyConfigurationRsp_MGR_Value = 630;
bool Rsp::has_modifyconfigurationrsp_mgr_value() const {
  return this != internal_default_instance() && modifyconfigurationrsp_mgr_value_ != NULL;
}
void Rsp::clear_modifyconfigurationrsp_mgr_value() {
  if (GetArenaNoVirtual() == NULL && modifyconfigurationrsp_mgr_value_ != NULL) delete modifyconfigurationrsp_mgr_value_;
  modifyconfigurationrsp_mgr_value_ = NULL;
}
const ::Interactive::Message::ModifyConfigurationRsp_MGR& Rsp::modifyconfigurationrsp_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyConfigurationRsp_MGR_Value)
  return modifyconfigurationrsp_mgr_value_ != NULL ? *modifyconfigurationrsp_mgr_value_
                         : *::Interactive::Message::ModifyConfigurationRsp_MGR::internal_default_instance();
}
::Interactive::Message::ModifyConfigurationRsp_MGR* Rsp::mutable_modifyconfigurationrsp_mgr_value() {
  
  if (modifyconfigurationrsp_mgr_value_ == NULL) {
    modifyconfigurationrsp_mgr_value_ = new ::Interactive::Message::ModifyConfigurationRsp_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyConfigurationRsp_MGR_Value)
  return modifyconfigurationrsp_mgr_value_;
}
::Interactive::Message::ModifyConfigurationRsp_MGR* Rsp::release_modifyconfigurationrsp_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyConfigurationRsp_MGR_Value)
  
  ::Interactive::Message::ModifyConfigurationRsp_MGR* temp = modifyconfigurationrsp_mgr_value_;
  modifyconfigurationrsp_mgr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifyconfigurationrsp_mgr_value(::Interactive::Message::ModifyConfigurationRsp_MGR* modifyconfigurationrsp_mgr_value) {
  delete modifyconfigurationrsp_mgr_value_;
  modifyconfigurationrsp_mgr_value_ = modifyconfigurationrsp_mgr_value;
  if (modifyconfigurationrsp_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyConfigurationRsp_MGR_Value)
}

// .Interactive.Message.QueryAllConfigurationRsp_MGR QueryAllConfigurationRsp_MGR_Value = 640;
bool Rsp::has_queryallconfigurationrsp_mgr_value() const {
  return this != internal_default_instance() && queryallconfigurationrsp_mgr_value_ != NULL;
}
void Rsp::clear_queryallconfigurationrsp_mgr_value() {
  if (GetArenaNoVirtual() == NULL && queryallconfigurationrsp_mgr_value_ != NULL) delete queryallconfigurationrsp_mgr_value_;
  queryallconfigurationrsp_mgr_value_ = NULL;
}
const ::Interactive::Message::QueryAllConfigurationRsp_MGR& Rsp::queryallconfigurationrsp_mgr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryAllConfigurationRsp_MGR_Value)
  return queryallconfigurationrsp_mgr_value_ != NULL ? *queryallconfigurationrsp_mgr_value_
                         : *::Interactive::Message::QueryAllConfigurationRsp_MGR::internal_default_instance();
}
::Interactive::Message::QueryAllConfigurationRsp_MGR* Rsp::mutable_queryallconfigurationrsp_mgr_value() {
  
  if (queryallconfigurationrsp_mgr_value_ == NULL) {
    queryallconfigurationrsp_mgr_value_ = new ::Interactive::Message::QueryAllConfigurationRsp_MGR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryAllConfigurationRsp_MGR_Value)
  return queryallconfigurationrsp_mgr_value_;
}
::Interactive::Message::QueryAllConfigurationRsp_MGR* Rsp::release_queryallconfigurationrsp_mgr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryAllConfigurationRsp_MGR_Value)
  
  ::Interactive::Message::QueryAllConfigurationRsp_MGR* temp = queryallconfigurationrsp_mgr_value_;
  queryallconfigurationrsp_mgr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryallconfigurationrsp_mgr_value(::Interactive::Message::QueryAllConfigurationRsp_MGR* queryallconfigurationrsp_mgr_value) {
  delete queryallconfigurationrsp_mgr_value_;
  queryallconfigurationrsp_mgr_value_ = queryallconfigurationrsp_mgr_value;
  if (queryallconfigurationrsp_mgr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryAllConfigurationRsp_MGR_Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InteractiveMessage::kTypeFieldNumber;
const int InteractiveMessage::kUiMsgSeqFieldNumber;
const int InteractiveMessage::kStrSIDFieldNumber;
const int InteractiveMessage::kReqValueFieldNumber;
const int InteractiveMessage::kRspValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InteractiveMessage::InteractiveMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.InteractiveMessage)
}
InteractiveMessage::InteractiveMessage(const InteractiveMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsid().size() > 0) {
    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    reqvalue_ = new ::Interactive::Message::Req(*from.reqvalue_);
  } else {
    reqvalue_ = NULL;
  }
  if (from.has_rspvalue()) {
    rspvalue_ = new ::Interactive::Message::Rsp(*from.rspvalue_);
  } else {
    rspvalue_ = NULL;
  }
  ::memcpy(&uimsgseq_, &from.uimsgseq_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.InteractiveMessage)
}

void InteractiveMessage::SharedCtor() {
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqvalue_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&reqvalue_) + sizeof(type_));
  _cached_size_ = 0;
}

InteractiveMessage::~InteractiveMessage() {
  // @@protoc_insertion_point(destructor:Interactive.Message.InteractiveMessage)
  SharedDtor();
}

void InteractiveMessage::SharedDtor() {
  strsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqvalue_;
  }
  if (this != internal_default_instance()) {
    delete rspvalue_;
  }
}

void InteractiveMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InteractiveMessage::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[162].descriptor;
}

const InteractiveMessage& InteractiveMessage::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

InteractiveMessage* InteractiveMessage::New(::google::protobuf::Arena* arena) const {
  InteractiveMessage* n = new InteractiveMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InteractiveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.InteractiveMessage)
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) {
    delete reqvalue_;
  }
  reqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) {
    delete rspvalue_;
  }
  rspvalue_ = NULL;
  ::memset(&uimsgseq_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
}

bool InteractiveMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.InteractiveMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.MsgType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Interactive::Message::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uiMsgSeq = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uimsgseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsid().data(), this->strsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.InteractiveMessage.strSID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Req ReqValue = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Rsp RspValue = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rspvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.InteractiveMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.InteractiveMessage)
  return false;
#undef DO_
}

void InteractiveMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.InteractiveMessage)
  // .Interactive.Message.MsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uimsgseq(), output);
  }

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.InteractiveMessage.strSID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strsid(), output);
  }

  // .Interactive.Message.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reqvalue_, output);
  }

  // .Interactive.Message.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rspvalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.InteractiveMessage)
}

::google::protobuf::uint8* InteractiveMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.InteractiveMessage)
  // .Interactive.Message.MsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uimsgseq(), target);
  }

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.InteractiveMessage.strSID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strsid(), target);
  }

  // .Interactive.Message.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reqvalue_, false, target);
  }

  // .Interactive.Message.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rspvalue_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.InteractiveMessage)
  return target;
}

size_t InteractiveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.InteractiveMessage)
  size_t total_size = 0;

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsid());
  }

  // .Interactive.Message.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqvalue_);
  }

  // .Interactive.Message.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rspvalue_);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uimsgseq());
  }

  // .Interactive.Message.MsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InteractiveMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.InteractiveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InteractiveMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InteractiveMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.InteractiveMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.InteractiveMessage)
    MergeFrom(*source);
  }
}

void InteractiveMessage::MergeFrom(const InteractiveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.InteractiveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strsid().size() > 0) {

    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    mutable_reqvalue()->::Interactive::Message::Req::MergeFrom(from.reqvalue());
  }
  if (from.has_rspvalue()) {
    mutable_rspvalue()->::Interactive::Message::Rsp::MergeFrom(from.rspvalue());
  }
  if (from.uimsgseq() != 0) {
    set_uimsgseq(from.uimsgseq());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void InteractiveMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.InteractiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InteractiveMessage::CopyFrom(const InteractiveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.InteractiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InteractiveMessage::IsInitialized() const {
  return true;
}

void InteractiveMessage::Swap(InteractiveMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InteractiveMessage::InternalSwap(InteractiveMessage* other) {
  strsid_.Swap(&other->strsid_);
  std::swap(reqvalue_, other->reqvalue_);
  std::swap(rspvalue_, other->rspvalue_);
  std::swap(uimsgseq_, other->uimsgseq_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InteractiveMessage::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[162];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InteractiveMessage

// .Interactive.Message.MsgType type = 1;
void InteractiveMessage::clear_type() {
  type_ = 0;
}
::Interactive::Message::MsgType InteractiveMessage::type() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.type)
  return static_cast< ::Interactive::Message::MsgType >(type_);
}
void InteractiveMessage::set_type(::Interactive::Message::MsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.type)
}

// uint64 uiMsgSeq = 2;
void InteractiveMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 InteractiveMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.uiMsgSeq)
  return uimsgseq_;
}
void InteractiveMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.uiMsgSeq)
}

// string strSID = 3;
void InteractiveMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InteractiveMessage::strsid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.strSID)
  return strsid_.GetNoArena();
}
void InteractiveMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.strSID)
}
#if LANG_CXX11
void InteractiveMessage::set_strsid(::std::string&& value) {
  
  strsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.InteractiveMessage.strSID)
}
#endif
void InteractiveMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.InteractiveMessage.strSID)
}
void InteractiveMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.InteractiveMessage.strSID)
}
::std::string* InteractiveMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InteractiveMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InteractiveMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.strSID)
}

// .Interactive.Message.Req ReqValue = 4;
bool InteractiveMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
void InteractiveMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
const ::Interactive::Message::Req& InteractiveMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.ReqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::Interactive::Message::Req::internal_default_instance();
}
::Interactive::Message::Req* InteractiveMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::Interactive::Message::Req;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.ReqValue)
  return reqvalue_;
}
::Interactive::Message::Req* InteractiveMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.ReqValue)
  
  ::Interactive::Message::Req* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
void InteractiveMessage::set_allocated_reqvalue(::Interactive::Message::Req* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.ReqValue)
}

// .Interactive.Message.Rsp RspValue = 5;
bool InteractiveMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
void InteractiveMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
const ::Interactive::Message::Rsp& InteractiveMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.RspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::Interactive::Message::Rsp::internal_default_instance();
}
::Interactive::Message::Rsp* InteractiveMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::Interactive::Message::Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.RspValue)
  return rspvalue_;
}
::Interactive::Message::Rsp* InteractiveMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.RspValue)
  
  ::Interactive::Message::Rsp* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
void InteractiveMessage::set_allocated_rspvalue(::Interactive::Message::Rsp* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.RspValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Interactive

// @@protoc_insertion_point(global_scope)
