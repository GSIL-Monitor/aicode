// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InteractiveProtocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InteractiveProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Interactive {
namespace Message {
class PermissionOfUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PermissionOfUser> {
} _PermissionOfUser_default_instance_;
class DeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Device> {
} _Device_default_instance_;
class UserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<User> {
} _User_default_instance_;
class RelationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Relation> {
} _Relation_default_instance_;
class FileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<File> {
} _File_default_instance_;
class FileUrlDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileUrl> {
} _FileUrl_default_instance_;
class GetAccessAddressReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressReq_DEV> {
} _GetAccessAddressReq_DEV_default_instance_;
class GetAccessAddressRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressRsp_DEV> {
} _GetAccessAddressRsp_DEV_default_instance_;
class LoginReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq_DEV> {
} _LoginReq_DEV_default_instance_;
class LoginRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp_DEV> {
} _LoginRsp_DEV_default_instance_;
class LogoutReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq_DEV> {
} _LogoutReq_DEV_default_instance_;
class LogoutRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutRsp_DEV> {
} _LogoutRsp_DEV_default_instance_;
class ShakehandReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandReq_DEV> {
} _ShakehandReq_DEV_default_instance_;
class ShakehandRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandRsp_DEV> {
} _ShakehandRsp_DEV_default_instance_;
class ConfigInfoReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoReq_DEV> {
} _ConfigInfoReq_DEV_default_instance_;
class ConfigInfoRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoRsp_DEV> {
} _ConfigInfoRsp_DEV_default_instance_;
class StorageAddressReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressReq_DEV> {
} _StorageAddressReq_DEV_default_instance_;
class StorageAddressRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressRsp_DEV> {
} _StorageAddressRsp_DEV_default_instance_;
class P2pInfoReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoReq_DEV> {
} _P2pInfoReq_DEV_default_instance_;
class P2pInfoRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoRsp_DEV> {
} _P2pInfoRsp_DEV_default_instance_;
class AddFileReq_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFileReq_DEV> {
} _AddFileReq_DEV_default_instance_;
class AddFileRsp_DEVDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFileRsp_DEV> {
} _AddFileRsp_DEV_default_instance_;
class MsgPreHandlerReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgPreHandlerReq_USR> {
} _MsgPreHandlerReq_USR_default_instance_;
class MsgPreHandlerRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgPreHandlerRsp_USR> {
} _MsgPreHandlerRsp_USR_default_instance_;
class GetAccessAddressReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressReq_USR> {
} _GetAccessAddressReq_USR_default_instance_;
class GetAccessAddressRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAccessAddressRsp_USR> {
} _GetAccessAddressRsp_USR_default_instance_;
class RegisterUserReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterUserReq_USR> {
} _RegisterUserReq_USR_default_instance_;
class RegisterUserRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterUserRsp_USR> {
} _RegisterUserRsp_USR_default_instance_;
class UnRegisterUserReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnRegisterUserReq_USR> {
} _UnRegisterUserReq_USR_default_instance_;
class UnRegisterUserRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnRegisterUserRsp_USR> {
} _UnRegisterUserRsp_USR_default_instance_;
class QueryUsrInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUsrInfoReq_USR> {
} _QueryUsrInfoReq_USR_default_instance_;
class QueryUsrInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUsrInfoRsp_USR> {
} _QueryUsrInfoRsp_USR_default_instance_;
class ModifyUserInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyUserInfoReq_USR> {
} _ModifyUserInfoReq_USR_default_instance_;
class ModifyUserInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyUserInfoRsp_USR> {
} _ModifyUserInfoRsp_USR_default_instance_;
class LoginReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq_USR> {
} _LoginReq_USR_default_instance_;
class LoginRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp_USR> {
} _LoginRsp_USR_default_instance_;
class LogoutReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq_USR> {
} _LogoutReq_USR_default_instance_;
class LogoutRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutRsp_USR> {
} _LogoutRsp_USR_default_instance_;
class ShakehandReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandReq_USR> {
} _ShakehandReq_USR_default_instance_;
class ShakehandRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandRsp_USR> {
} _ShakehandRsp_USR_default_instance_;
class ConfigInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoReq_USR> {
} _ConfigInfoReq_USR_default_instance_;
class ConfigInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoRsp_USR> {
} _ConfigInfoRsp_USR_default_instance_;
class AddDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddDevReq_USR> {
} _AddDevReq_USR_default_instance_;
class AddDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddDevRsp_USR> {
} _AddDevRsp_USR_default_instance_;
class DelDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelDevReq_USR> {
} _DelDevReq_USR_default_instance_;
class DelDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelDevRsp_USR> {
} _DelDevRsp_USR_default_instance_;
class ModifyDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDevReq_USR> {
} _ModifyDevReq_USR_default_instance_;
class ModifyDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyDevRsp_USR> {
} _ModifyDevRsp_USR_default_instance_;
class QueryDevInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevInfoReq_USR> {
} _QueryDevInfoReq_USR_default_instance_;
class QueryDevInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevInfoRsp_USR> {
} _QueryDevInfoRsp_USR_default_instance_;
class QueryDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevReq_USR> {
} _QueryDevReq_USR_default_instance_;
class QueryDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryDevRsp_USR> {
} _QueryDevRsp_USR_default_instance_;
class QueryUserReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUserReq_USR> {
} _QueryUserReq_USR_default_instance_;
class QueryUserRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryUserRsp_USR> {
} _QueryUserRsp_USR_default_instance_;
class SharingDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SharingDevReq_USR> {
} _SharingDevReq_USR_default_instance_;
class SharingDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SharingDevRsp_USR> {
} _SharingDevRsp_USR_default_instance_;
class CancelSharedDevReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelSharedDevReq_USR> {
} _CancelSharedDevReq_USR_default_instance_;
class CancelSharedDevRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelSharedDevRsp_USR> {
} _CancelSharedDevRsp_USR_default_instance_;
class AddFriendsReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFriendsReq_USR> {
} _AddFriendsReq_USR_default_instance_;
class AddFriendsRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddFriendsRsp_USR> {
} _AddFriendsRsp_USR_default_instance_;
class DelFriendsReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelFriendsReq_USR> {
} _DelFriendsReq_USR_default_instance_;
class DelFriendsRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelFriendsRsp_USR> {
} _DelFriendsRsp_USR_default_instance_;
class QueryFriendsReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFriendsReq_USR> {
} _QueryFriendsReq_USR_default_instance_;
class QueryFriendsRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFriendsRsp_USR> {
} _QueryFriendsRsp_USR_default_instance_;
class StorageAddressReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressReq_USR> {
} _StorageAddressReq_USR_default_instance_;
class StorageAddressRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageAddressRsp_USR> {
} _StorageAddressRsp_USR_default_instance_;
class P2pInfoReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoReq_USR> {
} _P2pInfoReq_USR_default_instance_;
class P2pInfoRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P2pInfoRsp_USR> {
} _P2pInfoRsp_USR_default_instance_;
class DeleteFileReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteFileReq_USR> {
} _DeleteFileReq_USR_default_instance_;
class DeleteFileRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteFileRsp_USR> {
} _DeleteFileRsp_USR_default_instance_;
class DownloadFileReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DownloadFileReq_USR> {
} _DownloadFileReq_USR_default_instance_;
class DownloadFileRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DownloadFileRsp_USR> {
} _DownloadFileRsp_USR_default_instance_;
class QueryFileReq_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFileReq_USR> {
} _QueryFileReq_USR_default_instance_;
class QueryFileRsp_USRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryFileRsp_USR> {
} _QueryFileRsp_USR_default_instance_;
class GetOnlineDevInfoReq_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineDevInfoReq_INNER> {
} _GetOnlineDevInfoReq_INNER_default_instance_;
class GetOnlineDevInfoRsp_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineDevInfoRsp_INNER> {
} _GetOnlineDevInfoRsp_INNER_default_instance_;
class BroadcastOnlineDevInfo_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BroadcastOnlineDevInfo_INNER> {
} _BroadcastOnlineDevInfo_INNER_default_instance_;
class GetOnlineUserInfoReq_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineUserInfoReq_INNER> {
} _GetOnlineUserInfoReq_INNER_default_instance_;
class GetOnlineUserInfoRsp_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOnlineUserInfoRsp_INNER> {
} _GetOnlineUserInfoRsp_INNER_default_instance_;
class BroadcastOnlineUserInfo_INNERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BroadcastOnlineUserInfo_INNER> {
} _BroadcastOnlineUserInfo_INNER_default_instance_;
class ReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Req> {
} _Req_default_instance_;
class RspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Rsp> {
} _Rsp_default_instance_;
class InteractiveMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InteractiveMessage> {
} _InteractiveMessage_default_instance_;

namespace protobuf_InteractiveProtocol_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[83];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PermissionOfUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PermissionOfUser, uiunlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PermissionOfUser, uiwatch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdevname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strdevpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, uitypeinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strextend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Device, strinnerinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, struserpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, uitypeinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, uirelation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strremotefileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strdownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strfilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strsuffixname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, uifilesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strfilecreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, uistatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, strextend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileUrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileUrl, strfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileUrl, strdownloadurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, straccessaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, straccessport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_DEV, strconfiginfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, uistoragetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, uistorageaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_DEV, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_DEV, straddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_DEV, uiport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_DEV, strdevipaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, strp2pserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_DEV, uilease_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, fileinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileReq_DEV, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileRsp_DEV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileRsp_DEV, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFileRsp_DEV, strfileidfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPreHandlerRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_USR, strserializeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, straccessaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, straccessport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccessAddressRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserRsp_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUserRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserRsp_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnRegisterUserRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoRsp_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsrInfoRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoReq_USR, userinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyUserInfoRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, relationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_USR, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp_USR, stritems_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevReq_USR, devinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevReq_USR, strdevid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelDevRsp_USR, strdevidfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevReq_USR, devinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevInfoRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevRsp_USR, allrelationinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUserRsp_USR, allrelationinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, relationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharingDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevReq_USR, relationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSharedDevRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsReq_USR, strfrienduserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendsRsp_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsReq_USR, strfrienduserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendsRsp_USR, strfrienduseridfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFriendsRsp_USR, strallfrienduserid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, uistoragetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, uistorageaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressReq_USR, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_USR, straddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAddressRsp_USR, uiport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, struseripaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoReq_USR, strdevid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, strp2pserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, strp2pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P2pInfoRsp_USR, uilease_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileReq_USR, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFileRsp_USR, strfileidfailed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileReq_USR, strfileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFileRsp_USR, fileurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strdevid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, uibeginindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, uibusinesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileReq_USR, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileRsp_USR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileRsp_USR, strvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFileRsp_USR, fileinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoReq_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoReq_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoRsp_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoRsp_INNER, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineDevInfoRsp_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineDevInfo_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineDevInfo_INNER, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineDevInfo_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoReq_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoReq_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoRsp_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoRsp_INNER, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlineUserInfoRsp_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineUserInfo_INNER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineUserInfo_INNER, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastOnlineUserInfo_INNER, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getaccessaddressreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, loginreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, logoutreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, shakehandreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, configinforeq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, storageaddressreq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, p2pinforeq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, addfilereq_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, msgprehandlerreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getaccessaddressreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, registeruserreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, unregisteruserreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryusrinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifyuserinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, loginreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, logoutreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, shakehandreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, configinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, adddevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deldevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, modifydevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydevinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, querydevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryuserreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, sharingdevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, cancelshareddevreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, addfriendsreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, delfriendsreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryfriendsreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, storageaddressreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, p2pinforeq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, deletefilereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, downloadfilereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, queryfilereq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getonlinedevinforeq_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, broadcastonlinedevinfo_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getonlineuserinforeq_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, broadcastonlineuserinfo_inner_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, iretcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, strretmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getaccessaddressrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, loginrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, logoutrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, shakehandrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, configinforsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, storageaddressrsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, p2pinforsp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, addfilersp_dev_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, msgprehandlerrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getaccessaddressrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, registeruserrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, unregisteruserrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryusrinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifyuserinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, loginrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, logoutrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, shakehandrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, configinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, adddevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deldevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, modifydevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydevinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, querydevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryuserrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, sharingdevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, cancelshareddevrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, addfriendsrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, delfriendsrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryfriendsrsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, storageaddressreq_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, p2pinforsp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, deletefilersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, downloadfilersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, queryfilersp_usr_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getonlinedevinforsp_inner_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getonlineuserinforsp_inner_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, uimsgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, strsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, reqvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractiveMessage, rspvalue_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PermissionOfUser)},
  { 6, -1, sizeof(Device)},
  { 18, -1, sizeof(User)},
  { 29, -1, sizeof(Relation)},
  { 39, -1, sizeof(File)},
  { 56, -1, sizeof(FileUrl)},
  { 62, -1, sizeof(GetAccessAddressReq_DEV)},
  { 68, -1, sizeof(GetAccessAddressRsp_DEV)},
  { 75, -1, sizeof(LoginReq_DEV)},
  { 82, -1, sizeof(LoginRsp_DEV)},
  { 87, -1, sizeof(LogoutReq_DEV)},
  { 93, -1, sizeof(LogoutRsp_DEV)},
  { 98, -1, sizeof(ShakehandReq_DEV)},
  { 104, -1, sizeof(ShakehandRsp_DEV)},
  { 109, -1, sizeof(ConfigInfoReq_DEV)},
  { 115, -1, sizeof(ConfigInfoRsp_DEV)},
  { 121, -1, sizeof(StorageAddressReq_DEV)},
  { 129, -1, sizeof(StorageAddressRsp_DEV)},
  { 135, -1, sizeof(P2pInfoReq_DEV)},
  { 141, -1, sizeof(P2pInfoRsp_DEV)},
  { 148, -1, sizeof(AddFileReq_DEV)},
  { 155, -1, sizeof(AddFileRsp_DEV)},
  { 161, -1, sizeof(MsgPreHandlerReq_USR)},
  { 166, -1, sizeof(MsgPreHandlerRsp_USR)},
  { 171, -1, sizeof(GetAccessAddressReq_USR)},
  { 177, -1, sizeof(GetAccessAddressRsp_USR)},
  { 184, -1, sizeof(RegisterUserReq_USR)},
  { 190, -1, sizeof(RegisterUserRsp_USR)},
  { 196, -1, sizeof(UnRegisterUserReq_USR)},
  { 202, -1, sizeof(UnRegisterUserRsp_USR)},
  { 208, -1, sizeof(QueryUsrInfoReq_USR)},
  { 214, -1, sizeof(QueryUsrInfoRsp_USR)},
  { 220, -1, sizeof(ModifyUserInfoReq_USR)},
  { 225, -1, sizeof(ModifyUserInfoRsp_USR)},
  { 230, -1, sizeof(LoginReq_USR)},
  { 236, -1, sizeof(LoginRsp_USR)},
  { 243, -1, sizeof(LogoutReq_USR)},
  { 249, -1, sizeof(LogoutRsp_USR)},
  { 254, -1, sizeof(ShakehandReq_USR)},
  { 260, -1, sizeof(ShakehandRsp_USR)},
  { 265, -1, sizeof(ConfigInfoReq_USR)},
  { 271, -1, sizeof(ConfigInfoRsp_USR)},
  { 277, -1, sizeof(AddDevReq_USR)},
  { 283, -1, sizeof(AddDevRsp_USR)},
  { 288, -1, sizeof(DelDevReq_USR)},
  { 294, -1, sizeof(DelDevRsp_USR)},
  { 300, -1, sizeof(ModifyDevReq_USR)},
  { 306, -1, sizeof(ModifyDevRsp_USR)},
  { 311, -1, sizeof(QueryDevInfoReq_USR)},
  { 317, -1, sizeof(QueryDevInfoRsp_USR)},
  { 323, -1, sizeof(QueryDevReq_USR)},
  { 330, -1, sizeof(QueryDevRsp_USR)},
  { 335, -1, sizeof(QueryUserReq_USR)},
  { 342, -1, sizeof(QueryUserRsp_USR)},
  { 347, -1, sizeof(SharingDevReq_USR)},
  { 353, -1, sizeof(SharingDevRsp_USR)},
  { 358, -1, sizeof(CancelSharedDevReq_USR)},
  { 364, -1, sizeof(CancelSharedDevRsp_USR)},
  { 369, -1, sizeof(AddFriendsReq_USR)},
  { 375, -1, sizeof(AddFriendsRsp_USR)},
  { 380, -1, sizeof(DelFriendsReq_USR)},
  { 386, -1, sizeof(DelFriendsRsp_USR)},
  { 392, -1, sizeof(QueryFriendsReq_USR)},
  { 399, -1, sizeof(QueryFriendsRsp_USR)},
  { 404, -1, sizeof(StorageAddressReq_USR)},
  { 412, -1, sizeof(StorageAddressRsp_USR)},
  { 418, -1, sizeof(P2pInfoReq_USR)},
  { 425, -1, sizeof(P2pInfoRsp_USR)},
  { 432, -1, sizeof(DeleteFileReq_USR)},
  { 438, -1, sizeof(DeleteFileRsp_USR)},
  { 444, -1, sizeof(DownloadFileReq_USR)},
  { 450, -1, sizeof(DownloadFileRsp_USR)},
  { 456, -1, sizeof(QueryFileReq_USR)},
  { 467, -1, sizeof(QueryFileRsp_USR)},
  { 473, -1, sizeof(GetOnlineDevInfoReq_INNER)},
  { 478, -1, sizeof(GetOnlineDevInfoRsp_INNER)},
  { 484, -1, sizeof(BroadcastOnlineDevInfo_INNER)},
  { 490, -1, sizeof(GetOnlineUserInfoReq_INNER)},
  { 495, -1, sizeof(GetOnlineUserInfoRsp_INNER)},
  { 501, -1, sizeof(BroadcastOnlineUserInfo_INNER)},
  { 507, -1, sizeof(Req)},
  { 549, -1, sizeof(Rsp)},
  { 591, -1, sizeof(InteractiveMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PermissionOfUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Relation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileUrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFileReq_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFileRsp_DEV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgPreHandlerReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgPreHandlerRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAccessAddressRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterUserReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterUserRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnRegisterUserReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnRegisterUserRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUsrInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUsrInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyUserInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyUserInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUserReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryUserRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SharingDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SharingDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelSharedDevReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelSharedDevRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendsReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendsRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFriendsReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFriendsRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFriendsReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFriendsRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAddressRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P2pInfoRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFileReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFileRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DownloadFileReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DownloadFileRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFileReq_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryFileRsp_USR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineDevInfoReq_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineDevInfoRsp_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BroadcastOnlineDevInfo_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineUserInfoReq_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlineUserInfoRsp_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BroadcastOnlineUserInfo_INNER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Rsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InteractiveMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "InteractiveProtocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 83);
}

}  // namespace

void TableStruct::Shutdown() {
  _PermissionOfUser_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Device_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _User_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Relation_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _File_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _FileUrl_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _GetAccessAddressReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _GetAccessAddressRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _LoginReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _LoginRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _LogoutReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _LogoutRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _ShakehandReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _ShakehandRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _ConfigInfoReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _ConfigInfoRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _StorageAddressReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _StorageAddressRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _P2pInfoReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _P2pInfoRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _AddFileReq_DEV_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _AddFileRsp_DEV_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _MsgPreHandlerReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _MsgPreHandlerRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _GetAccessAddressReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _GetAccessAddressRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _RegisterUserReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _RegisterUserRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _UnRegisterUserReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _UnRegisterUserRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _QueryUsrInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _QueryUsrInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _ModifyUserInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _ModifyUserInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _LoginReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _LoginRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _LogoutReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _LogoutRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _ShakehandReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _ShakehandRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _ConfigInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _ConfigInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _AddDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _AddDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _DelDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _DelDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _ModifyDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _ModifyDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _QueryDevInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _QueryDevInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _QueryDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _QueryDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _QueryUserReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _QueryUserRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _SharingDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _SharingDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _CancelSharedDevReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _CancelSharedDevRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _AddFriendsReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _AddFriendsRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _DelFriendsReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _DelFriendsRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _QueryFriendsReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _QueryFriendsRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _StorageAddressReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
  _StorageAddressRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[65].reflection;
  _P2pInfoReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[66].reflection;
  _P2pInfoRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[67].reflection;
  _DeleteFileReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[68].reflection;
  _DeleteFileRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[69].reflection;
  _DownloadFileReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[70].reflection;
  _DownloadFileRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[71].reflection;
  _QueryFileReq_USR_default_instance_.Shutdown();
  delete file_level_metadata[72].reflection;
  _QueryFileRsp_USR_default_instance_.Shutdown();
  delete file_level_metadata[73].reflection;
  _GetOnlineDevInfoReq_INNER_default_instance_.Shutdown();
  delete file_level_metadata[74].reflection;
  _GetOnlineDevInfoRsp_INNER_default_instance_.Shutdown();
  delete file_level_metadata[75].reflection;
  _BroadcastOnlineDevInfo_INNER_default_instance_.Shutdown();
  delete file_level_metadata[76].reflection;
  _GetOnlineUserInfoReq_INNER_default_instance_.Shutdown();
  delete file_level_metadata[77].reflection;
  _GetOnlineUserInfoRsp_INNER_default_instance_.Shutdown();
  delete file_level_metadata[78].reflection;
  _BroadcastOnlineUserInfo_INNER_default_instance_.Shutdown();
  delete file_level_metadata[79].reflection;
  _Req_default_instance_.Shutdown();
  delete file_level_metadata[80].reflection;
  _Rsp_default_instance_.Shutdown();
  delete file_level_metadata[81].reflection;
  _InteractiveMessage_default_instance_.Shutdown();
  delete file_level_metadata[82].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PermissionOfUser_default_instance_.DefaultConstruct();
  _Device_default_instance_.DefaultConstruct();
  _User_default_instance_.DefaultConstruct();
  _Relation_default_instance_.DefaultConstruct();
  _File_default_instance_.DefaultConstruct();
  _FileUrl_default_instance_.DefaultConstruct();
  _GetAccessAddressReq_DEV_default_instance_.DefaultConstruct();
  _GetAccessAddressRsp_DEV_default_instance_.DefaultConstruct();
  _LoginReq_DEV_default_instance_.DefaultConstruct();
  _LoginRsp_DEV_default_instance_.DefaultConstruct();
  _LogoutReq_DEV_default_instance_.DefaultConstruct();
  _LogoutRsp_DEV_default_instance_.DefaultConstruct();
  _ShakehandReq_DEV_default_instance_.DefaultConstruct();
  _ShakehandRsp_DEV_default_instance_.DefaultConstruct();
  _ConfigInfoReq_DEV_default_instance_.DefaultConstruct();
  _ConfigInfoRsp_DEV_default_instance_.DefaultConstruct();
  _StorageAddressReq_DEV_default_instance_.DefaultConstruct();
  _StorageAddressRsp_DEV_default_instance_.DefaultConstruct();
  _P2pInfoReq_DEV_default_instance_.DefaultConstruct();
  _P2pInfoRsp_DEV_default_instance_.DefaultConstruct();
  _AddFileReq_DEV_default_instance_.DefaultConstruct();
  _AddFileRsp_DEV_default_instance_.DefaultConstruct();
  _MsgPreHandlerReq_USR_default_instance_.DefaultConstruct();
  _MsgPreHandlerRsp_USR_default_instance_.DefaultConstruct();
  _GetAccessAddressReq_USR_default_instance_.DefaultConstruct();
  _GetAccessAddressRsp_USR_default_instance_.DefaultConstruct();
  _RegisterUserReq_USR_default_instance_.DefaultConstruct();
  _RegisterUserRsp_USR_default_instance_.DefaultConstruct();
  _UnRegisterUserReq_USR_default_instance_.DefaultConstruct();
  _UnRegisterUserRsp_USR_default_instance_.DefaultConstruct();
  _QueryUsrInfoReq_USR_default_instance_.DefaultConstruct();
  _QueryUsrInfoRsp_USR_default_instance_.DefaultConstruct();
  _ModifyUserInfoReq_USR_default_instance_.DefaultConstruct();
  _ModifyUserInfoRsp_USR_default_instance_.DefaultConstruct();
  _LoginReq_USR_default_instance_.DefaultConstruct();
  _LoginRsp_USR_default_instance_.DefaultConstruct();
  _LogoutReq_USR_default_instance_.DefaultConstruct();
  _LogoutRsp_USR_default_instance_.DefaultConstruct();
  _ShakehandReq_USR_default_instance_.DefaultConstruct();
  _ShakehandRsp_USR_default_instance_.DefaultConstruct();
  _ConfigInfoReq_USR_default_instance_.DefaultConstruct();
  _ConfigInfoRsp_USR_default_instance_.DefaultConstruct();
  _AddDevReq_USR_default_instance_.DefaultConstruct();
  _AddDevRsp_USR_default_instance_.DefaultConstruct();
  _DelDevReq_USR_default_instance_.DefaultConstruct();
  _DelDevRsp_USR_default_instance_.DefaultConstruct();
  _ModifyDevReq_USR_default_instance_.DefaultConstruct();
  _ModifyDevRsp_USR_default_instance_.DefaultConstruct();
  _QueryDevInfoReq_USR_default_instance_.DefaultConstruct();
  _QueryDevInfoRsp_USR_default_instance_.DefaultConstruct();
  _QueryDevReq_USR_default_instance_.DefaultConstruct();
  _QueryDevRsp_USR_default_instance_.DefaultConstruct();
  _QueryUserReq_USR_default_instance_.DefaultConstruct();
  _QueryUserRsp_USR_default_instance_.DefaultConstruct();
  _SharingDevReq_USR_default_instance_.DefaultConstruct();
  _SharingDevRsp_USR_default_instance_.DefaultConstruct();
  _CancelSharedDevReq_USR_default_instance_.DefaultConstruct();
  _CancelSharedDevRsp_USR_default_instance_.DefaultConstruct();
  _AddFriendsReq_USR_default_instance_.DefaultConstruct();
  _AddFriendsRsp_USR_default_instance_.DefaultConstruct();
  _DelFriendsReq_USR_default_instance_.DefaultConstruct();
  _DelFriendsRsp_USR_default_instance_.DefaultConstruct();
  _QueryFriendsReq_USR_default_instance_.DefaultConstruct();
  _QueryFriendsRsp_USR_default_instance_.DefaultConstruct();
  _StorageAddressReq_USR_default_instance_.DefaultConstruct();
  _StorageAddressRsp_USR_default_instance_.DefaultConstruct();
  _P2pInfoReq_USR_default_instance_.DefaultConstruct();
  _P2pInfoRsp_USR_default_instance_.DefaultConstruct();
  _DeleteFileReq_USR_default_instance_.DefaultConstruct();
  _DeleteFileRsp_USR_default_instance_.DefaultConstruct();
  _DownloadFileReq_USR_default_instance_.DefaultConstruct();
  _DownloadFileRsp_USR_default_instance_.DefaultConstruct();
  _QueryFileReq_USR_default_instance_.DefaultConstruct();
  _QueryFileRsp_USR_default_instance_.DefaultConstruct();
  _GetOnlineDevInfoReq_INNER_default_instance_.DefaultConstruct();
  _GetOnlineDevInfoRsp_INNER_default_instance_.DefaultConstruct();
  _BroadcastOnlineDevInfo_INNER_default_instance_.DefaultConstruct();
  _GetOnlineUserInfoReq_INNER_default_instance_.DefaultConstruct();
  _GetOnlineUserInfoRsp_INNER_default_instance_.DefaultConstruct();
  _BroadcastOnlineUserInfo_INNER_default_instance_.DefaultConstruct();
  _Req_default_instance_.DefaultConstruct();
  _Rsp_default_instance_.DefaultConstruct();
  _InteractiveMessage_default_instance_.DefaultConstruct();
  _RegisterUserReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _UnRegisterUserReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _QueryUsrInfoRsp_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _ModifyUserInfoReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _LoginReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _LogoutReq_USR_default_instance_.get_mutable()->userinfo_ = const_cast< ::Interactive::Message::User*>(
      ::Interactive::Message::User::internal_default_instance());
  _AddDevReq_USR_default_instance_.get_mutable()->devinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _ModifyDevReq_USR_default_instance_.get_mutable()->devinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _QueryDevInfoRsp_USR_default_instance_.get_mutable()->devinfo_ = const_cast< ::Interactive::Message::Device*>(
      ::Interactive::Message::Device::internal_default_instance());
  _SharingDevReq_USR_default_instance_.get_mutable()->relationinfo_ = const_cast< ::Interactive::Message::Relation*>(
      ::Interactive::Message::Relation::internal_default_instance());
  _CancelSharedDevReq_USR_default_instance_.get_mutable()->relationinfo_ = const_cast< ::Interactive::Message::Relation*>(
      ::Interactive::Message::Relation::internal_default_instance());
  _Req_default_instance_.get_mutable()->getaccessaddressreq_dev_value_ = const_cast< ::Interactive::Message::GetAccessAddressReq_DEV*>(
      ::Interactive::Message::GetAccessAddressReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->loginreq_dev_value_ = const_cast< ::Interactive::Message::LoginReq_DEV*>(
      ::Interactive::Message::LoginReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->logoutreq_dev_value_ = const_cast< ::Interactive::Message::LogoutReq_DEV*>(
      ::Interactive::Message::LogoutReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->shakehandreq_dev_value_ = const_cast< ::Interactive::Message::ShakehandReq_DEV*>(
      ::Interactive::Message::ShakehandReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->configinforeq_dev_value_ = const_cast< ::Interactive::Message::ConfigInfoReq_DEV*>(
      ::Interactive::Message::ConfigInfoReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->storageaddressreq_dev_value_ = const_cast< ::Interactive::Message::StorageAddressReq_DEV*>(
      ::Interactive::Message::StorageAddressReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->p2pinforeq_dev_value_ = const_cast< ::Interactive::Message::P2pInfoReq_DEV*>(
      ::Interactive::Message::P2pInfoReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->addfilereq_dev_value_ = const_cast< ::Interactive::Message::AddFileReq_DEV*>(
      ::Interactive::Message::AddFileReq_DEV::internal_default_instance());
  _Req_default_instance_.get_mutable()->msgprehandlerreq_usr_value_ = const_cast< ::Interactive::Message::MsgPreHandlerReq_USR*>(
      ::Interactive::Message::MsgPreHandlerReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->getaccessaddressreq_usr_value_ = const_cast< ::Interactive::Message::GetAccessAddressReq_USR*>(
      ::Interactive::Message::GetAccessAddressReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->registeruserreq_usr_value_ = const_cast< ::Interactive::Message::RegisterUserReq_USR*>(
      ::Interactive::Message::RegisterUserReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->unregisteruserreq_usr_value_ = const_cast< ::Interactive::Message::UnRegisterUserReq_USR*>(
      ::Interactive::Message::UnRegisterUserReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryusrinforeq_usr_value_ = const_cast< ::Interactive::Message::QueryUsrInfoReq_USR*>(
      ::Interactive::Message::QueryUsrInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifyuserinforeq_usr_value_ = const_cast< ::Interactive::Message::ModifyUserInfoReq_USR*>(
      ::Interactive::Message::ModifyUserInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->loginreq_usr_value_ = const_cast< ::Interactive::Message::LoginReq_USR*>(
      ::Interactive::Message::LoginReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->logoutreq_usr_value_ = const_cast< ::Interactive::Message::LogoutReq_USR*>(
      ::Interactive::Message::LogoutReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->shakehandreq_usr_value_ = const_cast< ::Interactive::Message::ShakehandReq_USR*>(
      ::Interactive::Message::ShakehandReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->configinforeq_usr_value_ = const_cast< ::Interactive::Message::ConfigInfoReq_USR*>(
      ::Interactive::Message::ConfigInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->adddevreq_usr_value_ = const_cast< ::Interactive::Message::AddDevReq_USR*>(
      ::Interactive::Message::AddDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deldevreq_usr_value_ = const_cast< ::Interactive::Message::DelDevReq_USR*>(
      ::Interactive::Message::DelDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->modifydevreq_usr_value_ = const_cast< ::Interactive::Message::ModifyDevReq_USR*>(
      ::Interactive::Message::ModifyDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydevinforeq_usr_value_ = const_cast< ::Interactive::Message::QueryDevInfoReq_USR*>(
      ::Interactive::Message::QueryDevInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->querydevreq_usr_value_ = const_cast< ::Interactive::Message::QueryDevReq_USR*>(
      ::Interactive::Message::QueryDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryuserreq_usr_value_ = const_cast< ::Interactive::Message::QueryUserReq_USR*>(
      ::Interactive::Message::QueryUserReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->sharingdevreq_usr_value_ = const_cast< ::Interactive::Message::SharingDevReq_USR*>(
      ::Interactive::Message::SharingDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->cancelshareddevreq_usr_value_ = const_cast< ::Interactive::Message::CancelSharedDevReq_USR*>(
      ::Interactive::Message::CancelSharedDevReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->addfriendsreq_usr_value_ = const_cast< ::Interactive::Message::AddFriendsReq_USR*>(
      ::Interactive::Message::AddFriendsReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->delfriendsreq_usr_value_ = const_cast< ::Interactive::Message::DelFriendsReq_USR*>(
      ::Interactive::Message::DelFriendsReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryfriendsreq_usr_value_ = const_cast< ::Interactive::Message::QueryFriendsReq_USR*>(
      ::Interactive::Message::QueryFriendsReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->storageaddressreq_usr_value_ = const_cast< ::Interactive::Message::StorageAddressReq_USR*>(
      ::Interactive::Message::StorageAddressReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->p2pinforeq_usr_value_ = const_cast< ::Interactive::Message::P2pInfoReq_USR*>(
      ::Interactive::Message::P2pInfoReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->deletefilereq_usr_value_ = const_cast< ::Interactive::Message::DeleteFileReq_USR*>(
      ::Interactive::Message::DeleteFileReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->downloadfilereq_usr_value_ = const_cast< ::Interactive::Message::DownloadFileReq_USR*>(
      ::Interactive::Message::DownloadFileReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->queryfilereq_usr_value_ = const_cast< ::Interactive::Message::QueryFileReq_USR*>(
      ::Interactive::Message::QueryFileReq_USR::internal_default_instance());
  _Req_default_instance_.get_mutable()->getonlinedevinforeq_inner_value_ = const_cast< ::Interactive::Message::GetOnlineDevInfoReq_INNER*>(
      ::Interactive::Message::GetOnlineDevInfoReq_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->broadcastonlinedevinfo_inner_value_ = const_cast< ::Interactive::Message::BroadcastOnlineDevInfo_INNER*>(
      ::Interactive::Message::BroadcastOnlineDevInfo_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->getonlineuserinforeq_inner_value_ = const_cast< ::Interactive::Message::GetOnlineUserInfoReq_INNER*>(
      ::Interactive::Message::GetOnlineUserInfoReq_INNER::internal_default_instance());
  _Req_default_instance_.get_mutable()->broadcastonlineuserinfo_inner_value_ = const_cast< ::Interactive::Message::BroadcastOnlineUserInfo_INNER*>(
      ::Interactive::Message::BroadcastOnlineUserInfo_INNER::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getaccessaddressrsp_dev_value_ = const_cast< ::Interactive::Message::GetAccessAddressRsp_DEV*>(
      ::Interactive::Message::GetAccessAddressRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->loginrsp_dev_value_ = const_cast< ::Interactive::Message::LoginRsp_DEV*>(
      ::Interactive::Message::LoginRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->logoutrsp_dev_value_ = const_cast< ::Interactive::Message::LogoutRsp_DEV*>(
      ::Interactive::Message::LogoutRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->shakehandrsp_dev_value_ = const_cast< ::Interactive::Message::ShakehandRsp_DEV*>(
      ::Interactive::Message::ShakehandRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->configinforsp_dev_value_ = const_cast< ::Interactive::Message::ConfigInfoRsp_DEV*>(
      ::Interactive::Message::ConfigInfoRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->storageaddressrsp_dev_value_ = const_cast< ::Interactive::Message::StorageAddressRsp_DEV*>(
      ::Interactive::Message::StorageAddressRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->p2pinforsp_dev_value_ = const_cast< ::Interactive::Message::P2pInfoRsp_DEV*>(
      ::Interactive::Message::P2pInfoRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->addfilersp_dev_value_ = const_cast< ::Interactive::Message::AddFileRsp_DEV*>(
      ::Interactive::Message::AddFileRsp_DEV::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->msgprehandlerrsp_usr_value_ = const_cast< ::Interactive::Message::MsgPreHandlerRsp_USR*>(
      ::Interactive::Message::MsgPreHandlerRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getaccessaddressrsp_usr_value_ = const_cast< ::Interactive::Message::GetAccessAddressRsp_USR*>(
      ::Interactive::Message::GetAccessAddressRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->registeruserrsp_usr_value_ = const_cast< ::Interactive::Message::RegisterUserRsp_USR*>(
      ::Interactive::Message::RegisterUserRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->unregisteruserrsp_usr_value_ = const_cast< ::Interactive::Message::UnRegisterUserRsp_USR*>(
      ::Interactive::Message::UnRegisterUserRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryusrinforsp_usr_value_ = const_cast< ::Interactive::Message::QueryUsrInfoRsp_USR*>(
      ::Interactive::Message::QueryUsrInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifyuserinforsp_usr_value_ = const_cast< ::Interactive::Message::ModifyUserInfoRsp_USR*>(
      ::Interactive::Message::ModifyUserInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->loginrsp_usr_value_ = const_cast< ::Interactive::Message::LoginRsp_USR*>(
      ::Interactive::Message::LoginRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->logoutrsp_usr_value_ = const_cast< ::Interactive::Message::LogoutRsp_USR*>(
      ::Interactive::Message::LogoutRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->shakehandrsp_usr_value_ = const_cast< ::Interactive::Message::ShakehandRsp_USR*>(
      ::Interactive::Message::ShakehandRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->configinforsp_usr_value_ = const_cast< ::Interactive::Message::ConfigInfoRsp_USR*>(
      ::Interactive::Message::ConfigInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->adddevrsp_usr_value_ = const_cast< ::Interactive::Message::AddDevRsp_USR*>(
      ::Interactive::Message::AddDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deldevrsp_usr_value_ = const_cast< ::Interactive::Message::DelDevRsp_USR*>(
      ::Interactive::Message::DelDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->modifydevrsp_usr_value_ = const_cast< ::Interactive::Message::ModifyDevRsp_USR*>(
      ::Interactive::Message::ModifyDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydevinforsp_usr_value_ = const_cast< ::Interactive::Message::QueryDevInfoRsp_USR*>(
      ::Interactive::Message::QueryDevInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->querydevrsp_usr_value_ = const_cast< ::Interactive::Message::QueryDevRsp_USR*>(
      ::Interactive::Message::QueryDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryuserrsp_usr_value_ = const_cast< ::Interactive::Message::QueryUserRsp_USR*>(
      ::Interactive::Message::QueryUserRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->sharingdevrsp_usr_value_ = const_cast< ::Interactive::Message::SharingDevRsp_USR*>(
      ::Interactive::Message::SharingDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->cancelshareddevrsp_usr_value_ = const_cast< ::Interactive::Message::CancelSharedDevRsp_USR*>(
      ::Interactive::Message::CancelSharedDevRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->addfriendsrsp_usr_value_ = const_cast< ::Interactive::Message::AddFriendsRsp_USR*>(
      ::Interactive::Message::AddFriendsRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->delfriendsrsp_usr_value_ = const_cast< ::Interactive::Message::DelFriendsRsp_USR*>(
      ::Interactive::Message::DelFriendsRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryfriendsrsp_usr_value_ = const_cast< ::Interactive::Message::QueryFriendsRsp_USR*>(
      ::Interactive::Message::QueryFriendsRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->storageaddressreq_usr_value_ = const_cast< ::Interactive::Message::StorageAddressRsp_USR*>(
      ::Interactive::Message::StorageAddressRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->p2pinforsp_usr_value_ = const_cast< ::Interactive::Message::P2pInfoRsp_USR*>(
      ::Interactive::Message::P2pInfoRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->deletefilersp_usr_value_ = const_cast< ::Interactive::Message::DeleteFileRsp_USR*>(
      ::Interactive::Message::DeleteFileRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->downloadfilersp_usr_value_ = const_cast< ::Interactive::Message::DownloadFileRsp_USR*>(
      ::Interactive::Message::DownloadFileRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->queryfilersp_usr_value_ = const_cast< ::Interactive::Message::QueryFileRsp_USR*>(
      ::Interactive::Message::QueryFileRsp_USR::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getonlinedevinforsp_inner_value_ = const_cast< ::Interactive::Message::GetOnlineDevInfoRsp_INNER*>(
      ::Interactive::Message::GetOnlineDevInfoRsp_INNER::internal_default_instance());
  _Rsp_default_instance_.get_mutable()->getonlineuserinforsp_inner_value_ = const_cast< ::Interactive::Message::GetOnlineUserInfoRsp_INNER*>(
      ::Interactive::Message::GetOnlineUserInfoRsp_INNER::internal_default_instance());
  _InteractiveMessage_default_instance_.get_mutable()->reqvalue_ = const_cast< ::Interactive::Message::Req*>(
      ::Interactive::Message::Req::internal_default_instance());
  _InteractiveMessage_default_instance_.get_mutable()->rspvalue_ = const_cast< ::Interactive::Message::Rsp*>(
      ::Interactive::Message::Rsp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031InteractiveProtocol.proto\022\023Interactive"
      ".Message\"8\n\020PermissionOfUser\022\023\n\013uiUnlimi"
      "ted\030\001 \001(\r\022\017\n\007uiWatch\030\002 \001(\r\"\254\001\n\006Device\022\020\n"
      "\010strDevID\030\001 \001(\t\022\022\n\nstrDevName\030\002 \001(\t\022\026\n\016s"
      "trDevPassword\030\003 \001(\t\022\022\n\nuiTypeInfo\030\004 \001(\r\022"
      "\025\n\rstrCreatedate\030\005 \001(\t\022\020\n\010uiStatus\030\006 \001(\r"
      "\022\021\n\tstrExtend\030\007 \001(\t\022\024\n\014strInnerinfo\030\010 \001("
      "\t\"\227\001\n\004User\022\021\n\tstrUserID\030\001 \001(\t\022\023\n\013strUser"
      "Name\030\002 \001(\t\022\027\n\017strUserPassword\030\003 \001(\t\022\022\n\nu"
      "iTypeInfo\030\004 \001(\r\022\025\n\rstrCreatedate\030\005 \001(\t\022\020"
      "\n\010uiStatus\030\006 \001(\r\022\021\n\tstrExtend\030\007 \001(\t\"\177\n\010R"
      "elation\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010strDevID\030\002"
      " \001(\t\022\022\n\nuiRelation\030\003 \001(\r\022\024\n\014strBeginDate"
      "\030\004 \001(\t\022\022\n\nstrEndDate\030\005 \001(\t\022\020\n\010strValue\030\006"
      " \001(\t\"\236\002\n\004File\022\021\n\tstrFileID\030\001 \001(\t\022\021\n\tstrU"
      "serID\030\002 \001(\t\022\020\n\010strDevID\030\003 \001(\t\022\027\n\017strRemo"
      "teFileID\030\004 \001(\t\022\026\n\016strDownloadUrl\030\005 \001(\t\022\023"
      "\n\013strFileName\030\006 \001(\t\022\025\n\rstrSuffixName\030\007 \001"
      "(\t\022\022\n\nuiFileSize\030\010 \001(\004\022\026\n\016uiBusinessType"
      "\030\t \001(\r\022\031\n\021strFileCreatedate\030\n \001(\t\022\025\n\rstr"
      "Createdate\030\013 \001(\t\022\020\n\010uiStatus\030\014 \001(\r\022\021\n\tst"
      "rExtend\030\r \001(\t\"4\n\007FileUrl\022\021\n\tstrFileID\030\001 "
      "\001(\t\022\026\n\016strDownloadUrl\030\002 \001(\t\"=\n\027GetAccess"
      "AddressReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\020\n\010strV"
      "alue\030\002 \001(\t\"\\\n\027GetAccessAddressRsp_DEV\022\030\n"
      "\020strAccessAddress\030\001 \001(\t\022\025\n\rstrAccessPort"
      "\030\002 \001(\t\022\020\n\010strValue\030\003 \001(\t\"G\n\014LoginReq_DEV"
      "\022\020\n\010strDevID\030\001 \001(\t\022\023\n\013strPassword\030\002 \001(\t\022"
      "\020\n\010strValue\030\003 \001(\t\" \n\014LoginRsp_DEV\022\020\n\010str"
      "Value\030\002 \001(\t\"3\n\rLogoutReq_DEV\022\020\n\010strDevID"
      "\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"!\n\rLogoutRsp_DE"
      "V\022\020\n\010strValue\030\001 \001(\t\"6\n\020ShakehandReq_DEV\022"
      "\020\n\010strDevID\030\001 \001(\t\022\020\n\010strValue\030\003 \001(\t\"$\n\020S"
      "hakehandRsp_DEV\022\020\n\010strValue\030\001 \001(\t\"7\n\021Con"
      "figInfoReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\020\n\010strV"
      "alue\030\002 \001(\t\"<\n\021ConfigInfoRsp_DEV\022\025\n\rstrCo"
      "nfigInfo\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"l\n\025Stor"
      "ageAddressReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022\025\n\ru"
      "iStorageType\030\002 \001(\r\022\027\n\017uiStorageAction\030\003 "
      "\001(\r\022\021\n\tstrFileID\030\004 \001(\t\";\n\025StorageAddress"
      "Rsp_DEV\022\022\n\nstrAddress\030\001 \001(\t\022\016\n\006uiPort\030\002 "
      "\001(\r\";\n\016P2pInfoReq_DEV\022\020\n\010strDevID\030\001 \001(\t\022"
      "\027\n\017strDevIpAddress\030\002 \001(\t\"I\n\016P2pInfoRsp_D"
      "EV\022\024\n\014strP2pServer\030\001 \001(\t\022\020\n\010strP2pID\030\002 \001"
      "(\t\022\017\n\007uiLease\030\003 \001(\r\"a\n\016AddFileReq_DEV\022\020\n"
      "\010strDevID\030\001 \001(\t\022+\n\010fileInfo\030\002 \003(\0132\031.Inte"
      "ractive.Message.File\022\020\n\010strValue\030\003 \001(\t\";"
      "\n\016AddFileRsp_DEV\022\020\n\010strValue\030\001 \001(\t\022\027\n\017st"
      "rFileIDFailed\030\002 \003(\t\"(\n\024MsgPreHandlerReq_"
      "USR\022\020\n\010strValue\030\001 \001(\t\"(\n\024MsgPreHandlerRs"
      "p_USR\022\020\n\010strValue\030\001 \001(\t\"C\n\027GetAccessAddr"
      "essReq_USR\022\026\n\016strSerializeID\030\001 \001(\t\022\020\n\010st"
      "rValue\030\002 \001(\t\"\\\n\027GetAccessAddressRsp_USR\022"
      "\030\n\020strAccessAddress\030\001 \001(\t\022\025\n\rstrAccessPo"
      "rt\030\002 \001(\t\022\020\n\010strValue\030\003 \001(\t\"T\n\023RegisterUs"
      "erReq_USR\022+\n\010userInfo\030\001 \001(\0132\031.Interactiv"
      "e.Message.User\022\020\n\010strValue\030\002 \001(\t\":\n\023Regi"
      "sterUserRsp_USR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010st"
      "rValue\030\002 \001(\t\"V\n\025UnRegisterUserReq_USR\022+\n"
      "\010userInfo\030\001 \001(\0132\031.Interactive.Message.Us"
      "er\022\020\n\010strValue\030\002 \001(\t\"<\n\025UnRegisterUserRs"
      "p_USR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010strValue\030\002 \001"
      "(\t\":\n\023QueryUsrInfoReq_USR\022\021\n\tstrUserID\030\001"
      " \001(\t\022\020\n\010strValue\030\002 \001(\t\"T\n\023QueryUsrInfoRs"
      "p_USR\022+\n\010userInfo\030\001 \001(\0132\031.Interactive.Me"
      "ssage.User\022\020\n\010strValue\030\002 \001(\t\"D\n\025ModifyUs"
      "erInfoReq_USR\022+\n\010userInfo\030\001 \001(\0132\031.Intera"
      "ctive.Message.User\")\n\025ModifyUserInfoRsp_"
      "USR\022\020\n\010strValue\030\001 \001(\t\"M\n\014LoginReq_USR\022+\n"
      "\010userInfo\030\001 \001(\0132\031.Interactive.Message.Us"
      "er\022\020\n\010strValue\030\002 \001(\t\"h\n\014LoginRsp_USR\022\021\n\t"
      "strUserID\030\001 \001(\t\0223\n\014relationInfo\030\002 \003(\0132\035."
      "Interactive.Message.Relation\022\020\n\010strValue"
      "\030\003 \001(\t\"N\n\rLogoutReq_USR\022+\n\010userInfo\030\001 \001("
      "\0132\031.Interactive.Message.User\022\020\n\010strValue"
      "\030\002 \001(\t\"!\n\rLogoutRsp_USR\022\020\n\010strValue\030\001 \001("
      "\t\"7\n\020ShakehandReq_USR\022\021\n\tstrUserID\030\001 \001(\t"
      "\022\020\n\010strValue\030\002 \001(\t\"$\n\020ShakehandRsp_USR\022\020"
      "\n\010strValue\030\001 \001(\t\"8\n\021ConfigInfoReq_USR\022\021\n"
      "\tstrUserID\030\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"7\n\021Co"
      "nfigInfoRsp_USR\022\020\n\010strValue\030\001 \001(\t\022\020\n\010str"
      "Items\030\002 \003(\t\"P\n\rAddDevReq_USR\022\021\n\tstrUserI"
      "D\030\001 \001(\t\022,\n\007devInfo\030\002 \001(\0132\033.Interactive.M"
      "essage.Device\"!\n\rAddDevRsp_USR\022\020\n\010strVal"
      "ue\030\001 \001(\t\"4\n\rDelDevReq_USR\022\021\n\tstrUserID\030\001"
      " \001(\t\022\020\n\010strDevID\030\002 \003(\t\"9\n\rDelDevRsp_USR\022"
      "\020\n\010strValue\030\001 \001(\t\022\026\n\016strDevIDFailed\030\002 \003("
      "\t\"S\n\020ModifyDevReq_USR\022\021\n\tstrUserID\030\001 \001(\t"
      "\022,\n\007devInfo\030\002 \001(\0132\033.Interactive.Message."
      "Device\"$\n\020ModifyDevRsp_USR\022\020\n\010strValue\030\001"
      " \001(\t\"9\n\023QueryDevInfoReq_USR\022\020\n\010strDevID\030"
      "\001 \001(\t\022\020\n\010strValue\030\002 \001(\t\"U\n\023QueryDevInfoR"
      "sp_USR\022,\n\007devInfo\030\001 \001(\0132\033.Interactive.Me"
      "ssage.Device\022\020\n\010strValue\030\002 \001(\t\"L\n\017QueryD"
      "evReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\024\n\014uiBeginI"
      "ndex\030\002 \001(\r\022\020\n\010strValue\030\003 \001(\t\"I\n\017QueryDev"
      "Rsp_USR\0226\n\017allRelationInfo\030\001 \003(\0132\035.Inter"
      "active.Message.Relation\"L\n\020QueryUserReq_"
      "USR\022\020\n\010strDevID\030\001 \001(\t\022\024\n\014uiBeginIndex\030\002 "
      "\001(\r\022\020\n\010strValue\030\003 \001(\t\"J\n\020QueryUserRsp_US"
      "R\0226\n\017allRelationInfo\030\001 \003(\0132\035.Interactive"
      ".Message.Relation\"Z\n\021SharingDevReq_USR\0223"
      "\n\014relationInfo\030\001 \001(\0132\035.Interactive.Messa"
      "ge.Relation\022\020\n\010strValue\030\002 \001(\t\"%\n\021Sharing"
      "DevRsp_USR\022\020\n\010strValue\030\001 \001(\t\"_\n\026CancelSh"
      "aredDevReq_USR\0223\n\014relationInfo\030\001 \001(\0132\035.I"
      "nteractive.Message.Relation\022\020\n\010strValue\030"
      "\002 \001(\t\"*\n\026CancelSharedDevRsp_USR\022\020\n\010strVa"
      "lue\030\001 \001(\t\"\?\n\021AddFriendsReq_USR\022\021\n\tstrUse"
      "rID\030\001 \001(\t\022\027\n\017strFriendUserID\030\002 \001(\t\"%\n\021Ad"
      "dFriendsRsp_USR\022\020\n\010strValue\030\001 \001(\t\"\?\n\021Del"
      "FriendsReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\027\n\017str"
      "FriendUserID\030\002 \003(\t\"D\n\021DelFriendsRsp_USR\022"
      "\020\n\010strValue\030\001 \001(\t\022\035\n\025strFriendUserIDFail"
      "ed\030\002 \003(\t\"P\n\023QueryFriendsReq_USR\022\021\n\tstrUs"
      "erID\030\001 \001(\t\022\024\n\014uiBeginIndex\030\002 \001(\r\022\020\n\010strV"
      "alue\030\003 \001(\t\"1\n\023QueryFriendsRsp_USR\022\032\n\022str"
      "AllFriendUserID\030\001 \003(\t\"m\n\025StorageAddressR"
      "eq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\025\n\ruiStorageTy"
      "pe\030\002 \001(\r\022\027\n\017uiStorageAction\030\003 \001(\r\022\021\n\tstr"
      "FileID\030\004 \001(\t\";\n\025StorageAddressRsp_USR\022\022\n"
      "\nstrAddress\030\001 \001(\t\022\016\n\006uiPort\030\002 \001(\r\"O\n\016P2p"
      "InfoReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\030\n\020strUse"
      "rIpAddress\030\002 \001(\t\022\020\n\010strDevID\030\003 \001(\t\"I\n\016P2"
      "pInfoRsp_USR\022\024\n\014strP2pServer\030\001 \001(\t\022\020\n\010st"
      "rP2pID\030\002 \001(\t\022\017\n\007uiLease\030\003 \001(\r\"9\n\021DeleteF"
      "ileReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\021\n\tstrFile"
      "ID\030\002 \003(\t\">\n\021DeleteFileRsp_USR\022\020\n\010strValu"
      "e\030\001 \001(\t\022\027\n\017strFileIDFailed\030\002 \003(\t\";\n\023Down"
      "loadFileReq_USR\022\021\n\tstrUserID\030\001 \001(\t\022\021\n\tst"
      "rFileID\030\002 \003(\t\"V\n\023DownloadFileRsp_USR\022\020\n\010"
      "strValue\030\001 \001(\t\022-\n\007fileUrl\030\002 \003(\0132\034.Intera"
      "ctive.Message.FileUrl\"\241\001\n\020QueryFileReq_U"
      "SR\022\021\n\tstrUserID\030\001 \001(\t\022\020\n\010strDevID\030\002 \001(\t\022"
      "\024\n\014uiBeginIndex\030\003 \001(\r\022\024\n\014strBeginDate\030\004 "
      "\001(\t\022\022\n\nstrEndDate\030\005 \001(\t\022\026\n\016uiBusinessTyp"
      "e\030\006 \001(\r\022\020\n\010strValue\030\007 \001(\t\"Q\n\020QueryFileRs"
      "p_USR\022\020\n\010strValue\030\001 \001(\t\022+\n\010fileInfo\030\002 \003("
      "\0132\031.Interactive.Message.File\"-\n\031GetOnlin"
      "eDevInfoReq_INNER\022\020\n\010strValue\030\001 \001(\t\"[\n\031G"
      "etOnlineDevInfoRsp_INNER\022,\n\007devInfo\030\001 \003("
      "\0132\033.Interactive.Message.Device\022\020\n\010strVal"
      "ue\030\002 \001(\t\"^\n\034BroadcastOnlineDevInfo_INNER"
      "\022,\n\007devInfo\030\001 \003(\0132\033.Interactive.Message."
      "Device\022\020\n\010strValue\030\002 \001(\t\".\n\032GetOnlineUse"
      "rInfoReq_INNER\022\020\n\010strValue\030\001 \001(\t\"[\n\032GetO"
      "nlineUserInfoRsp_INNER\022+\n\010userInfo\030\001 \003(\013"
      "2\031.Interactive.Message.User\022\020\n\010strValue\030"
      "\002 \001(\t\"^\n\035BroadcastOnlineUserInfo_INNER\022+"
      "\n\010userInfo\030\001 \003(\0132\031.Interactive.Message.U"
      "ser\022\020\n\010strValue\030\002 \001(\t\"\311\026\n\003Req\022S\n\035GetAcce"
      "ssAddressReq_DEV_Value\030\n \001(\0132,.Interacti"
      "ve.Message.GetAccessAddressReq_DEV\022=\n\022Lo"
      "ginReq_DEV_Value\030\024 \001(\0132!.Interactive.Mes"
      "sage.LoginReq_DEV\022\?\n\023LogoutReq_DEV_Value"
      "\030\036 \001(\0132\".Interactive.Message.LogoutReq_D"
      "EV\022E\n\026ShakehandReq_DEV_Value\030( \001(\0132%.Int"
      "eractive.Message.ShakehandReq_DEV\022G\n\027Con"
      "figInfoReq_DEV_Value\0302 \001(\0132&.Interactive"
      ".Message.ConfigInfoReq_DEV\022O\n\033StorageAdd"
      "ressReq_DEV_Value\0304 \001(\0132*.Interactive.Me"
      "ssage.StorageAddressReq_DEV\022A\n\024P2pInfoRe"
      "q_DEV_Value\0306 \001(\0132#.Interactive.Message."
      "P2pInfoReq_DEV\022A\n\024AddFileReq_DEV_Value\030<"
      " \001(\0132#.Interactive.Message.AddFileReq_DE"
      "V\022M\n\032MsgPreHandlerReq_USR_Value\030A \001(\0132)."
      "Interactive.Message.MsgPreHandlerReq_USR"
      "\022S\n\035GetAccessAddressReq_USR_Value\030F \001(\0132"
      ",.Interactive.Message.GetAccessAddressRe"
      "q_USR\022K\n\031RegisterUserReq_USR_Value\030P \001(\013"
      "2(.Interactive.Message.RegisterUserReq_U"
      "SR\022O\n\033UnRegisterUserReq_USR_Value\030Z \001(\0132"
      "*.Interactive.Message.UnRegisterUserReq_"
      "USR\022K\n\031QueryUsrInfoReq_USR_Value\030d \001(\0132("
      ".Interactive.Message.QueryUsrInfoReq_USR"
      "\022O\n\033ModifyUserInfoReq_USR_Value\030f \001(\0132*."
      "Interactive.Message.ModifyUserInfoReq_US"
      "R\022=\n\022LoginReq_USR_Value\030n \001(\0132!.Interact"
      "ive.Message.LoginReq_USR\022\?\n\023LogoutReq_US"
      "R_Value\030x \001(\0132\".Interactive.Message.Logo"
      "utReq_USR\022F\n\026ShakehandReq_USR_Value\030\202\001 \001"
      "(\0132%.Interactive.Message.ShakehandReq_US"
      "R\022H\n\027ConfigInfoReq_USR_Value\030\214\001 \001(\0132&.In"
      "teractive.Message.ConfigInfoReq_USR\022@\n\023A"
      "ddDevReq_USR_Value\030\226\001 \001(\0132\".Interactive."
      "Message.AddDevReq_USR\022@\n\023DelDevReq_USR_V"
      "alue\030\240\001 \001(\0132\".Interactive.Message.DelDev"
      "Req_USR\022F\n\026ModifyDevReq_USR_Value\030\252\001 \001(\013"
      "2%.Interactive.Message.ModifyDevReq_USR\022"
      "L\n\031QueryDevInfoReq_USR_Value\030\264\001 \001(\0132(.In"
      "teractive.Message.QueryDevInfoReq_USR\022D\n"
      "\025QueryDevReq_USR_Value\030\276\001 \001(\0132$.Interact"
      "ive.Message.QueryDevReq_USR\022F\n\026QueryUser"
      "Req_USR_Value\030\310\001 \001(\0132%.Interactive.Messa"
      "ge.QueryUserReq_USR\022H\n\027SharingDevReq_USR"
      "_Value\030\322\001 \001(\0132&.Interactive.Message.Shar"
      "ingDevReq_USR\022R\n\034CancelSharedDevReq_USR_"
      "Value\030\334\001 \001(\0132+.Interactive.Message.Cance"
      "lSharedDevReq_USR\022H\n\027AddFriendsReq_USR_V"
      "alue\030\346\001 \001(\0132&.Interactive.Message.AddFri"
      "endsReq_USR\022H\n\027DelFriendsReq_USR_Value\030\360"
      "\001 \001(\0132&.Interactive.Message.DelFriendsRe"
      "q_USR\022L\n\031QueryFriendsReq_USR_Value\030\372\001 \001("
      "\0132(.Interactive.Message.QueryFriendsReq_"
      "USR\022P\n\033StorageAddressReq_USR_Value\030\374\001 \001("
      "\0132*.Interactive.Message.StorageAddressRe"
      "q_USR\022B\n\024P2pInfoReq_USR_Value\030\376\001 \001(\0132#.I"
      "nteractive.Message.P2pInfoReq_USR\022H\n\027Del"
      "eteFileReq_USR_Value\030\266\002 \001(\0132&.Interactiv"
      "e.Message.DeleteFileReq_USR\022L\n\031DownloadF"
      "ileReq_USR_Value\030\300\002 \001(\0132(.Interactive.Me"
      "ssage.DownloadFileReq_USR\022F\n\026QueryFileRe"
      "q_USR_Value\030\312\002 \001(\0132%.Interactive.Message"
      ".QueryFileReq_USR\022X\n\037GetOnlineDevInfoReq"
      "_INNER_Value\030\204\002 \001(\0132..Interactive.Messag"
      "e.GetOnlineDevInfoReq_INNER\022^\n\"Broadcast"
      "OnlineDevInfo_INNER_Value\030\216\002 \001(\01321.Inter"
      "active.Message.BroadcastOnlineDevInfo_IN"
      "NER\022Z\n GetOnlineUserInfoReq_INNER_Value\030"
      "\230\002 \001(\0132/.Interactive.Message.GetOnlineUs"
      "erInfoReq_INNER\022`\n#BroadcastOnlineUserIn"
      "fo_INNER_Value\030\242\002 \001(\01322.Interactive.Mess"
      "age.BroadcastOnlineUserInfo_INNER\"\256\025\n\003Rs"
      "p\022\020\n\010iRetcode\030\n \001(\005\022\021\n\tstrRetMsg\030\024 \001(\t\022S"
      "\n\035GetAccessAddressRsp_DEV_Value\030\036 \001(\0132,."
      "Interactive.Message.GetAccessAddressRsp_"
      "DEV\022=\n\022LoginRsp_DEV_Value\030( \001(\0132!.Intera"
      "ctive.Message.LoginRsp_DEV\022\?\n\023LogoutRsp_"
      "DEV_Value\0302 \001(\0132\".Interactive.Message.Lo"
      "goutRsp_DEV\022E\n\026ShakehandRsp_DEV_Value\030< "
      "\001(\0132%.Interactive.Message.ShakehandRsp_D"
      "EV\022G\n\027ConfigInfoRsp_DEV_Value\030F \001(\0132&.In"
      "teractive.Message.ConfigInfoRsp_DEV\022O\n\033S"
      "torageAddressRsp_DEV_Value\030H \001(\0132*.Inter"
      "active.Message.StorageAddressRsp_DEV\022A\n\024"
      "P2pInfoRsp_DEV_Value\030J \001(\0132#.Interactive"
      ".Message.P2pInfoRsp_DEV\022A\n\024AddFileRsp_DE"
      "V_Value\030P \001(\0132#.Interactive.Message.AddF"
      "ileRsp_DEV\022M\n\032MsgPreHandlerRsp_USR_Value"
      "\030U \001(\0132).Interactive.Message.MsgPreHandl"
      "erRsp_USR\022S\n\035GetAccessAddressRsp_USR_Val"
      "ue\030Z \001(\0132,.Interactive.Message.GetAccess"
      "AddressRsp_USR\022K\n\031RegisterUserRsp_USR_Va"
      "lue\030d \001(\0132(.Interactive.Message.Register"
      "UserRsp_USR\022O\n\033UnRegisterUserRsp_USR_Val"
      "ue\030n \001(\0132*.Interactive.Message.UnRegiste"
      "rUserRsp_USR\022K\n\031QueryUsrInfoRsp_USR_Valu"
      "e\030x \001(\0132(.Interactive.Message.QueryUsrIn"
      "foRsp_USR\022O\n\033ModifyUserInfoRsp_USR_Value"
      "\030z \001(\0132*.Interactive.Message.ModifyUserI"
      "nfoRsp_USR\022>\n\022LoginRsp_USR_Value\030\202\001 \001(\0132"
      "!.Interactive.Message.LoginRsp_USR\022@\n\023Lo"
      "goutRsp_USR_Value\030\214\001 \001(\0132\".Interactive.M"
      "essage.LogoutRsp_USR\022F\n\026ShakehandRsp_USR"
      "_Value\030\226\001 \001(\0132%.Interactive.Message.Shak"
      "ehandRsp_USR\022H\n\027ConfigInfoRsp_USR_Value\030"
      "\240\001 \001(\0132&.Interactive.Message.ConfigInfoR"
      "sp_USR\022@\n\023AddDevRsp_USR_Value\030\252\001 \001(\0132\".I"
      "nteractive.Message.AddDevRsp_USR\022@\n\023DelD"
      "evRsp_USR_Value\030\264\001 \001(\0132\".Interactive.Mes"
      "sage.DelDevRsp_USR\022F\n\026ModifyDevRsp_USR_V"
      "alue\030\276\001 \001(\0132%.Interactive.Message.Modify"
      "DevRsp_USR\022L\n\031QueryDevInfoRsp_USR_Value\030"
      "\310\001 \001(\0132(.Interactive.Message.QueryDevInf"
      "oRsp_USR\022D\n\025QueryDevRsp_USR_Value\030\322\001 \001(\013"
      "2$.Interactive.Message.QueryDevRsp_USR\022F"
      "\n\026QueryUserRsp_USR_Value\030\334\001 \001(\0132%.Intera"
      "ctive.Message.QueryUserRsp_USR\022H\n\027Sharin"
      "gDevRsp_USR_Value\030\346\001 \001(\0132&.Interactive.M"
      "essage.SharingDevRsp_USR\022R\n\034CancelShared"
      "DevRsp_USR_Value\030\360\001 \001(\0132+.Interactive.Me"
      "ssage.CancelSharedDevRsp_USR\022H\n\027AddFrien"
      "dsRsp_USR_Value\030\372\001 \001(\0132&.Interactive.Mes"
      "sage.AddFriendsRsp_USR\022H\n\027DelFriendsRsp_"
      "USR_Value\030\204\002 \001(\0132&.Interactive.Message.D"
      "elFriendsRsp_USR\022L\n\031QueryFriendsRsp_USR_"
      "Value\030\216\002 \001(\0132(.Interactive.Message.Query"
      "FriendsRsp_USR\022P\n\033StorageAddressReq_USR_"
      "Value\030\220\002 \001(\0132*.Interactive.Message.Stora"
      "geAddressRsp_USR\022B\n\024P2pInfoRsp_USR_Value"
      "\030\222\002 \001(\0132#.Interactive.Message.P2pInfoRsp"
      "_USR\022H\n\027DeleteFileRsp_USR_Value\030\266\002 \001(\0132&"
      ".Interactive.Message.DeleteFileRsp_USR\022L"
      "\n\031DownloadFileRsp_USR_Value\030\300\002 \001(\0132(.Int"
      "eractive.Message.DownloadFileRsp_USR\022F\n\026"
      "QueryFileRsp_USR_Value\030\312\002 \001(\0132%.Interact"
      "ive.Message.QueryFileRsp_USR\022X\n\037GetOnlin"
      "eDevInfoRsp_INNER_Value\030\230\002 \001(\0132..Interac"
      "tive.Message.GetOnlineDevInfoRsp_INNER\022Z"
      "\n GetOnlineUserInfoRsp_INNER_Value\030\242\002 \001("
      "\0132/.Interactive.Message.GetOnlineUserInf"
      "oRsp_INNER\"\272\001\n\022InteractiveMessage\022*\n\004typ"
      "e\030\001 \001(\0162\034.Interactive.Message.MsgType\022\020\n"
      "\010uiMsgSeq\030\002 \001(\004\022\016\n\006strSID\030\003 \001(\t\022*\n\010ReqVa"
      "lue\030\004 \001(\0132\030.Interactive.Message.Req\022*\n\010R"
      "spValue\030\005 \001(\0132\030.Interactive.Message.Rsp*"
      "\320\020\n\007MsgType\022\n\n\006Init_T\020\000\022\036\n\031GetAccessAddr"
      "essReq_DEV_T\020\220N\022\036\n\031GetAccessAddressRsp_D"
      "EV_T\020\232N\022\023\n\016LoginReq_DEV_T\020\244N\022\023\n\016LoginRsp"
      "_DEV_T\020\256N\022\024\n\017LogoutReq_DEV_T\020\270N\022\024\n\017Logou"
      "tRsp_DEV_T\020\302N\022\027\n\022ShakehandReq_DEV_T\020\314N\022\027"
      "\n\022ShakehandRsp_DEV_T\020\326N\022\030\n\023ConfigInfoReq"
      "_DEV_T\020\340N\022\030\n\023ConfigInfoRsp_DEV_T\020\352N\022\034\n\027S"
      "torageAddressReq_DEV_T\020\364N\022\034\n\027StorageAddr"
      "essRsp_DEV_T\020\376N\022\025\n\020P2pInfoReq_DEV_T\020\354O\022\025"
      "\n\020P2pInfoRsp_DEV_T\020\366O\022\025\n\020AddFileReq_DEV_"
      "T\020\274P\022\025\n\020AddFileRsp_DEV_T\020\306P\022\034\n\026MsgPreHan"
      "dlerReq_USR_T\020\226\234\001\022\034\n\026MsgPreHandlerRsp_US"
      "R_T\020\227\234\001\022\037\n\031GetAccessAddressReq_USR_T\020\240\234\001"
      "\022\037\n\031GetAccessAddressRsp_USR_T\020\252\234\001\022\033\n\025Reg"
      "isterUserReq_USR_T\020\264\234\001\022\033\n\025RegisterUserRs"
      "p_USR_T\020\276\234\001\022\035\n\027UnRegisterUserReq_USR_T\020\310"
      "\234\001\022\035\n\027UnRegisterUserRsp_USR_T\020\322\234\001\022\033\n\025Que"
      "ryUsrInfoReq_USR_T\020\323\234\001\022\033\n\025QueryUsrInfoRs"
      "p_USR_T\020\324\234\001\022\035\n\027ModifyUserInfoReq_USR_T\020\327"
      "\234\001\022\035\n\027ModifyUserInfoRsp_USR_T\020\330\234\001\022\024\n\016Log"
      "inReq_USR_T\020\334\234\001\022\024\n\016LoginRsp_USR_T\020\346\234\001\022\025\n"
      "\017LogoutReq_USR_T\020\360\234\001\022\025\n\017LogoutRsp_USR_T\020"
      "\372\234\001\022\030\n\022ShakehandReq_USR_T\020\204\235\001\022\030\n\022Shakeha"
      "ndRsp_USR_T\020\216\235\001\022\031\n\023ConfigInfoReq_USR_T\020\230"
      "\235\001\022\031\n\023ConfigInfoRsp_USR_T\020\242\235\001\022\025\n\017AddDevR"
      "eq_USR_T\020\254\235\001\022\025\n\017AddDevRsp_USR_T\020\266\235\001\022\025\n\017D"
      "elDevReq_USR_T\020\300\235\001\022\025\n\017DelDevRsp_USR_T\020\312\235"
      "\001\022\030\n\022ModifyDevReq_USR_T\020\324\235\001\022\030\n\022ModifyDev"
      "Rsp_USR_T\020\336\235\001\022\033\n\025QueryDevInfoReq_USR_T\020\337"
      "\235\001\022\033\n\025QueryDevInfoRsp_USR_T\020\340\235\001\022\027\n\021Query"
      "DevReq_USR_T\020\350\235\001\022\027\n\021QueryDevRsp_USR_T\020\362\235"
      "\001\022\030\n\022QueryUserReq_USR_T\020\363\235\001\022\030\n\022QueryUser"
      "Rsp_USR_T\020\364\235\001\022\031\n\023SharingDevReq_USR_T\020\374\235\001"
      "\022\031\n\023SharingDevRsp_USR_T\020\206\236\001\022\036\n\030CancelSha"
      "redDevReq_USR_T\020\220\236\001\022\036\n\030CancelSharedDevRs"
      "p_USR_T\020\232\236\001\022\031\n\023AddFriendsReq_USR_T\020\244\236\001\022\031"
      "\n\023AddFriendsRsp_USR_T\020\256\236\001\022\031\n\023DelFriendsR"
      "eq_USR_T\020\270\236\001\022\031\n\023DelFriendsRsp_USR_T\020\302\236\001\022"
      "\034\n\026ModifyFriendsReq_USR_T\020\314\236\001\022\034\n\026ModifyF"
      "riendsRsp_USR_T\020\326\236\001\022\033\n\025QueryFriendsReq_U"
      "SR_T\020\340\236\001\022\033\n\025QueryFriendsRsp_USR_T\020\352\236\001\022\035\n"
      "\027StorageAddressReq_USR_T\020\364\236\001\022\035\n\027StorageA"
      "ddressRsp_USR_T\020\376\236\001\022\026\n\020P2pInfoReq_USR_T\020"
      "\210\237\001\022\026\n\020P2pInfoRsp_USR_T\020\222\237\001\022\031\n\023DeleteFil"
      "eReq_USR_T\020\224\240\001\022\031\n\023DeleteFileRsp_USR_T\020\236\240"
      "\001\022\033\n\025DownloadFileReq_USR_T\020\250\240\001\022\033\n\025Downlo"
      "adFileRsp_USR_T\020\262\240\001\022\030\n\022QueryFileReq_USR_"
      "T\020\274\240\001\022\030\n\022QueryFileRsp_USR_T\020\306\240\001\022!\n\033GetOn"
      "lineDevInfoReq_INNER_T\020\260\352\001\022!\n\033GetOnlineD"
      "evInfoRsp_INNER_T\020\272\352\001\022$\n\036BroadcastOnline"
      "DevInfo_INNER_T\020\304\352\001\022\"\n\034GetOnlineUserInfo"
      "Req_INNER_T\020\316\352\001\022\"\n\034GetOnlineUserInfoRsp_"
      "INNER_T\020\330\352\001\022%\n\037BroadcastOnlineUserInfo_I"
      "NNER_T\020\342\352\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13978);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InteractiveProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_InteractiveProtocol_2eproto

const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10010:
    case 10020:
    case 10030:
    case 10040:
    case 10050:
    case 10060:
    case 10070:
    case 10080:
    case 10090:
    case 10100:
    case 10110:
    case 10220:
    case 10230:
    case 10300:
    case 10310:
    case 19990:
    case 19991:
    case 20000:
    case 20010:
    case 20020:
    case 20030:
    case 20040:
    case 20050:
    case 20051:
    case 20052:
    case 20055:
    case 20056:
    case 20060:
    case 20070:
    case 20080:
    case 20090:
    case 20100:
    case 20110:
    case 20120:
    case 20130:
    case 20140:
    case 20150:
    case 20160:
    case 20170:
    case 20180:
    case 20190:
    case 20191:
    case 20192:
    case 20200:
    case 20210:
    case 20211:
    case 20212:
    case 20220:
    case 20230:
    case 20240:
    case 20250:
    case 20260:
    case 20270:
    case 20280:
    case 20290:
    case 20300:
    case 20310:
    case 20320:
    case 20330:
    case 20340:
    case 20350:
    case 20360:
    case 20370:
    case 20500:
    case 20510:
    case 20520:
    case 20530:
    case 20540:
    case 20550:
    case 30000:
    case 30010:
    case 30020:
    case 30030:
    case 30040:
    case 30050:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PermissionOfUser::kUiUnlimitedFieldNumber;
const int PermissionOfUser::kUiWatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PermissionOfUser::PermissionOfUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.PermissionOfUser)
}
PermissionOfUser::PermissionOfUser(const PermissionOfUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uiunlimited_, &from.uiunlimited_,
    reinterpret_cast<char*>(&uiwatch_) -
    reinterpret_cast<char*>(&uiunlimited_) + sizeof(uiwatch_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.PermissionOfUser)
}

void PermissionOfUser::SharedCtor() {
  ::memset(&uiunlimited_, 0, reinterpret_cast<char*>(&uiwatch_) -
    reinterpret_cast<char*>(&uiunlimited_) + sizeof(uiwatch_));
  _cached_size_ = 0;
}

PermissionOfUser::~PermissionOfUser() {
  // @@protoc_insertion_point(destructor:Interactive.Message.PermissionOfUser)
  SharedDtor();
}

void PermissionOfUser::SharedDtor() {
}

void PermissionOfUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PermissionOfUser::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[0].descriptor;
}

const PermissionOfUser& PermissionOfUser::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

PermissionOfUser* PermissionOfUser::New(::google::protobuf::Arena* arena) const {
  PermissionOfUser* n = new PermissionOfUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PermissionOfUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.PermissionOfUser)
  ::memset(&uiunlimited_, 0, reinterpret_cast<char*>(&uiwatch_) -
    reinterpret_cast<char*>(&uiunlimited_) + sizeof(uiwatch_));
}

bool PermissionOfUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.PermissionOfUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiUnlimited = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiunlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiWatch = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiwatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.PermissionOfUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.PermissionOfUser)
  return false;
#undef DO_
}

void PermissionOfUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.PermissionOfUser)
  // uint32 uiUnlimited = 1;
  if (this->uiunlimited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiunlimited(), output);
  }

  // uint32 uiWatch = 2;
  if (this->uiwatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiwatch(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.PermissionOfUser)
}

::google::protobuf::uint8* PermissionOfUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.PermissionOfUser)
  // uint32 uiUnlimited = 1;
  if (this->uiunlimited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiunlimited(), target);
  }

  // uint32 uiWatch = 2;
  if (this->uiwatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiwatch(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.PermissionOfUser)
  return target;
}

size_t PermissionOfUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.PermissionOfUser)
  size_t total_size = 0;

  // uint32 uiUnlimited = 1;
  if (this->uiunlimited() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiunlimited());
  }

  // uint32 uiWatch = 2;
  if (this->uiwatch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiwatch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PermissionOfUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.PermissionOfUser)
  GOOGLE_DCHECK_NE(&from, this);
  const PermissionOfUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PermissionOfUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.PermissionOfUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.PermissionOfUser)
    MergeFrom(*source);
  }
}

void PermissionOfUser::MergeFrom(const PermissionOfUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.PermissionOfUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uiunlimited() != 0) {
    set_uiunlimited(from.uiunlimited());
  }
  if (from.uiwatch() != 0) {
    set_uiwatch(from.uiwatch());
  }
}

void PermissionOfUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.PermissionOfUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PermissionOfUser::CopyFrom(const PermissionOfUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.PermissionOfUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionOfUser::IsInitialized() const {
  return true;
}

void PermissionOfUser::Swap(PermissionOfUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PermissionOfUser::InternalSwap(PermissionOfUser* other) {
  std::swap(uiunlimited_, other->uiunlimited_);
  std::swap(uiwatch_, other->uiwatch_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PermissionOfUser::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PermissionOfUser

// uint32 uiUnlimited = 1;
void PermissionOfUser::clear_uiunlimited() {
  uiunlimited_ = 0u;
}
::google::protobuf::uint32 PermissionOfUser::uiunlimited() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.PermissionOfUser.uiUnlimited)
  return uiunlimited_;
}
void PermissionOfUser::set_uiunlimited(::google::protobuf::uint32 value) {
  
  uiunlimited_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.PermissionOfUser.uiUnlimited)
}

// uint32 uiWatch = 2;
void PermissionOfUser::clear_uiwatch() {
  uiwatch_ = 0u;
}
::google::protobuf::uint32 PermissionOfUser::uiwatch() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.PermissionOfUser.uiWatch)
  return uiwatch_;
}
void PermissionOfUser::set_uiwatch(::google::protobuf::uint32 value) {
  
  uiwatch_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.PermissionOfUser.uiWatch)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Device::kStrDevIDFieldNumber;
const int Device::kStrDevNameFieldNumber;
const int Device::kStrDevPasswordFieldNumber;
const int Device::kUiTypeInfoFieldNumber;
const int Device::kStrCreatedateFieldNumber;
const int Device::kUiStatusFieldNumber;
const int Device::kStrExtendFieldNumber;
const int Device::kStrInnerinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Device::Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Device)
}
Device::Device(const Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strdevname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevname().size() > 0) {
    strdevname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevname_);
  }
  strdevpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevpassword().size() > 0) {
    strdevpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevpassword_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  strinnerinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strinnerinfo().size() > 0) {
    strinnerinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strinnerinfo_);
  }
  ::memcpy(&uitypeinfo_, &from.uitypeinfo_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Device)
}

void Device::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strinnerinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Device)
  SharedDtor();
}

void Device::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strinnerinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Device::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[1].descriptor;
}

const Device& Device::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Device* Device::New(::google::protobuf::Arena* arena) const {
  Device* n = new Device;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Device)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strinnerinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
}

bool Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Device)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevname().data(), this->strdevname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDevName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevPassword = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevpassword().data(), this->strdevpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strDevPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiTypeInfo = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitypeinfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strInnerinfo = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strinnerinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strinnerinfo().data(), this->strinnerinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Device.strInnerinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Device)
  return false;
#undef DO_
}

void Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Device)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strDevName = 2;
  if (this->strdevname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname().data(), this->strdevname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevname(), output);
  }

  // string strDevPassword = 3;
  if (this->strdevpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevpassword().data(), this->strdevpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevpassword(), output);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uitypeinfo(), output);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uistatus(), output);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strextend(), output);
  }

  // string strInnerinfo = 8;
  if (this->strinnerinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strinnerinfo().data(), this->strinnerinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strInnerinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strinnerinfo(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Device)
}

::google::protobuf::uint8* Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Device)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strDevName = 2;
  if (this->strdevname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevname().data(), this->strdevname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevname(), target);
  }

  // string strDevPassword = 3;
  if (this->strdevpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevpassword().data(), this->strdevpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strDevPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevpassword(), target);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uitypeinfo(), target);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uistatus(), target);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strextend(), target);
  }

  // string strInnerinfo = 8;
  if (this->strinnerinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strinnerinfo().data(), this->strinnerinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Device.strInnerinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strinnerinfo(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Device)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strDevName = 2;
  if (this->strdevname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevname());
  }

  // string strDevPassword = 3;
  if (this->strdevpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevpassword());
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // string strInnerinfo = 8;
  if (this->strinnerinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strinnerinfo());
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitypeinfo());
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strdevname().size() > 0) {

    strdevname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevname_);
  }
  if (from.strdevpassword().size() > 0) {

    strdevpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevpassword_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.strinnerinfo().size() > 0) {

    strinnerinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strinnerinfo_);
  }
  if (from.uitypeinfo() != 0) {
    set_uitypeinfo(from.uitypeinfo());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::Swap(Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Device::InternalSwap(Device* other) {
  strdevid_.Swap(&other->strdevid_);
  strdevname_.Swap(&other->strdevname_);
  strdevpassword_.Swap(&other->strdevpassword_);
  strcreatedate_.Swap(&other->strcreatedate_);
  strextend_.Swap(&other->strextend_);
  strinnerinfo_.Swap(&other->strinnerinfo_);
  std::swap(uitypeinfo_, other->uitypeinfo_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Device

// string strDevID = 1;
void Device::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevID)
  return strdevid_.GetNoArena();
}
void Device::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevID)
}
#if LANG_CXX11
void Device::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevID)
}
#endif
void Device::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevID)
}
void Device::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevID)
}
::std::string* Device::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevID)
}

// string strDevName = 2;
void Device::clear_strdevname() {
  strdevname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdevname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevName)
  return strdevname_.GetNoArena();
}
void Device::set_strdevname(const ::std::string& value) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevName)
}
#if LANG_CXX11
void Device::set_strdevname(::std::string&& value) {
  
  strdevname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevName)
}
#endif
void Device::set_strdevname(const char* value) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevName)
}
void Device::set_strdevname(const char* value, size_t size) {
  
  strdevname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevName)
}
::std::string* Device::mutable_strdevname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevName)
  return strdevname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdevname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevName)
  
  return strdevname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdevname(::std::string* strdevname) {
  if (strdevname != NULL) {
    
  } else {
    
  }
  strdevname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevName)
}

// string strDevPassword = 3;
void Device::clear_strdevpassword() {
  strdevpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strdevpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strDevPassword)
  return strdevpassword_.GetNoArena();
}
void Device::set_strdevpassword(const ::std::string& value) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strDevPassword)
}
#if LANG_CXX11
void Device::set_strdevpassword(::std::string&& value) {
  
  strdevpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strDevPassword)
}
#endif
void Device::set_strdevpassword(const char* value) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strDevPassword)
}
void Device::set_strdevpassword(const char* value, size_t size) {
  
  strdevpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strDevPassword)
}
::std::string* Device::mutable_strdevpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strDevPassword)
  return strdevpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strdevpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strDevPassword)
  
  return strdevpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strdevpassword(::std::string* strdevpassword) {
  if (strdevpassword != NULL) {
    
  } else {
    
  }
  strdevpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strDevPassword)
}

// uint32 uiTypeInfo = 4;
void Device::clear_uitypeinfo() {
  uitypeinfo_ = 0u;
}
::google::protobuf::uint32 Device::uitypeinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.uiTypeInfo)
  return uitypeinfo_;
}
void Device::set_uitypeinfo(::google::protobuf::uint32 value) {
  
  uitypeinfo_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.uiTypeInfo)
}

// string strCreatedate = 5;
void Device::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void Device::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strCreatedate)
}
#if LANG_CXX11
void Device::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strCreatedate)
}
#endif
void Device::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strCreatedate)
}
void Device::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strCreatedate)
}
::std::string* Device::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strCreatedate)
}

// uint32 uiStatus = 6;
void Device::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 Device::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.uiStatus)
  return uistatus_;
}
void Device::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.uiStatus)
}

// string strExtend = 7;
void Device::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strExtend)
  return strextend_.GetNoArena();
}
void Device::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strExtend)
}
#if LANG_CXX11
void Device::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strExtend)
}
#endif
void Device::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strExtend)
}
void Device::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strExtend)
}
::std::string* Device::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strExtend)
}

// string strInnerinfo = 8;
void Device::clear_strinnerinfo() {
  strinnerinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Device::strinnerinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Device.strInnerinfo)
  return strinnerinfo_.GetNoArena();
}
void Device::set_strinnerinfo(const ::std::string& value) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Device.strInnerinfo)
}
#if LANG_CXX11
void Device::set_strinnerinfo(::std::string&& value) {
  
  strinnerinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Device.strInnerinfo)
}
#endif
void Device::set_strinnerinfo(const char* value) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Device.strInnerinfo)
}
void Device::set_strinnerinfo(const char* value, size_t size) {
  
  strinnerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Device.strInnerinfo)
}
::std::string* Device::mutable_strinnerinfo() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Device.strInnerinfo)
  return strinnerinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Device::release_strinnerinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Device.strInnerinfo)
  
  return strinnerinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Device::set_allocated_strinnerinfo(::std::string* strinnerinfo) {
  if (strinnerinfo != NULL) {
    
  } else {
    
  }
  strinnerinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strinnerinfo);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Device.strInnerinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kStrUserIDFieldNumber;
const int User::kStrUserNameFieldNumber;
const int User::kStrUserPasswordFieldNumber;
const int User::kUiTypeInfoFieldNumber;
const int User::kStrCreatedateFieldNumber;
const int User::kUiStatusFieldNumber;
const int User::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  struserpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserpassword().size() > 0) {
    struserpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserpassword_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  ::memcpy(&uitypeinfo_, &from.uitypeinfo_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.User)
}

void User::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

User::~User() {
  // @@protoc_insertion_point(destructor:Interactive.Message.User)
  SharedDtor();
}

void User::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[2].descriptor;
}

const User& User::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.User)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uitypeinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uitypeinfo_) + sizeof(uistatus_));
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserPassword = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserpassword().data(), this->struserpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strUserPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiTypeInfo = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitypeinfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.User.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.User)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strusername(), output);
  }

  // string strUserPassword = 3;
  if (this->struserpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserpassword().data(), this->struserpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->struserpassword(), output);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uitypeinfo(), output);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uistatus(), output);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.User)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strusername(), target);
  }

  // string strUserPassword = 3;
  if (this->struserpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserpassword().data(), this->struserpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strUserPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->struserpassword(), target);
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uitypeinfo(), target);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uistatus(), target);
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.User.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.User)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strUserPassword = 3;
  if (this->struserpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserpassword());
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // string strExtend = 7;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // uint32 uiTypeInfo = 4;
  if (this->uitypeinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitypeinfo());
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.struserpassword().size() > 0) {

    struserpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserpassword_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.uitypeinfo() != 0) {
    set_uitypeinfo(from.uitypeinfo());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  struserid_.Swap(&other->struserid_);
  strusername_.Swap(&other->strusername_);
  struserpassword_.Swap(&other->struserpassword_);
  strcreatedate_.Swap(&other->strcreatedate_);
  strextend_.Swap(&other->strextend_);
  std::swap(uitypeinfo_, other->uitypeinfo_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// string strUserID = 1;
void User::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserID)
  return struserid_.GetNoArena();
}
void User::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserID)
}
#if LANG_CXX11
void User::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserID)
}
#endif
void User::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserID)
}
void User::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserID)
}
::std::string* User::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserID)
}

// string strUserName = 2;
void User::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::strusername() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserName)
  return strusername_.GetNoArena();
}
void User::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserName)
}
#if LANG_CXX11
void User::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserName)
}
#endif
void User::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserName)
}
void User::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserName)
}
::std::string* User::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_strusername() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserName)
}

// string strUserPassword = 3;
void User::clear_struserpassword() {
  struserpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::struserpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strUserPassword)
  return struserpassword_.GetNoArena();
}
void User::set_struserpassword(const ::std::string& value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strUserPassword)
}
#if LANG_CXX11
void User::set_struserpassword(::std::string&& value) {
  
  struserpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strUserPassword)
}
#endif
void User::set_struserpassword(const char* value) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strUserPassword)
}
void User::set_struserpassword(const char* value, size_t size) {
  
  struserpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strUserPassword)
}
::std::string* User::mutable_struserpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strUserPassword)
  return struserpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_struserpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strUserPassword)
  
  return struserpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_struserpassword(::std::string* struserpassword) {
  if (struserpassword != NULL) {
    
  } else {
    
  }
  struserpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strUserPassword)
}

// uint32 uiTypeInfo = 4;
void User::clear_uitypeinfo() {
  uitypeinfo_ = 0u;
}
::google::protobuf::uint32 User::uitypeinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.uiTypeInfo)
  return uitypeinfo_;
}
void User::set_uitypeinfo(::google::protobuf::uint32 value) {
  
  uitypeinfo_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.User.uiTypeInfo)
}

// string strCreatedate = 5;
void User::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void User::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strCreatedate)
}
#if LANG_CXX11
void User::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strCreatedate)
}
#endif
void User::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strCreatedate)
}
void User::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strCreatedate)
}
::std::string* User::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strCreatedate)
}

// uint32 uiStatus = 6;
void User::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 User::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.uiStatus)
  return uistatus_;
}
void User::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.User.uiStatus)
}

// string strExtend = 7;
void User::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.User.strExtend)
  return strextend_.GetNoArena();
}
void User::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.User.strExtend)
}
#if LANG_CXX11
void User::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.User.strExtend)
}
#endif
void User::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.User.strExtend)
}
void User::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.User.strExtend)
}
::std::string* User::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.User.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.User.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.User.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Relation::kStrUserIDFieldNumber;
const int Relation::kStrDevIDFieldNumber;
const int Relation::kUiRelationFieldNumber;
const int Relation::kStrBeginDateFieldNumber;
const int Relation::kStrEndDateFieldNumber;
const int Relation::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Relation::Relation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Relation)
}
Relation::Relation(const Relation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uirelation_ = from.uirelation_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Relation)
}

void Relation::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uirelation_ = 0u;
  _cached_size_ = 0;
}

Relation::~Relation() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Relation)
  SharedDtor();
}

void Relation::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Relation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Relation::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[3].descriptor;
}

const Relation& Relation::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Relation* Relation::New(::google::protobuf::Arena* arena) const {
  Relation* n = new Relation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Relation::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Relation)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uirelation_ = 0u;
}

bool Relation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Relation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiRelation = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uirelation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBeginDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strBeginDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndDate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strEndDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Relation.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Relation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Relation)
  return false;
#undef DO_
}

void Relation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Relation)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevid(), output);
  }

  // uint32 uiRelation = 3;
  if (this->uirelation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uirelation(), output);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strBeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strbegindate(), output);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strenddate(), output);
  }

  // string strValue = 6;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Relation)
}

::google::protobuf::uint8* Relation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Relation)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevid(), target);
  }

  // uint32 uiRelation = 3;
  if (this->uirelation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uirelation(), target);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strBeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strbegindate(), target);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strenddate(), target);
  }

  // string strValue = 6;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Relation.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Relation)
  return target;
}

size_t Relation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Relation)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // string strValue = 6;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiRelation = 3;
  if (this->uirelation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uirelation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Relation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  const Relation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Relation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Relation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Relation)
    MergeFrom(*source);
  }
}

void Relation::MergeFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uirelation() != 0) {
    set_uirelation(from.uirelation());
  }
}

void Relation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Relation::CopyFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relation::IsInitialized() const {
  return true;
}

void Relation::Swap(Relation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Relation::InternalSwap(Relation* other) {
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uirelation_, other->uirelation_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Relation::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Relation

// string strUserID = 1;
void Relation::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strUserID)
  return struserid_.GetNoArena();
}
void Relation::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strUserID)
}
#if LANG_CXX11
void Relation::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strUserID)
}
#endif
void Relation::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strUserID)
}
void Relation::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strUserID)
}
::std::string* Relation::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strUserID)
}

// string strDevID = 2;
void Relation::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strDevID)
  return strdevid_.GetNoArena();
}
void Relation::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strDevID)
}
#if LANG_CXX11
void Relation::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strDevID)
}
#endif
void Relation::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strDevID)
}
void Relation::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strDevID)
}
::std::string* Relation::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strDevID)
}

// uint32 uiRelation = 3;
void Relation::clear_uirelation() {
  uirelation_ = 0u;
}
::google::protobuf::uint32 Relation::uirelation() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.uiRelation)
  return uirelation_;
}
void Relation::set_uirelation(::google::protobuf::uint32 value) {
  
  uirelation_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.uiRelation)
}

// string strBeginDate = 4;
void Relation::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strBeginDate)
  return strbegindate_.GetNoArena();
}
void Relation::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strBeginDate)
}
#if LANG_CXX11
void Relation::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strBeginDate)
}
#endif
void Relation::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strBeginDate)
}
void Relation::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strBeginDate)
}
::std::string* Relation::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strBeginDate)
}

// string strEndDate = 5;
void Relation::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strEndDate)
  return strenddate_.GetNoArena();
}
void Relation::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strEndDate)
}
#if LANG_CXX11
void Relation::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strEndDate)
}
#endif
void Relation::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strEndDate)
}
void Relation::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strEndDate)
}
::std::string* Relation::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strEndDate)
}

// string strValue = 6;
void Relation::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Relation::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Relation.strValue)
  return strvalue_.GetNoArena();
}
void Relation::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Relation.strValue)
}
#if LANG_CXX11
void Relation::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Relation.strValue)
}
#endif
void Relation::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Relation.strValue)
}
void Relation::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Relation.strValue)
}
::std::string* Relation::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Relation.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Relation::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Relation.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Relation::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Relation.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kStrFileIDFieldNumber;
const int File::kStrUserIDFieldNumber;
const int File::kStrDevIDFieldNumber;
const int File::kStrRemoteFileIDFieldNumber;
const int File::kStrDownloadUrlFieldNumber;
const int File::kStrFileNameFieldNumber;
const int File::kStrSuffixNameFieldNumber;
const int File::kUiFileSizeFieldNumber;
const int File::kUiBusinessTypeFieldNumber;
const int File::kStrFileCreatedateFieldNumber;
const int File::kStrCreatedateFieldNumber;
const int File::kUiStatusFieldNumber;
const int File::kStrExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.File)
}
File::File(const File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strremotefileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strremotefileid().size() > 0) {
    strremotefileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strremotefileid_);
  }
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdownloadurl().size() > 0) {
    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfilename().size() > 0) {
    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  strsuffixname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsuffixname().size() > 0) {
    strsuffixname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsuffixname_);
  }
  strfilecreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfilecreatedate().size() > 0) {
    strfilecreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilecreatedate_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strextend().size() > 0) {
    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  ::memcpy(&uifilesize_, &from.uifilesize_,
    reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.File)
}

void File::SharedCtor() {
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strremotefileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsuffixname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilecreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uifilesize_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

File::~File() {
  // @@protoc_insertion_point(destructor:Interactive.Message.File)
  SharedDtor();
}

void File::SharedDtor() {
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strremotefileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsuffixname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilecreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[4].descriptor;
}

const File& File::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

File* File::New(::google::protobuf::Arena* arena) const {
  File* n = new File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.File)
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strremotefileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsuffixname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uifilesize_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&uifilesize_) + sizeof(uistatus_));
}

bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strFileID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRemoteFileID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strremotefileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strremotefileid().data(), this->strremotefileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strRemoteFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDownloadUrl = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdownloadurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdownloadurl().data(), this->strdownloadurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strDownloadUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileName = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilename().data(), this->strfilename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strFileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSuffixName = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsuffixname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsuffixname().data(), this->strsuffixname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strSuffixName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uiFileSize = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uifilesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBusinessType = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileCreatedate = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilecreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilecreatedate().data(), this->strfilecreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strFileCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strExtend = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strextend().data(), this->strextend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.File.strExtend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.File)
  return false;
#undef DO_
}

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.File)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strfileid(), output);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->struserid(), output);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevid(), output);
  }

  // string strRemoteFileID = 4;
  if (this->strremotefileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strremotefileid().data(), this->strremotefileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strRemoteFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strremotefileid(), output);
  }

  // string strDownloadUrl = 5;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strdownloadurl(), output);
  }

  // string strFileName = 6;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strfilename(), output);
  }

  // string strSuffixName = 7;
  if (this->strsuffixname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsuffixname().data(), this->strsuffixname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strSuffixName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strsuffixname(), output);
  }

  // uint64 uiFileSize = 8;
  if (this->uifilesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->uifilesize(), output);
  }

  // uint32 uiBusinessType = 9;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uibusinesstype(), output);
  }

  // string strFileCreatedate = 10;
  if (this->strfilecreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilecreatedate().data(), this->strfilecreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strfilecreatedate(), output);
  }

  // string strCreatedate = 11;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 12;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->uistatus(), output);
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strExtend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strextend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.File)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strfileid(), target);
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->struserid(), target);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevid(), target);
  }

  // string strRemoteFileID = 4;
  if (this->strremotefileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strremotefileid().data(), this->strremotefileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strRemoteFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strremotefileid(), target);
  }

  // string strDownloadUrl = 5;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strdownloadurl(), target);
  }

  // string strFileName = 6;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strfilename(), target);
  }

  // string strSuffixName = 7;
  if (this->strsuffixname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsuffixname().data(), this->strsuffixname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strSuffixName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strsuffixname(), target);
  }

  // uint64 uiFileSize = 8;
  if (this->uifilesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->uifilesize(), target);
  }

  // uint32 uiBusinessType = 9;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uibusinesstype(), target);
  }

  // string strFileCreatedate = 10;
  if (this->strfilecreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilecreatedate().data(), this->strfilecreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strFileCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strfilecreatedate(), target);
  }

  // string strCreatedate = 11;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 12;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->uistatus(), target);
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strextend().data(), this->strextend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.File.strExtend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strextend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.File)
  return target;
}

size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.File)
  size_t total_size = 0;

  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strUserID = 2;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strRemoteFileID = 4;
  if (this->strremotefileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strremotefileid());
  }

  // string strDownloadUrl = 5;
  if (this->strdownloadurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdownloadurl());
  }

  // string strFileName = 6;
  if (this->strfilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilename());
  }

  // string strSuffixName = 7;
  if (this->strsuffixname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsuffixname());
  }

  // string strFileCreatedate = 10;
  if (this->strfilecreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilecreatedate());
  }

  // string strCreatedate = 11;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // string strExtend = 13;
  if (this->strextend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strextend());
  }

  // uint64 uiFileSize = 8;
  if (this->uifilesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uifilesize());
  }

  // uint32 uiBusinessType = 9;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  // uint32 uiStatus = 12;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.File)
  GOOGLE_DCHECK_NE(&from, this);
  const File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strremotefileid().size() > 0) {

    strremotefileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strremotefileid_);
  }
  if (from.strdownloadurl().size() > 0) {

    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
  if (from.strfilename().size() > 0) {

    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  if (from.strsuffixname().size() > 0) {

    strsuffixname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsuffixname_);
  }
  if (from.strfilecreatedate().size() > 0) {

    strfilecreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilecreatedate_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.strextend().size() > 0) {

    strextend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strextend_);
  }
  if (from.uifilesize() != 0) {
    set_uifilesize(from.uifilesize());
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  strfileid_.Swap(&other->strfileid_);
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strremotefileid_.Swap(&other->strremotefileid_);
  strdownloadurl_.Swap(&other->strdownloadurl_);
  strfilename_.Swap(&other->strfilename_);
  strsuffixname_.Swap(&other->strsuffixname_);
  strfilecreatedate_.Swap(&other->strfilecreatedate_);
  strcreatedate_.Swap(&other->strcreatedate_);
  strextend_.Swap(&other->strextend_);
  std::swap(uifilesize_, other->uifilesize_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File

// string strFileID = 1;
void File::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileID)
  return strfileid_.GetNoArena();
}
void File::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileID)
}
#if LANG_CXX11
void File::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileID)
}
#endif
void File::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileID)
}
void File::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileID)
}
::std::string* File::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileID)
}

// string strUserID = 2;
void File::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strUserID)
  return struserid_.GetNoArena();
}
void File::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strUserID)
}
#if LANG_CXX11
void File::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strUserID)
}
#endif
void File::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strUserID)
}
void File::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strUserID)
}
::std::string* File::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strUserID)
}

// string strDevID = 3;
void File::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strDevID)
  return strdevid_.GetNoArena();
}
void File::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strDevID)
}
#if LANG_CXX11
void File::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strDevID)
}
#endif
void File::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strDevID)
}
void File::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strDevID)
}
::std::string* File::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strDevID)
}

// string strRemoteFileID = 4;
void File::clear_strremotefileid() {
  strremotefileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strremotefileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strRemoteFileID)
  return strremotefileid_.GetNoArena();
}
void File::set_strremotefileid(const ::std::string& value) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strRemoteFileID)
}
#if LANG_CXX11
void File::set_strremotefileid(::std::string&& value) {
  
  strremotefileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strRemoteFileID)
}
#endif
void File::set_strremotefileid(const char* value) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strRemoteFileID)
}
void File::set_strremotefileid(const char* value, size_t size) {
  
  strremotefileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strRemoteFileID)
}
::std::string* File::mutable_strremotefileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strRemoteFileID)
  return strremotefileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strremotefileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strRemoteFileID)
  
  return strremotefileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strremotefileid(::std::string* strremotefileid) {
  if (strremotefileid != NULL) {
    
  } else {
    
  }
  strremotefileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strremotefileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strRemoteFileID)
}

// string strDownloadUrl = 5;
void File::clear_strdownloadurl() {
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strdownloadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strDownloadUrl)
  return strdownloadurl_.GetNoArena();
}
void File::set_strdownloadurl(const ::std::string& value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strDownloadUrl)
}
#if LANG_CXX11
void File::set_strdownloadurl(::std::string&& value) {
  
  strdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strDownloadUrl)
}
#endif
void File::set_strdownloadurl(const char* value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strDownloadUrl)
}
void File::set_strdownloadurl(const char* value, size_t size) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strDownloadUrl)
}
::std::string* File::mutable_strdownloadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strDownloadUrl)
  return strdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strdownloadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strDownloadUrl)
  
  return strdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strdownloadurl(::std::string* strdownloadurl) {
  if (strdownloadurl != NULL) {
    
  } else {
    
  }
  strdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strDownloadUrl)
}

// string strFileName = 6;
void File::clear_strfilename() {
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strfilename() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileName)
  return strfilename_.GetNoArena();
}
void File::set_strfilename(const ::std::string& value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileName)
}
#if LANG_CXX11
void File::set_strfilename(::std::string&& value) {
  
  strfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileName)
}
#endif
void File::set_strfilename(const char* value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileName)
}
void File::set_strfilename(const char* value, size_t size) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileName)
}
::std::string* File::mutable_strfilename() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileName)
  return strfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strfilename() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileName)
  
  return strfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strfilename(::std::string* strfilename) {
  if (strfilename != NULL) {
    
  } else {
    
  }
  strfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilename);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileName)
}

// string strSuffixName = 7;
void File::clear_strsuffixname() {
  strsuffixname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strsuffixname() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strSuffixName)
  return strsuffixname_.GetNoArena();
}
void File::set_strsuffixname(const ::std::string& value) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strSuffixName)
}
#if LANG_CXX11
void File::set_strsuffixname(::std::string&& value) {
  
  strsuffixname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strSuffixName)
}
#endif
void File::set_strsuffixname(const char* value) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strSuffixName)
}
void File::set_strsuffixname(const char* value, size_t size) {
  
  strsuffixname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strSuffixName)
}
::std::string* File::mutable_strsuffixname() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strSuffixName)
  return strsuffixname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strsuffixname() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strSuffixName)
  
  return strsuffixname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strsuffixname(::std::string* strsuffixname) {
  if (strsuffixname != NULL) {
    
  } else {
    
  }
  strsuffixname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsuffixname);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strSuffixName)
}

// uint64 uiFileSize = 8;
void File::clear_uifilesize() {
  uifilesize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 File::uifilesize() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiFileSize)
  return uifilesize_;
}
void File::set_uifilesize(::google::protobuf::uint64 value) {
  
  uifilesize_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiFileSize)
}

// uint32 uiBusinessType = 9;
void File::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 File::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiBusinessType)
  return uibusinesstype_;
}
void File::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiBusinessType)
}

// string strFileCreatedate = 10;
void File::clear_strfilecreatedate() {
  strfilecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strfilecreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strFileCreatedate)
  return strfilecreatedate_.GetNoArena();
}
void File::set_strfilecreatedate(const ::std::string& value) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strFileCreatedate)
}
#if LANG_CXX11
void File::set_strfilecreatedate(::std::string&& value) {
  
  strfilecreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strFileCreatedate)
}
#endif
void File::set_strfilecreatedate(const char* value) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strFileCreatedate)
}
void File::set_strfilecreatedate(const char* value, size_t size) {
  
  strfilecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strFileCreatedate)
}
::std::string* File::mutable_strfilecreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strFileCreatedate)
  return strfilecreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strfilecreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strFileCreatedate)
  
  return strfilecreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strfilecreatedate(::std::string* strfilecreatedate) {
  if (strfilecreatedate != NULL) {
    
  } else {
    
  }
  strfilecreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilecreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strFileCreatedate)
}

// string strCreatedate = 11;
void File::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void File::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strCreatedate)
}
#if LANG_CXX11
void File::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strCreatedate)
}
#endif
void File::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strCreatedate)
}
void File::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strCreatedate)
}
::std::string* File::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strCreatedate)
}

// uint32 uiStatus = 12;
void File::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 File::uistatus() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.uiStatus)
  return uistatus_;
}
void File::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.File.uiStatus)
}

// string strExtend = 13;
void File::clear_strextend() {
  strextend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File::strextend() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.File.strExtend)
  return strextend_.GetNoArena();
}
void File::set_strextend(const ::std::string& value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.File.strExtend)
}
#if LANG_CXX11
void File::set_strextend(::std::string&& value) {
  
  strextend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.File.strExtend)
}
#endif
void File::set_strextend(const char* value) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.File.strExtend)
}
void File::set_strextend(const char* value, size_t size) {
  
  strextend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.File.strExtend)
}
::std::string* File::mutable_strextend() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.File.strExtend)
  return strextend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File::release_strextend() {
  // @@protoc_insertion_point(field_release:Interactive.Message.File.strExtend)
  
  return strextend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File::set_allocated_strextend(::std::string* strextend) {
  if (strextend != NULL) {
    
  } else {
    
  }
  strextend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strextend);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.File.strExtend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileUrl::kStrFileIDFieldNumber;
const int FileUrl::kStrDownloadUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileUrl::FileUrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.FileUrl)
}
FileUrl::FileUrl(const FileUrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdownloadurl().size() > 0) {
    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.FileUrl)
}

void FileUrl::SharedCtor() {
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FileUrl::~FileUrl() {
  // @@protoc_insertion_point(destructor:Interactive.Message.FileUrl)
  SharedDtor();
}

void FileUrl::SharedDtor() {
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileUrl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileUrl::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[5].descriptor;
}

const FileUrl& FileUrl::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileUrl* FileUrl::New(::google::protobuf::Arena* arena) const {
  FileUrl* n = new FileUrl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.FileUrl)
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileUrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.FileUrl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strFileID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.FileUrl.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDownloadUrl = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdownloadurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdownloadurl().data(), this->strdownloadurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.FileUrl.strDownloadUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.FileUrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.FileUrl)
  return false;
#undef DO_
}

void FileUrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.FileUrl)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strfileid(), output);
  }

  // string strDownloadUrl = 2;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdownloadurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.FileUrl)
}

::google::protobuf::uint8* FileUrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.FileUrl)
  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strfileid(), target);
  }

  // string strDownloadUrl = 2;
  if (this->strdownloadurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdownloadurl().data(), this->strdownloadurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.FileUrl.strDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdownloadurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.FileUrl)
  return target;
}

size_t FileUrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.FileUrl)
  size_t total_size = 0;

  // string strFileID = 1;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // string strDownloadUrl = 2;
  if (this->strdownloadurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdownloadurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileUrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.FileUrl)
  GOOGLE_DCHECK_NE(&from, this);
  const FileUrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileUrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.FileUrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.FileUrl)
    MergeFrom(*source);
  }
}

void FileUrl::MergeFrom(const FileUrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.FileUrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.strdownloadurl().size() > 0) {

    strdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdownloadurl_);
  }
}

void FileUrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.FileUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileUrl::CopyFrom(const FileUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.FileUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUrl::IsInitialized() const {
  return true;
}

void FileUrl::Swap(FileUrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileUrl::InternalSwap(FileUrl* other) {
  strfileid_.Swap(&other->strfileid_);
  strdownloadurl_.Swap(&other->strdownloadurl_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileUrl::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileUrl

// string strFileID = 1;
void FileUrl::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileUrl::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.FileUrl.strFileID)
  return strfileid_.GetNoArena();
}
void FileUrl::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.FileUrl.strFileID)
}
#if LANG_CXX11
void FileUrl::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.FileUrl.strFileID)
}
#endif
void FileUrl::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.FileUrl.strFileID)
}
void FileUrl::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.FileUrl.strFileID)
}
::std::string* FileUrl::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.FileUrl.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileUrl::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.FileUrl.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileUrl::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.FileUrl.strFileID)
}

// string strDownloadUrl = 2;
void FileUrl::clear_strdownloadurl() {
  strdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileUrl::strdownloadurl() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.FileUrl.strDownloadUrl)
  return strdownloadurl_.GetNoArena();
}
void FileUrl::set_strdownloadurl(const ::std::string& value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.FileUrl.strDownloadUrl)
}
#if LANG_CXX11
void FileUrl::set_strdownloadurl(::std::string&& value) {
  
  strdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.FileUrl.strDownloadUrl)
}
#endif
void FileUrl::set_strdownloadurl(const char* value) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.FileUrl.strDownloadUrl)
}
void FileUrl::set_strdownloadurl(const char* value, size_t size) {
  
  strdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.FileUrl.strDownloadUrl)
}
::std::string* FileUrl::mutable_strdownloadurl() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.FileUrl.strDownloadUrl)
  return strdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileUrl::release_strdownloadurl() {
  // @@protoc_insertion_point(field_release:Interactive.Message.FileUrl.strDownloadUrl)
  
  return strdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileUrl::set_allocated_strdownloadurl(::std::string* strdownloadurl) {
  if (strdownloadurl != NULL) {
    
  } else {
    
  }
  strdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.FileUrl.strDownloadUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressReq_DEV::kStrDevIDFieldNumber;
const int GetAccessAddressReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressReq_DEV::GetAccessAddressReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressReq_DEV)
}
GetAccessAddressReq_DEV::GetAccessAddressReq_DEV(const GetAccessAddressReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressReq_DEV)
}

void GetAccessAddressReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressReq_DEV::~GetAccessAddressReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressReq_DEV)
  SharedDtor();
}

void GetAccessAddressReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[6].descriptor;
}

const GetAccessAddressReq_DEV& GetAccessAddressReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressReq_DEV* GetAccessAddressReq_DEV::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressReq_DEV* n = new GetAccessAddressReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressReq_DEV)
  return false;
#undef DO_
}

void GetAccessAddressReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressReq_DEV)
}

::google::protobuf::uint8* GetAccessAddressReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressReq_DEV)
  return target;
}

size_t GetAccessAddressReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressReq_DEV)
    MergeFrom(*source);
  }
}

void GetAccessAddressReq_DEV::MergeFrom(const GetAccessAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressReq_DEV::CopyFrom(const GetAccessAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressReq_DEV::IsInitialized() const {
  return true;
}

void GetAccessAddressReq_DEV::Swap(GetAccessAddressReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressReq_DEV::InternalSwap(GetAccessAddressReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressReq_DEV

// string strDevID = 1;
void GetAccessAddressReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void GetAccessAddressReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
#if LANG_CXX11
void GetAccessAddressReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
#endif
void GetAccessAddressReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
void GetAccessAddressReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}
::std::string* GetAccessAddressReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_DEV.strDevID)
}

// string strValue = 2;
void GetAccessAddressReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
#if LANG_CXX11
void GetAccessAddressReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
#endif
void GetAccessAddressReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
void GetAccessAddressReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}
::std::string* GetAccessAddressReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressRsp_DEV::kStrAccessAddressFieldNumber;
const int GetAccessAddressRsp_DEV::kStrAccessPortFieldNumber;
const int GetAccessAddressRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressRsp_DEV::GetAccessAddressRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressRsp_DEV)
}
GetAccessAddressRsp_DEV::GetAccessAddressRsp_DEV(const GetAccessAddressRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessaddress().size() > 0) {
    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessport().size() > 0) {
    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressRsp_DEV)
}

void GetAccessAddressRsp_DEV::SharedCtor() {
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressRsp_DEV::~GetAccessAddressRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressRsp_DEV)
  SharedDtor();
}

void GetAccessAddressRsp_DEV::SharedDtor() {
  straccessaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[7].descriptor;
}

const GetAccessAddressRsp_DEV& GetAccessAddressRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressRsp_DEV* GetAccessAddressRsp_DEV::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressRsp_DEV* n = new GetAccessAddressRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressRsp_DEV)
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessaddress().data(), this->straccessaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAccessPort = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessport().data(), this->straccessport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressRsp_DEV)
  return false;
#undef DO_
}

void GetAccessAddressRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressRsp_DEV)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessaddress(), output);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->straccessport(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressRsp_DEV)
}

::google::protobuf::uint8* GetAccessAddressRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressRsp_DEV)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessaddress(), target);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->straccessport(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressRsp_DEV)
  return target;
}

size_t GetAccessAddressRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressRsp_DEV)
  size_t total_size = 0;

  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessaddress());
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessport());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressRsp_DEV)
    MergeFrom(*source);
  }
}

void GetAccessAddressRsp_DEV::MergeFrom(const GetAccessAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessaddress().size() > 0) {

    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  if (from.straccessport().size() > 0) {

    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressRsp_DEV::CopyFrom(const GetAccessAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressRsp_DEV::IsInitialized() const {
  return true;
}

void GetAccessAddressRsp_DEV::Swap(GetAccessAddressRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressRsp_DEV::InternalSwap(GetAccessAddressRsp_DEV* other) {
  straccessaddress_.Swap(&other->straccessaddress_);
  straccessport_.Swap(&other->straccessport_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressRsp_DEV

// string strAccessAddress = 1;
void GetAccessAddressRsp_DEV::clear_straccessaddress() {
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_DEV::straccessaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  return straccessaddress_.GetNoArena();
}
void GetAccessAddressRsp_DEV::set_straccessaddress(const ::std::string& value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
#if LANG_CXX11
void GetAccessAddressRsp_DEV::set_straccessaddress(::std::string&& value) {
  
  straccessaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
#endif
void GetAccessAddressRsp_DEV::set_straccessaddress(const char* value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
void GetAccessAddressRsp_DEV::set_straccessaddress(const char* value, size_t size) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}
::std::string* GetAccessAddressRsp_DEV::mutable_straccessaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  return straccessaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_DEV::release_straccessaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
  
  return straccessaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_DEV::set_allocated_straccessaddress(::std::string* straccessaddress) {
  if (straccessaddress != NULL) {
    
  } else {
    
  }
  straccessaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strAccessAddress)
}

// string strAccessPort = 2;
void GetAccessAddressRsp_DEV::clear_straccessport() {
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_DEV::straccessport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  return straccessport_.GetNoArena();
}
void GetAccessAddressRsp_DEV::set_straccessport(const ::std::string& value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
#if LANG_CXX11
void GetAccessAddressRsp_DEV::set_straccessport(::std::string&& value) {
  
  straccessport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
#endif
void GetAccessAddressRsp_DEV::set_straccessport(const char* value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
void GetAccessAddressRsp_DEV::set_straccessport(const char* value, size_t size) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}
::std::string* GetAccessAddressRsp_DEV::mutable_straccessport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  return straccessport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_DEV::release_straccessport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
  
  return straccessport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_DEV::set_allocated_straccessport(::std::string* straccessport) {
  if (straccessport != NULL) {
    
  } else {
    
  }
  straccessport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strAccessPort)
}

// string strValue = 3;
void GetAccessAddressRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
#if LANG_CXX11
void GetAccessAddressRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
#endif
void GetAccessAddressRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
void GetAccessAddressRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}
::std::string* GetAccessAddressRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq_DEV::kStrDevIDFieldNumber;
const int LoginReq_DEV::kStrPasswordFieldNumber;
const int LoginReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq_DEV::LoginReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginReq_DEV)
}
LoginReq_DEV::LoginReq_DEV(const LoginReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpassword().size() > 0) {
    strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginReq_DEV)
}

void LoginReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginReq_DEV::~LoginReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginReq_DEV)
  SharedDtor();
}

void LoginReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[8].descriptor;
}

const LoginReq_DEV& LoginReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq_DEV* LoginReq_DEV::New(::google::protobuf::Arena* arena) const {
  LoginReq_DEV* n = new LoginReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPassword = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpassword().data(), this->strpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginReq_DEV)
  return false;
#undef DO_
}

void LoginReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strPassword = 2;
  if (this->strpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strpassword(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginReq_DEV)
}

::google::protobuf::uint8* LoginReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strPassword = 2;
  if (this->strpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strpassword(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginReq_DEV)
  return target;
}

size_t LoginReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strPassword = 2;
  if (this->strpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpassword());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginReq_DEV)
    MergeFrom(*source);
  }
}

void LoginReq_DEV::MergeFrom(const LoginReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strpassword().size() > 0) {

    strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq_DEV::CopyFrom(const LoginReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq_DEV::IsInitialized() const {
  return true;
}

void LoginReq_DEV::Swap(LoginReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq_DEV::InternalSwap(LoginReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strpassword_.Swap(&other->strpassword_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq_DEV

// string strDevID = 1;
void LoginReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void LoginReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strDevID)
}
#if LANG_CXX11
void LoginReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strDevID)
}
#endif
void LoginReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strDevID)
}
void LoginReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strDevID)
}
::std::string* LoginReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strDevID)
}

// string strPassword = 2;
void LoginReq_DEV::clear_strpassword() {
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strpassword() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strPassword)
  return strpassword_.GetNoArena();
}
void LoginReq_DEV::set_strpassword(const ::std::string& value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strPassword)
}
#if LANG_CXX11
void LoginReq_DEV::set_strpassword(::std::string&& value) {
  
  strpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strPassword)
}
#endif
void LoginReq_DEV::set_strpassword(const char* value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strPassword)
}
void LoginReq_DEV::set_strpassword(const char* value, size_t size) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strPassword)
}
::std::string* LoginReq_DEV::mutable_strpassword() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strPassword)
  return strpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strpassword() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strPassword)
  
  return strpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strpassword(::std::string* strpassword) {
  if (strpassword != NULL) {
    
  } else {
    
  }
  strpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpassword);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strPassword)
}

// string strValue = 3;
void LoginReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LoginReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_DEV.strValue)
}
#if LANG_CXX11
void LoginReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_DEV.strValue)
}
#endif
void LoginReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_DEV.strValue)
}
void LoginReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_DEV.strValue)
}
::std::string* LoginReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp_DEV::LoginRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginRsp_DEV)
}
LoginRsp_DEV::LoginRsp_DEV(const LoginRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginRsp_DEV)
}

void LoginRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRsp_DEV::~LoginRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginRsp_DEV)
  SharedDtor();
}

void LoginRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[9].descriptor;
}

const LoginRsp_DEV& LoginRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRsp_DEV* LoginRsp_DEV::New(::google::protobuf::Arena* arena) const {
  LoginRsp_DEV* n = new LoginRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginRsp_DEV)
  return false;
#undef DO_
}

void LoginRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginRsp_DEV)
  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginRsp_DEV)
}

::google::protobuf::uint8* LoginRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginRsp_DEV)
  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginRsp_DEV)
  return target;
}

size_t LoginRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginRsp_DEV)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginRsp_DEV)
    MergeFrom(*source);
  }
}

void LoginRsp_DEV::MergeFrom(const LoginRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp_DEV::CopyFrom(const LoginRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp_DEV::IsInitialized() const {
  return true;
}

void LoginRsp_DEV::Swap(LoginRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp_DEV::InternalSwap(LoginRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp_DEV

// string strValue = 2;
void LoginRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LoginRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_DEV.strValue)
}
#if LANG_CXX11
void LoginRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_DEV.strValue)
}
#endif
void LoginRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_DEV.strValue)
}
void LoginRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_DEV.strValue)
}
::std::string* LoginRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq_DEV::kStrDevIDFieldNumber;
const int LogoutReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq_DEV::LogoutReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutReq_DEV)
}
LogoutReq_DEV::LogoutReq_DEV(const LogoutReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutReq_DEV)
}

void LogoutReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutReq_DEV::~LogoutReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutReq_DEV)
  SharedDtor();
}

void LogoutReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[10].descriptor;
}

const LogoutReq_DEV& LogoutReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq_DEV* LogoutReq_DEV::New(::google::protobuf::Arena* arena) const {
  LogoutReq_DEV* n = new LogoutReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogoutReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutReq_DEV)
  return false;
#undef DO_
}

void LogoutReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutReq_DEV)
}

::google::protobuf::uint8* LogoutReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutReq_DEV)
  return target;
}

size_t LogoutReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutReq_DEV)
    MergeFrom(*source);
  }
}

void LogoutReq_DEV::MergeFrom(const LogoutReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LogoutReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq_DEV::CopyFrom(const LogoutReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq_DEV::IsInitialized() const {
  return true;
}

void LogoutReq_DEV::Swap(LogoutReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq_DEV::InternalSwap(LogoutReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq_DEV

// string strDevID = 1;
void LogoutReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void LogoutReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_DEV.strDevID)
}
#if LANG_CXX11
void LogoutReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_DEV.strDevID)
}
#endif
void LogoutReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_DEV.strDevID)
}
void LogoutReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_DEV.strDevID)
}
::std::string* LogoutReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_DEV.strDevID)
}

// string strValue = 2;
void LogoutReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LogoutReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_DEV.strValue)
}
#if LANG_CXX11
void LogoutReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_DEV.strValue)
}
#endif
void LogoutReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_DEV.strValue)
}
void LogoutReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_DEV.strValue)
}
::std::string* LogoutReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRsp_DEV::LogoutRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutRsp_DEV)
}
LogoutRsp_DEV::LogoutRsp_DEV(const LogoutRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutRsp_DEV)
}

void LogoutRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutRsp_DEV::~LogoutRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutRsp_DEV)
  SharedDtor();
}

void LogoutRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[11].descriptor;
}

const LogoutRsp_DEV& LogoutRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutRsp_DEV* LogoutRsp_DEV::New(::google::protobuf::Arena* arena) const {
  LogoutRsp_DEV* n = new LogoutRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogoutRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutRsp_DEV)
  return false;
#undef DO_
}

void LogoutRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutRsp_DEV)
}

::google::protobuf::uint8* LogoutRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutRsp_DEV)
  return target;
}

size_t LogoutRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutRsp_DEV)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutRsp_DEV)
    MergeFrom(*source);
  }
}

void LogoutRsp_DEV::MergeFrom(const LogoutRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LogoutRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRsp_DEV::CopyFrom(const LogoutRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRsp_DEV::IsInitialized() const {
  return true;
}

void LogoutRsp_DEV::Swap(LogoutRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRsp_DEV::InternalSwap(LogoutRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutRsp_DEV

// string strValue = 1;
void LogoutRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void LogoutRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutRsp_DEV.strValue)
}
#if LANG_CXX11
void LogoutRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutRsp_DEV.strValue)
}
#endif
void LogoutRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutRsp_DEV.strValue)
}
void LogoutRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutRsp_DEV.strValue)
}
::std::string* LogoutRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandReq_DEV::kStrDevIDFieldNumber;
const int ShakehandReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandReq_DEV::ShakehandReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandReq_DEV)
}
ShakehandReq_DEV::ShakehandReq_DEV(const ShakehandReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandReq_DEV)
}

void ShakehandReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandReq_DEV::~ShakehandReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandReq_DEV)
  SharedDtor();
}

void ShakehandReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[12].descriptor;
}

const ShakehandReq_DEV& ShakehandReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandReq_DEV* ShakehandReq_DEV::New(::google::protobuf::Arena* arena) const {
  ShakehandReq_DEV* n = new ShakehandReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandReq_DEV)
  return false;
#undef DO_
}

void ShakehandReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandReq_DEV)
}

::google::protobuf::uint8* ShakehandReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandReq_DEV)
  return target;
}

size_t ShakehandReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandReq_DEV)
    MergeFrom(*source);
  }
}

void ShakehandReq_DEV::MergeFrom(const ShakehandReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandReq_DEV::CopyFrom(const ShakehandReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandReq_DEV::IsInitialized() const {
  return true;
}

void ShakehandReq_DEV::Swap(ShakehandReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandReq_DEV::InternalSwap(ShakehandReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandReq_DEV

// string strDevID = 1;
void ShakehandReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void ShakehandReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_DEV.strDevID)
}
#if LANG_CXX11
void ShakehandReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_DEV.strDevID)
}
#endif
void ShakehandReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_DEV.strDevID)
}
void ShakehandReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_DEV.strDevID)
}
::std::string* ShakehandReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_DEV.strDevID)
}

// string strValue = 3;
void ShakehandReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_DEV.strValue)
}
#if LANG_CXX11
void ShakehandReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_DEV.strValue)
}
#endif
void ShakehandReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_DEV.strValue)
}
void ShakehandReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_DEV.strValue)
}
::std::string* ShakehandReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandRsp_DEV::ShakehandRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandRsp_DEV)
}
ShakehandRsp_DEV::ShakehandRsp_DEV(const ShakehandRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandRsp_DEV)
}

void ShakehandRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandRsp_DEV::~ShakehandRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandRsp_DEV)
  SharedDtor();
}

void ShakehandRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[13].descriptor;
}

const ShakehandRsp_DEV& ShakehandRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandRsp_DEV* ShakehandRsp_DEV::New(::google::protobuf::Arena* arena) const {
  ShakehandRsp_DEV* n = new ShakehandRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandRsp_DEV)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandRsp_DEV)
  return false;
#undef DO_
}

void ShakehandRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandRsp_DEV)
}

::google::protobuf::uint8* ShakehandRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandRsp_DEV)
  return target;
}

size_t ShakehandRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandRsp_DEV)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandRsp_DEV)
    MergeFrom(*source);
  }
}

void ShakehandRsp_DEV::MergeFrom(const ShakehandRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandRsp_DEV::CopyFrom(const ShakehandRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandRsp_DEV::IsInitialized() const {
  return true;
}

void ShakehandRsp_DEV::Swap(ShakehandRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandRsp_DEV::InternalSwap(ShakehandRsp_DEV* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandRsp_DEV

// string strValue = 1;
void ShakehandRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandRsp_DEV.strValue)
}
#if LANG_CXX11
void ShakehandRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandRsp_DEV.strValue)
}
#endif
void ShakehandRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandRsp_DEV.strValue)
}
void ShakehandRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandRsp_DEV.strValue)
}
::std::string* ShakehandRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoReq_DEV::kStrDevIDFieldNumber;
const int ConfigInfoReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoReq_DEV::ConfigInfoReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoReq_DEV)
}
ConfigInfoReq_DEV::ConfigInfoReq_DEV(const ConfigInfoReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoReq_DEV)
}

void ConfigInfoReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoReq_DEV::~ConfigInfoReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoReq_DEV)
  SharedDtor();
}

void ConfigInfoReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[14].descriptor;
}

const ConfigInfoReq_DEV& ConfigInfoReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoReq_DEV* ConfigInfoReq_DEV::New(::google::protobuf::Arena* arena) const {
  ConfigInfoReq_DEV* n = new ConfigInfoReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoReq_DEV)
  return false;
#undef DO_
}

void ConfigInfoReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoReq_DEV)
}

::google::protobuf::uint8* ConfigInfoReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoReq_DEV)
  return target;
}

size_t ConfigInfoReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoReq_DEV)
    MergeFrom(*source);
  }
}

void ConfigInfoReq_DEV::MergeFrom(const ConfigInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoReq_DEV::CopyFrom(const ConfigInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoReq_DEV::IsInitialized() const {
  return true;
}

void ConfigInfoReq_DEV::Swap(ConfigInfoReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoReq_DEV::InternalSwap(ConfigInfoReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoReq_DEV

// string strDevID = 1;
void ConfigInfoReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void ConfigInfoReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
#if LANG_CXX11
void ConfigInfoReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
#endif
void ConfigInfoReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
void ConfigInfoReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}
::std::string* ConfigInfoReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_DEV.strDevID)
}

// string strValue = 2;
void ConfigInfoReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
#if LANG_CXX11
void ConfigInfoReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
#endif
void ConfigInfoReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
void ConfigInfoReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_DEV.strValue)
}
::std::string* ConfigInfoReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoRsp_DEV::kStrConfigInfoFieldNumber;
const int ConfigInfoRsp_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoRsp_DEV::ConfigInfoRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoRsp_DEV)
}
ConfigInfoRsp_DEV::ConfigInfoRsp_DEV(const ConfigInfoRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strconfiginfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strconfiginfo().size() > 0) {
    strconfiginfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strconfiginfo_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoRsp_DEV)
}

void ConfigInfoRsp_DEV::SharedCtor() {
  strconfiginfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoRsp_DEV::~ConfigInfoRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoRsp_DEV)
  SharedDtor();
}

void ConfigInfoRsp_DEV::SharedDtor() {
  strconfiginfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[15].descriptor;
}

const ConfigInfoRsp_DEV& ConfigInfoRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoRsp_DEV* ConfigInfoRsp_DEV::New(::google::protobuf::Arena* arena) const {
  ConfigInfoRsp_DEV* n = new ConfigInfoRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoRsp_DEV)
  strconfiginfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strConfigInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strconfiginfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strconfiginfo().data(), this->strconfiginfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoRsp_DEV)
  return false;
#undef DO_
}

void ConfigInfoRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoRsp_DEV)
  // string strConfigInfo = 1;
  if (this->strconfiginfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strconfiginfo().data(), this->strconfiginfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strconfiginfo(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoRsp_DEV)
}

::google::protobuf::uint8* ConfigInfoRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoRsp_DEV)
  // string strConfigInfo = 1;
  if (this->strconfiginfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strconfiginfo().data(), this->strconfiginfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strconfiginfo(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoRsp_DEV)
  return target;
}

size_t ConfigInfoRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoRsp_DEV)
  size_t total_size = 0;

  // string strConfigInfo = 1;
  if (this->strconfiginfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strconfiginfo());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoRsp_DEV)
    MergeFrom(*source);
  }
}

void ConfigInfoRsp_DEV::MergeFrom(const ConfigInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strconfiginfo().size() > 0) {

    strconfiginfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strconfiginfo_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoRsp_DEV::CopyFrom(const ConfigInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoRsp_DEV::IsInitialized() const {
  return true;
}

void ConfigInfoRsp_DEV::Swap(ConfigInfoRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoRsp_DEV::InternalSwap(ConfigInfoRsp_DEV* other) {
  strconfiginfo_.Swap(&other->strconfiginfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoRsp_DEV

// string strConfigInfo = 1;
void ConfigInfoRsp_DEV::clear_strconfiginfo() {
  strconfiginfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp_DEV::strconfiginfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  return strconfiginfo_.GetNoArena();
}
void ConfigInfoRsp_DEV::set_strconfiginfo(const ::std::string& value) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
#if LANG_CXX11
void ConfigInfoRsp_DEV::set_strconfiginfo(::std::string&& value) {
  
  strconfiginfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
#endif
void ConfigInfoRsp_DEV::set_strconfiginfo(const char* value) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
void ConfigInfoRsp_DEV::set_strconfiginfo(const char* value, size_t size) {
  
  strconfiginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}
::std::string* ConfigInfoRsp_DEV::mutable_strconfiginfo() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  return strconfiginfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp_DEV::release_strconfiginfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
  
  return strconfiginfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp_DEV::set_allocated_strconfiginfo(::std::string* strconfiginfo) {
  if (strconfiginfo != NULL) {
    
  } else {
    
  }
  strconfiginfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconfiginfo);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_DEV.strConfigInfo)
}

// string strValue = 2;
void ConfigInfoRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
#if LANG_CXX11
void ConfigInfoRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
#endif
void ConfigInfoRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
void ConfigInfoRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}
::std::string* ConfigInfoRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressReq_DEV::kStrDevIDFieldNumber;
const int StorageAddressReq_DEV::kUiStorageTypeFieldNumber;
const int StorageAddressReq_DEV::kUiStorageActionFieldNumber;
const int StorageAddressReq_DEV::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressReq_DEV::StorageAddressReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressReq_DEV)
}
StorageAddressReq_DEV::StorageAddressReq_DEV(const StorageAddressReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  ::memcpy(&uistoragetype_, &from.uistoragetype_,
    reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressReq_DEV)
}

void StorageAddressReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  _cached_size_ = 0;
}

StorageAddressReq_DEV::~StorageAddressReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressReq_DEV)
  SharedDtor();
}

void StorageAddressReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[16].descriptor;
}

const StorageAddressReq_DEV& StorageAddressReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressReq_DEV* StorageAddressReq_DEV::New(::google::protobuf::Arena* arena) const {
  StorageAddressReq_DEV* n = new StorageAddressReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
}

bool StorageAddressReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageAction = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistorageaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_DEV.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressReq_DEV)
  return false;
#undef DO_
}

void StorageAddressReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uistoragetype(), output);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uistorageaction(), output);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strfileid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressReq_DEV)
}

::google::protobuf::uint8* StorageAddressReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uistoragetype(), target);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uistorageaction(), target);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_DEV.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strfileid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressReq_DEV)
  return target;
}

size_t StorageAddressReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetype());
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistorageaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressReq_DEV)
    MergeFrom(*source);
  }
}

void StorageAddressReq_DEV::MergeFrom(const StorageAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.uistoragetype() != 0) {
    set_uistoragetype(from.uistoragetype());
  }
  if (from.uistorageaction() != 0) {
    set_uistorageaction(from.uistorageaction());
  }
}

void StorageAddressReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressReq_DEV::CopyFrom(const StorageAddressReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressReq_DEV::IsInitialized() const {
  return true;
}

void StorageAddressReq_DEV::Swap(StorageAddressReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressReq_DEV::InternalSwap(StorageAddressReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strfileid_.Swap(&other->strfileid_);
  std::swap(uistoragetype_, other->uistoragetype_);
  std::swap(uistorageaction_, other->uistorageaction_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressReq_DEV

// string strDevID = 1;
void StorageAddressReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void StorageAddressReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
#if LANG_CXX11
void StorageAddressReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
#endif
void StorageAddressReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
void StorageAddressReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_DEV.strDevID)
}
::std::string* StorageAddressReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_DEV.strDevID)
}

// uint32 uiStorageType = 2;
void StorageAddressReq_DEV::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_DEV::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.uiStorageType)
  return uistoragetype_;
}
void StorageAddressReq_DEV::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.uiStorageType)
}

// uint32 uiStorageAction = 3;
void StorageAddressReq_DEV::clear_uistorageaction() {
  uistorageaction_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_DEV::uistorageaction() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.uiStorageAction)
  return uistorageaction_;
}
void StorageAddressReq_DEV::set_uistorageaction(::google::protobuf::uint32 value) {
  
  uistorageaction_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.uiStorageAction)
}

// string strFileID = 4;
void StorageAddressReq_DEV::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_DEV::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_DEV.strFileID)
  return strfileid_.GetNoArena();
}
void StorageAddressReq_DEV::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
#if LANG_CXX11
void StorageAddressReq_DEV::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
#endif
void StorageAddressReq_DEV::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
void StorageAddressReq_DEV::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_DEV.strFileID)
}
::std::string* StorageAddressReq_DEV::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_DEV.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_DEV::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_DEV.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_DEV::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_DEV.strFileID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressRsp_DEV::kStrAddressFieldNumber;
const int StorageAddressRsp_DEV::kUiPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressRsp_DEV::StorageAddressRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressRsp_DEV)
}
StorageAddressRsp_DEV::StorageAddressRsp_DEV(const StorageAddressRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straddress().size() > 0) {
    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  uiport_ = from.uiport_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressRsp_DEV)
}

void StorageAddressRsp_DEV::SharedCtor() {
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
  _cached_size_ = 0;
}

StorageAddressRsp_DEV::~StorageAddressRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressRsp_DEV)
  SharedDtor();
}

void StorageAddressRsp_DEV::SharedDtor() {
  straddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[17].descriptor;
}

const StorageAddressRsp_DEV& StorageAddressRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressRsp_DEV* StorageAddressRsp_DEV::New(::google::protobuf::Arena* arena) const {
  StorageAddressRsp_DEV* n = new StorageAddressRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressRsp_DEV)
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
}

bool StorageAddressRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressRsp_DEV.strAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiPort = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressRsp_DEV)
  return false;
#undef DO_
}

void StorageAddressRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressRsp_DEV)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_DEV.strAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straddress(), output);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiport(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressRsp_DEV)
}

::google::protobuf::uint8* StorageAddressRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressRsp_DEV)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_DEV.strAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straddress(), target);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressRsp_DEV)
  return target;
}

size_t StorageAddressRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressRsp_DEV)
  size_t total_size = 0;

  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straddress());
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressRsp_DEV)
    MergeFrom(*source);
  }
}

void StorageAddressRsp_DEV::MergeFrom(const StorageAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straddress().size() > 0) {

    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  if (from.uiport() != 0) {
    set_uiport(from.uiport());
  }
}

void StorageAddressRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressRsp_DEV::CopyFrom(const StorageAddressRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressRsp_DEV::IsInitialized() const {
  return true;
}

void StorageAddressRsp_DEV::Swap(StorageAddressRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressRsp_DEV::InternalSwap(StorageAddressRsp_DEV* other) {
  straddress_.Swap(&other->straddress_);
  std::swap(uiport_, other->uiport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressRsp_DEV

// string strAddress = 1;
void StorageAddressRsp_DEV::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressRsp_DEV::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  return straddress_.GetNoArena();
}
void StorageAddressRsp_DEV::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
#if LANG_CXX11
void StorageAddressRsp_DEV::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
#endif
void StorageAddressRsp_DEV::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
void StorageAddressRsp_DEV::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}
::std::string* StorageAddressRsp_DEV::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressRsp_DEV::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressRsp_DEV.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressRsp_DEV::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressRsp_DEV.strAddress)
}

// uint32 uiPort = 2;
void StorageAddressRsp_DEV::clear_uiport() {
  uiport_ = 0u;
}
::google::protobuf::uint32 StorageAddressRsp_DEV::uiport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_DEV.uiPort)
  return uiport_;
}
void StorageAddressRsp_DEV::set_uiport(::google::protobuf::uint32 value) {
  
  uiport_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_DEV.uiPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoReq_DEV::kStrDevIDFieldNumber;
const int P2pInfoReq_DEV::kStrDevIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoReq_DEV::P2pInfoReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoReq_DEV)
}
P2pInfoReq_DEV::P2pInfoReq_DEV(const P2pInfoReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevipaddress().size() > 0) {
    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoReq_DEV)
}

void P2pInfoReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

P2pInfoReq_DEV::~P2pInfoReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoReq_DEV)
  SharedDtor();
}

void P2pInfoReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[18].descriptor;
}

const P2pInfoReq_DEV& P2pInfoReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoReq_DEV* P2pInfoReq_DEV::New(::google::protobuf::Arena* arena) const {
  P2pInfoReq_DEV* n = new P2pInfoReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoReq_DEV)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool P2pInfoReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevIpAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevipaddress().data(), this->strdevipaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_DEV.strDevIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoReq_DEV)
  return false;
#undef DO_
}

void P2pInfoReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevipaddress(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoReq_DEV)
}

::google::protobuf::uint8* P2pInfoReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevipaddress().data(), this->strdevipaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_DEV.strDevIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevipaddress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoReq_DEV)
  return target;
}

size_t P2pInfoReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoReq_DEV)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strDevIpAddress = 2;
  if (this->strdevipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevipaddress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoReq_DEV)
    MergeFrom(*source);
  }
}

void P2pInfoReq_DEV::MergeFrom(const P2pInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strdevipaddress().size() > 0) {

    strdevipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevipaddress_);
  }
}

void P2pInfoReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoReq_DEV::CopyFrom(const P2pInfoReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoReq_DEV::IsInitialized() const {
  return true;
}

void P2pInfoReq_DEV::Swap(P2pInfoReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoReq_DEV::InternalSwap(P2pInfoReq_DEV* other) {
  strdevid_.Swap(&other->strdevid_);
  strdevipaddress_.Swap(&other->strdevipaddress_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoReq_DEV

// string strDevID = 1;
void P2pInfoReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void P2pInfoReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
#if LANG_CXX11
void P2pInfoReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
#endif
void P2pInfoReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
void P2pInfoReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDevID)
}
::std::string* P2pInfoReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDevID)
}

// string strDevIpAddress = 2;
void P2pInfoReq_DEV::clear_strdevipaddress() {
  strdevipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_DEV::strdevipaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  return strdevipaddress_.GetNoArena();
}
void P2pInfoReq_DEV::set_strdevipaddress(const ::std::string& value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
#if LANG_CXX11
void P2pInfoReq_DEV::set_strdevipaddress(::std::string&& value) {
  
  strdevipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
#endif
void P2pInfoReq_DEV::set_strdevipaddress(const char* value) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
void P2pInfoReq_DEV::set_strdevipaddress(const char* value, size_t size) {
  
  strdevipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}
::std::string* P2pInfoReq_DEV::mutable_strdevipaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  return strdevipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_DEV::release_strdevipaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
  
  return strdevipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_DEV::set_allocated_strdevipaddress(::std::string* strdevipaddress) {
  if (strdevipaddress != NULL) {
    
  } else {
    
  }
  strdevipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevipaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_DEV.strDevIpAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoRsp_DEV::kStrP2PServerFieldNumber;
const int P2pInfoRsp_DEV::kStrP2PIDFieldNumber;
const int P2pInfoRsp_DEV::kUiLeaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoRsp_DEV::P2pInfoRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoRsp_DEV)
}
P2pInfoRsp_DEV::P2pInfoRsp_DEV(const P2pInfoRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pserver().size() > 0) {
    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoRsp_DEV)
}

void P2pInfoRsp_DEV::SharedCtor() {
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

P2pInfoRsp_DEV::~P2pInfoRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoRsp_DEV)
  SharedDtor();
}

void P2pInfoRsp_DEV::SharedDtor() {
  strp2pserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[19].descriptor;
}

const P2pInfoRsp_DEV& P2pInfoRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoRsp_DEV* P2pInfoRsp_DEV::New(::google::protobuf::Arena* arena) const {
  P2pInfoRsp_DEV* n = new P2pInfoRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoRsp_DEV)
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool P2pInfoRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strP2pServer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pserver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pserver().data(), this->strp2pserver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_DEV.strP2pServer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_DEV.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoRsp_DEV)
  return false;
#undef DO_
}

void P2pInfoRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoRsp_DEV)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strp2pserver(), output);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strp2pid(), output);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uilease(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoRsp_DEV)
}

::google::protobuf::uint8* P2pInfoRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoRsp_DEV)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strp2pserver(), target);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_DEV.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strp2pid(), target);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uilease(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoRsp_DEV)
  return target;
}

size_t P2pInfoRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoRsp_DEV)
  size_t total_size = 0;

  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pserver());
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoRsp_DEV)
    MergeFrom(*source);
  }
}

void P2pInfoRsp_DEV::MergeFrom(const P2pInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strp2pserver().size() > 0) {

    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void P2pInfoRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoRsp_DEV::CopyFrom(const P2pInfoRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoRsp_DEV::IsInitialized() const {
  return true;
}

void P2pInfoRsp_DEV::Swap(P2pInfoRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoRsp_DEV::InternalSwap(P2pInfoRsp_DEV* other) {
  strp2pserver_.Swap(&other->strp2pserver_);
  strp2pid_.Swap(&other->strp2pid_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoRsp_DEV

// string strP2pServer = 1;
void P2pInfoRsp_DEV::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_DEV::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  return strp2pserver_.GetNoArena();
}
void P2pInfoRsp_DEV::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
#if LANG_CXX11
void P2pInfoRsp_DEV::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
#endif
void P2pInfoRsp_DEV::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
void P2pInfoRsp_DEV::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}
::std::string* P2pInfoRsp_DEV::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_DEV::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_DEV::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strP2pServer)
}

// string strP2pID = 2;
void P2pInfoRsp_DEV::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_DEV::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  return strp2pid_.GetNoArena();
}
void P2pInfoRsp_DEV::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
#if LANG_CXX11
void P2pInfoRsp_DEV::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
#endif
void P2pInfoRsp_DEV::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
void P2pInfoRsp_DEV::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}
::std::string* P2pInfoRsp_DEV::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_DEV::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_DEV::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_DEV.strP2pID)
}

// uint32 uiLease = 3;
void P2pInfoRsp_DEV::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 P2pInfoRsp_DEV::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_DEV.uiLease)
  return uilease_;
}
void P2pInfoRsp_DEV::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_DEV.uiLease)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFileReq_DEV::kStrDevIDFieldNumber;
const int AddFileReq_DEV::kFileInfoFieldNumber;
const int AddFileReq_DEV::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFileReq_DEV::AddFileReq_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFileReq_DEV)
}
AddFileReq_DEV::AddFileReq_DEV(const AddFileReq_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileinfo_(from.fileinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFileReq_DEV)
}

void AddFileReq_DEV::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFileReq_DEV::~AddFileReq_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFileReq_DEV)
  SharedDtor();
}

void AddFileReq_DEV::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFileReq_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFileReq_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[20].descriptor;
}

const AddFileReq_DEV& AddFileReq_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFileReq_DEV* AddFileReq_DEV::New(::google::protobuf::Arena* arena) const {
  AddFileReq_DEV* n = new AddFileReq_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFileReq_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFileReq_DEV)
  fileinfo_.Clear();
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFileReq_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFileReq_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileReq_DEV.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.File fileInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileReq_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFileReq_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFileReq_DEV)
  return false;
#undef DO_
}

void AddFileReq_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFileReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileinfo(i), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFileReq_DEV)
}

::google::protobuf::uint8* AddFileReq_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFileReq_DEV)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileinfo(i), false, target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileReq_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFileReq_DEV)
  return target;
}

size_t AddFileReq_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFileReq_DEV)
  size_t total_size = 0;

  // repeated .Interactive.Message.File fileInfo = 2;
  {
    unsigned int count = this->fileinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfo(i));
    }
  }

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFileReq_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFileReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFileReq_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFileReq_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFileReq_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFileReq_DEV)
    MergeFrom(*source);
  }
}

void AddFileReq_DEV::MergeFrom(const AddFileReq_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFileReq_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileinfo_.MergeFrom(from.fileinfo_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddFileReq_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFileReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFileReq_DEV::CopyFrom(const AddFileReq_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFileReq_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFileReq_DEV::IsInitialized() const {
  return true;
}

void AddFileReq_DEV::Swap(AddFileReq_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFileReq_DEV::InternalSwap(AddFileReq_DEV* other) {
  fileinfo_.UnsafeArenaSwap(&other->fileinfo_);
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFileReq_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFileReq_DEV

// string strDevID = 1;
void AddFileReq_DEV::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFileReq_DEV::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.strDevID)
  return strdevid_.GetNoArena();
}
void AddFileReq_DEV::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileReq_DEV.strDevID)
}
#if LANG_CXX11
void AddFileReq_DEV::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileReq_DEV.strDevID)
}
#endif
void AddFileReq_DEV::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileReq_DEV.strDevID)
}
void AddFileReq_DEV::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileReq_DEV.strDevID)
}
::std::string* AddFileReq_DEV::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFileReq_DEV::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileReq_DEV.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFileReq_DEV::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileReq_DEV.strDevID)
}

// repeated .Interactive.Message.File fileInfo = 2;
int AddFileReq_DEV::fileinfo_size() const {
  return fileinfo_.size();
}
void AddFileReq_DEV::clear_fileinfo() {
  fileinfo_.Clear();
}
const ::Interactive::Message::File& AddFileReq_DEV::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Get(index);
}
::Interactive::Message::File* AddFileReq_DEV::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Mutable(index);
}
::Interactive::Message::File* AddFileReq_DEV::add_fileinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
AddFileReq_DEV::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.AddFileReq_DEV.fileInfo)
  return &fileinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
AddFileReq_DEV::fileinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.AddFileReq_DEV.fileInfo)
  return fileinfo_;
}

// string strValue = 3;
void AddFileReq_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFileReq_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileReq_DEV.strValue)
  return strvalue_.GetNoArena();
}
void AddFileReq_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileReq_DEV.strValue)
}
#if LANG_CXX11
void AddFileReq_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileReq_DEV.strValue)
}
#endif
void AddFileReq_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileReq_DEV.strValue)
}
void AddFileReq_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileReq_DEV.strValue)
}
::std::string* AddFileReq_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileReq_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFileReq_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileReq_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFileReq_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileReq_DEV.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFileRsp_DEV::kStrValueFieldNumber;
const int AddFileRsp_DEV::kStrFileIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFileRsp_DEV::AddFileRsp_DEV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFileRsp_DEV)
}
AddFileRsp_DEV::AddFileRsp_DEV(const AddFileRsp_DEV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileidfailed_(from.strfileidfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFileRsp_DEV)
}

void AddFileRsp_DEV::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFileRsp_DEV::~AddFileRsp_DEV() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFileRsp_DEV)
  SharedDtor();
}

void AddFileRsp_DEV::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFileRsp_DEV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFileRsp_DEV::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[21].descriptor;
}

const AddFileRsp_DEV& AddFileRsp_DEV::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFileRsp_DEV* AddFileRsp_DEV::New(::google::protobuf::Arena* arena) const {
  AddFileRsp_DEV* n = new AddFileRsp_DEV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFileRsp_DEV::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFileRsp_DEV)
  strfileidfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFileRsp_DEV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFileRsp_DEV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileRsp_DEV.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileidfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileidfailed(this->strfileidfailed_size() - 1).data(),
            this->strfileidfailed(this->strfileidfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFileRsp_DEV.strFileIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFileRsp_DEV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFileRsp_DEV)
  return false;
#undef DO_
}

void AddFileRsp_DEV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFileRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strFileIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileidfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFileRsp_DEV)
}

::google::protobuf::uint8* AddFileRsp_DEV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFileRsp_DEV)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFileRsp_DEV.strFileIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileidfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFileRsp_DEV)
  return target;
}

size_t AddFileRsp_DEV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFileRsp_DEV)
  size_t total_size = 0;

  // repeated string strFileIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileidfailed_size());
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileidfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFileRsp_DEV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFileRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFileRsp_DEV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFileRsp_DEV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFileRsp_DEV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFileRsp_DEV)
    MergeFrom(*source);
  }
}

void AddFileRsp_DEV::MergeFrom(const AddFileRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFileRsp_DEV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileidfailed_.MergeFrom(from.strfileidfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddFileRsp_DEV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFileRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFileRsp_DEV::CopyFrom(const AddFileRsp_DEV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFileRsp_DEV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFileRsp_DEV::IsInitialized() const {
  return true;
}

void AddFileRsp_DEV::Swap(AddFileRsp_DEV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFileRsp_DEV::InternalSwap(AddFileRsp_DEV* other) {
  strfileidfailed_.UnsafeArenaSwap(&other->strfileidfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFileRsp_DEV::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFileRsp_DEV

// string strValue = 1;
void AddFileRsp_DEV::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFileRsp_DEV::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileRsp_DEV.strValue)
  return strvalue_.GetNoArena();
}
void AddFileRsp_DEV::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileRsp_DEV.strValue)
}
#if LANG_CXX11
void AddFileRsp_DEV::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFileRsp_DEV.strValue)
}
#endif
void AddFileRsp_DEV::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileRsp_DEV.strValue)
}
void AddFileRsp_DEV::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileRsp_DEV.strValue)
}
::std::string* AddFileRsp_DEV::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileRsp_DEV.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFileRsp_DEV::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFileRsp_DEV.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFileRsp_DEV::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFileRsp_DEV.strValue)
}

// repeated string strFileIDFailed = 2;
int AddFileRsp_DEV::strfileidfailed_size() const {
  return strfileidfailed_.size();
}
void AddFileRsp_DEV::clear_strfileidfailed() {
  strfileidfailed_.Clear();
}
const ::std::string& AddFileRsp_DEV::strfileidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Get(index);
}
::std::string* AddFileRsp_DEV::mutable_strfileidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Mutable(index);
}
void AddFileRsp_DEV::set_strfileidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  strfileidfailed_.Mutable(index)->assign(value);
}
void AddFileRsp_DEV::set_strfileidfailed(int index, const char* value) {
  strfileidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
void AddFileRsp_DEV::set_strfileidfailed(int index, const char* value, size_t size) {
  strfileidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
::std::string* AddFileRsp_DEV::add_strfileidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_.Add();
}
void AddFileRsp_DEV::add_strfileidfailed(const ::std::string& value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
void AddFileRsp_DEV::add_strfileidfailed(const char* value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
void AddFileRsp_DEV::add_strfileidfailed(const char* value, size_t size) {
  strfileidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddFileRsp_DEV::strfileidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return strfileidfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AddFileRsp_DEV::mutable_strfileidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.AddFileRsp_DEV.strFileIDFailed)
  return &strfileidfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPreHandlerReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPreHandlerReq_USR::MsgPreHandlerReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.MsgPreHandlerReq_USR)
}
MsgPreHandlerReq_USR::MsgPreHandlerReq_USR(const MsgPreHandlerReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.MsgPreHandlerReq_USR)
}

void MsgPreHandlerReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgPreHandlerReq_USR::~MsgPreHandlerReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.MsgPreHandlerReq_USR)
  SharedDtor();
}

void MsgPreHandlerReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgPreHandlerReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPreHandlerReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[22].descriptor;
}

const MsgPreHandlerReq_USR& MsgPreHandlerReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgPreHandlerReq_USR* MsgPreHandlerReq_USR::New(::google::protobuf::Arena* arena) const {
  MsgPreHandlerReq_USR* n = new MsgPreHandlerReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgPreHandlerReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.MsgPreHandlerReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgPreHandlerReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.MsgPreHandlerReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.MsgPreHandlerReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.MsgPreHandlerReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.MsgPreHandlerReq_USR)
  return false;
#undef DO_
}

void MsgPreHandlerReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.MsgPreHandlerReq_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.MsgPreHandlerReq_USR)
}

::google::protobuf::uint8* MsgPreHandlerReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.MsgPreHandlerReq_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.MsgPreHandlerReq_USR)
  return target;
}

size_t MsgPreHandlerReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.MsgPreHandlerReq_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPreHandlerReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPreHandlerReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPreHandlerReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.MsgPreHandlerReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.MsgPreHandlerReq_USR)
    MergeFrom(*source);
  }
}

void MsgPreHandlerReq_USR::MergeFrom(const MsgPreHandlerReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void MsgPreHandlerReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPreHandlerReq_USR::CopyFrom(const MsgPreHandlerReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.MsgPreHandlerReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPreHandlerReq_USR::IsInitialized() const {
  return true;
}

void MsgPreHandlerReq_USR::Swap(MsgPreHandlerReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPreHandlerReq_USR::InternalSwap(MsgPreHandlerReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgPreHandlerReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgPreHandlerReq_USR

// string strValue = 1;
void MsgPreHandlerReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgPreHandlerReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void MsgPreHandlerReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
#if LANG_CXX11
void MsgPreHandlerReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
#endif
void MsgPreHandlerReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
void MsgPreHandlerReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}
::std::string* MsgPreHandlerReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgPreHandlerReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.MsgPreHandlerReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgPreHandlerReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.MsgPreHandlerReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPreHandlerRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPreHandlerRsp_USR::MsgPreHandlerRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.MsgPreHandlerRsp_USR)
}
MsgPreHandlerRsp_USR::MsgPreHandlerRsp_USR(const MsgPreHandlerRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.MsgPreHandlerRsp_USR)
}

void MsgPreHandlerRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgPreHandlerRsp_USR::~MsgPreHandlerRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.MsgPreHandlerRsp_USR)
  SharedDtor();
}

void MsgPreHandlerRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgPreHandlerRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPreHandlerRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[23].descriptor;
}

const MsgPreHandlerRsp_USR& MsgPreHandlerRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgPreHandlerRsp_USR* MsgPreHandlerRsp_USR::New(::google::protobuf::Arena* arena) const {
  MsgPreHandlerRsp_USR* n = new MsgPreHandlerRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgPreHandlerRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.MsgPreHandlerRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgPreHandlerRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.MsgPreHandlerRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.MsgPreHandlerRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.MsgPreHandlerRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.MsgPreHandlerRsp_USR)
  return false;
#undef DO_
}

void MsgPreHandlerRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.MsgPreHandlerRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.MsgPreHandlerRsp_USR)
}

::google::protobuf::uint8* MsgPreHandlerRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.MsgPreHandlerRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.MsgPreHandlerRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.MsgPreHandlerRsp_USR)
  return target;
}

size_t MsgPreHandlerRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.MsgPreHandlerRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPreHandlerRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPreHandlerRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPreHandlerRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.MsgPreHandlerRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.MsgPreHandlerRsp_USR)
    MergeFrom(*source);
  }
}

void MsgPreHandlerRsp_USR::MergeFrom(const MsgPreHandlerRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void MsgPreHandlerRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPreHandlerRsp_USR::CopyFrom(const MsgPreHandlerRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.MsgPreHandlerRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPreHandlerRsp_USR::IsInitialized() const {
  return true;
}

void MsgPreHandlerRsp_USR::Swap(MsgPreHandlerRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPreHandlerRsp_USR::InternalSwap(MsgPreHandlerRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgPreHandlerRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgPreHandlerRsp_USR

// string strValue = 1;
void MsgPreHandlerRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgPreHandlerRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void MsgPreHandlerRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
#if LANG_CXX11
void MsgPreHandlerRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
#endif
void MsgPreHandlerRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
void MsgPreHandlerRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}
::std::string* MsgPreHandlerRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgPreHandlerRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgPreHandlerRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.MsgPreHandlerRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressReq_USR::kStrSerializeIDFieldNumber;
const int GetAccessAddressReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressReq_USR::GetAccessAddressReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressReq_USR)
}
GetAccessAddressReq_USR::GetAccessAddressReq_USR(const GetAccessAddressReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strserializeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strserializeid().size() > 0) {
    strserializeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserializeid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressReq_USR)
}

void GetAccessAddressReq_USR::SharedCtor() {
  strserializeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressReq_USR::~GetAccessAddressReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressReq_USR)
  SharedDtor();
}

void GetAccessAddressReq_USR::SharedDtor() {
  strserializeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[24].descriptor;
}

const GetAccessAddressReq_USR& GetAccessAddressReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressReq_USR* GetAccessAddressReq_USR::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressReq_USR* n = new GetAccessAddressReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressReq_USR)
  strserializeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strSerializeID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserializeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strserializeid().data(), this->strserializeid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_USR.strSerializeID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressReq_USR)
  return false;
#undef DO_
}

void GetAccessAddressReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressReq_USR)
  // string strSerializeID = 1;
  if (this->strserializeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserializeid().data(), this->strserializeid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strSerializeID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strserializeid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressReq_USR)
}

::google::protobuf::uint8* GetAccessAddressReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressReq_USR)
  // string strSerializeID = 1;
  if (this->strserializeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strserializeid().data(), this->strserializeid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strSerializeID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strserializeid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressReq_USR)
  return target;
}

size_t GetAccessAddressReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressReq_USR)
  size_t total_size = 0;

  // string strSerializeID = 1;
  if (this->strserializeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strserializeid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressReq_USR)
    MergeFrom(*source);
  }
}

void GetAccessAddressReq_USR::MergeFrom(const GetAccessAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strserializeid().size() > 0) {

    strserializeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strserializeid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressReq_USR::CopyFrom(const GetAccessAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressReq_USR::IsInitialized() const {
  return true;
}

void GetAccessAddressReq_USR::Swap(GetAccessAddressReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressReq_USR::InternalSwap(GetAccessAddressReq_USR* other) {
  strserializeid_.Swap(&other->strserializeid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressReq_USR

// string strSerializeID = 1;
void GetAccessAddressReq_USR::clear_strserializeid() {
  strserializeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_USR::strserializeid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  return strserializeid_.GetNoArena();
}
void GetAccessAddressReq_USR::set_strserializeid(const ::std::string& value) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
#if LANG_CXX11
void GetAccessAddressReq_USR::set_strserializeid(::std::string&& value) {
  
  strserializeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
#endif
void GetAccessAddressReq_USR::set_strserializeid(const char* value) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
void GetAccessAddressReq_USR::set_strserializeid(const char* value, size_t size) {
  
  strserializeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}
::std::string* GetAccessAddressReq_USR::mutable_strserializeid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  return strserializeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_USR::release_strserializeid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
  
  return strserializeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_USR::set_allocated_strserializeid(::std::string* strserializeid) {
  if (strserializeid != NULL) {
    
  } else {
    
  }
  strserializeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserializeid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_USR.strSerializeID)
}

// string strValue = 2;
void GetAccessAddressReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
#if LANG_CXX11
void GetAccessAddressReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
#endif
void GetAccessAddressReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
void GetAccessAddressReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressReq_USR.strValue)
}
::std::string* GetAccessAddressReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessAddressRsp_USR::kStrAccessAddressFieldNumber;
const int GetAccessAddressRsp_USR::kStrAccessPortFieldNumber;
const int GetAccessAddressRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessAddressRsp_USR::GetAccessAddressRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetAccessAddressRsp_USR)
}
GetAccessAddressRsp_USR::GetAccessAddressRsp_USR(const GetAccessAddressRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessaddress().size() > 0) {
    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessport().size() > 0) {
    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetAccessAddressRsp_USR)
}

void GetAccessAddressRsp_USR::SharedCtor() {
  straccessaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAccessAddressRsp_USR::~GetAccessAddressRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetAccessAddressRsp_USR)
  SharedDtor();
}

void GetAccessAddressRsp_USR::SharedDtor() {
  straccessaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessAddressRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccessAddressRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[25].descriptor;
}

const GetAccessAddressRsp_USR& GetAccessAddressRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAccessAddressRsp_USR* GetAccessAddressRsp_USR::New(::google::protobuf::Arena* arena) const {
  GetAccessAddressRsp_USR* n = new GetAccessAddressRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccessAddressRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetAccessAddressRsp_USR)
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccessAddressRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetAccessAddressRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessaddress().data(), this->straccessaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAccessPort = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessport().data(), this->straccessport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_USR.strAccessPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetAccessAddressRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetAccessAddressRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetAccessAddressRsp_USR)
  return false;
#undef DO_
}

void GetAccessAddressRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetAccessAddressRsp_USR)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessaddress(), output);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->straccessport(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetAccessAddressRsp_USR)
}

::google::protobuf::uint8* GetAccessAddressRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetAccessAddressRsp_USR)
  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessaddress().data(), this->straccessaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessaddress(), target);
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessport().data(), this->straccessport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strAccessPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->straccessport(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetAccessAddressRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetAccessAddressRsp_USR)
  return target;
}

size_t GetAccessAddressRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetAccessAddressRsp_USR)
  size_t total_size = 0;

  // string strAccessAddress = 1;
  if (this->straccessaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessaddress());
  }

  // string strAccessPort = 2;
  if (this->straccessport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessport());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccessAddressRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessAddressRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccessAddressRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetAccessAddressRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetAccessAddressRsp_USR)
    MergeFrom(*source);
  }
}

void GetAccessAddressRsp_USR::MergeFrom(const GetAccessAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessaddress().size() > 0) {

    straccessaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessaddress_);
  }
  if (from.straccessport().size() > 0) {

    straccessport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessport_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetAccessAddressRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessAddressRsp_USR::CopyFrom(const GetAccessAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetAccessAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessAddressRsp_USR::IsInitialized() const {
  return true;
}

void GetAccessAddressRsp_USR::Swap(GetAccessAddressRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessAddressRsp_USR::InternalSwap(GetAccessAddressRsp_USR* other) {
  straccessaddress_.Swap(&other->straccessaddress_);
  straccessport_.Swap(&other->straccessport_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccessAddressRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccessAddressRsp_USR

// string strAccessAddress = 1;
void GetAccessAddressRsp_USR::clear_straccessaddress() {
  straccessaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_USR::straccessaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  return straccessaddress_.GetNoArena();
}
void GetAccessAddressRsp_USR::set_straccessaddress(const ::std::string& value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
#if LANG_CXX11
void GetAccessAddressRsp_USR::set_straccessaddress(::std::string&& value) {
  
  straccessaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
#endif
void GetAccessAddressRsp_USR::set_straccessaddress(const char* value) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
void GetAccessAddressRsp_USR::set_straccessaddress(const char* value, size_t size) {
  
  straccessaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}
::std::string* GetAccessAddressRsp_USR::mutable_straccessaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  return straccessaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_USR::release_straccessaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
  
  return straccessaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_USR::set_allocated_straccessaddress(::std::string* straccessaddress) {
  if (straccessaddress != NULL) {
    
  } else {
    
  }
  straccessaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strAccessAddress)
}

// string strAccessPort = 2;
void GetAccessAddressRsp_USR::clear_straccessport() {
  straccessport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_USR::straccessport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  return straccessport_.GetNoArena();
}
void GetAccessAddressRsp_USR::set_straccessport(const ::std::string& value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
#if LANG_CXX11
void GetAccessAddressRsp_USR::set_straccessport(::std::string&& value) {
  
  straccessport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
#endif
void GetAccessAddressRsp_USR::set_straccessport(const char* value) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
void GetAccessAddressRsp_USR::set_straccessport(const char* value, size_t size) {
  
  straccessport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}
::std::string* GetAccessAddressRsp_USR::mutable_straccessport() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  return straccessport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_USR::release_straccessport() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
  
  return straccessport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_USR::set_allocated_straccessport(::std::string* straccessport) {
  if (straccessport != NULL) {
    
  } else {
    
  }
  straccessport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessport);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strAccessPort)
}

// string strValue = 3;
void GetAccessAddressRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAccessAddressRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void GetAccessAddressRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
#if LANG_CXX11
void GetAccessAddressRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
#endif
void GetAccessAddressRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
void GetAccessAddressRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}
::std::string* GetAccessAddressRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAccessAddressRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetAccessAddressRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAccessAddressRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetAccessAddressRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterUserReq_USR::kUserInfoFieldNumber;
const int RegisterUserReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterUserReq_USR::RegisterUserReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RegisterUserReq_USR)
}
RegisterUserReq_USR::RegisterUserReq_USR(const RegisterUserReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RegisterUserReq_USR)
}

void RegisterUserReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

RegisterUserReq_USR::~RegisterUserReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RegisterUserReq_USR)
  SharedDtor();
}

void RegisterUserReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void RegisterUserReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterUserReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[26].descriptor;
}

const RegisterUserReq_USR& RegisterUserReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterUserReq_USR* RegisterUserReq_USR::New(::google::protobuf::Arena* arena) const {
  RegisterUserReq_USR* n = new RegisterUserReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterUserReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RegisterUserReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool RegisterUserReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RegisterUserReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterUserReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RegisterUserReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RegisterUserReq_USR)
  return false;
#undef DO_
}

void RegisterUserReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RegisterUserReq_USR)
}

::google::protobuf::uint8* RegisterUserReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RegisterUserReq_USR)
  return target;
}

size_t RegisterUserReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RegisterUserReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterUserReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterUserReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterUserReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RegisterUserReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RegisterUserReq_USR)
    MergeFrom(*source);
  }
}

void RegisterUserReq_USR::MergeFrom(const RegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void RegisterUserReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterUserReq_USR::CopyFrom(const RegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterUserReq_USR::IsInitialized() const {
  return true;
}

void RegisterUserReq_USR::Swap(RegisterUserReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterUserReq_USR::InternalSwap(RegisterUserReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterUserReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterUserReq_USR

// .Interactive.Message.User userInfo = 1;
bool RegisterUserReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void RegisterUserReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& RegisterUserReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* RegisterUserReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* RegisterUserReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void RegisterUserReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserReq_USR.userInfo)
}

// string strValue = 2;
void RegisterUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void RegisterUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserReq_USR.strValue)
}
#if LANG_CXX11
void RegisterUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserReq_USR.strValue)
}
#endif
void RegisterUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserReq_USR.strValue)
}
void RegisterUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserReq_USR.strValue)
}
::std::string* RegisterUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterUserRsp_USR::kStrUserIDFieldNumber;
const int RegisterUserRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterUserRsp_USR::RegisterUserRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.RegisterUserRsp_USR)
}
RegisterUserRsp_USR::RegisterUserRsp_USR(const RegisterUserRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.RegisterUserRsp_USR)
}

void RegisterUserRsp_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterUserRsp_USR::~RegisterUserRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.RegisterUserRsp_USR)
  SharedDtor();
}

void RegisterUserRsp_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterUserRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterUserRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[27].descriptor;
}

const RegisterUserRsp_USR& RegisterUserRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterUserRsp_USR* RegisterUserRsp_USR::New(::google::protobuf::Arena* arena) const {
  RegisterUserRsp_USR* n = new RegisterUserRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterUserRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.RegisterUserRsp_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegisterUserRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.RegisterUserRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterUserRsp_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.RegisterUserRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.RegisterUserRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.RegisterUserRsp_USR)
  return false;
#undef DO_
}

void RegisterUserRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.RegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.RegisterUserRsp_USR)
}

::google::protobuf::uint8* RegisterUserRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.RegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.RegisterUserRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.RegisterUserRsp_USR)
  return target;
}

size_t RegisterUserRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.RegisterUserRsp_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterUserRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.RegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterUserRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterUserRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.RegisterUserRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.RegisterUserRsp_USR)
    MergeFrom(*source);
  }
}

void RegisterUserRsp_USR::MergeFrom(const RegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.RegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void RegisterUserRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.RegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterUserRsp_USR::CopyFrom(const RegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.RegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterUserRsp_USR::IsInitialized() const {
  return true;
}

void RegisterUserRsp_USR::Swap(RegisterUserRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterUserRsp_USR::InternalSwap(RegisterUserRsp_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterUserRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterUserRsp_USR

// string strUserID = 1;
void RegisterUserRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterUserRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
void RegisterUserRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
#if LANG_CXX11
void RegisterUserRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
#endif
void RegisterUserRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
void RegisterUserRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserRsp_USR.strUserID)
}
::std::string* RegisterUserRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterUserRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterUserRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserRsp_USR.strUserID)
}

// string strValue = 2;
void RegisterUserRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterUserRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.RegisterUserRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void RegisterUserRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.RegisterUserRsp_USR.strValue)
}
#if LANG_CXX11
void RegisterUserRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.RegisterUserRsp_USR.strValue)
}
#endif
void RegisterUserRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.RegisterUserRsp_USR.strValue)
}
void RegisterUserRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.RegisterUserRsp_USR.strValue)
}
::std::string* RegisterUserRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.RegisterUserRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterUserRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.RegisterUserRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterUserRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.RegisterUserRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnRegisterUserReq_USR::kUserInfoFieldNumber;
const int UnRegisterUserReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnRegisterUserReq_USR::UnRegisterUserReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UnRegisterUserReq_USR)
}
UnRegisterUserReq_USR::UnRegisterUserReq_USR(const UnRegisterUserReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UnRegisterUserReq_USR)
}

void UnRegisterUserReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

UnRegisterUserReq_USR::~UnRegisterUserReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UnRegisterUserReq_USR)
  SharedDtor();
}

void UnRegisterUserReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void UnRegisterUserReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnRegisterUserReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[28].descriptor;
}

const UnRegisterUserReq_USR& UnRegisterUserReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnRegisterUserReq_USR* UnRegisterUserReq_USR::New(::google::protobuf::Arena* arena) const {
  UnRegisterUserReq_USR* n = new UnRegisterUserReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnRegisterUserReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UnRegisterUserReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool UnRegisterUserReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UnRegisterUserReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnRegisterUserReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UnRegisterUserReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UnRegisterUserReq_USR)
  return false;
#undef DO_
}

void UnRegisterUserReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UnRegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UnRegisterUserReq_USR)
}

::google::protobuf::uint8* UnRegisterUserReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UnRegisterUserReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UnRegisterUserReq_USR)
  return target;
}

size_t UnRegisterUserReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UnRegisterUserReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnRegisterUserReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UnRegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UnRegisterUserReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnRegisterUserReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UnRegisterUserReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UnRegisterUserReq_USR)
    MergeFrom(*source);
  }
}

void UnRegisterUserReq_USR::MergeFrom(const UnRegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UnRegisterUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void UnRegisterUserReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UnRegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnRegisterUserReq_USR::CopyFrom(const UnRegisterUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UnRegisterUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnRegisterUserReq_USR::IsInitialized() const {
  return true;
}

void UnRegisterUserReq_USR::Swap(UnRegisterUserReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnRegisterUserReq_USR::InternalSwap(UnRegisterUserReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnRegisterUserReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnRegisterUserReq_USR

// .Interactive.Message.User userInfo = 1;
bool UnRegisterUserReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void UnRegisterUserReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& UnRegisterUserReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* UnRegisterUserReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* UnRegisterUserReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void UnRegisterUserReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserReq_USR.userInfo)
}

// string strValue = 2;
void UnRegisterUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnRegisterUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void UnRegisterUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
#if LANG_CXX11
void UnRegisterUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
#endif
void UnRegisterUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
void UnRegisterUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserReq_USR.strValue)
}
::std::string* UnRegisterUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnRegisterUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnRegisterUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnRegisterUserRsp_USR::kStrUserIDFieldNumber;
const int UnRegisterUserRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnRegisterUserRsp_USR::UnRegisterUserRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.UnRegisterUserRsp_USR)
}
UnRegisterUserRsp_USR::UnRegisterUserRsp_USR(const UnRegisterUserRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.UnRegisterUserRsp_USR)
}

void UnRegisterUserRsp_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnRegisterUserRsp_USR::~UnRegisterUserRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.UnRegisterUserRsp_USR)
  SharedDtor();
}

void UnRegisterUserRsp_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnRegisterUserRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnRegisterUserRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[29].descriptor;
}

const UnRegisterUserRsp_USR& UnRegisterUserRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnRegisterUserRsp_USR* UnRegisterUserRsp_USR::New(::google::protobuf::Arena* arena) const {
  UnRegisterUserRsp_USR* n = new UnRegisterUserRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnRegisterUserRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.UnRegisterUserRsp_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UnRegisterUserRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.UnRegisterUserRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnRegisterUserRsp_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.UnRegisterUserRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.UnRegisterUserRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.UnRegisterUserRsp_USR)
  return false;
#undef DO_
}

void UnRegisterUserRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.UnRegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.UnRegisterUserRsp_USR)
}

::google::protobuf::uint8* UnRegisterUserRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.UnRegisterUserRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.UnRegisterUserRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.UnRegisterUserRsp_USR)
  return target;
}

size_t UnRegisterUserRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.UnRegisterUserRsp_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnRegisterUserRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const UnRegisterUserRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnRegisterUserRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.UnRegisterUserRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.UnRegisterUserRsp_USR)
    MergeFrom(*source);
  }
}

void UnRegisterUserRsp_USR::MergeFrom(const UnRegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void UnRegisterUserRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnRegisterUserRsp_USR::CopyFrom(const UnRegisterUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.UnRegisterUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnRegisterUserRsp_USR::IsInitialized() const {
  return true;
}

void UnRegisterUserRsp_USR::Swap(UnRegisterUserRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnRegisterUserRsp_USR::InternalSwap(UnRegisterUserRsp_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnRegisterUserRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnRegisterUserRsp_USR

// string strUserID = 1;
void UnRegisterUserRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnRegisterUserRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
void UnRegisterUserRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
#if LANG_CXX11
void UnRegisterUserRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
#endif
void UnRegisterUserRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
void UnRegisterUserRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}
::std::string* UnRegisterUserRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnRegisterUserRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnRegisterUserRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserRsp_USR.strUserID)
}

// string strValue = 2;
void UnRegisterUserRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnRegisterUserRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void UnRegisterUserRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
#if LANG_CXX11
void UnRegisterUserRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
#endif
void UnRegisterUserRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
void UnRegisterUserRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}
::std::string* UnRegisterUserRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnRegisterUserRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.UnRegisterUserRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnRegisterUserRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.UnRegisterUserRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUsrInfoReq_USR::kStrUserIDFieldNumber;
const int QueryUsrInfoReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUsrInfoReq_USR::QueryUsrInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUsrInfoReq_USR)
}
QueryUsrInfoReq_USR::QueryUsrInfoReq_USR(const QueryUsrInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUsrInfoReq_USR)
}

void QueryUsrInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUsrInfoReq_USR::~QueryUsrInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUsrInfoReq_USR)
  SharedDtor();
}

void QueryUsrInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUsrInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUsrInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[30].descriptor;
}

const QueryUsrInfoReq_USR& QueryUsrInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUsrInfoReq_USR* QueryUsrInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryUsrInfoReq_USR* n = new QueryUsrInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUsrInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUsrInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryUsrInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUsrInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUsrInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUsrInfoReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUsrInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUsrInfoReq_USR)
  return false;
#undef DO_
}

void QueryUsrInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUsrInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUsrInfoReq_USR)
}

::google::protobuf::uint8* QueryUsrInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUsrInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUsrInfoReq_USR)
  return target;
}

size_t QueryUsrInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUsrInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUsrInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUsrInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUsrInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUsrInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUsrInfoReq_USR)
    MergeFrom(*source);
  }
}

void QueryUsrInfoReq_USR::MergeFrom(const QueryUsrInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryUsrInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUsrInfoReq_USR::CopyFrom(const QueryUsrInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUsrInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUsrInfoReq_USR::IsInitialized() const {
  return true;
}

void QueryUsrInfoReq_USR::Swap(QueryUsrInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUsrInfoReq_USR::InternalSwap(QueryUsrInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUsrInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUsrInfoReq_USR

// string strUserID = 1;
void QueryUsrInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUsrInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryUsrInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
#if LANG_CXX11
void QueryUsrInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
#endif
void QueryUsrInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
void QueryUsrInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}
::std::string* QueryUsrInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUsrInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUsrInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoReq_USR.strUserID)
}

// string strValue = 2;
void QueryUsrInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUsrInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUsrInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
#if LANG_CXX11
void QueryUsrInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
#endif
void QueryUsrInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
void QueryUsrInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}
::std::string* QueryUsrInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUsrInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUsrInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUsrInfoRsp_USR::kUserInfoFieldNumber;
const int QueryUsrInfoRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUsrInfoRsp_USR::QueryUsrInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUsrInfoRsp_USR)
}
QueryUsrInfoRsp_USR::QueryUsrInfoRsp_USR(const QueryUsrInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUsrInfoRsp_USR)
}

void QueryUsrInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

QueryUsrInfoRsp_USR::~QueryUsrInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUsrInfoRsp_USR)
  SharedDtor();
}

void QueryUsrInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void QueryUsrInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUsrInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[31].descriptor;
}

const QueryUsrInfoRsp_USR& QueryUsrInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUsrInfoRsp_USR* QueryUsrInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryUsrInfoRsp_USR* n = new QueryUsrInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUsrInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUsrInfoRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool QueryUsrInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUsrInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUsrInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUsrInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUsrInfoRsp_USR)
  return false;
#undef DO_
}

void QueryUsrInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUsrInfoRsp_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUsrInfoRsp_USR)
}

::google::protobuf::uint8* QueryUsrInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUsrInfoRsp_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUsrInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUsrInfoRsp_USR)
  return target;
}

size_t QueryUsrInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUsrInfoRsp_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUsrInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUsrInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUsrInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUsrInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUsrInfoRsp_USR)
    MergeFrom(*source);
  }
}

void QueryUsrInfoRsp_USR::MergeFrom(const QueryUsrInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void QueryUsrInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUsrInfoRsp_USR::CopyFrom(const QueryUsrInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUsrInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUsrInfoRsp_USR::IsInitialized() const {
  return true;
}

void QueryUsrInfoRsp_USR::Swap(QueryUsrInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUsrInfoRsp_USR::InternalSwap(QueryUsrInfoRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUsrInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUsrInfoRsp_USR

// .Interactive.Message.User userInfo = 1;
bool QueryUsrInfoRsp_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void QueryUsrInfoRsp_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& QueryUsrInfoRsp_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* QueryUsrInfoRsp_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* QueryUsrInfoRsp_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void QueryUsrInfoRsp_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoRsp_USR.userInfo)
}

// string strValue = 2;
void QueryUsrInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUsrInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUsrInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
#if LANG_CXX11
void QueryUsrInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
#endif
void QueryUsrInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
void QueryUsrInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}
::std::string* QueryUsrInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUsrInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUsrInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUsrInfoRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyUserInfoReq_USR::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyUserInfoReq_USR::ModifyUserInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyUserInfoReq_USR)
}
ModifyUserInfoReq_USR::ModifyUserInfoReq_USR(const ModifyUserInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyUserInfoReq_USR)
}

void ModifyUserInfoReq_USR::SharedCtor() {
  userinfo_ = NULL;
  _cached_size_ = 0;
}

ModifyUserInfoReq_USR::~ModifyUserInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyUserInfoReq_USR)
  SharedDtor();
}

void ModifyUserInfoReq_USR::SharedDtor() {
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void ModifyUserInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyUserInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[32].descriptor;
}

const ModifyUserInfoReq_USR& ModifyUserInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyUserInfoReq_USR* ModifyUserInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  ModifyUserInfoReq_USR* n = new ModifyUserInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyUserInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyUserInfoReq_USR)
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool ModifyUserInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyUserInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyUserInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyUserInfoReq_USR)
  return false;
#undef DO_
}

void ModifyUserInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyUserInfoReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyUserInfoReq_USR)
}

::google::protobuf::uint8* ModifyUserInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyUserInfoReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyUserInfoReq_USR)
  return target;
}

size_t ModifyUserInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyUserInfoReq_USR)
  size_t total_size = 0;

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyUserInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyUserInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyUserInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyUserInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyUserInfoReq_USR)
    MergeFrom(*source);
  }
}

void ModifyUserInfoReq_USR::MergeFrom(const ModifyUserInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void ModifyUserInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyUserInfoReq_USR::CopyFrom(const ModifyUserInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyUserInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyUserInfoReq_USR::IsInitialized() const {
  return true;
}

void ModifyUserInfoReq_USR::Swap(ModifyUserInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyUserInfoReq_USR::InternalSwap(ModifyUserInfoReq_USR* other) {
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyUserInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyUserInfoReq_USR

// .Interactive.Message.User userInfo = 1;
bool ModifyUserInfoReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void ModifyUserInfoReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& ModifyUserInfoReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* ModifyUserInfoReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* ModifyUserInfoReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void ModifyUserInfoReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoReq_USR.userInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyUserInfoRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyUserInfoRsp_USR::ModifyUserInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyUserInfoRsp_USR)
}
ModifyUserInfoRsp_USR::ModifyUserInfoRsp_USR(const ModifyUserInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyUserInfoRsp_USR)
}

void ModifyUserInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyUserInfoRsp_USR::~ModifyUserInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyUserInfoRsp_USR)
  SharedDtor();
}

void ModifyUserInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyUserInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyUserInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[33].descriptor;
}

const ModifyUserInfoRsp_USR& ModifyUserInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyUserInfoRsp_USR* ModifyUserInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  ModifyUserInfoRsp_USR* n = new ModifyUserInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyUserInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyUserInfoRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyUserInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyUserInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyUserInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyUserInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyUserInfoRsp_USR)
  return false;
#undef DO_
}

void ModifyUserInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyUserInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyUserInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyUserInfoRsp_USR)
}

::google::protobuf::uint8* ModifyUserInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyUserInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyUserInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyUserInfoRsp_USR)
  return target;
}

size_t ModifyUserInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyUserInfoRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyUserInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyUserInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyUserInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyUserInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyUserInfoRsp_USR)
    MergeFrom(*source);
  }
}

void ModifyUserInfoRsp_USR::MergeFrom(const ModifyUserInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyUserInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyUserInfoRsp_USR::CopyFrom(const ModifyUserInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyUserInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyUserInfoRsp_USR::IsInitialized() const {
  return true;
}

void ModifyUserInfoRsp_USR::Swap(ModifyUserInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyUserInfoRsp_USR::InternalSwap(ModifyUserInfoRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyUserInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyUserInfoRsp_USR

// string strValue = 1;
void ModifyUserInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyUserInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyUserInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
#if LANG_CXX11
void ModifyUserInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
#endif
void ModifyUserInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
void ModifyUserInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}
::std::string* ModifyUserInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyUserInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyUserInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyUserInfoRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq_USR::kUserInfoFieldNumber;
const int LoginReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq_USR::LoginReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginReq_USR)
}
LoginReq_USR::LoginReq_USR(const LoginReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginReq_USR)
}

void LoginReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

LoginReq_USR::~LoginReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginReq_USR)
  SharedDtor();
}

void LoginReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void LoginReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[34].descriptor;
}

const LoginReq_USR& LoginReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq_USR* LoginReq_USR::New(::google::protobuf::Arena* arena) const {
  LoginReq_USR* n = new LoginReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool LoginReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginReq_USR)
  return false;
#undef DO_
}

void LoginReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginReq_USR)
}

::google::protobuf::uint8* LoginReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginReq_USR)
  return target;
}

size_t LoginReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginReq_USR)
    MergeFrom(*source);
  }
}

void LoginReq_USR::MergeFrom(const LoginReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void LoginReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq_USR::CopyFrom(const LoginReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq_USR::IsInitialized() const {
  return true;
}

void LoginReq_USR::Swap(LoginReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq_USR::InternalSwap(LoginReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq_USR

// .Interactive.Message.User userInfo = 1;
bool LoginReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void LoginReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& LoginReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* LoginReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* LoginReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void LoginReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_USR.userInfo)
}

// string strValue = 2;
void LoginReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void LoginReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginReq_USR.strValue)
}
#if LANG_CXX11
void LoginReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginReq_USR.strValue)
}
#endif
void LoginReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginReq_USR.strValue)
}
void LoginReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginReq_USR.strValue)
}
::std::string* LoginReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp_USR::kStrUserIDFieldNumber;
const int LoginRsp_USR::kRelationInfoFieldNumber;
const int LoginRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp_USR::LoginRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LoginRsp_USR)
}
LoginRsp_USR::LoginRsp_USR(const LoginRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      relationinfo_(from.relationinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LoginRsp_USR)
}

void LoginRsp_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRsp_USR::~LoginRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LoginRsp_USR)
  SharedDtor();
}

void LoginRsp_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[35].descriptor;
}

const LoginRsp_USR& LoginRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRsp_USR* LoginRsp_USR::New(::google::protobuf::Arena* arena) const {
  LoginRsp_USR* n = new LoginRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LoginRsp_USR)
  relationinfo_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LoginRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.Relation relationInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_relationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LoginRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LoginRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LoginRsp_USR)
  return false;
#undef DO_
}

void LoginRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LoginRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated .Interactive.Message.Relation relationInfo = 2;
  for (unsigned int i = 0, n = this->relationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->relationinfo(i), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LoginRsp_USR)
}

::google::protobuf::uint8* LoginRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LoginRsp_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated .Interactive.Message.Relation relationInfo = 2;
  for (unsigned int i = 0, n = this->relationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->relationinfo(i), false, target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LoginRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LoginRsp_USR)
  return target;
}

size_t LoginRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LoginRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Relation relationInfo = 2;
  {
    unsigned int count = this->relationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->relationinfo(i));
    }
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LoginRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LoginRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LoginRsp_USR)
    MergeFrom(*source);
  }
}

void LoginRsp_USR::MergeFrom(const LoginRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LoginRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationinfo_.MergeFrom(from.relationinfo_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LoginRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp_USR::CopyFrom(const LoginRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LoginRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp_USR::IsInitialized() const {
  return true;
}

void LoginRsp_USR::Swap(LoginRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp_USR::InternalSwap(LoginRsp_USR* other) {
  relationinfo_.UnsafeArenaSwap(&other->relationinfo_);
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp_USR

// string strUserID = 1;
void LoginRsp_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strUserID)
  return struserid_.GetNoArena();
}
void LoginRsp_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strUserID)
}
#if LANG_CXX11
void LoginRsp_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_USR.strUserID)
}
#endif
void LoginRsp_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strUserID)
}
void LoginRsp_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strUserID)
}
::std::string* LoginRsp_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_USR.strUserID)
}

// repeated .Interactive.Message.Relation relationInfo = 2;
int LoginRsp_USR::relationinfo_size() const {
  return relationinfo_.size();
}
void LoginRsp_USR::clear_relationinfo() {
  relationinfo_.Clear();
}
const ::Interactive::Message::Relation& LoginRsp_USR::relationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Get(index);
}
::Interactive::Message::Relation* LoginRsp_USR::mutable_relationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Mutable(index);
}
::Interactive::Message::Relation* LoginRsp_USR::add_relationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
LoginRsp_USR::mutable_relationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.LoginRsp_USR.relationInfo)
  return &relationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
LoginRsp_USR::relationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.LoginRsp_USR.relationInfo)
  return relationinfo_;
}

// string strValue = 3;
void LoginRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LoginRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void LoginRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LoginRsp_USR.strValue)
}
#if LANG_CXX11
void LoginRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LoginRsp_USR.strValue)
}
#endif
void LoginRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LoginRsp_USR.strValue)
}
void LoginRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LoginRsp_USR.strValue)
}
::std::string* LoginRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LoginRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LoginRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LoginRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq_USR::kUserInfoFieldNumber;
const int LogoutReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq_USR::LogoutReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutReq_USR)
}
LogoutReq_USR::LogoutReq_USR(const LogoutReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Interactive::Message::User(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutReq_USR)
}

void LogoutReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  _cached_size_ = 0;
}

LogoutReq_USR::~LogoutReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutReq_USR)
  SharedDtor();
}

void LogoutReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete userinfo_;
  }
}

void LogoutReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[36].descriptor;
}

const LogoutReq_USR& LogoutReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq_USR* LogoutReq_USR::New(::google::protobuf::Arena* arena) const {
  LogoutReq_USR* n = new LogoutReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}

bool LogoutReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutReq_USR)
  return false;
#undef DO_
}

void LogoutReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutReq_USR)
}

::google::protobuf::uint8* LogoutReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutReq_USR)
  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutReq_USR)
  return target;
}

size_t LogoutReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.User userInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutReq_USR)
    MergeFrom(*source);
  }
}

void LogoutReq_USR::MergeFrom(const LogoutReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::Interactive::Message::User::MergeFrom(from.userinfo());
  }
}

void LogoutReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq_USR::CopyFrom(const LogoutReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq_USR::IsInitialized() const {
  return true;
}

void LogoutReq_USR::Swap(LogoutReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq_USR::InternalSwap(LogoutReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq_USR

// .Interactive.Message.User userInfo = 1;
bool LogoutReq_USR::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void LogoutReq_USR::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::Interactive::Message::User& LogoutReq_USR::userinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_USR.userInfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::Interactive::Message::User::internal_default_instance();
}
::Interactive::Message::User* LogoutReq_USR::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::Interactive::Message::User;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_USR.userInfo)
  return userinfo_;
}
::Interactive::Message::User* LogoutReq_USR::release_userinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_USR.userInfo)
  
  ::Interactive::Message::User* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void LogoutReq_USR::set_allocated_userinfo(::Interactive::Message::User* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_USR.userInfo)
}

// string strValue = 2;
void LogoutReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void LogoutReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutReq_USR.strValue)
}
#if LANG_CXX11
void LogoutReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutReq_USR.strValue)
}
#endif
void LogoutReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutReq_USR.strValue)
}
void LogoutReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutReq_USR.strValue)
}
::std::string* LogoutReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRsp_USR::LogoutRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.LogoutRsp_USR)
}
LogoutRsp_USR::LogoutRsp_USR(const LogoutRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.LogoutRsp_USR)
}

void LogoutRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutRsp_USR::~LogoutRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.LogoutRsp_USR)
  SharedDtor();
}

void LogoutRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[37].descriptor;
}

const LogoutRsp_USR& LogoutRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutRsp_USR* LogoutRsp_USR::New(::google::protobuf::Arena* arena) const {
  LogoutRsp_USR* n = new LogoutRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.LogoutRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogoutRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.LogoutRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.LogoutRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.LogoutRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.LogoutRsp_USR)
  return false;
#undef DO_
}

void LogoutRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.LogoutRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.LogoutRsp_USR)
}

::google::protobuf::uint8* LogoutRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.LogoutRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.LogoutRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.LogoutRsp_USR)
  return target;
}

size_t LogoutRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.LogoutRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.LogoutRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.LogoutRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.LogoutRsp_USR)
    MergeFrom(*source);
  }
}

void LogoutRsp_USR::MergeFrom(const LogoutRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.LogoutRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LogoutRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.LogoutRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRsp_USR::CopyFrom(const LogoutRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.LogoutRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRsp_USR::IsInitialized() const {
  return true;
}

void LogoutRsp_USR::Swap(LogoutRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRsp_USR::InternalSwap(LogoutRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[37];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutRsp_USR

// string strValue = 1;
void LogoutRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogoutRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.LogoutRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void LogoutRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.LogoutRsp_USR.strValue)
}
#if LANG_CXX11
void LogoutRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.LogoutRsp_USR.strValue)
}
#endif
void LogoutRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.LogoutRsp_USR.strValue)
}
void LogoutRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.LogoutRsp_USR.strValue)
}
::std::string* LogoutRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.LogoutRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.LogoutRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.LogoutRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandReq_USR::kStrUserIDFieldNumber;
const int ShakehandReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandReq_USR::ShakehandReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandReq_USR)
}
ShakehandReq_USR::ShakehandReq_USR(const ShakehandReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandReq_USR)
}

void ShakehandReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandReq_USR::~ShakehandReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandReq_USR)
  SharedDtor();
}

void ShakehandReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[38].descriptor;
}

const ShakehandReq_USR& ShakehandReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandReq_USR* ShakehandReq_USR::New(::google::protobuf::Arena* arena) const {
  ShakehandReq_USR* n = new ShakehandReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandReq_USR)
  return false;
#undef DO_
}

void ShakehandReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandReq_USR)
}

::google::protobuf::uint8* ShakehandReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandReq_USR)
  return target;
}

size_t ShakehandReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandReq_USR)
    MergeFrom(*source);
  }
}

void ShakehandReq_USR::MergeFrom(const ShakehandReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandReq_USR::CopyFrom(const ShakehandReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandReq_USR::IsInitialized() const {
  return true;
}

void ShakehandReq_USR::Swap(ShakehandReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandReq_USR::InternalSwap(ShakehandReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[38];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandReq_USR

// string strUserID = 1;
void ShakehandReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ShakehandReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_USR.strUserID)
}
#if LANG_CXX11
void ShakehandReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_USR.strUserID)
}
#endif
void ShakehandReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_USR.strUserID)
}
void ShakehandReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_USR.strUserID)
}
::std::string* ShakehandReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_USR.strUserID)
}

// string strValue = 2;
void ShakehandReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandReq_USR.strValue)
}
#if LANG_CXX11
void ShakehandReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandReq_USR.strValue)
}
#endif
void ShakehandReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandReq_USR.strValue)
}
void ShakehandReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandReq_USR.strValue)
}
::std::string* ShakehandReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandRsp_USR::ShakehandRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ShakehandRsp_USR)
}
ShakehandRsp_USR::ShakehandRsp_USR(const ShakehandRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ShakehandRsp_USR)
}

void ShakehandRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandRsp_USR::~ShakehandRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ShakehandRsp_USR)
  SharedDtor();
}

void ShakehandRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[39].descriptor;
}

const ShakehandRsp_USR& ShakehandRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandRsp_USR* ShakehandRsp_USR::New(::google::protobuf::Arena* arena) const {
  ShakehandRsp_USR* n = new ShakehandRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ShakehandRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ShakehandRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ShakehandRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ShakehandRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ShakehandRsp_USR)
  return false;
#undef DO_
}

void ShakehandRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ShakehandRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ShakehandRsp_USR)
}

::google::protobuf::uint8* ShakehandRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ShakehandRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ShakehandRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ShakehandRsp_USR)
  return target;
}

size_t ShakehandRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ShakehandRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ShakehandRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ShakehandRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ShakehandRsp_USR)
    MergeFrom(*source);
  }
}

void ShakehandRsp_USR::MergeFrom(const ShakehandRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ShakehandRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ShakehandRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandRsp_USR::CopyFrom(const ShakehandRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ShakehandRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandRsp_USR::IsInitialized() const {
  return true;
}

void ShakehandRsp_USR::Swap(ShakehandRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandRsp_USR::InternalSwap(ShakehandRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[39];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandRsp_USR

// string strValue = 1;
void ShakehandRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ShakehandRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ShakehandRsp_USR.strValue)
}
#if LANG_CXX11
void ShakehandRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ShakehandRsp_USR.strValue)
}
#endif
void ShakehandRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ShakehandRsp_USR.strValue)
}
void ShakehandRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ShakehandRsp_USR.strValue)
}
::std::string* ShakehandRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ShakehandRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ShakehandRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ShakehandRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoReq_USR::kStrUserIDFieldNumber;
const int ConfigInfoReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoReq_USR::ConfigInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoReq_USR)
}
ConfigInfoReq_USR::ConfigInfoReq_USR(const ConfigInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoReq_USR)
}

void ConfigInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoReq_USR::~ConfigInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoReq_USR)
  SharedDtor();
}

void ConfigInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[40].descriptor;
}

const ConfigInfoReq_USR& ConfigInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoReq_USR* ConfigInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  ConfigInfoReq_USR* n = new ConfigInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoReq_USR)
  return false;
#undef DO_
}

void ConfigInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoReq_USR)
}

::google::protobuf::uint8* ConfigInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoReq_USR)
  return target;
}

size_t ConfigInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoReq_USR)
    MergeFrom(*source);
  }
}

void ConfigInfoReq_USR::MergeFrom(const ConfigInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoReq_USR::CopyFrom(const ConfigInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoReq_USR::IsInitialized() const {
  return true;
}

void ConfigInfoReq_USR::Swap(ConfigInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoReq_USR::InternalSwap(ConfigInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[40];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoReq_USR

// string strUserID = 1;
void ConfigInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ConfigInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
#if LANG_CXX11
void ConfigInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
#endif
void ConfigInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
void ConfigInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_USR.strUserID)
}
::std::string* ConfigInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_USR.strUserID)
}

// string strValue = 2;
void ConfigInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoReq_USR.strValue)
}
#if LANG_CXX11
void ConfigInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoReq_USR.strValue)
}
#endif
void ConfigInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoReq_USR.strValue)
}
void ConfigInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoReq_USR.strValue)
}
::std::string* ConfigInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoRsp_USR::kStrValueFieldNumber;
const int ConfigInfoRsp_USR::kStrItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoRsp_USR::ConfigInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ConfigInfoRsp_USR)
}
ConfigInfoRsp_USR::ConfigInfoRsp_USR(const ConfigInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stritems_(from.stritems_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ConfigInfoRsp_USR)
}

void ConfigInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoRsp_USR::~ConfigInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ConfigInfoRsp_USR)
  SharedDtor();
}

void ConfigInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[41].descriptor;
}

const ConfigInfoRsp_USR& ConfigInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigInfoRsp_USR* ConfigInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  ConfigInfoRsp_USR* n = new ConfigInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ConfigInfoRsp_USR)
  stritems_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ConfigInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strItems = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stritems()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stritems(this->stritems_size() - 1).data(),
            this->stritems(this->stritems_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ConfigInfoRsp_USR.strItems"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ConfigInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ConfigInfoRsp_USR)
  return false;
#undef DO_
}

void ConfigInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ConfigInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strItems = 2;
  for (int i = 0; i < this->stritems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stritems(i).data(), this->stritems(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strItems");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stritems(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ConfigInfoRsp_USR)
}

::google::protobuf::uint8* ConfigInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ConfigInfoRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strItems = 2;
  for (int i = 0; i < this->stritems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stritems(i).data(), this->stritems(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ConfigInfoRsp_USR.strItems");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stritems(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ConfigInfoRsp_USR)
  return target;
}

size_t ConfigInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ConfigInfoRsp_USR)
  size_t total_size = 0;

  // repeated string strItems = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stritems_size());
  for (int i = 0; i < this->stritems_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stritems(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ConfigInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ConfigInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ConfigInfoRsp_USR)
    MergeFrom(*source);
  }
}

void ConfigInfoRsp_USR::MergeFrom(const ConfigInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ConfigInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stritems_.MergeFrom(from.stritems_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ConfigInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ConfigInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoRsp_USR::CopyFrom(const ConfigInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ConfigInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoRsp_USR::IsInitialized() const {
  return true;
}

void ConfigInfoRsp_USR::Swap(ConfigInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoRsp_USR::InternalSwap(ConfigInfoRsp_USR* other) {
  stritems_.UnsafeArenaSwap(&other->stritems_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[41];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoRsp_USR

// string strValue = 1;
void ConfigInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ConfigInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
#if LANG_CXX11
void ConfigInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
#endif
void ConfigInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
void ConfigInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_USR.strValue)
}
::std::string* ConfigInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ConfigInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ConfigInfoRsp_USR.strValue)
}

// repeated string strItems = 2;
int ConfigInfoRsp_USR::stritems_size() const {
  return stritems_.size();
}
void ConfigInfoRsp_USR::clear_stritems() {
  stritems_.Clear();
}
const ::std::string& ConfigInfoRsp_USR::stritems(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Get(index);
}
::std::string* ConfigInfoRsp_USR::mutable_stritems(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Mutable(index);
}
void ConfigInfoRsp_USR::set_stritems(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.ConfigInfoRsp_USR.strItems)
  stritems_.Mutable(index)->assign(value);
}
void ConfigInfoRsp_USR::set_stritems(int index, const char* value) {
  stritems_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
void ConfigInfoRsp_USR::set_stritems(int index, const char* value, size_t size) {
  stritems_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
::std::string* ConfigInfoRsp_USR::add_stritems() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_.Add();
}
void ConfigInfoRsp_USR::add_stritems(const ::std::string& value) {
  stritems_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
void ConfigInfoRsp_USR::add_stritems(const char* value) {
  stritems_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
void ConfigInfoRsp_USR::add_stritems(const char* value, size_t size) {
  stritems_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.ConfigInfoRsp_USR.strItems)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigInfoRsp_USR::stritems() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return stritems_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigInfoRsp_USR::mutable_stritems() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.ConfigInfoRsp_USR.strItems)
  return &stritems_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDevReq_USR::kStrUserIDFieldNumber;
const int AddDevReq_USR::kDevInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDevReq_USR::AddDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddDevReq_USR)
}
AddDevReq_USR::AddDevReq_USR(const AddDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    devinfo_ = new ::Interactive::Message::Device(*from.devinfo_);
  } else {
    devinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddDevReq_USR)
}

void AddDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_ = NULL;
  _cached_size_ = 0;
}

AddDevReq_USR::~AddDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddDevReq_USR)
  SharedDtor();
}

void AddDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete devinfo_;
  }
}

void AddDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[42].descriptor;
}

const AddDevReq_USR& AddDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDevReq_USR* AddDevReq_USR::New(::google::protobuf::Arena* arena) const {
  AddDevReq_USR* n = new AddDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddDevReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) {
    delete devinfo_;
  }
  devinfo_ = NULL;
}

bool AddDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Device devInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddDevReq_USR)
  return false;
#undef DO_
}

void AddDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->devinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddDevReq_USR)
}

::google::protobuf::uint8* AddDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->devinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddDevReq_USR)
  return target;
}

size_t AddDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddDevReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddDevReq_USR)
    MergeFrom(*source);
  }
}

void AddDevReq_USR::MergeFrom(const AddDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    mutable_devinfo()->::Interactive::Message::Device::MergeFrom(from.devinfo());
  }
}

void AddDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDevReq_USR::CopyFrom(const AddDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDevReq_USR::IsInitialized() const {
  return true;
}

void AddDevReq_USR::Swap(AddDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDevReq_USR::InternalSwap(AddDevReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(devinfo_, other->devinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[42];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDevReq_USR

// string strUserID = 1;
void AddDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void AddDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevReq_USR.strUserID)
}
#if LANG_CXX11
void AddDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevReq_USR.strUserID)
}
#endif
void AddDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevReq_USR.strUserID)
}
void AddDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevReq_USR.strUserID)
}
::std::string* AddDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevReq_USR.strUserID)
}

// .Interactive.Message.Device devInfo = 2;
bool AddDevReq_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
void AddDevReq_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
const ::Interactive::Message::Device& AddDevReq_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevReq_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* AddDevReq_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevReq_USR.devInfo)
  return devinfo_;
}
::Interactive::Message::Device* AddDevReq_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevReq_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
void AddDevReq_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevReq_USR.devInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDevRsp_USR::AddDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddDevRsp_USR)
}
AddDevRsp_USR::AddDevRsp_USR(const AddDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddDevRsp_USR)
}

void AddDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddDevRsp_USR::~AddDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddDevRsp_USR)
  SharedDtor();
}

void AddDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[43].descriptor;
}

const AddDevRsp_USR& AddDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDevRsp_USR* AddDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  AddDevRsp_USR* n = new AddDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddDevRsp_USR)
  return false;
#undef DO_
}

void AddDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddDevRsp_USR)
}

::google::protobuf::uint8* AddDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddDevRsp_USR)
  return target;
}

size_t AddDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddDevRsp_USR)
    MergeFrom(*source);
  }
}

void AddDevRsp_USR::MergeFrom(const AddDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDevRsp_USR::CopyFrom(const AddDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDevRsp_USR::IsInitialized() const {
  return true;
}

void AddDevRsp_USR::Swap(AddDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDevRsp_USR::InternalSwap(AddDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[43];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDevRsp_USR

// string strValue = 1;
void AddDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void AddDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddDevRsp_USR.strValue)
}
#if LANG_CXX11
void AddDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddDevRsp_USR.strValue)
}
#endif
void AddDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddDevRsp_USR.strValue)
}
void AddDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddDevRsp_USR.strValue)
}
::std::string* AddDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelDevReq_USR::kStrUserIDFieldNumber;
const int DelDevReq_USR::kStrDevIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelDevReq_USR::DelDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelDevReq_USR)
}
DelDevReq_USR::DelDevReq_USR(const DelDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strdevid_(from.strdevid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelDevReq_USR)
}

void DelDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelDevReq_USR::~DelDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelDevReq_USR)
  SharedDtor();
}

void DelDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[44].descriptor;
}

const DelDevReq_USR& DelDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelDevReq_USR* DelDevReq_USR::New(::google::protobuf::Arena* arena) const {
  DelDevReq_USR* n = new DelDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelDevReq_USR)
  strdevid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid(this->strdevid_size() - 1).data(),
            this->strdevid(this->strdevid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelDevReq_USR)
  return false;
#undef DO_
}

void DelDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strDevID = 2;
  for (int i = 0; i < this->strdevid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid(i).data(), this->strdevid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strdevid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelDevReq_USR)
}

::google::protobuf::uint8* DelDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strDevID = 2;
  for (int i = 0; i < this->strdevid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid(i).data(), this->strdevid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevReq_USR.strDevID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strdevid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelDevReq_USR)
  return target;
}

size_t DelDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelDevReq_USR)
  size_t total_size = 0;

  // repeated string strDevID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdevid_size());
  for (int i = 0; i < this->strdevid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdevid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelDevReq_USR)
    MergeFrom(*source);
  }
}

void DelDevReq_USR::MergeFrom(const DelDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.MergeFrom(from.strdevid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DelDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelDevReq_USR::CopyFrom(const DelDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelDevReq_USR::IsInitialized() const {
  return true;
}

void DelDevReq_USR::Swap(DelDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelDevReq_USR::InternalSwap(DelDevReq_USR* other) {
  strdevid_.UnsafeArenaSwap(&other->strdevid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[44];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelDevReq_USR

// string strUserID = 1;
void DelDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DelDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevReq_USR.strUserID)
}
#if LANG_CXX11
void DelDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelDevReq_USR.strUserID)
}
#endif
void DelDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevReq_USR.strUserID)
}
void DelDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevReq_USR.strUserID)
}
::std::string* DelDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelDevReq_USR.strUserID)
}

// repeated string strDevID = 2;
int DelDevReq_USR::strdevid_size() const {
  return strdevid_.size();
}
void DelDevReq_USR::clear_strdevid() {
  strdevid_.Clear();
}
const ::std::string& DelDevReq_USR::strdevid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Get(index);
}
::std::string* DelDevReq_USR::mutable_strdevid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Mutable(index);
}
void DelDevReq_USR::set_strdevid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevReq_USR.strDevID)
  strdevid_.Mutable(index)->assign(value);
}
void DelDevReq_USR::set_strdevid(int index, const char* value) {
  strdevid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevReq_USR.strDevID)
}
void DelDevReq_USR::set_strdevid(int index, const char* value, size_t size) {
  strdevid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevReq_USR.strDevID)
}
::std::string* DelDevReq_USR::add_strdevid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_.Add();
}
void DelDevReq_USR::add_strdevid(const ::std::string& value) {
  strdevid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelDevReq_USR.strDevID)
}
void DelDevReq_USR::add_strdevid(const char* value) {
  strdevid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelDevReq_USR.strDevID)
}
void DelDevReq_USR::add_strdevid(const char* value, size_t size) {
  strdevid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelDevReq_USR.strDevID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelDevReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelDevReq_USR.strDevID)
  return strdevid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelDevReq_USR::mutable_strdevid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelDevReq_USR.strDevID)
  return &strdevid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelDevRsp_USR::kStrValueFieldNumber;
const int DelDevRsp_USR::kStrDevIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelDevRsp_USR::DelDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelDevRsp_USR)
}
DelDevRsp_USR::DelDevRsp_USR(const DelDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strdevidfailed_(from.strdevidfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelDevRsp_USR)
}

void DelDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelDevRsp_USR::~DelDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelDevRsp_USR)
  SharedDtor();
}

void DelDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[45].descriptor;
}

const DelDevRsp_USR& DelDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelDevRsp_USR* DelDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  DelDevRsp_USR* n = new DelDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelDevRsp_USR)
  strdevidfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strDevIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdevidfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevidfailed(this->strdevidfailed_size() - 1).data(),
            this->strdevidfailed(this->strdevidfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelDevRsp_USR.strDevIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelDevRsp_USR)
  return false;
#undef DO_
}

void DelDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strDevIDFailed = 2;
  for (int i = 0; i < this->strdevidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevidfailed(i).data(), this->strdevidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strDevIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strdevidfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelDevRsp_USR)
}

::google::protobuf::uint8* DelDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strDevIDFailed = 2;
  for (int i = 0; i < this->strdevidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevidfailed(i).data(), this->strdevidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelDevRsp_USR.strDevIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strdevidfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelDevRsp_USR)
  return target;
}

size_t DelDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelDevRsp_USR)
  size_t total_size = 0;

  // repeated string strDevIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strdevidfailed_size());
  for (int i = 0; i < this->strdevidfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdevidfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelDevRsp_USR)
    MergeFrom(*source);
  }
}

void DelDevRsp_USR::MergeFrom(const DelDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevidfailed_.MergeFrom(from.strdevidfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DelDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelDevRsp_USR::CopyFrom(const DelDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelDevRsp_USR::IsInitialized() const {
  return true;
}

void DelDevRsp_USR::Swap(DelDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelDevRsp_USR::InternalSwap(DelDevRsp_USR* other) {
  strdevidfailed_.UnsafeArenaSwap(&other->strdevidfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[45];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelDevRsp_USR

// string strValue = 1;
void DelDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DelDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevRsp_USR.strValue)
}
#if LANG_CXX11
void DelDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelDevRsp_USR.strValue)
}
#endif
void DelDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevRsp_USR.strValue)
}
void DelDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevRsp_USR.strValue)
}
::std::string* DelDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelDevRsp_USR.strValue)
}

// repeated string strDevIDFailed = 2;
int DelDevRsp_USR::strdevidfailed_size() const {
  return strdevidfailed_.size();
}
void DelDevRsp_USR::clear_strdevidfailed() {
  strdevidfailed_.Clear();
}
const ::std::string& DelDevRsp_USR::strdevidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Get(index);
}
::std::string* DelDevRsp_USR::mutable_strdevidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Mutable(index);
}
void DelDevRsp_USR::set_strdevidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  strdevidfailed_.Mutable(index)->assign(value);
}
void DelDevRsp_USR::set_strdevidfailed(int index, const char* value) {
  strdevidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
void DelDevRsp_USR::set_strdevidfailed(int index, const char* value, size_t size) {
  strdevidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
::std::string* DelDevRsp_USR::add_strdevidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_.Add();
}
void DelDevRsp_USR::add_strdevidfailed(const ::std::string& value) {
  strdevidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
void DelDevRsp_USR::add_strdevidfailed(const char* value) {
  strdevidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
void DelDevRsp_USR::add_strdevidfailed(const char* value, size_t size) {
  strdevidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelDevRsp_USR::strdevidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return strdevidfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelDevRsp_USR::mutable_strdevidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelDevRsp_USR.strDevIDFailed)
  return &strdevidfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDevReq_USR::kStrUserIDFieldNumber;
const int ModifyDevReq_USR::kDevInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDevReq_USR::ModifyDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDevReq_USR)
}
ModifyDevReq_USR::ModifyDevReq_USR(const ModifyDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    devinfo_ = new ::Interactive::Message::Device(*from.devinfo_);
  } else {
    devinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDevReq_USR)
}

void ModifyDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_ = NULL;
  _cached_size_ = 0;
}

ModifyDevReq_USR::~ModifyDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDevReq_USR)
  SharedDtor();
}

void ModifyDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete devinfo_;
  }
}

void ModifyDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[46].descriptor;
}

const ModifyDevReq_USR& ModifyDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDevReq_USR* ModifyDevReq_USR::New(::google::protobuf::Arena* arena) const {
  ModifyDevReq_USR* n = new ModifyDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDevReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) {
    delete devinfo_;
  }
  devinfo_ = NULL;
}

bool ModifyDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Device devInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDevReq_USR)
  return false;
#undef DO_
}

void ModifyDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->devinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDevReq_USR)
}

::google::protobuf::uint8* ModifyDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->devinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDevReq_USR)
  return target;
}

size_t ModifyDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDevReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // .Interactive.Message.Device devInfo = 2;
  if (this->has_devinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDevReq_USR)
    MergeFrom(*source);
  }
}

void ModifyDevReq_USR::MergeFrom(const ModifyDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.has_devinfo()) {
    mutable_devinfo()->::Interactive::Message::Device::MergeFrom(from.devinfo());
  }
}

void ModifyDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDevReq_USR::CopyFrom(const ModifyDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDevReq_USR::IsInitialized() const {
  return true;
}

void ModifyDevReq_USR::Swap(ModifyDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDevReq_USR::InternalSwap(ModifyDevReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  std::swap(devinfo_, other->devinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[46];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDevReq_USR

// string strUserID = 1;
void ModifyDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void ModifyDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevReq_USR.strUserID)
}
#if LANG_CXX11
void ModifyDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevReq_USR.strUserID)
}
#endif
void ModifyDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevReq_USR.strUserID)
}
void ModifyDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevReq_USR.strUserID)
}
::std::string* ModifyDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevReq_USR.strUserID)
}

// .Interactive.Message.Device devInfo = 2;
bool ModifyDevReq_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
void ModifyDevReq_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
const ::Interactive::Message::Device& ModifyDevReq_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevReq_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* ModifyDevReq_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevReq_USR.devInfo)
  return devinfo_;
}
::Interactive::Message::Device* ModifyDevReq_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevReq_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
void ModifyDevReq_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevReq_USR.devInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyDevRsp_USR::ModifyDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.ModifyDevRsp_USR)
}
ModifyDevRsp_USR::ModifyDevRsp_USR(const ModifyDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.ModifyDevRsp_USR)
}

void ModifyDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyDevRsp_USR::~ModifyDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.ModifyDevRsp_USR)
  SharedDtor();
}

void ModifyDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[47].descriptor;
}

const ModifyDevRsp_USR& ModifyDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyDevRsp_USR* ModifyDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  ModifyDevRsp_USR* n = new ModifyDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.ModifyDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.ModifyDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.ModifyDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.ModifyDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.ModifyDevRsp_USR)
  return false;
#undef DO_
}

void ModifyDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.ModifyDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.ModifyDevRsp_USR)
}

::google::protobuf::uint8* ModifyDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.ModifyDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.ModifyDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.ModifyDevRsp_USR)
  return target;
}

size_t ModifyDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.ModifyDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.ModifyDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.ModifyDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.ModifyDevRsp_USR)
    MergeFrom(*source);
  }
}

void ModifyDevRsp_USR::MergeFrom(const ModifyDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.ModifyDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.ModifyDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyDevRsp_USR::CopyFrom(const ModifyDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.ModifyDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyDevRsp_USR::IsInitialized() const {
  return true;
}

void ModifyDevRsp_USR::Swap(ModifyDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyDevRsp_USR::InternalSwap(ModifyDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[47];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyDevRsp_USR

// string strValue = 1;
void ModifyDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.ModifyDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void ModifyDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.ModifyDevRsp_USR.strValue)
}
#if LANG_CXX11
void ModifyDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.ModifyDevRsp_USR.strValue)
}
#endif
void ModifyDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.ModifyDevRsp_USR.strValue)
}
void ModifyDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.ModifyDevRsp_USR.strValue)
}
::std::string* ModifyDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.ModifyDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.ModifyDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.ModifyDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevInfoReq_USR::kStrDevIDFieldNumber;
const int QueryDevInfoReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevInfoReq_USR::QueryDevInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevInfoReq_USR)
}
QueryDevInfoReq_USR::QueryDevInfoReq_USR(const QueryDevInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevInfoReq_USR)
}

void QueryDevInfoReq_USR::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryDevInfoReq_USR::~QueryDevInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevInfoReq_USR)
  SharedDtor();
}

void QueryDevInfoReq_USR::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDevInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[48].descriptor;
}

const QueryDevInfoReq_USR& QueryDevInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevInfoReq_USR* QueryDevInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevInfoReq_USR* n = new QueryDevInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevInfoReq_USR)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryDevInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevInfoReq_USR)
  return false;
#undef DO_
}

void QueryDevInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevInfoReq_USR)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevInfoReq_USR)
}

::google::protobuf::uint8* QueryDevInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevInfoReq_USR)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevInfoReq_USR)
  return target;
}

size_t QueryDevInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevInfoReq_USR)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevInfoReq_USR)
    MergeFrom(*source);
  }
}

void QueryDevInfoReq_USR::MergeFrom(const QueryDevInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryDevInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevInfoReq_USR::CopyFrom(const QueryDevInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevInfoReq_USR::IsInitialized() const {
  return true;
}

void QueryDevInfoReq_USR::Swap(QueryDevInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevInfoReq_USR::InternalSwap(QueryDevInfoReq_USR* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[48];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevInfoReq_USR

// string strDevID = 1;
void QueryDevInfoReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void QueryDevInfoReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
#if LANG_CXX11
void QueryDevInfoReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
#endif
void QueryDevInfoReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
void QueryDevInfoReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}
::std::string* QueryDevInfoReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strDevID)
}

// string strValue = 2;
void QueryDevInfoReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryDevInfoReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
#if LANG_CXX11
void QueryDevInfoReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
#endif
void QueryDevInfoReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
void QueryDevInfoReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoReq_USR.strValue)
}
::std::string* QueryDevInfoReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevInfoRsp_USR::kDevInfoFieldNumber;
const int QueryDevInfoRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevInfoRsp_USR::QueryDevInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevInfoRsp_USR)
}
QueryDevInfoRsp_USR::QueryDevInfoRsp_USR(const QueryDevInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_devinfo()) {
    devinfo_ = new ::Interactive::Message::Device(*from.devinfo_);
  } else {
    devinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevInfoRsp_USR)
}

void QueryDevInfoRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_ = NULL;
  _cached_size_ = 0;
}

QueryDevInfoRsp_USR::~QueryDevInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevInfoRsp_USR)
  SharedDtor();
}

void QueryDevInfoRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete devinfo_;
  }
}

void QueryDevInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[49].descriptor;
}

const QueryDevInfoRsp_USR& QueryDevInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevInfoRsp_USR* QueryDevInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevInfoRsp_USR* n = new QueryDevInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevInfoRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) {
    delete devinfo_;
  }
  devinfo_ = NULL;
}

bool QueryDevInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Device devInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevInfoRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevInfoRsp_USR)
  return false;
#undef DO_
}

void QueryDevInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevInfoRsp_USR)
  // .Interactive.Message.Device devInfo = 1;
  if (this->has_devinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->devinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevInfoRsp_USR)
}

::google::protobuf::uint8* QueryDevInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevInfoRsp_USR)
  // .Interactive.Message.Device devInfo = 1;
  if (this->has_devinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->devinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevInfoRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevInfoRsp_USR)
  return target;
}

size_t QueryDevInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevInfoRsp_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.Device devInfo = 1;
  if (this->has_devinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevInfoRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDevInfoRsp_USR::MergeFrom(const QueryDevInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_devinfo()) {
    mutable_devinfo()->::Interactive::Message::Device::MergeFrom(from.devinfo());
  }
}

void QueryDevInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevInfoRsp_USR::CopyFrom(const QueryDevInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevInfoRsp_USR::IsInitialized() const {
  return true;
}

void QueryDevInfoRsp_USR::Swap(QueryDevInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevInfoRsp_USR::InternalSwap(QueryDevInfoRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(devinfo_, other->devinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[49];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevInfoRsp_USR

// .Interactive.Message.Device devInfo = 1;
bool QueryDevInfoRsp_USR::has_devinfo() const {
  return this != internal_default_instance() && devinfo_ != NULL;
}
void QueryDevInfoRsp_USR::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
const ::Interactive::Message::Device& QueryDevInfoRsp_USR::devinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Interactive::Message::Device::internal_default_instance();
}
::Interactive::Message::Device* QueryDevInfoRsp_USR::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::Interactive::Message::Device;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  return devinfo_;
}
::Interactive::Message::Device* QueryDevInfoRsp_USR::release_devinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
  
  ::Interactive::Message::Device* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
void QueryDevInfoRsp_USR::set_allocated_devinfo(::Interactive::Message::Device* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.devInfo)
}

// string strValue = 2;
void QueryDevInfoRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevInfoRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryDevInfoRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
#if LANG_CXX11
void QueryDevInfoRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
#endif
void QueryDevInfoRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
void QueryDevInfoRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}
::std::string* QueryDevInfoRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevInfoRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevInfoRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevInfoRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevInfoRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevReq_USR::kStrUserIDFieldNumber;
const int QueryDevReq_USR::kUiBeginIndexFieldNumber;
const int QueryDevReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevReq_USR::QueryDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevReq_USR)
}
QueryDevReq_USR::QueryDevReq_USR(const QueryDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevReq_USR)
}

void QueryDevReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryDevReq_USR::~QueryDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevReq_USR)
  SharedDtor();
}

void QueryDevReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[50].descriptor;
}

const QueryDevReq_USR& QueryDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevReq_USR* QueryDevReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevReq_USR* n = new QueryDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
}

bool QueryDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryDevReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevReq_USR)
  return false;
#undef DO_
}

void QueryDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uibeginindex(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevReq_USR)
}

::google::protobuf::uint8* QueryDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uibeginindex(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryDevReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevReq_USR)
  return target;
}

size_t QueryDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevReq_USR)
    MergeFrom(*source);
  }
}

void QueryDevReq_USR::MergeFrom(const QueryDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevReq_USR::CopyFrom(const QueryDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevReq_USR::IsInitialized() const {
  return true;
}

void QueryDevReq_USR::Swap(QueryDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevReq_USR::InternalSwap(QueryDevReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[50];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevReq_USR

// string strUserID = 1;
void QueryDevReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryDevReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.strUserID)
}
#if LANG_CXX11
void QueryDevReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevReq_USR.strUserID)
}
#endif
void QueryDevReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevReq_USR.strUserID)
}
void QueryDevReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevReq_USR.strUserID)
}
::std::string* QueryDevReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevReq_USR.strUserID)
}

// uint32 uiBeginIndex = 2;
void QueryDevReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryDevReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryDevReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.uiBeginIndex)
}

// string strValue = 3;
void QueryDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryDevReq_USR.strValue)
}
#if LANG_CXX11
void QueryDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryDevReq_USR.strValue)
}
#endif
void QueryDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryDevReq_USR.strValue)
}
void QueryDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryDevReq_USR.strValue)
}
::std::string* QueryDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryDevReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDevRsp_USR::kAllRelationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDevRsp_USR::QueryDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryDevRsp_USR)
}
QueryDevRsp_USR::QueryDevRsp_USR(const QueryDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allrelationinfo_(from.allrelationinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryDevRsp_USR)
}

void QueryDevRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryDevRsp_USR::~QueryDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryDevRsp_USR)
  SharedDtor();
}

void QueryDevRsp_USR::SharedDtor() {
}

void QueryDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[51].descriptor;
}

const QueryDevRsp_USR& QueryDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryDevRsp_USR* QueryDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryDevRsp_USR* n = new QueryDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryDevRsp_USR)
  allrelationinfo_.Clear();
}

bool QueryDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Relation allRelationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_allrelationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryDevRsp_USR)
  return false;
#undef DO_
}

void QueryDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryDevRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->allrelationinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryDevRsp_USR)
}

::google::protobuf::uint8* QueryDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryDevRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->allrelationinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryDevRsp_USR)
  return target;
}

size_t QueryDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryDevRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  {
    unsigned int count = this->allrelationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->allrelationinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryDevRsp_USR)
    MergeFrom(*source);
  }
}

void QueryDevRsp_USR::MergeFrom(const QueryDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allrelationinfo_.MergeFrom(from.allrelationinfo_);
}

void QueryDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevRsp_USR::CopyFrom(const QueryDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevRsp_USR::IsInitialized() const {
  return true;
}

void QueryDevRsp_USR::Swap(QueryDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDevRsp_USR::InternalSwap(QueryDevRsp_USR* other) {
  allrelationinfo_.UnsafeArenaSwap(&other->allrelationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[51];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDevRsp_USR

// repeated .Interactive.Message.Relation allRelationInfo = 1;
int QueryDevRsp_USR::allrelationinfo_size() const {
  return allrelationinfo_.size();
}
void QueryDevRsp_USR::clear_allrelationinfo() {
  allrelationinfo_.Clear();
}
const ::Interactive::Message::Relation& QueryDevRsp_USR::allrelationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Get(index);
}
::Interactive::Message::Relation* QueryDevRsp_USR::mutable_allrelationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Mutable(index);
}
::Interactive::Message::Relation* QueryDevRsp_USR::add_allrelationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
QueryDevRsp_USR::mutable_allrelationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return &allrelationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
QueryDevRsp_USR::allrelationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryDevRsp_USR.allRelationInfo)
  return allrelationinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserReq_USR::kStrDevIDFieldNumber;
const int QueryUserReq_USR::kUiBeginIndexFieldNumber;
const int QueryUserReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserReq_USR::QueryUserReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUserReq_USR)
}
QueryUserReq_USR::QueryUserReq_USR(const QueryUserReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUserReq_USR)
}

void QueryUserReq_USR::SharedCtor() {
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryUserReq_USR::~QueryUserReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUserReq_USR)
  SharedDtor();
}

void QueryUserReq_USR::SharedDtor() {
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUserReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[52].descriptor;
}

const QueryUserReq_USR& QueryUserReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUserReq_USR* QueryUserReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryUserReq_USR* n = new QueryUserReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUserReq_USR)
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
}

bool QueryUserReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUserReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryUserReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUserReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUserReq_USR)
  return false;
#undef DO_
}

void QueryUserReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUserReq_USR)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevid(), output);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uibeginindex(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUserReq_USR)
}

::google::protobuf::uint8* QueryUserReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUserReq_USR)
  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevid(), target);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uibeginindex(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryUserReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUserReq_USR)
  return target;
}

size_t QueryUserReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUserReq_USR)
  size_t total_size = 0;

  // string strDevID = 1;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUserReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUserReq_USR)
    MergeFrom(*source);
  }
}

void QueryUserReq_USR::MergeFrom(const QueryUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUserReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryUserReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserReq_USR::CopyFrom(const QueryUserReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUserReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserReq_USR::IsInitialized() const {
  return true;
}

void QueryUserReq_USR::Swap(QueryUserReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserReq_USR::InternalSwap(QueryUserReq_USR* other) {
  strdevid_.Swap(&other->strdevid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[52];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUserReq_USR

// string strDevID = 1;
void QueryUserReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void QueryUserReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.strDevID)
}
#if LANG_CXX11
void QueryUserReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserReq_USR.strDevID)
}
#endif
void QueryUserReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserReq_USR.strDevID)
}
void QueryUserReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserReq_USR.strDevID)
}
::std::string* QueryUserReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserReq_USR.strDevID)
}

// uint32 uiBeginIndex = 2;
void QueryUserReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryUserReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryUserReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.uiBeginIndex)
}

// string strValue = 3;
void QueryUserReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryUserReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryUserReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryUserReq_USR.strValue)
}
#if LANG_CXX11
void QueryUserReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryUserReq_USR.strValue)
}
#endif
void QueryUserReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryUserReq_USR.strValue)
}
void QueryUserReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryUserReq_USR.strValue)
}
::std::string* QueryUserReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryUserReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryUserReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryUserReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryUserReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserRsp_USR::kAllRelationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserRsp_USR::QueryUserRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryUserRsp_USR)
}
QueryUserRsp_USR::QueryUserRsp_USR(const QueryUserRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allrelationinfo_(from.allrelationinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryUserRsp_USR)
}

void QueryUserRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryUserRsp_USR::~QueryUserRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryUserRsp_USR)
  SharedDtor();
}

void QueryUserRsp_USR::SharedDtor() {
}

void QueryUserRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[53].descriptor;
}

const QueryUserRsp_USR& QueryUserRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryUserRsp_USR* QueryUserRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryUserRsp_USR* n = new QueryUserRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryUserRsp_USR)
  allrelationinfo_.Clear();
}

bool QueryUserRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryUserRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Relation allRelationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_allrelationinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryUserRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryUserRsp_USR)
  return false;
#undef DO_
}

void QueryUserRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryUserRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->allrelationinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryUserRsp_USR)
}

::google::protobuf::uint8* QueryUserRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryUserRsp_USR)
  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  for (unsigned int i = 0, n = this->allrelationinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->allrelationinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryUserRsp_USR)
  return target;
}

size_t QueryUserRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryUserRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.Relation allRelationInfo = 1;
  {
    unsigned int count = this->allrelationinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->allrelationinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryUserRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryUserRsp_USR)
    MergeFrom(*source);
  }
}

void QueryUserRsp_USR::MergeFrom(const QueryUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryUserRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allrelationinfo_.MergeFrom(from.allrelationinfo_);
}

void QueryUserRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserRsp_USR::CopyFrom(const QueryUserRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryUserRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserRsp_USR::IsInitialized() const {
  return true;
}

void QueryUserRsp_USR::Swap(QueryUserRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserRsp_USR::InternalSwap(QueryUserRsp_USR* other) {
  allrelationinfo_.UnsafeArenaSwap(&other->allrelationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[53];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUserRsp_USR

// repeated .Interactive.Message.Relation allRelationInfo = 1;
int QueryUserRsp_USR::allrelationinfo_size() const {
  return allrelationinfo_.size();
}
void QueryUserRsp_USR::clear_allrelationinfo() {
  allrelationinfo_.Clear();
}
const ::Interactive::Message::Relation& QueryUserRsp_USR::allrelationinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Get(index);
}
::Interactive::Message::Relation* QueryUserRsp_USR::mutable_allrelationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Mutable(index);
}
::Interactive::Message::Relation* QueryUserRsp_USR::add_allrelationinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >*
QueryUserRsp_USR::mutable_allrelationinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return &allrelationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Relation >&
QueryUserRsp_USR::allrelationinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryUserRsp_USR.allRelationInfo)
  return allrelationinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharingDevReq_USR::kRelationInfoFieldNumber;
const int SharingDevReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharingDevReq_USR::SharingDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.SharingDevReq_USR)
}
SharingDevReq_USR::SharingDevReq_USR(const SharingDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    relationinfo_ = new ::Interactive::Message::Relation(*from.relationinfo_);
  } else {
    relationinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.SharingDevReq_USR)
}

void SharingDevReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relationinfo_ = NULL;
  _cached_size_ = 0;
}

SharingDevReq_USR::~SharingDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.SharingDevReq_USR)
  SharedDtor();
}

void SharingDevReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete relationinfo_;
  }
}

void SharingDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SharingDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[54].descriptor;
}

const SharingDevReq_USR& SharingDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

SharingDevReq_USR* SharingDevReq_USR::New(::google::protobuf::Arena* arena) const {
  SharingDevReq_USR* n = new SharingDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharingDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.SharingDevReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) {
    delete relationinfo_;
  }
  relationinfo_ = NULL;
}

bool SharingDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.SharingDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Relation relationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relationinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.SharingDevReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.SharingDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.SharingDevReq_USR)
  return false;
#undef DO_
}

void SharingDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.SharingDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->relationinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.SharingDevReq_USR)
}

::google::protobuf::uint8* SharingDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.SharingDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->relationinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.SharingDevReq_USR)
  return target;
}

size_t SharingDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.SharingDevReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->relationinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharingDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.SharingDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const SharingDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SharingDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.SharingDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.SharingDevReq_USR)
    MergeFrom(*source);
  }
}

void SharingDevReq_USR::MergeFrom(const SharingDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.SharingDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    mutable_relationinfo()->::Interactive::Message::Relation::MergeFrom(from.relationinfo());
  }
}

void SharingDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.SharingDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SharingDevReq_USR::CopyFrom(const SharingDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.SharingDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharingDevReq_USR::IsInitialized() const {
  return true;
}

void SharingDevReq_USR::Swap(SharingDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharingDevReq_USR::InternalSwap(SharingDevReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(relationinfo_, other->relationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SharingDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[54];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharingDevReq_USR

// .Interactive.Message.Relation relationInfo = 1;
bool SharingDevReq_USR::has_relationinfo() const {
  return this != internal_default_instance() && relationinfo_ != NULL;
}
void SharingDevReq_USR::clear_relationinfo() {
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) delete relationinfo_;
  relationinfo_ = NULL;
}
const ::Interactive::Message::Relation& SharingDevReq_USR::relationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.relationInfo)
  return relationinfo_ != NULL ? *relationinfo_
                         : *::Interactive::Message::Relation::internal_default_instance();
}
::Interactive::Message::Relation* SharingDevReq_USR::mutable_relationinfo() {
  
  if (relationinfo_ == NULL) {
    relationinfo_ = new ::Interactive::Message::Relation;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.relationInfo)
  return relationinfo_;
}
::Interactive::Message::Relation* SharingDevReq_USR::release_relationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.relationInfo)
  
  ::Interactive::Message::Relation* temp = relationinfo_;
  relationinfo_ = NULL;
  return temp;
}
void SharingDevReq_USR::set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo) {
  delete relationinfo_;
  relationinfo_ = relationinfo;
  if (relationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.relationInfo)
}

// string strValue = 2;
void SharingDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SharingDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void SharingDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevReq_USR.strValue)
}
#if LANG_CXX11
void SharingDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevReq_USR.strValue)
}
#endif
void SharingDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevReq_USR.strValue)
}
void SharingDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevReq_USR.strValue)
}
::std::string* SharingDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SharingDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SharingDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharingDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharingDevRsp_USR::SharingDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.SharingDevRsp_USR)
}
SharingDevRsp_USR::SharingDevRsp_USR(const SharingDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.SharingDevRsp_USR)
}

void SharingDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SharingDevRsp_USR::~SharingDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.SharingDevRsp_USR)
  SharedDtor();
}

void SharingDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SharingDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SharingDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[55].descriptor;
}

const SharingDevRsp_USR& SharingDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

SharingDevRsp_USR* SharingDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  SharingDevRsp_USR* n = new SharingDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharingDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.SharingDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SharingDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.SharingDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.SharingDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.SharingDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.SharingDevRsp_USR)
  return false;
#undef DO_
}

void SharingDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.SharingDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.SharingDevRsp_USR)
}

::google::protobuf::uint8* SharingDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.SharingDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.SharingDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.SharingDevRsp_USR)
  return target;
}

size_t SharingDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.SharingDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharingDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.SharingDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const SharingDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SharingDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.SharingDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.SharingDevRsp_USR)
    MergeFrom(*source);
  }
}

void SharingDevRsp_USR::MergeFrom(const SharingDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.SharingDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void SharingDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.SharingDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SharingDevRsp_USR::CopyFrom(const SharingDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.SharingDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharingDevRsp_USR::IsInitialized() const {
  return true;
}

void SharingDevRsp_USR::Swap(SharingDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharingDevRsp_USR::InternalSwap(SharingDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SharingDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[55];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharingDevRsp_USR

// string strValue = 1;
void SharingDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SharingDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.SharingDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void SharingDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.SharingDevRsp_USR.strValue)
}
#if LANG_CXX11
void SharingDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.SharingDevRsp_USR.strValue)
}
#endif
void SharingDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.SharingDevRsp_USR.strValue)
}
void SharingDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.SharingDevRsp_USR.strValue)
}
::std::string* SharingDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.SharingDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SharingDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.SharingDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SharingDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.SharingDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSharedDevReq_USR::kRelationInfoFieldNumber;
const int CancelSharedDevReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSharedDevReq_USR::CancelSharedDevReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.CancelSharedDevReq_USR)
}
CancelSharedDevReq_USR::CancelSharedDevReq_USR(const CancelSharedDevReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    relationinfo_ = new ::Interactive::Message::Relation(*from.relationinfo_);
  } else {
    relationinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.CancelSharedDevReq_USR)
}

void CancelSharedDevReq_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relationinfo_ = NULL;
  _cached_size_ = 0;
}

CancelSharedDevReq_USR::~CancelSharedDevReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.CancelSharedDevReq_USR)
  SharedDtor();
}

void CancelSharedDevReq_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete relationinfo_;
  }
}

void CancelSharedDevReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelSharedDevReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[56].descriptor;
}

const CancelSharedDevReq_USR& CancelSharedDevReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelSharedDevReq_USR* CancelSharedDevReq_USR::New(::google::protobuf::Arena* arena) const {
  CancelSharedDevReq_USR* n = new CancelSharedDevReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelSharedDevReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.CancelSharedDevReq_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) {
    delete relationinfo_;
  }
  relationinfo_ = NULL;
}

bool CancelSharedDevReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.CancelSharedDevReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.Relation relationInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relationinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.CancelSharedDevReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.CancelSharedDevReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.CancelSharedDevReq_USR)
  return false;
#undef DO_
}

void CancelSharedDevReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.CancelSharedDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->relationinfo_, output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.CancelSharedDevReq_USR)
}

::google::protobuf::uint8* CancelSharedDevReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.CancelSharedDevReq_USR)
  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->relationinfo_, false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.CancelSharedDevReq_USR)
  return target;
}

size_t CancelSharedDevReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.CancelSharedDevReq_USR)
  size_t total_size = 0;

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // .Interactive.Message.Relation relationInfo = 1;
  if (this->has_relationinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->relationinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelSharedDevReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.CancelSharedDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelSharedDevReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSharedDevReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.CancelSharedDevReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.CancelSharedDevReq_USR)
    MergeFrom(*source);
  }
}

void CancelSharedDevReq_USR::MergeFrom(const CancelSharedDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.CancelSharedDevReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.has_relationinfo()) {
    mutable_relationinfo()->::Interactive::Message::Relation::MergeFrom(from.relationinfo());
  }
}

void CancelSharedDevReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.CancelSharedDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSharedDevReq_USR::CopyFrom(const CancelSharedDevReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.CancelSharedDevReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSharedDevReq_USR::IsInitialized() const {
  return true;
}

void CancelSharedDevReq_USR::Swap(CancelSharedDevReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSharedDevReq_USR::InternalSwap(CancelSharedDevReq_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(relationinfo_, other->relationinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelSharedDevReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[56];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSharedDevReq_USR

// .Interactive.Message.Relation relationInfo = 1;
bool CancelSharedDevReq_USR::has_relationinfo() const {
  return this != internal_default_instance() && relationinfo_ != NULL;
}
void CancelSharedDevReq_USR::clear_relationinfo() {
  if (GetArenaNoVirtual() == NULL && relationinfo_ != NULL) delete relationinfo_;
  relationinfo_ = NULL;
}
const ::Interactive::Message::Relation& CancelSharedDevReq_USR::relationinfo() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  return relationinfo_ != NULL ? *relationinfo_
                         : *::Interactive::Message::Relation::internal_default_instance();
}
::Interactive::Message::Relation* CancelSharedDevReq_USR::mutable_relationinfo() {
  
  if (relationinfo_ == NULL) {
    relationinfo_ = new ::Interactive::Message::Relation;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  return relationinfo_;
}
::Interactive::Message::Relation* CancelSharedDevReq_USR::release_relationinfo() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
  
  ::Interactive::Message::Relation* temp = relationinfo_;
  relationinfo_ = NULL;
  return temp;
}
void CancelSharedDevReq_USR::set_allocated_relationinfo(::Interactive::Message::Relation* relationinfo) {
  delete relationinfo_;
  relationinfo_ = relationinfo;
  if (relationinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevReq_USR.relationInfo)
}

// string strValue = 2;
void CancelSharedDevReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelSharedDevReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void CancelSharedDevReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
#if LANG_CXX11
void CancelSharedDevReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
#endif
void CancelSharedDevReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
void CancelSharedDevReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.CancelSharedDevReq_USR.strValue)
}
::std::string* CancelSharedDevReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelSharedDevReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelSharedDevReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSharedDevRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSharedDevRsp_USR::CancelSharedDevRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.CancelSharedDevRsp_USR)
}
CancelSharedDevRsp_USR::CancelSharedDevRsp_USR(const CancelSharedDevRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.CancelSharedDevRsp_USR)
}

void CancelSharedDevRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelSharedDevRsp_USR::~CancelSharedDevRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.CancelSharedDevRsp_USR)
  SharedDtor();
}

void CancelSharedDevRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelSharedDevRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelSharedDevRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[57].descriptor;
}

const CancelSharedDevRsp_USR& CancelSharedDevRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelSharedDevRsp_USR* CancelSharedDevRsp_USR::New(::google::protobuf::Arena* arena) const {
  CancelSharedDevRsp_USR* n = new CancelSharedDevRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelSharedDevRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.CancelSharedDevRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CancelSharedDevRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.CancelSharedDevRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.CancelSharedDevRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.CancelSharedDevRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.CancelSharedDevRsp_USR)
  return false;
#undef DO_
}

void CancelSharedDevRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.CancelSharedDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.CancelSharedDevRsp_USR)
}

::google::protobuf::uint8* CancelSharedDevRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.CancelSharedDevRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.CancelSharedDevRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.CancelSharedDevRsp_USR)
  return target;
}

size_t CancelSharedDevRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.CancelSharedDevRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelSharedDevRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelSharedDevRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSharedDevRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.CancelSharedDevRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.CancelSharedDevRsp_USR)
    MergeFrom(*source);
  }
}

void CancelSharedDevRsp_USR::MergeFrom(const CancelSharedDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void CancelSharedDevRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSharedDevRsp_USR::CopyFrom(const CancelSharedDevRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.CancelSharedDevRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSharedDevRsp_USR::IsInitialized() const {
  return true;
}

void CancelSharedDevRsp_USR::Swap(CancelSharedDevRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSharedDevRsp_USR::InternalSwap(CancelSharedDevRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelSharedDevRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[57];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSharedDevRsp_USR

// string strValue = 1;
void CancelSharedDevRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelSharedDevRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void CancelSharedDevRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
#if LANG_CXX11
void CancelSharedDevRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
#endif
void CancelSharedDevRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
void CancelSharedDevRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}
::std::string* CancelSharedDevRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelSharedDevRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.CancelSharedDevRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelSharedDevRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.CancelSharedDevRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendsReq_USR::kStrUserIDFieldNumber;
const int AddFriendsReq_USR::kStrFriendUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendsReq_USR::AddFriendsReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFriendsReq_USR)
}
AddFriendsReq_USR::AddFriendsReq_USR(const AddFriendsReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strfrienduserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfrienduserid().size() > 0) {
    strfrienduserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfrienduserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFriendsReq_USR)
}

void AddFriendsReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfrienduserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFriendsReq_USR::~AddFriendsReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFriendsReq_USR)
  SharedDtor();
}

void AddFriendsReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfrienduserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFriendsReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendsReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[58].descriptor;
}

const AddFriendsReq_USR& AddFriendsReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendsReq_USR* AddFriendsReq_USR::New(::google::protobuf::Arena* arena) const {
  AddFriendsReq_USR* n = new AddFriendsReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendsReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFriendsReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfrienduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFriendsReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFriendsReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFriendsReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFriendUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfrienduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfrienduserid().data(), this->strfrienduserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFriendsReq_USR.strFriendUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFriendsReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFriendsReq_USR)
  return false;
#undef DO_
}

void AddFriendsReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strFriendUserID = 2;
  if (this->strfrienduserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid().data(), this->strfrienduserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strFriendUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strfrienduserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFriendsReq_USR)
}

::google::protobuf::uint8* AddFriendsReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strFriendUserID = 2;
  if (this->strfrienduserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid().data(), this->strfrienduserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsReq_USR.strFriendUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strfrienduserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFriendsReq_USR)
  return target;
}

size_t AddFriendsReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFriendsReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strFriendUserID = 2;
  if (this->strfrienduserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfrienduserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendsReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendsReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendsReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFriendsReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFriendsReq_USR)
    MergeFrom(*source);
  }
}

void AddFriendsReq_USR::MergeFrom(const AddFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strfrienduserid().size() > 0) {

    strfrienduserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfrienduserid_);
  }
}

void AddFriendsReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendsReq_USR::CopyFrom(const AddFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendsReq_USR::IsInitialized() const {
  return true;
}

void AddFriendsReq_USR::Swap(AddFriendsReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendsReq_USR::InternalSwap(AddFriendsReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strfrienduserid_.Swap(&other->strfrienduserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendsReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[58];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendsReq_USR

// string strUserID = 1;
void AddFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void AddFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsReq_USR.strUserID)
}
#if LANG_CXX11
void AddFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsReq_USR.strUserID)
}
#endif
void AddFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsReq_USR.strUserID)
}
void AddFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsReq_USR.strUserID)
}
::std::string* AddFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsReq_USR.strUserID)
}

// string strFriendUserID = 2;
void AddFriendsReq_USR::clear_strfrienduserid() {
  strfrienduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFriendsReq_USR::strfrienduserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.GetNoArena();
}
void AddFriendsReq_USR::set_strfrienduserid(const ::std::string& value) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
#if LANG_CXX11
void AddFriendsReq_USR::set_strfrienduserid(::std::string&& value) {
  
  strfrienduserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
#endif
void AddFriendsReq_USR::set_strfrienduserid(const char* value) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
void AddFriendsReq_USR::set_strfrienduserid(const char* value, size_t size) {
  
  strfrienduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}
::std::string* AddFriendsReq_USR::mutable_strfrienduserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFriendsReq_USR::release_strfrienduserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
  
  return strfrienduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFriendsReq_USR::set_allocated_strfrienduserid(::std::string* strfrienduserid) {
  if (strfrienduserid != NULL) {
    
  } else {
    
  }
  strfrienduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfrienduserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsReq_USR.strFriendUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendsRsp_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendsRsp_USR::AddFriendsRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.AddFriendsRsp_USR)
}
AddFriendsRsp_USR::AddFriendsRsp_USR(const AddFriendsRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.AddFriendsRsp_USR)
}

void AddFriendsRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddFriendsRsp_USR::~AddFriendsRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.AddFriendsRsp_USR)
  SharedDtor();
}

void AddFriendsRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFriendsRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendsRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[59].descriptor;
}

const AddFriendsRsp_USR& AddFriendsRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendsRsp_USR* AddFriendsRsp_USR::New(::google::protobuf::Arena* arena) const {
  AddFriendsRsp_USR* n = new AddFriendsRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendsRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.AddFriendsRsp_USR)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddFriendsRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.AddFriendsRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.AddFriendsRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.AddFriendsRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.AddFriendsRsp_USR)
  return false;
#undef DO_
}

void AddFriendsRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.AddFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.AddFriendsRsp_USR)
}

::google::protobuf::uint8* AddFriendsRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.AddFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.AddFriendsRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.AddFriendsRsp_USR)
  return target;
}

size_t AddFriendsRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.AddFriendsRsp_USR)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendsRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.AddFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendsRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendsRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.AddFriendsRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.AddFriendsRsp_USR)
    MergeFrom(*source);
  }
}

void AddFriendsRsp_USR::MergeFrom(const AddFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.AddFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void AddFriendsRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.AddFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendsRsp_USR::CopyFrom(const AddFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.AddFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendsRsp_USR::IsInitialized() const {
  return true;
}

void AddFriendsRsp_USR::Swap(AddFriendsRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendsRsp_USR::InternalSwap(AddFriendsRsp_USR* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendsRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[59];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendsRsp_USR

// string strValue = 1;
void AddFriendsRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddFriendsRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.AddFriendsRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void AddFriendsRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.AddFriendsRsp_USR.strValue)
}
#if LANG_CXX11
void AddFriendsRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.AddFriendsRsp_USR.strValue)
}
#endif
void AddFriendsRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.AddFriendsRsp_USR.strValue)
}
void AddFriendsRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.AddFriendsRsp_USR.strValue)
}
::std::string* AddFriendsRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.AddFriendsRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddFriendsRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.AddFriendsRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddFriendsRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.AddFriendsRsp_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFriendsReq_USR::kStrUserIDFieldNumber;
const int DelFriendsReq_USR::kStrFriendUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFriendsReq_USR::DelFriendsReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelFriendsReq_USR)
}
DelFriendsReq_USR::DelFriendsReq_USR(const DelFriendsReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfrienduserid_(from.strfrienduserid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelFriendsReq_USR)
}

void DelFriendsReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelFriendsReq_USR::~DelFriendsReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelFriendsReq_USR)
  SharedDtor();
}

void DelFriendsReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelFriendsReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendsReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[60].descriptor;
}

const DelFriendsReq_USR& DelFriendsReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFriendsReq_USR* DelFriendsReq_USR::New(::google::protobuf::Arena* arena) const {
  DelFriendsReq_USR* n = new DelFriendsReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFriendsReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelFriendsReq_USR)
  strfrienduserid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelFriendsReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelFriendsReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFriendUserID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfrienduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfrienduserid(this->strfrienduserid_size() - 1).data(),
            this->strfrienduserid(this->strfrienduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsReq_USR.strFriendUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelFriendsReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelFriendsReq_USR)
  return false;
#undef DO_
}

void DelFriendsReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strFriendUserID = 2;
  for (int i = 0; i < this->strfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid(i).data(), this->strfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strFriendUserID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfrienduserid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelFriendsReq_USR)
}

::google::protobuf::uint8* DelFriendsReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strFriendUserID = 2;
  for (int i = 0; i < this->strfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduserid(i).data(), this->strfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsReq_USR.strFriendUserID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfrienduserid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelFriendsReq_USR)
  return target;
}

size_t DelFriendsReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelFriendsReq_USR)
  size_t total_size = 0;

  // repeated string strFriendUserID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfrienduserid_size());
  for (int i = 0; i < this->strfrienduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfrienduserid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendsReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFriendsReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFriendsReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelFriendsReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelFriendsReq_USR)
    MergeFrom(*source);
  }
}

void DelFriendsReq_USR::MergeFrom(const DelFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfrienduserid_.MergeFrom(from.strfrienduserid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DelFriendsReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendsReq_USR::CopyFrom(const DelFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendsReq_USR::IsInitialized() const {
  return true;
}

void DelFriendsReq_USR::Swap(DelFriendsReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFriendsReq_USR::InternalSwap(DelFriendsReq_USR* other) {
  strfrienduserid_.UnsafeArenaSwap(&other->strfrienduserid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFriendsReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[60];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFriendsReq_USR

// string strUserID = 1;
void DelFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DelFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsReq_USR.strUserID)
}
#if LANG_CXX11
void DelFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelFriendsReq_USR.strUserID)
}
#endif
void DelFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsReq_USR.strUserID)
}
void DelFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsReq_USR.strUserID)
}
::std::string* DelFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelFriendsReq_USR.strUserID)
}

// repeated string strFriendUserID = 2;
int DelFriendsReq_USR::strfrienduserid_size() const {
  return strfrienduserid_.size();
}
void DelFriendsReq_USR::clear_strfrienduserid() {
  strfrienduserid_.Clear();
}
const ::std::string& DelFriendsReq_USR::strfrienduserid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Get(index);
}
::std::string* DelFriendsReq_USR::mutable_strfrienduserid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Mutable(index);
}
void DelFriendsReq_USR::set_strfrienduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  strfrienduserid_.Mutable(index)->assign(value);
}
void DelFriendsReq_USR::set_strfrienduserid(int index, const char* value) {
  strfrienduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
void DelFriendsReq_USR::set_strfrienduserid(int index, const char* value, size_t size) {
  strfrienduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
::std::string* DelFriendsReq_USR::add_strfrienduserid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_.Add();
}
void DelFriendsReq_USR::add_strfrienduserid(const ::std::string& value) {
  strfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
void DelFriendsReq_USR::add_strfrienduserid(const char* value) {
  strfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
void DelFriendsReq_USR::add_strfrienduserid(const char* value, size_t size) {
  strfrienduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelFriendsReq_USR::strfrienduserid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return strfrienduserid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelFriendsReq_USR::mutable_strfrienduserid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelFriendsReq_USR.strFriendUserID)
  return &strfrienduserid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFriendsRsp_USR::kStrValueFieldNumber;
const int DelFriendsRsp_USR::kStrFriendUserIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFriendsRsp_USR::DelFriendsRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DelFriendsRsp_USR)
}
DelFriendsRsp_USR::DelFriendsRsp_USR(const DelFriendsRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfrienduseridfailed_(from.strfrienduseridfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DelFriendsRsp_USR)
}

void DelFriendsRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelFriendsRsp_USR::~DelFriendsRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DelFriendsRsp_USR)
  SharedDtor();
}

void DelFriendsRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelFriendsRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendsRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[61].descriptor;
}

const DelFriendsRsp_USR& DelFriendsRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFriendsRsp_USR* DelFriendsRsp_USR::New(::google::protobuf::Arena* arena) const {
  DelFriendsRsp_USR* n = new DelFriendsRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFriendsRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DelFriendsRsp_USR)
  strfrienduseridfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelFriendsRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DelFriendsRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFriendUserIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfrienduseridfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfrienduseridfailed(this->strfrienduseridfailed_size() - 1).data(),
            this->strfrienduseridfailed(this->strfrienduseridfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DelFriendsRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DelFriendsRsp_USR)
  return false;
#undef DO_
}

void DelFriendsRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DelFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strFriendUserIDFailed = 2;
  for (int i = 0; i < this->strfrienduseridfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduseridfailed(i).data(), this->strfrienduseridfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfrienduseridfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DelFriendsRsp_USR)
}

::google::protobuf::uint8* DelFriendsRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DelFriendsRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strFriendUserIDFailed = 2;
  for (int i = 0; i < this->strfrienduseridfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfrienduseridfailed(i).data(), this->strfrienduseridfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfrienduseridfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DelFriendsRsp_USR)
  return target;
}

size_t DelFriendsRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DelFriendsRsp_USR)
  size_t total_size = 0;

  // repeated string strFriendUserIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfrienduseridfailed_size());
  for (int i = 0; i < this->strfrienduseridfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfrienduseridfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendsRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DelFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFriendsRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFriendsRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DelFriendsRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DelFriendsRsp_USR)
    MergeFrom(*source);
  }
}

void DelFriendsRsp_USR::MergeFrom(const DelFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DelFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfrienduseridfailed_.MergeFrom(from.strfrienduseridfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DelFriendsRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DelFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendsRsp_USR::CopyFrom(const DelFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DelFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendsRsp_USR::IsInitialized() const {
  return true;
}

void DelFriendsRsp_USR::Swap(DelFriendsRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFriendsRsp_USR::InternalSwap(DelFriendsRsp_USR* other) {
  strfrienduseridfailed_.UnsafeArenaSwap(&other->strfrienduseridfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFriendsRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[61];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFriendsRsp_USR

// string strValue = 1;
void DelFriendsRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelFriendsRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DelFriendsRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsRsp_USR.strValue)
}
#if LANG_CXX11
void DelFriendsRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DelFriendsRsp_USR.strValue)
}
#endif
void DelFriendsRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsRsp_USR.strValue)
}
void DelFriendsRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsRsp_USR.strValue)
}
::std::string* DelFriendsRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelFriendsRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DelFriendsRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelFriendsRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DelFriendsRsp_USR.strValue)
}

// repeated string strFriendUserIDFailed = 2;
int DelFriendsRsp_USR::strfrienduseridfailed_size() const {
  return strfrienduseridfailed_.size();
}
void DelFriendsRsp_USR::clear_strfrienduseridfailed() {
  strfrienduseridfailed_.Clear();
}
const ::std::string& DelFriendsRsp_USR::strfrienduseridfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Get(index);
}
::std::string* DelFriendsRsp_USR::mutable_strfrienduseridfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Mutable(index);
}
void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  strfrienduseridfailed_.Mutable(index)->assign(value);
}
void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const char* value) {
  strfrienduseridfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
void DelFriendsRsp_USR::set_strfrienduseridfailed(int index, const char* value, size_t size) {
  strfrienduseridfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
::std::string* DelFriendsRsp_USR::add_strfrienduseridfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_.Add();
}
void DelFriendsRsp_USR::add_strfrienduseridfailed(const ::std::string& value) {
  strfrienduseridfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
void DelFriendsRsp_USR::add_strfrienduseridfailed(const char* value) {
  strfrienduseridfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
void DelFriendsRsp_USR::add_strfrienduseridfailed(const char* value, size_t size) {
  strfrienduseridfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelFriendsRsp_USR::strfrienduseridfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return strfrienduseridfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelFriendsRsp_USR::mutable_strfrienduseridfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DelFriendsRsp_USR.strFriendUserIDFailed)
  return &strfrienduseridfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFriendsReq_USR::kStrUserIDFieldNumber;
const int QueryFriendsReq_USR::kUiBeginIndexFieldNumber;
const int QueryFriendsReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFriendsReq_USR::QueryFriendsReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFriendsReq_USR)
}
QueryFriendsReq_USR::QueryFriendsReq_USR(const QueryFriendsReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  uibeginindex_ = from.uibeginindex_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFriendsReq_USR)
}

void QueryFriendsReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
  _cached_size_ = 0;
}

QueryFriendsReq_USR::~QueryFriendsReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFriendsReq_USR)
  SharedDtor();
}

void QueryFriendsReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFriendsReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFriendsReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[62].descriptor;
}

const QueryFriendsReq_USR& QueryFriendsReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFriendsReq_USR* QueryFriendsReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryFriendsReq_USR* n = new QueryFriendsReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFriendsReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFriendsReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uibeginindex_ = 0u;
}

bool QueryFriendsReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFriendsReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFriendsReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFriendsReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFriendsReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFriendsReq_USR)
  return false;
#undef DO_
}

void QueryFriendsReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uibeginindex(), output);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFriendsReq_USR)
}

::google::protobuf::uint8* QueryFriendsReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFriendsReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uibeginindex(), target);
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFriendsReq_USR)
  return target;
}

size_t QueryFriendsReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFriendsReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strValue = 3;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 2;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFriendsReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFriendsReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFriendsReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFriendsReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFriendsReq_USR)
    MergeFrom(*source);
  }
}

void QueryFriendsReq_USR::MergeFrom(const QueryFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFriendsReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryFriendsReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFriendsReq_USR::CopyFrom(const QueryFriendsReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFriendsReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFriendsReq_USR::IsInitialized() const {
  return true;
}

void QueryFriendsReq_USR::Swap(QueryFriendsReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFriendsReq_USR::InternalSwap(QueryFriendsReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFriendsReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[62];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFriendsReq_USR

// string strUserID = 1;
void QueryFriendsReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFriendsReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryFriendsReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
#if LANG_CXX11
void QueryFriendsReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
#endif
void QueryFriendsReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
void QueryFriendsReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsReq_USR.strUserID)
}
::std::string* QueryFriendsReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFriendsReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFriendsReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFriendsReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFriendsReq_USR.strUserID)
}

// uint32 uiBeginIndex = 2;
void QueryFriendsReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryFriendsReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryFriendsReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.uiBeginIndex)
}

// string strValue = 3;
void QueryFriendsReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFriendsReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryFriendsReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsReq_USR.strValue)
}
#if LANG_CXX11
void QueryFriendsReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFriendsReq_USR.strValue)
}
#endif
void QueryFriendsReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsReq_USR.strValue)
}
void QueryFriendsReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsReq_USR.strValue)
}
::std::string* QueryFriendsReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFriendsReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFriendsReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFriendsReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFriendsReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFriendsRsp_USR::kStrAllFriendUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFriendsRsp_USR::QueryFriendsRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFriendsRsp_USR)
}
QueryFriendsRsp_USR::QueryFriendsRsp_USR(const QueryFriendsRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strallfrienduserid_(from.strallfrienduserid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFriendsRsp_USR)
}

void QueryFriendsRsp_USR::SharedCtor() {
  _cached_size_ = 0;
}

QueryFriendsRsp_USR::~QueryFriendsRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFriendsRsp_USR)
  SharedDtor();
}

void QueryFriendsRsp_USR::SharedDtor() {
}

void QueryFriendsRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFriendsRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[63].descriptor;
}

const QueryFriendsRsp_USR& QueryFriendsRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFriendsRsp_USR* QueryFriendsRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryFriendsRsp_USR* n = new QueryFriendsRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFriendsRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFriendsRsp_USR)
  strallfrienduserid_.Clear();
}

bool QueryFriendsRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFriendsRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string strAllFriendUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strallfrienduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strallfrienduserid(this->strallfrienduserid_size() - 1).data(),
            this->strallfrienduserid(this->strallfrienduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFriendsRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFriendsRsp_USR)
  return false;
#undef DO_
}

void QueryFriendsRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFriendsRsp_USR)
  // repeated string strAllFriendUserID = 1;
  for (int i = 0; i < this->strallfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strallfrienduserid(i).data(), this->strallfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strallfrienduserid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFriendsRsp_USR)
}

::google::protobuf::uint8* QueryFriendsRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFriendsRsp_USR)
  // repeated string strAllFriendUserID = 1;
  for (int i = 0; i < this->strallfrienduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strallfrienduserid(i).data(), this->strallfrienduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->strallfrienduserid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFriendsRsp_USR)
  return target;
}

size_t QueryFriendsRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFriendsRsp_USR)
  size_t total_size = 0;

  // repeated string strAllFriendUserID = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strallfrienduserid_size());
  for (int i = 0; i < this->strallfrienduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strallfrienduserid(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFriendsRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFriendsRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFriendsRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFriendsRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFriendsRsp_USR)
    MergeFrom(*source);
  }
}

void QueryFriendsRsp_USR::MergeFrom(const QueryFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFriendsRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strallfrienduserid_.MergeFrom(from.strallfrienduserid_);
}

void QueryFriendsRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFriendsRsp_USR::CopyFrom(const QueryFriendsRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFriendsRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFriendsRsp_USR::IsInitialized() const {
  return true;
}

void QueryFriendsRsp_USR::Swap(QueryFriendsRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFriendsRsp_USR::InternalSwap(QueryFriendsRsp_USR* other) {
  strallfrienduserid_.UnsafeArenaSwap(&other->strallfrienduserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFriendsRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[63];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFriendsRsp_USR

// repeated string strAllFriendUserID = 1;
int QueryFriendsRsp_USR::strallfrienduserid_size() const {
  return strallfrienduserid_.size();
}
void QueryFriendsRsp_USR::clear_strallfrienduserid() {
  strallfrienduserid_.Clear();
}
const ::std::string& QueryFriendsRsp_USR::strallfrienduserid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Get(index);
}
::std::string* QueryFriendsRsp_USR::mutable_strallfrienduserid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Mutable(index);
}
void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  strallfrienduserid_.Mutable(index)->assign(value);
}
void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const char* value) {
  strallfrienduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
void QueryFriendsRsp_USR::set_strallfrienduserid(int index, const char* value, size_t size) {
  strallfrienduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
::std::string* QueryFriendsRsp_USR::add_strallfrienduserid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_.Add();
}
void QueryFriendsRsp_USR::add_strallfrienduserid(const ::std::string& value) {
  strallfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
void QueryFriendsRsp_USR::add_strallfrienduserid(const char* value) {
  strallfrienduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
void QueryFriendsRsp_USR::add_strallfrienduserid(const char* value, size_t size) {
  strallfrienduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryFriendsRsp_USR::strallfrienduserid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return strallfrienduserid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
QueryFriendsRsp_USR::mutable_strallfrienduserid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryFriendsRsp_USR.strAllFriendUserID)
  return &strallfrienduserid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressReq_USR::kStrUserIDFieldNumber;
const int StorageAddressReq_USR::kUiStorageTypeFieldNumber;
const int StorageAddressReq_USR::kUiStorageActionFieldNumber;
const int StorageAddressReq_USR::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressReq_USR::StorageAddressReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressReq_USR)
}
StorageAddressReq_USR::StorageAddressReq_USR(const StorageAddressReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfileid().size() > 0) {
    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  ::memcpy(&uistoragetype_, &from.uistoragetype_,
    reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressReq_USR)
}

void StorageAddressReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
  _cached_size_ = 0;
}

StorageAddressReq_USR::~StorageAddressReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressReq_USR)
  SharedDtor();
}

void StorageAddressReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[64].descriptor;
}

const StorageAddressReq_USR& StorageAddressReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressReq_USR* StorageAddressReq_USR::New(::google::protobuf::Arena* arena) const {
  StorageAddressReq_USR* n = new StorageAddressReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uistoragetype_, 0, reinterpret_cast<char*>(&uistorageaction_) -
    reinterpret_cast<char*>(&uistoragetype_) + sizeof(uistorageaction_));
}

bool StorageAddressReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistoragetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStorageAction = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistorageaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFileID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressReq_USR)
  return false;
#undef DO_
}

void StorageAddressReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uistoragetype(), output);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uistorageaction(), output);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strfileid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressReq_USR)
}

::google::protobuf::uint8* StorageAddressReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uistoragetype(), target);
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uistorageaction(), target);
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressReq_USR.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strfileid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressReq_USR)
  return target;
}

size_t StorageAddressReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strFileID = 4;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // uint32 uiStorageType = 2;
  if (this->uistoragetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistoragetype());
  }

  // uint32 uiStorageAction = 3;
  if (this->uistorageaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistorageaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressReq_USR)
    MergeFrom(*source);
  }
}

void StorageAddressReq_USR::MergeFrom(const StorageAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.uistoragetype() != 0) {
    set_uistoragetype(from.uistoragetype());
  }
  if (from.uistorageaction() != 0) {
    set_uistorageaction(from.uistorageaction());
  }
}

void StorageAddressReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressReq_USR::CopyFrom(const StorageAddressReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressReq_USR::IsInitialized() const {
  return true;
}

void StorageAddressReq_USR::Swap(StorageAddressReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressReq_USR::InternalSwap(StorageAddressReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strfileid_.Swap(&other->strfileid_);
  std::swap(uistoragetype_, other->uistoragetype_);
  std::swap(uistorageaction_, other->uistorageaction_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[64];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressReq_USR

// string strUserID = 1;
void StorageAddressReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void StorageAddressReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.strUserID)
}
#if LANG_CXX11
void StorageAddressReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_USR.strUserID)
}
#endif
void StorageAddressReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_USR.strUserID)
}
void StorageAddressReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_USR.strUserID)
}
::std::string* StorageAddressReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_USR.strUserID)
}

// uint32 uiStorageType = 2;
void StorageAddressReq_USR::clear_uistoragetype() {
  uistoragetype_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_USR::uistoragetype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.uiStorageType)
  return uistoragetype_;
}
void StorageAddressReq_USR::set_uistoragetype(::google::protobuf::uint32 value) {
  
  uistoragetype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.uiStorageType)
}

// uint32 uiStorageAction = 3;
void StorageAddressReq_USR::clear_uistorageaction() {
  uistorageaction_ = 0u;
}
::google::protobuf::uint32 StorageAddressReq_USR::uistorageaction() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.uiStorageAction)
  return uistorageaction_;
}
void StorageAddressReq_USR::set_uistorageaction(::google::protobuf::uint32 value) {
  
  uistorageaction_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.uiStorageAction)
}

// string strFileID = 4;
void StorageAddressReq_USR::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressReq_USR.strFileID)
  return strfileid_.GetNoArena();
}
void StorageAddressReq_USR::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressReq_USR.strFileID)
}
#if LANG_CXX11
void StorageAddressReq_USR::set_strfileid(::std::string&& value) {
  
  strfileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressReq_USR.strFileID)
}
#endif
void StorageAddressReq_USR::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressReq_USR.strFileID)
}
void StorageAddressReq_USR::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressReq_USR.strFileID)
}
::std::string* StorageAddressReq_USR::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressReq_USR.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressReq_USR::release_strfileid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressReq_USR.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressReq_USR::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressReq_USR.strFileID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAddressRsp_USR::kStrAddressFieldNumber;
const int StorageAddressRsp_USR::kUiPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAddressRsp_USR::StorageAddressRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.StorageAddressRsp_USR)
}
StorageAddressRsp_USR::StorageAddressRsp_USR(const StorageAddressRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straddress().size() > 0) {
    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  uiport_ = from.uiport_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.StorageAddressRsp_USR)
}

void StorageAddressRsp_USR::SharedCtor() {
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
  _cached_size_ = 0;
}

StorageAddressRsp_USR::~StorageAddressRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.StorageAddressRsp_USR)
  SharedDtor();
}

void StorageAddressRsp_USR::SharedDtor() {
  straddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAddressRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAddressRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[65].descriptor;
}

const StorageAddressRsp_USR& StorageAddressRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAddressRsp_USR* StorageAddressRsp_USR::New(::google::protobuf::Arena* arena) const {
  StorageAddressRsp_USR* n = new StorageAddressRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAddressRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.StorageAddressRsp_USR)
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uiport_ = 0u;
}

bool StorageAddressRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.StorageAddressRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.StorageAddressRsp_USR.strAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiPort = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.StorageAddressRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.StorageAddressRsp_USR)
  return false;
#undef DO_
}

void StorageAddressRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.StorageAddressRsp_USR)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_USR.strAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straddress(), output);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uiport(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.StorageAddressRsp_USR)
}

::google::protobuf::uint8* StorageAddressRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.StorageAddressRsp_USR)
  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.StorageAddressRsp_USR.strAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straddress(), target);
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uiport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.StorageAddressRsp_USR)
  return target;
}

size_t StorageAddressRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.StorageAddressRsp_USR)
  size_t total_size = 0;

  // string strAddress = 1;
  if (this->straddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straddress());
  }

  // uint32 uiPort = 2;
  if (this->uiport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAddressRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.StorageAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAddressRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAddressRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.StorageAddressRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.StorageAddressRsp_USR)
    MergeFrom(*source);
  }
}

void StorageAddressRsp_USR::MergeFrom(const StorageAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.StorageAddressRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straddress().size() > 0) {

    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  if (from.uiport() != 0) {
    set_uiport(from.uiport());
  }
}

void StorageAddressRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.StorageAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAddressRsp_USR::CopyFrom(const StorageAddressRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.StorageAddressRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAddressRsp_USR::IsInitialized() const {
  return true;
}

void StorageAddressRsp_USR::Swap(StorageAddressRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAddressRsp_USR::InternalSwap(StorageAddressRsp_USR* other) {
  straddress_.Swap(&other->straddress_);
  std::swap(uiport_, other->uiport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAddressRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[65];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAddressRsp_USR

// string strAddress = 1;
void StorageAddressRsp_USR::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAddressRsp_USR::straddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_USR.strAddress)
  return straddress_.GetNoArena();
}
void StorageAddressRsp_USR::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
#if LANG_CXX11
void StorageAddressRsp_USR::set_straddress(::std::string&& value) {
  
  straddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
#endif
void StorageAddressRsp_USR::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
void StorageAddressRsp_USR::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.StorageAddressRsp_USR.strAddress)
}
::std::string* StorageAddressRsp_USR::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.StorageAddressRsp_USR.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAddressRsp_USR::release_straddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.StorageAddressRsp_USR.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAddressRsp_USR::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.StorageAddressRsp_USR.strAddress)
}

// uint32 uiPort = 2;
void StorageAddressRsp_USR::clear_uiport() {
  uiport_ = 0u;
}
::google::protobuf::uint32 StorageAddressRsp_USR::uiport() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.StorageAddressRsp_USR.uiPort)
  return uiport_;
}
void StorageAddressRsp_USR::set_uiport(::google::protobuf::uint32 value) {
  
  uiport_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.StorageAddressRsp_USR.uiPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoReq_USR::kStrUserIDFieldNumber;
const int P2pInfoReq_USR::kStrUserIpAddressFieldNumber;
const int P2pInfoReq_USR::kStrDevIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoReq_USR::P2pInfoReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoReq_USR)
}
P2pInfoReq_USR::P2pInfoReq_USR(const P2pInfoReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  struseripaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struseripaddress().size() > 0) {
    struseripaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseripaddress_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoReq_USR)
}

void P2pInfoReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseripaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

P2pInfoReq_USR::~P2pInfoReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoReq_USR)
  SharedDtor();
}

void P2pInfoReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseripaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[66].descriptor;
}

const P2pInfoReq_USR& P2pInfoReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoReq_USR* P2pInfoReq_USR::New(::google::protobuf::Arena* arena) const {
  P2pInfoReq_USR* n = new P2pInfoReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool P2pInfoReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserIpAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struseripaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struseripaddress().data(), this->struseripaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_USR.strUserIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoReq_USR)
  return false;
#undef DO_
}

void P2pInfoReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strUserIpAddress = 2;
  if (this->struseripaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseripaddress().data(), this->struseripaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->struseripaddress(), output);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdevid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoReq_USR)
}

::google::protobuf::uint8* P2pInfoReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strUserIpAddress = 2;
  if (this->struseripaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseripaddress().data(), this->struseripaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strUserIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->struseripaddress(), target);
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdevid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoReq_USR)
  return target;
}

size_t P2pInfoReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strUserIpAddress = 2;
  if (this->struseripaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struseripaddress());
  }

  // string strDevID = 3;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoReq_USR)
    MergeFrom(*source);
  }
}

void P2pInfoReq_USR::MergeFrom(const P2pInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.struseripaddress().size() > 0) {

    struseripaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseripaddress_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
}

void P2pInfoReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoReq_USR::CopyFrom(const P2pInfoReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoReq_USR::IsInitialized() const {
  return true;
}

void P2pInfoReq_USR::Swap(P2pInfoReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoReq_USR::InternalSwap(P2pInfoReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  struseripaddress_.Swap(&other->struseripaddress_);
  strdevid_.Swap(&other->strdevid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[66];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoReq_USR

// string strUserID = 1;
void P2pInfoReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void P2pInfoReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strUserID)
}
#if LANG_CXX11
void P2pInfoReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strUserID)
}
#endif
void P2pInfoReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strUserID)
}
void P2pInfoReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strUserID)
}
::std::string* P2pInfoReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strUserID)
}

// string strUserIpAddress = 2;
void P2pInfoReq_USR::clear_struseripaddress() {
  struseripaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_USR::struseripaddress() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  return struseripaddress_.GetNoArena();
}
void P2pInfoReq_USR::set_struseripaddress(const ::std::string& value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
#if LANG_CXX11
void P2pInfoReq_USR::set_struseripaddress(::std::string&& value) {
  
  struseripaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
#endif
void P2pInfoReq_USR::set_struseripaddress(const char* value) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
void P2pInfoReq_USR::set_struseripaddress(const char* value, size_t size) {
  
  struseripaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}
::std::string* P2pInfoReq_USR::mutable_struseripaddress() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  return struseripaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_USR::release_struseripaddress() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
  
  return struseripaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_USR::set_allocated_struseripaddress(::std::string* struseripaddress) {
  if (struseripaddress != NULL) {
    
  } else {
    
  }
  struseripaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseripaddress);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strUserIpAddress)
}

// string strDevID = 3;
void P2pInfoReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void P2pInfoReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoReq_USR.strDevID)
}
#if LANG_CXX11
void P2pInfoReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoReq_USR.strDevID)
}
#endif
void P2pInfoReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoReq_USR.strDevID)
}
void P2pInfoReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoReq_USR.strDevID)
}
::std::string* P2pInfoReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoReq_USR.strDevID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P2pInfoRsp_USR::kStrP2PServerFieldNumber;
const int P2pInfoRsp_USR::kStrP2PIDFieldNumber;
const int P2pInfoRsp_USR::kUiLeaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P2pInfoRsp_USR::P2pInfoRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.P2pInfoRsp_USR)
}
P2pInfoRsp_USR::P2pInfoRsp_USR(const P2pInfoRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pserver().size() > 0) {
    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strp2pid().size() > 0) {
    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  uilease_ = from.uilease_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.P2pInfoRsp_USR)
}

void P2pInfoRsp_USR::SharedCtor() {
  strp2pserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
  _cached_size_ = 0;
}

P2pInfoRsp_USR::~P2pInfoRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.P2pInfoRsp_USR)
  SharedDtor();
}

void P2pInfoRsp_USR::SharedDtor() {
  strp2pserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P2pInfoRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P2pInfoRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[67].descriptor;
}

const P2pInfoRsp_USR& P2pInfoRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

P2pInfoRsp_USR* P2pInfoRsp_USR::New(::google::protobuf::Arena* arena) const {
  P2pInfoRsp_USR* n = new P2pInfoRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P2pInfoRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.P2pInfoRsp_USR)
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uilease_ = 0u;
}

bool P2pInfoRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.P2pInfoRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strP2pServer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pserver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pserver().data(), this->strp2pserver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_USR.strP2pServer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strP2pID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strp2pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strp2pid().data(), this->strp2pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.P2pInfoRsp_USR.strP2pID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiLease = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uilease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.P2pInfoRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.P2pInfoRsp_USR)
  return false;
#undef DO_
}

void P2pInfoRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.P2pInfoRsp_USR)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strp2pserver(), output);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strp2pid(), output);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uilease(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.P2pInfoRsp_USR)
}

::google::protobuf::uint8* P2pInfoRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.P2pInfoRsp_USR)
  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pserver().data(), this->strp2pserver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strp2pserver(), target);
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strp2pid().data(), this->strp2pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.P2pInfoRsp_USR.strP2pID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strp2pid(), target);
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uilease(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.P2pInfoRsp_USR)
  return target;
}

size_t P2pInfoRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.P2pInfoRsp_USR)
  size_t total_size = 0;

  // string strP2pServer = 1;
  if (this->strp2pserver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pserver());
  }

  // string strP2pID = 2;
  if (this->strp2pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strp2pid());
  }

  // uint32 uiLease = 3;
  if (this->uilease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uilease());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P2pInfoRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.P2pInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const P2pInfoRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P2pInfoRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.P2pInfoRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.P2pInfoRsp_USR)
    MergeFrom(*source);
  }
}

void P2pInfoRsp_USR::MergeFrom(const P2pInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.P2pInfoRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strp2pserver().size() > 0) {

    strp2pserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pserver_);
  }
  if (from.strp2pid().size() > 0) {

    strp2pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strp2pid_);
  }
  if (from.uilease() != 0) {
    set_uilease(from.uilease());
  }
}

void P2pInfoRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.P2pInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P2pInfoRsp_USR::CopyFrom(const P2pInfoRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.P2pInfoRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P2pInfoRsp_USR::IsInitialized() const {
  return true;
}

void P2pInfoRsp_USR::Swap(P2pInfoRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P2pInfoRsp_USR::InternalSwap(P2pInfoRsp_USR* other) {
  strp2pserver_.Swap(&other->strp2pserver_);
  strp2pid_.Swap(&other->strp2pid_);
  std::swap(uilease_, other->uilease_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P2pInfoRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[67];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P2pInfoRsp_USR

// string strP2pServer = 1;
void P2pInfoRsp_USR::clear_strp2pserver() {
  strp2pserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_USR::strp2pserver() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  return strp2pserver_.GetNoArena();
}
void P2pInfoRsp_USR::set_strp2pserver(const ::std::string& value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
#if LANG_CXX11
void P2pInfoRsp_USR::set_strp2pserver(::std::string&& value) {
  
  strp2pserver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
#endif
void P2pInfoRsp_USR::set_strp2pserver(const char* value) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
void P2pInfoRsp_USR::set_strp2pserver(const char* value, size_t size) {
  
  strp2pserver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}
::std::string* P2pInfoRsp_USR::mutable_strp2pserver() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  return strp2pserver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_USR::release_strp2pserver() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
  
  return strp2pserver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_USR::set_allocated_strp2pserver(::std::string* strp2pserver) {
  if (strp2pserver != NULL) {
    
  } else {
    
  }
  strp2pserver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pserver);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strP2pServer)
}

// string strP2pID = 2;
void P2pInfoRsp_USR::clear_strp2pid() {
  strp2pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P2pInfoRsp_USR::strp2pid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  return strp2pid_.GetNoArena();
}
void P2pInfoRsp_USR::set_strp2pid(const ::std::string& value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
#if LANG_CXX11
void P2pInfoRsp_USR::set_strp2pid(::std::string&& value) {
  
  strp2pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
#endif
void P2pInfoRsp_USR::set_strp2pid(const char* value) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
void P2pInfoRsp_USR::set_strp2pid(const char* value, size_t size) {
  
  strp2pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}
::std::string* P2pInfoRsp_USR::mutable_strp2pid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  return strp2pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P2pInfoRsp_USR::release_strp2pid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.P2pInfoRsp_USR.strP2pID)
  
  return strp2pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P2pInfoRsp_USR::set_allocated_strp2pid(::std::string* strp2pid) {
  if (strp2pid != NULL) {
    
  } else {
    
  }
  strp2pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strp2pid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.P2pInfoRsp_USR.strP2pID)
}

// uint32 uiLease = 3;
void P2pInfoRsp_USR::clear_uilease() {
  uilease_ = 0u;
}
::google::protobuf::uint32 P2pInfoRsp_USR::uilease() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.P2pInfoRsp_USR.uiLease)
  return uilease_;
}
void P2pInfoRsp_USR::set_uilease(::google::protobuf::uint32 value) {
  
  uilease_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.P2pInfoRsp_USR.uiLease)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFileReq_USR::kStrUserIDFieldNumber;
const int DeleteFileReq_USR::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFileReq_USR::DeleteFileReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteFileReq_USR)
}
DeleteFileReq_USR::DeleteFileReq_USR(const DeleteFileReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileid_(from.strfileid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteFileReq_USR)
}

void DeleteFileReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteFileReq_USR::~DeleteFileReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteFileReq_USR)
  SharedDtor();
}

void DeleteFileReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFileReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFileReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[68].descriptor;
}

const DeleteFileReq_USR& DeleteFileReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFileReq_USR* DeleteFileReq_USR::New(::google::protobuf::Arena* arena) const {
  DeleteFileReq_USR* n = new DeleteFileReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFileReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteFileReq_USR)
  strfileid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteFileReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteFileReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid(this->strfileid_size() - 1).data(),
            this->strfileid(this->strfileid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteFileReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteFileReq_USR)
  return false;
#undef DO_
}

void DeleteFileReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteFileReq_USR)
}

::google::protobuf::uint8* DeleteFileReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileReq_USR.strFileID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteFileReq_USR)
  return target;
}

size_t DeleteFileReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteFileReq_USR)
  size_t total_size = 0;

  // repeated string strFileID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileid_size());
  for (int i = 0; i < this->strfileid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFileReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFileReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFileReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteFileReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteFileReq_USR)
    MergeFrom(*source);
  }
}

void DeleteFileReq_USR::MergeFrom(const DeleteFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.MergeFrom(from.strfileid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DeleteFileReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFileReq_USR::CopyFrom(const DeleteFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFileReq_USR::IsInitialized() const {
  return true;
}

void DeleteFileReq_USR::Swap(DeleteFileReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFileReq_USR::InternalSwap(DeleteFileReq_USR* other) {
  strfileid_.UnsafeArenaSwap(&other->strfileid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFileReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[68];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFileReq_USR

// string strUserID = 1;
void DeleteFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DeleteFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileReq_USR.strUserID)
}
#if LANG_CXX11
void DeleteFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteFileReq_USR.strUserID)
}
#endif
void DeleteFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileReq_USR.strUserID)
}
void DeleteFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileReq_USR.strUserID)
}
::std::string* DeleteFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteFileReq_USR.strUserID)
}

// repeated string strFileID = 2;
int DeleteFileReq_USR::strfileid_size() const {
  return strfileid_.size();
}
void DeleteFileReq_USR::clear_strfileid() {
  strfileid_.Clear();
}
const ::std::string& DeleteFileReq_USR::strfileid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Get(index);
}
::std::string* DeleteFileReq_USR::mutable_strfileid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Mutable(index);
}
void DeleteFileReq_USR::set_strfileid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileReq_USR.strFileID)
  strfileid_.Mutable(index)->assign(value);
}
void DeleteFileReq_USR::set_strfileid(int index, const char* value) {
  strfileid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileReq_USR.strFileID)
}
void DeleteFileReq_USR::set_strfileid(int index, const char* value, size_t size) {
  strfileid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileReq_USR.strFileID)
}
::std::string* DeleteFileReq_USR::add_strfileid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_.Add();
}
void DeleteFileReq_USR::add_strfileid(const ::std::string& value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeleteFileReq_USR.strFileID)
}
void DeleteFileReq_USR::add_strfileid(const char* value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeleteFileReq_USR.strFileID)
}
void DeleteFileReq_USR::add_strfileid(const char* value, size_t size) {
  strfileid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeleteFileReq_USR.strFileID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteFileReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeleteFileReq_USR.strFileID)
  return strfileid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteFileReq_USR::mutable_strfileid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeleteFileReq_USR.strFileID)
  return &strfileid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFileRsp_USR::kStrValueFieldNumber;
const int DeleteFileRsp_USR::kStrFileIDFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFileRsp_USR::DeleteFileRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DeleteFileRsp_USR)
}
DeleteFileRsp_USR::DeleteFileRsp_USR(const DeleteFileRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileidfailed_(from.strfileidfailed_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DeleteFileRsp_USR)
}

void DeleteFileRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteFileRsp_USR::~DeleteFileRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DeleteFileRsp_USR)
  SharedDtor();
}

void DeleteFileRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFileRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFileRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[69].descriptor;
}

const DeleteFileRsp_USR& DeleteFileRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFileRsp_USR* DeleteFileRsp_USR::New(::google::protobuf::Arena* arena) const {
  DeleteFileRsp_USR* n = new DeleteFileRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFileRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DeleteFileRsp_USR)
  strfileidfailed_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteFileRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DeleteFileRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileIDFailed = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileidfailed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileidfailed(this->strfileidfailed_size() - 1).data(),
            this->strfileidfailed(this->strfileidfailed_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DeleteFileRsp_USR.strFileIDFailed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DeleteFileRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DeleteFileRsp_USR)
  return false;
#undef DO_
}

void DeleteFileRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DeleteFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strFileIDFailed");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileidfailed(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DeleteFileRsp_USR)
}

::google::protobuf::uint8* DeleteFileRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DeleteFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated string strFileIDFailed = 2;
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileidfailed(i).data(), this->strfileidfailed(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DeleteFileRsp_USR.strFileIDFailed");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileidfailed(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DeleteFileRsp_USR)
  return target;
}

size_t DeleteFileRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DeleteFileRsp_USR)
  size_t total_size = 0;

  // repeated string strFileIDFailed = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileidfailed_size());
  for (int i = 0; i < this->strfileidfailed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileidfailed(i));
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFileRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DeleteFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFileRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFileRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DeleteFileRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DeleteFileRsp_USR)
    MergeFrom(*source);
  }
}

void DeleteFileRsp_USR::MergeFrom(const DeleteFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DeleteFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileidfailed_.MergeFrom(from.strfileidfailed_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DeleteFileRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DeleteFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFileRsp_USR::CopyFrom(const DeleteFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DeleteFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFileRsp_USR::IsInitialized() const {
  return true;
}

void DeleteFileRsp_USR::Swap(DeleteFileRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFileRsp_USR::InternalSwap(DeleteFileRsp_USR* other) {
  strfileidfailed_.UnsafeArenaSwap(&other->strfileidfailed_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFileRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[69];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFileRsp_USR

// string strValue = 1;
void DeleteFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DeleteFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileRsp_USR.strValue)
}
#if LANG_CXX11
void DeleteFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DeleteFileRsp_USR.strValue)
}
#endif
void DeleteFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileRsp_USR.strValue)
}
void DeleteFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileRsp_USR.strValue)
}
::std::string* DeleteFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DeleteFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DeleteFileRsp_USR.strValue)
}

// repeated string strFileIDFailed = 2;
int DeleteFileRsp_USR::strfileidfailed_size() const {
  return strfileidfailed_.size();
}
void DeleteFileRsp_USR::clear_strfileidfailed() {
  strfileidfailed_.Clear();
}
const ::std::string& DeleteFileRsp_USR::strfileidfailed(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Get(index);
}
::std::string* DeleteFileRsp_USR::mutable_strfileidfailed(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Mutable(index);
}
void DeleteFileRsp_USR::set_strfileidfailed(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  strfileidfailed_.Mutable(index)->assign(value);
}
void DeleteFileRsp_USR::set_strfileidfailed(int index, const char* value) {
  strfileidfailed_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
void DeleteFileRsp_USR::set_strfileidfailed(int index, const char* value, size_t size) {
  strfileidfailed_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
::std::string* DeleteFileRsp_USR::add_strfileidfailed() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_.Add();
}
void DeleteFileRsp_USR::add_strfileidfailed(const ::std::string& value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
void DeleteFileRsp_USR::add_strfileidfailed(const char* value) {
  strfileidfailed_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
void DeleteFileRsp_USR::add_strfileidfailed(const char* value, size_t size) {
  strfileidfailed_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteFileRsp_USR::strfileidfailed() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return strfileidfailed_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteFileRsp_USR::mutable_strfileidfailed() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DeleteFileRsp_USR.strFileIDFailed)
  return &strfileidfailed_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadFileReq_USR::kStrUserIDFieldNumber;
const int DownloadFileReq_USR::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadFileReq_USR::DownloadFileReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DownloadFileReq_USR)
}
DownloadFileReq_USR::DownloadFileReq_USR(const DownloadFileReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strfileid_(from.strfileid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DownloadFileReq_USR)
}

void DownloadFileReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DownloadFileReq_USR::~DownloadFileReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DownloadFileReq_USR)
  SharedDtor();
}

void DownloadFileReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadFileReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadFileReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[70].descriptor;
}

const DownloadFileReq_USR& DownloadFileReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DownloadFileReq_USR* DownloadFileReq_USR::New(::google::protobuf::Arena* arena) const {
  DownloadFileReq_USR* n = new DownloadFileReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownloadFileReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DownloadFileReq_USR)
  strfileid_.Clear();
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DownloadFileReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DownloadFileReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DownloadFileReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strFileID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid(this->strfileid_size() - 1).data(),
            this->strfileid(this->strfileid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DownloadFileReq_USR.strFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DownloadFileReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DownloadFileReq_USR)
  return false;
#undef DO_
}

void DownloadFileReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DownloadFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strfileid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DownloadFileReq_USR)
}

::google::protobuf::uint8* DownloadFileReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DownloadFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // repeated string strFileID = 2;
  for (int i = 0; i < this->strfileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid(i).data(), this->strfileid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileReq_USR.strFileID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strfileid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DownloadFileReq_USR)
  return target;
}

size_t DownloadFileReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DownloadFileReq_USR)
  size_t total_size = 0;

  // repeated string strFileID = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strfileid_size());
  for (int i = 0; i < this->strfileid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strfileid(i));
  }

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadFileReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DownloadFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadFileReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadFileReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DownloadFileReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DownloadFileReq_USR)
    MergeFrom(*source);
  }
}

void DownloadFileReq_USR::MergeFrom(const DownloadFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DownloadFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strfileid_.MergeFrom(from.strfileid_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
}

void DownloadFileReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DownloadFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFileReq_USR::CopyFrom(const DownloadFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DownloadFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileReq_USR::IsInitialized() const {
  return true;
}

void DownloadFileReq_USR::Swap(DownloadFileReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadFileReq_USR::InternalSwap(DownloadFileReq_USR* other) {
  strfileid_.UnsafeArenaSwap(&other->strfileid_);
  struserid_.Swap(&other->struserid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownloadFileReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[70];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DownloadFileReq_USR

// string strUserID = 1;
void DownloadFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DownloadFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void DownloadFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileReq_USR.strUserID)
}
#if LANG_CXX11
void DownloadFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DownloadFileReq_USR.strUserID)
}
#endif
void DownloadFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileReq_USR.strUserID)
}
void DownloadFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileReq_USR.strUserID)
}
::std::string* DownloadFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DownloadFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DownloadFileReq_USR.strUserID)
}

// repeated string strFileID = 2;
int DownloadFileReq_USR::strfileid_size() const {
  return strfileid_.size();
}
void DownloadFileReq_USR::clear_strfileid() {
  strfileid_.Clear();
}
const ::std::string& DownloadFileReq_USR::strfileid(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Get(index);
}
::std::string* DownloadFileReq_USR::mutable_strfileid(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Mutable(index);
}
void DownloadFileReq_USR::set_strfileid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileReq_USR.strFileID)
  strfileid_.Mutable(index)->assign(value);
}
void DownloadFileReq_USR::set_strfileid(int index, const char* value) {
  strfileid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileReq_USR.strFileID)
}
void DownloadFileReq_USR::set_strfileid(int index, const char* value, size_t size) {
  strfileid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileReq_USR.strFileID)
}
::std::string* DownloadFileReq_USR::add_strfileid() {
  // @@protoc_insertion_point(field_add_mutable:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_.Add();
}
void DownloadFileReq_USR::add_strfileid(const ::std::string& value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interactive.Message.DownloadFileReq_USR.strFileID)
}
void DownloadFileReq_USR::add_strfileid(const char* value) {
  strfileid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interactive.Message.DownloadFileReq_USR.strFileID)
}
void DownloadFileReq_USR::add_strfileid(const char* value, size_t size) {
  strfileid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interactive.Message.DownloadFileReq_USR.strFileID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DownloadFileReq_USR::strfileid() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DownloadFileReq_USR.strFileID)
  return strfileid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DownloadFileReq_USR::mutable_strfileid() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DownloadFileReq_USR.strFileID)
  return &strfileid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadFileRsp_USR::kStrValueFieldNumber;
const int DownloadFileRsp_USR::kFileUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadFileRsp_USR::DownloadFileRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.DownloadFileRsp_USR)
}
DownloadFileRsp_USR::DownloadFileRsp_USR(const DownloadFileRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileurl_(from.fileurl_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.DownloadFileRsp_USR)
}

void DownloadFileRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DownloadFileRsp_USR::~DownloadFileRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.DownloadFileRsp_USR)
  SharedDtor();
}

void DownloadFileRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadFileRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadFileRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[71].descriptor;
}

const DownloadFileRsp_USR& DownloadFileRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DownloadFileRsp_USR* DownloadFileRsp_USR::New(::google::protobuf::Arena* arena) const {
  DownloadFileRsp_USR* n = new DownloadFileRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownloadFileRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.DownloadFileRsp_USR)
  fileurl_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DownloadFileRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.DownloadFileRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.DownloadFileRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.FileUrl fileUrl = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileurl()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.DownloadFileRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.DownloadFileRsp_USR)
  return false;
#undef DO_
}

void DownloadFileRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.DownloadFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  for (unsigned int i = 0, n = this->fileurl_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileurl(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.DownloadFileRsp_USR)
}

::google::protobuf::uint8* DownloadFileRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.DownloadFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.DownloadFileRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  for (unsigned int i = 0, n = this->fileurl_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileurl(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.DownloadFileRsp_USR)
  return target;
}

size_t DownloadFileRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.DownloadFileRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.FileUrl fileUrl = 2;
  {
    unsigned int count = this->fileurl_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileurl(i));
    }
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadFileRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.DownloadFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadFileRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadFileRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.DownloadFileRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.DownloadFileRsp_USR)
    MergeFrom(*source);
  }
}

void DownloadFileRsp_USR::MergeFrom(const DownloadFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.DownloadFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileurl_.MergeFrom(from.fileurl_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DownloadFileRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.DownloadFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFileRsp_USR::CopyFrom(const DownloadFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.DownloadFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileRsp_USR::IsInitialized() const {
  return true;
}

void DownloadFileRsp_USR::Swap(DownloadFileRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadFileRsp_USR::InternalSwap(DownloadFileRsp_USR* other) {
  fileurl_.UnsafeArenaSwap(&other->fileurl_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownloadFileRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[71];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DownloadFileRsp_USR

// string strValue = 1;
void DownloadFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DownloadFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void DownloadFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.DownloadFileRsp_USR.strValue)
}
#if LANG_CXX11
void DownloadFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.DownloadFileRsp_USR.strValue)
}
#endif
void DownloadFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.DownloadFileRsp_USR.strValue)
}
void DownloadFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.DownloadFileRsp_USR.strValue)
}
::std::string* DownloadFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.DownloadFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.DownloadFileRsp_USR.strValue)
}

// repeated .Interactive.Message.FileUrl fileUrl = 2;
int DownloadFileRsp_USR::fileurl_size() const {
  return fileurl_.size();
}
void DownloadFileRsp_USR::clear_fileurl() {
  fileurl_.Clear();
}
const ::Interactive::Message::FileUrl& DownloadFileRsp_USR::fileurl(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Get(index);
}
::Interactive::Message::FileUrl* DownloadFileRsp_USR::mutable_fileurl(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Mutable(index);
}
::Interactive::Message::FileUrl* DownloadFileRsp_USR::add_fileurl() {
  // @@protoc_insertion_point(field_add:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >*
DownloadFileRsp_USR::mutable_fileurl() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return &fileurl_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::FileUrl >&
DownloadFileRsp_USR::fileurl() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.DownloadFileRsp_USR.fileUrl)
  return fileurl_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFileReq_USR::kStrUserIDFieldNumber;
const int QueryFileReq_USR::kStrDevIDFieldNumber;
const int QueryFileReq_USR::kUiBeginIndexFieldNumber;
const int QueryFileReq_USR::kStrBeginDateFieldNumber;
const int QueryFileReq_USR::kStrEndDateFieldNumber;
const int QueryFileReq_USR::kUiBusinessTypeFieldNumber;
const int QueryFileReq_USR::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFileReq_USR::QueryFileReq_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFileReq_USR)
}
QueryFileReq_USR::QueryFileReq_USR(const QueryFileReq_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevid().size() > 0) {
    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  ::memcpy(&uibeginindex_, &from.uibeginindex_,
    reinterpret_cast<char*>(&uibusinesstype_) -
    reinterpret_cast<char*>(&uibeginindex_) + sizeof(uibusinesstype_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFileReq_USR)
}

void QueryFileReq_USR::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uibeginindex_, 0, reinterpret_cast<char*>(&uibusinesstype_) -
    reinterpret_cast<char*>(&uibeginindex_) + sizeof(uibusinesstype_));
  _cached_size_ = 0;
}

QueryFileReq_USR::~QueryFileReq_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFileReq_USR)
  SharedDtor();
}

void QueryFileReq_USR::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFileReq_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFileReq_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[72].descriptor;
}

const QueryFileReq_USR& QueryFileReq_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFileReq_USR* QueryFileReq_USR::New(::google::protobuf::Arena* arena) const {
  QueryFileReq_USR* n = new QueryFileReq_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFileReq_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFileReq_USR)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uibeginindex_, 0, reinterpret_cast<char*>(&uibusinesstype_) -
    reinterpret_cast<char*>(&uibeginindex_) + sizeof(uibusinesstype_));
}

bool QueryFileReq_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFileReq_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDevID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevid().data(), this->strdevid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strDevID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBeginDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strBeginDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndDate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strEndDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBusinessType = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibusinesstype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strValue = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileReq_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFileReq_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFileReq_USR)
  return false;
#undef DO_
}

void QueryFileReq_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strDevID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevid(), output);
  }

  // uint32 uiBeginIndex = 3;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uibeginindex(), output);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strBeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strbegindate(), output);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strenddate(), output);
  }

  // uint32 uiBusinessType = 6;
  if (this->uibusinesstype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uibusinesstype(), output);
  }

  // string strValue = 7;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFileReq_USR)
}

::google::protobuf::uint8* QueryFileReq_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFileReq_USR)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevid().data(), this->strdevid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strDevID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevid(), target);
  }

  // uint32 uiBeginIndex = 3;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uibeginindex(), target);
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strBeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strbegindate(), target);
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strenddate(), target);
  }

  // uint32 uiBusinessType = 6;
  if (this->uibusinesstype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uibusinesstype(), target);
  }

  // string strValue = 7;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileReq_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFileReq_USR)
  return target;
}

size_t QueryFileReq_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFileReq_USR)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strDevID = 2;
  if (this->strdevid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevid());
  }

  // string strBeginDate = 4;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEndDate = 5;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // string strValue = 7;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // uint32 uiBeginIndex = 3;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  // uint32 uiBusinessType = 6;
  if (this->uibusinesstype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibusinesstype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFileReq_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFileReq_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFileReq_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFileReq_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFileReq_USR)
    MergeFrom(*source);
  }
}

void QueryFileReq_USR::MergeFrom(const QueryFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFileReq_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strdevid().size() > 0) {

    strdevid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
  if (from.uibusinesstype() != 0) {
    set_uibusinesstype(from.uibusinesstype());
  }
}

void QueryFileReq_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFileReq_USR::CopyFrom(const QueryFileReq_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFileReq_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFileReq_USR::IsInitialized() const {
  return true;
}

void QueryFileReq_USR::Swap(QueryFileReq_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFileReq_USR::InternalSwap(QueryFileReq_USR* other) {
  struserid_.Swap(&other->struserid_);
  strdevid_.Swap(&other->strdevid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(uibusinesstype_, other->uibusinesstype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFileReq_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[72];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFileReq_USR

// string strUserID = 1;
void QueryFileReq_USR::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::struserid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strUserID)
  return struserid_.GetNoArena();
}
void QueryFileReq_USR::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strUserID)
}
#if LANG_CXX11
void QueryFileReq_USR::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strUserID)
}
#endif
void QueryFileReq_USR::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strUserID)
}
void QueryFileReq_USR::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strUserID)
}
::std::string* QueryFileReq_USR::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_struserid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strUserID)
}

// string strDevID = 2;
void QueryFileReq_USR::clear_strdevid() {
  strdevid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strdevid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strDevID)
  return strdevid_.GetNoArena();
}
void QueryFileReq_USR::set_strdevid(const ::std::string& value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strDevID)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strdevid(::std::string&& value) {
  
  strdevid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strDevID)
}
#endif
void QueryFileReq_USR::set_strdevid(const char* value) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strDevID)
}
void QueryFileReq_USR::set_strdevid(const char* value, size_t size) {
  
  strdevid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strDevID)
}
::std::string* QueryFileReq_USR::mutable_strdevid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strDevID)
  return strdevid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strdevid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strDevID)
  
  return strdevid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strdevid(::std::string* strdevid) {
  if (strdevid != NULL) {
    
  } else {
    
  }
  strdevid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strDevID)
}

// uint32 uiBeginIndex = 3;
void QueryFileReq_USR::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryFileReq_USR::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.uiBeginIndex)
  return uibeginindex_;
}
void QueryFileReq_USR::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.uiBeginIndex)
}

// string strBeginDate = 4;
void QueryFileReq_USR::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strbegindate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strBeginDate)
  return strbegindate_.GetNoArena();
}
void QueryFileReq_USR::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
#endif
void QueryFileReq_USR::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
void QueryFileReq_USR::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strBeginDate)
}
::std::string* QueryFileReq_USR::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strBeginDate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strBeginDate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strBeginDate)
}

// string strEndDate = 5;
void QueryFileReq_USR::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strenddate() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strEndDate)
  return strenddate_.GetNoArena();
}
void QueryFileReq_USR::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strEndDate)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strEndDate)
}
#endif
void QueryFileReq_USR::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strEndDate)
}
void QueryFileReq_USR::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strEndDate)
}
::std::string* QueryFileReq_USR::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strEndDate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strenddate() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strEndDate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strEndDate)
}

// uint32 uiBusinessType = 6;
void QueryFileReq_USR::clear_uibusinesstype() {
  uibusinesstype_ = 0u;
}
::google::protobuf::uint32 QueryFileReq_USR::uibusinesstype() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.uiBusinessType)
  return uibusinesstype_;
}
void QueryFileReq_USR::set_uibusinesstype(::google::protobuf::uint32 value) {
  
  uibusinesstype_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.uiBusinessType)
}

// string strValue = 7;
void QueryFileReq_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileReq_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileReq_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryFileReq_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileReq_USR.strValue)
}
#if LANG_CXX11
void QueryFileReq_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileReq_USR.strValue)
}
#endif
void QueryFileReq_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileReq_USR.strValue)
}
void QueryFileReq_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileReq_USR.strValue)
}
::std::string* QueryFileReq_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileReq_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileReq_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileReq_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileReq_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileReq_USR.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFileRsp_USR::kStrValueFieldNumber;
const int QueryFileRsp_USR::kFileInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFileRsp_USR::QueryFileRsp_USR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.QueryFileRsp_USR)
}
QueryFileRsp_USR::QueryFileRsp_USR(const QueryFileRsp_USR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileinfo_(from.fileinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.QueryFileRsp_USR)
}

void QueryFileRsp_USR::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryFileRsp_USR::~QueryFileRsp_USR() {
  // @@protoc_insertion_point(destructor:Interactive.Message.QueryFileRsp_USR)
  SharedDtor();
}

void QueryFileRsp_USR::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFileRsp_USR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFileRsp_USR::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[73].descriptor;
}

const QueryFileRsp_USR& QueryFileRsp_USR::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryFileRsp_USR* QueryFileRsp_USR::New(::google::protobuf::Arena* arena) const {
  QueryFileRsp_USR* n = new QueryFileRsp_USR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFileRsp_USR::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.QueryFileRsp_USR)
  fileinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryFileRsp_USR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.QueryFileRsp_USR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.QueryFileRsp_USR.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interactive.Message.File fileInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.QueryFileRsp_USR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.QueryFileRsp_USR)
  return false;
#undef DO_
}

void QueryFileRsp_USR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.QueryFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileRsp_USR.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.QueryFileRsp_USR)
}

::google::protobuf::uint8* QueryFileRsp_USR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.QueryFileRsp_USR)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.QueryFileRsp_USR.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // repeated .Interactive.Message.File fileInfo = 2;
  for (unsigned int i = 0, n = this->fileinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.QueryFileRsp_USR)
  return target;
}

size_t QueryFileRsp_USR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.QueryFileRsp_USR)
  size_t total_size = 0;

  // repeated .Interactive.Message.File fileInfo = 2;
  {
    unsigned int count = this->fileinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfo(i));
    }
  }

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFileRsp_USR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.QueryFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFileRsp_USR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFileRsp_USR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.QueryFileRsp_USR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.QueryFileRsp_USR)
    MergeFrom(*source);
  }
}

void QueryFileRsp_USR::MergeFrom(const QueryFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.QueryFileRsp_USR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileinfo_.MergeFrom(from.fileinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void QueryFileRsp_USR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.QueryFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFileRsp_USR::CopyFrom(const QueryFileRsp_USR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.QueryFileRsp_USR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFileRsp_USR::IsInitialized() const {
  return true;
}

void QueryFileRsp_USR::Swap(QueryFileRsp_USR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFileRsp_USR::InternalSwap(QueryFileRsp_USR* other) {
  fileinfo_.UnsafeArenaSwap(&other->fileinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFileRsp_USR::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[73];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFileRsp_USR

// string strValue = 1;
void QueryFileRsp_USR::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryFileRsp_USR::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileRsp_USR.strValue)
  return strvalue_.GetNoArena();
}
void QueryFileRsp_USR::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.QueryFileRsp_USR.strValue)
}
#if LANG_CXX11
void QueryFileRsp_USR::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.QueryFileRsp_USR.strValue)
}
#endif
void QueryFileRsp_USR::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.QueryFileRsp_USR.strValue)
}
void QueryFileRsp_USR::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.QueryFileRsp_USR.strValue)
}
::std::string* QueryFileRsp_USR::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileRsp_USR.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFileRsp_USR::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.QueryFileRsp_USR.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFileRsp_USR::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.QueryFileRsp_USR.strValue)
}

// repeated .Interactive.Message.File fileInfo = 2;
int QueryFileRsp_USR::fileinfo_size() const {
  return fileinfo_.size();
}
void QueryFileRsp_USR::clear_fileinfo() {
  fileinfo_.Clear();
}
const ::Interactive::Message::File& QueryFileRsp_USR::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Get(index);
}
::Interactive::Message::File* QueryFileRsp_USR::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Mutable(index);
}
::Interactive::Message::File* QueryFileRsp_USR::add_fileinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >*
QueryFileRsp_USR::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return &fileinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::File >&
QueryFileRsp_USR::fileinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.QueryFileRsp_USR.fileInfo)
  return fileinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineDevInfoReq_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineDevInfoReq_INNER::GetOnlineDevInfoReq_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineDevInfoReq_INNER)
}
GetOnlineDevInfoReq_INNER::GetOnlineDevInfoReq_INNER(const GetOnlineDevInfoReq_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineDevInfoReq_INNER)
}

void GetOnlineDevInfoReq_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineDevInfoReq_INNER::~GetOnlineDevInfoReq_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineDevInfoReq_INNER)
  SharedDtor();
}

void GetOnlineDevInfoReq_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineDevInfoReq_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineDevInfoReq_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[74].descriptor;
}

const GetOnlineDevInfoReq_INNER& GetOnlineDevInfoReq_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineDevInfoReq_INNER* GetOnlineDevInfoReq_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineDevInfoReq_INNER* n = new GetOnlineDevInfoReq_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineDevInfoReq_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineDevInfoReq_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineDevInfoReq_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineDevInfoReq_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineDevInfoReq_INNER)
  return false;
#undef DO_
}

void GetOnlineDevInfoReq_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoReq_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineDevInfoReq_INNER)
}

::google::protobuf::uint8* GetOnlineDevInfoReq_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoReq_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineDevInfoReq_INNER)
  return target;
}

size_t GetOnlineDevInfoReq_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineDevInfoReq_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineDevInfoReq_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineDevInfoReq_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineDevInfoReq_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineDevInfoReq_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineDevInfoReq_INNER::MergeFrom(const GetOnlineDevInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineDevInfoReq_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineDevInfoReq_INNER::CopyFrom(const GetOnlineDevInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineDevInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineDevInfoReq_INNER::IsInitialized() const {
  return true;
}

void GetOnlineDevInfoReq_INNER::Swap(GetOnlineDevInfoReq_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineDevInfoReq_INNER::InternalSwap(GetOnlineDevInfoReq_INNER* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineDevInfoReq_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[74];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineDevInfoReq_INNER

// string strValue = 1;
void GetOnlineDevInfoReq_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineDevInfoReq_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineDevInfoReq_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineDevInfoReq_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
#endif
void GetOnlineDevInfoReq_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
void GetOnlineDevInfoReq_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}
::std::string* GetOnlineDevInfoReq_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineDevInfoReq_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineDevInfoReq_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineDevInfoReq_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineDevInfoRsp_INNER::kDevInfoFieldNumber;
const int GetOnlineDevInfoRsp_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineDevInfoRsp_INNER::GetOnlineDevInfoRsp_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineDevInfoRsp_INNER)
}
GetOnlineDevInfoRsp_INNER::GetOnlineDevInfoRsp_INNER(const GetOnlineDevInfoRsp_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devinfo_(from.devinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineDevInfoRsp_INNER)
}

void GetOnlineDevInfoRsp_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineDevInfoRsp_INNER::~GetOnlineDevInfoRsp_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  SharedDtor();
}

void GetOnlineDevInfoRsp_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineDevInfoRsp_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineDevInfoRsp_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[75].descriptor;
}

const GetOnlineDevInfoRsp_INNER& GetOnlineDevInfoRsp_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineDevInfoRsp_INNER* GetOnlineDevInfoRsp_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineDevInfoRsp_INNER* n = new GetOnlineDevInfoRsp_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineDevInfoRsp_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  devinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineDevInfoRsp_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Device devInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  return false;
#undef DO_
}

void GetOnlineDevInfoRsp_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineDevInfoRsp_INNER)
}

::google::protobuf::uint8* GetOnlineDevInfoRsp_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->devinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  return target;
}

size_t GetOnlineDevInfoRsp_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.Device devInfo = 1;
  {
    unsigned int count = this->devinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineDevInfoRsp_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineDevInfoRsp_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineDevInfoRsp_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineDevInfoRsp_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineDevInfoRsp_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineDevInfoRsp_INNER::MergeFrom(const GetOnlineDevInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devinfo_.MergeFrom(from.devinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineDevInfoRsp_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineDevInfoRsp_INNER::CopyFrom(const GetOnlineDevInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineDevInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineDevInfoRsp_INNER::IsInitialized() const {
  return true;
}

void GetOnlineDevInfoRsp_INNER::Swap(GetOnlineDevInfoRsp_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineDevInfoRsp_INNER::InternalSwap(GetOnlineDevInfoRsp_INNER* other) {
  devinfo_.UnsafeArenaSwap(&other->devinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineDevInfoRsp_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[75];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineDevInfoRsp_INNER

// repeated .Interactive.Message.Device devInfo = 1;
int GetOnlineDevInfoRsp_INNER::devinfo_size() const {
  return devinfo_.size();
}
void GetOnlineDevInfoRsp_INNER::clear_devinfo() {
  devinfo_.Clear();
}
const ::Interactive::Message::Device& GetOnlineDevInfoRsp_INNER::devinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Get(index);
}
::Interactive::Message::Device* GetOnlineDevInfoRsp_INNER::mutable_devinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Mutable(index);
}
::Interactive::Message::Device* GetOnlineDevInfoRsp_INNER::add_devinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
GetOnlineDevInfoRsp_INNER::mutable_devinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return &devinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
GetOnlineDevInfoRsp_INNER::devinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetOnlineDevInfoRsp_INNER.devInfo)
  return devinfo_;
}

// string strValue = 2;
void GetOnlineDevInfoRsp_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineDevInfoRsp_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineDevInfoRsp_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineDevInfoRsp_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
#endif
void GetOnlineDevInfoRsp_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
void GetOnlineDevInfoRsp_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}
::std::string* GetOnlineDevInfoRsp_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineDevInfoRsp_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineDevInfoRsp_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineDevInfoRsp_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastOnlineDevInfo_INNER::kDevInfoFieldNumber;
const int BroadcastOnlineDevInfo_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastOnlineDevInfo_INNER::BroadcastOnlineDevInfo_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.BroadcastOnlineDevInfo_INNER)
}
BroadcastOnlineDevInfo_INNER::BroadcastOnlineDevInfo_INNER(const BroadcastOnlineDevInfo_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devinfo_(from.devinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.BroadcastOnlineDevInfo_INNER)
}

void BroadcastOnlineDevInfo_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BroadcastOnlineDevInfo_INNER::~BroadcastOnlineDevInfo_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  SharedDtor();
}

void BroadcastOnlineDevInfo_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastOnlineDevInfo_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadcastOnlineDevInfo_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[76].descriptor;
}

const BroadcastOnlineDevInfo_INNER& BroadcastOnlineDevInfo_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

BroadcastOnlineDevInfo_INNER* BroadcastOnlineDevInfo_INNER::New(::google::protobuf::Arena* arena) const {
  BroadcastOnlineDevInfo_INNER* n = new BroadcastOnlineDevInfo_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadcastOnlineDevInfo_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  devinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BroadcastOnlineDevInfo_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.Device devInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  return false;
#undef DO_
}

void BroadcastOnlineDevInfo_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.BroadcastOnlineDevInfo_INNER)
}

::google::protobuf::uint8* BroadcastOnlineDevInfo_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  // repeated .Interactive.Message.Device devInfo = 1;
  for (unsigned int i = 0, n = this->devinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->devinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  return target;
}

size_t BroadcastOnlineDevInfo_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.Device devInfo = 1;
  {
    unsigned int count = this->devinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadcastOnlineDevInfo_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastOnlineDevInfo_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastOnlineDevInfo_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.BroadcastOnlineDevInfo_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.BroadcastOnlineDevInfo_INNER)
    MergeFrom(*source);
  }
}

void BroadcastOnlineDevInfo_INNER::MergeFrom(const BroadcastOnlineDevInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devinfo_.MergeFrom(from.devinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void BroadcastOnlineDevInfo_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastOnlineDevInfo_INNER::CopyFrom(const BroadcastOnlineDevInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.BroadcastOnlineDevInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastOnlineDevInfo_INNER::IsInitialized() const {
  return true;
}

void BroadcastOnlineDevInfo_INNER::Swap(BroadcastOnlineDevInfo_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastOnlineDevInfo_INNER::InternalSwap(BroadcastOnlineDevInfo_INNER* other) {
  devinfo_.UnsafeArenaSwap(&other->devinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadcastOnlineDevInfo_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[76];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BroadcastOnlineDevInfo_INNER

// repeated .Interactive.Message.Device devInfo = 1;
int BroadcastOnlineDevInfo_INNER::devinfo_size() const {
  return devinfo_.size();
}
void BroadcastOnlineDevInfo_INNER::clear_devinfo() {
  devinfo_.Clear();
}
const ::Interactive::Message::Device& BroadcastOnlineDevInfo_INNER::devinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Get(index);
}
::Interactive::Message::Device* BroadcastOnlineDevInfo_INNER::mutable_devinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Mutable(index);
}
::Interactive::Message::Device* BroadcastOnlineDevInfo_INNER::add_devinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >*
BroadcastOnlineDevInfo_INNER::mutable_devinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return &devinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::Device >&
BroadcastOnlineDevInfo_INNER::devinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.BroadcastOnlineDevInfo_INNER.devInfo)
  return devinfo_;
}

// string strValue = 2;
void BroadcastOnlineDevInfo_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BroadcastOnlineDevInfo_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  return strvalue_.GetNoArena();
}
void BroadcastOnlineDevInfo_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
#if LANG_CXX11
void BroadcastOnlineDevInfo_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
#endif
void BroadcastOnlineDevInfo_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
void BroadcastOnlineDevInfo_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}
::std::string* BroadcastOnlineDevInfo_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BroadcastOnlineDevInfo_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BroadcastOnlineDevInfo_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.BroadcastOnlineDevInfo_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineUserInfoReq_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineUserInfoReq_INNER::GetOnlineUserInfoReq_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineUserInfoReq_INNER)
}
GetOnlineUserInfoReq_INNER::GetOnlineUserInfoReq_INNER(const GetOnlineUserInfoReq_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineUserInfoReq_INNER)
}

void GetOnlineUserInfoReq_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineUserInfoReq_INNER::~GetOnlineUserInfoReq_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineUserInfoReq_INNER)
  SharedDtor();
}

void GetOnlineUserInfoReq_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineUserInfoReq_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineUserInfoReq_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[77].descriptor;
}

const GetOnlineUserInfoReq_INNER& GetOnlineUserInfoReq_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineUserInfoReq_INNER* GetOnlineUserInfoReq_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineUserInfoReq_INNER* n = new GetOnlineUserInfoReq_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineUserInfoReq_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineUserInfoReq_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineUserInfoReq_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineUserInfoReq_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineUserInfoReq_INNER)
  return false;
#undef DO_
}

void GetOnlineUserInfoReq_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoReq_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineUserInfoReq_INNER)
}

::google::protobuf::uint8* GetOnlineUserInfoReq_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoReq_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineUserInfoReq_INNER)
  return target;
}

size_t GetOnlineUserInfoReq_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineUserInfoReq_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineUserInfoReq_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineUserInfoReq_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineUserInfoReq_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineUserInfoReq_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineUserInfoReq_INNER::MergeFrom(const GetOnlineUserInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineUserInfoReq_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineUserInfoReq_INNER::CopyFrom(const GetOnlineUserInfoReq_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineUserInfoReq_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineUserInfoReq_INNER::IsInitialized() const {
  return true;
}

void GetOnlineUserInfoReq_INNER::Swap(GetOnlineUserInfoReq_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineUserInfoReq_INNER::InternalSwap(GetOnlineUserInfoReq_INNER* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineUserInfoReq_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[77];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineUserInfoReq_INNER

// string strValue = 1;
void GetOnlineUserInfoReq_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineUserInfoReq_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineUserInfoReq_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineUserInfoReq_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
#endif
void GetOnlineUserInfoReq_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
void GetOnlineUserInfoReq_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}
::std::string* GetOnlineUserInfoReq_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineUserInfoReq_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineUserInfoReq_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineUserInfoReq_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlineUserInfoRsp_INNER::kUserInfoFieldNumber;
const int GetOnlineUserInfoRsp_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlineUserInfoRsp_INNER::GetOnlineUserInfoRsp_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.GetOnlineUserInfoRsp_INNER)
}
GetOnlineUserInfoRsp_INNER::GetOnlineUserInfoRsp_INNER(const GetOnlineUserInfoRsp_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      userinfo_(from.userinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.GetOnlineUserInfoRsp_INNER)
}

void GetOnlineUserInfoRsp_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOnlineUserInfoRsp_INNER::~GetOnlineUserInfoRsp_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  SharedDtor();
}

void GetOnlineUserInfoRsp_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOnlineUserInfoRsp_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlineUserInfoRsp_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[78].descriptor;
}

const GetOnlineUserInfoRsp_INNER& GetOnlineUserInfoRsp_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlineUserInfoRsp_INNER* GetOnlineUserInfoRsp_INNER::New(::google::protobuf::Arena* arena) const {
  GetOnlineUserInfoRsp_INNER* n = new GetOnlineUserInfoRsp_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlineUserInfoRsp_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  userinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOnlineUserInfoRsp_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  return false;
#undef DO_
}

void GetOnlineUserInfoRsp_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.GetOnlineUserInfoRsp_INNER)
}

::google::protobuf::uint8* GetOnlineUserInfoRsp_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  return target;
}

size_t GetOnlineUserInfoRsp_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.User userInfo = 1;
  {
    unsigned int count = this->userinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlineUserInfoRsp_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlineUserInfoRsp_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlineUserInfoRsp_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.GetOnlineUserInfoRsp_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.GetOnlineUserInfoRsp_INNER)
    MergeFrom(*source);
  }
}

void GetOnlineUserInfoRsp_INNER::MergeFrom(const GetOnlineUserInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userinfo_.MergeFrom(from.userinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetOnlineUserInfoRsp_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlineUserInfoRsp_INNER::CopyFrom(const GetOnlineUserInfoRsp_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.GetOnlineUserInfoRsp_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineUserInfoRsp_INNER::IsInitialized() const {
  return true;
}

void GetOnlineUserInfoRsp_INNER::Swap(GetOnlineUserInfoRsp_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlineUserInfoRsp_INNER::InternalSwap(GetOnlineUserInfoRsp_INNER* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlineUserInfoRsp_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[78];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlineUserInfoRsp_INNER

// repeated .Interactive.Message.User userInfo = 1;
int GetOnlineUserInfoRsp_INNER::userinfo_size() const {
  return userinfo_.size();
}
void GetOnlineUserInfoRsp_INNER::clear_userinfo() {
  userinfo_.Clear();
}
const ::Interactive::Message::User& GetOnlineUserInfoRsp_INNER::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Get(index);
}
::Interactive::Message::User* GetOnlineUserInfoRsp_INNER::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Mutable(index);
}
::Interactive::Message::User* GetOnlineUserInfoRsp_INNER::add_userinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
GetOnlineUserInfoRsp_INNER::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
GetOnlineUserInfoRsp_INNER::userinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.GetOnlineUserInfoRsp_INNER.userInfo)
  return userinfo_;
}

// string strValue = 2;
void GetOnlineUserInfoRsp_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOnlineUserInfoRsp_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  return strvalue_.GetNoArena();
}
void GetOnlineUserInfoRsp_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
#if LANG_CXX11
void GetOnlineUserInfoRsp_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
#endif
void GetOnlineUserInfoRsp_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
void GetOnlineUserInfoRsp_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}
::std::string* GetOnlineUserInfoRsp_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlineUserInfoRsp_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOnlineUserInfoRsp_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.GetOnlineUserInfoRsp_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastOnlineUserInfo_INNER::kUserInfoFieldNumber;
const int BroadcastOnlineUserInfo_INNER::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastOnlineUserInfo_INNER::BroadcastOnlineUserInfo_INNER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.BroadcastOnlineUserInfo_INNER)
}
BroadcastOnlineUserInfo_INNER::BroadcastOnlineUserInfo_INNER(const BroadcastOnlineUserInfo_INNER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      userinfo_(from.userinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.BroadcastOnlineUserInfo_INNER)
}

void BroadcastOnlineUserInfo_INNER::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BroadcastOnlineUserInfo_INNER::~BroadcastOnlineUserInfo_INNER() {
  // @@protoc_insertion_point(destructor:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  SharedDtor();
}

void BroadcastOnlineUserInfo_INNER::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastOnlineUserInfo_INNER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadcastOnlineUserInfo_INNER::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[79].descriptor;
}

const BroadcastOnlineUserInfo_INNER& BroadcastOnlineUserInfo_INNER::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

BroadcastOnlineUserInfo_INNER* BroadcastOnlineUserInfo_INNER::New(::google::protobuf::Arena* arena) const {
  BroadcastOnlineUserInfo_INNER* n = new BroadcastOnlineUserInfo_INNER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadcastOnlineUserInfo_INNER::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  userinfo_.Clear();
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BroadcastOnlineUserInfo_INNER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Interactive.Message.User userInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string strValue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  return false;
#undef DO_
}

void BroadcastOnlineUserInfo_INNER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.BroadcastOnlineUserInfo_INNER)
}

::google::protobuf::uint8* BroadcastOnlineUserInfo_INNER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  // repeated .Interactive.Message.User userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinfo(i), false, target);
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  return target;
}

size_t BroadcastOnlineUserInfo_INNER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  size_t total_size = 0;

  // repeated .Interactive.Message.User userInfo = 1;
  {
    unsigned int count = this->userinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo(i));
    }
  }

  // string strValue = 2;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadcastOnlineUserInfo_INNER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastOnlineUserInfo_INNER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastOnlineUserInfo_INNER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.BroadcastOnlineUserInfo_INNER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.BroadcastOnlineUserInfo_INNER)
    MergeFrom(*source);
  }
}

void BroadcastOnlineUserInfo_INNER::MergeFrom(const BroadcastOnlineUserInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userinfo_.MergeFrom(from.userinfo_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void BroadcastOnlineUserInfo_INNER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastOnlineUserInfo_INNER::CopyFrom(const BroadcastOnlineUserInfo_INNER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.BroadcastOnlineUserInfo_INNER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastOnlineUserInfo_INNER::IsInitialized() const {
  return true;
}

void BroadcastOnlineUserInfo_INNER::Swap(BroadcastOnlineUserInfo_INNER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastOnlineUserInfo_INNER::InternalSwap(BroadcastOnlineUserInfo_INNER* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadcastOnlineUserInfo_INNER::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[79];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BroadcastOnlineUserInfo_INNER

// repeated .Interactive.Message.User userInfo = 1;
int BroadcastOnlineUserInfo_INNER::userinfo_size() const {
  return userinfo_.size();
}
void BroadcastOnlineUserInfo_INNER::clear_userinfo() {
  userinfo_.Clear();
}
const ::Interactive::Message::User& BroadcastOnlineUserInfo_INNER::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Get(index);
}
::Interactive::Message::User* BroadcastOnlineUserInfo_INNER::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Mutable(index);
}
::Interactive::Message::User* BroadcastOnlineUserInfo_INNER::add_userinfo() {
  // @@protoc_insertion_point(field_add:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >*
BroadcastOnlineUserInfo_INNER::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Interactive::Message::User >&
BroadcastOnlineUserInfo_INNER::userinfo() const {
  // @@protoc_insertion_point(field_list:Interactive.Message.BroadcastOnlineUserInfo_INNER.userInfo)
  return userinfo_;
}

// string strValue = 2;
void BroadcastOnlineUserInfo_INNER::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BroadcastOnlineUserInfo_INNER::strvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  return strvalue_.GetNoArena();
}
void BroadcastOnlineUserInfo_INNER::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
#if LANG_CXX11
void BroadcastOnlineUserInfo_INNER::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
#endif
void BroadcastOnlineUserInfo_INNER::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
void BroadcastOnlineUserInfo_INNER::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}
::std::string* BroadcastOnlineUserInfo_INNER::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BroadcastOnlineUserInfo_INNER::release_strvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BroadcastOnlineUserInfo_INNER::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.BroadcastOnlineUserInfo_INNER.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req::kGetAccessAddressReqDEVValueFieldNumber;
const int Req::kLoginReqDEVValueFieldNumber;
const int Req::kLogoutReqDEVValueFieldNumber;
const int Req::kShakehandReqDEVValueFieldNumber;
const int Req::kConfigInfoReqDEVValueFieldNumber;
const int Req::kStorageAddressReqDEVValueFieldNumber;
const int Req::kP2PInfoReqDEVValueFieldNumber;
const int Req::kAddFileReqDEVValueFieldNumber;
const int Req::kMsgPreHandlerReqUSRValueFieldNumber;
const int Req::kGetAccessAddressReqUSRValueFieldNumber;
const int Req::kRegisterUserReqUSRValueFieldNumber;
const int Req::kUnRegisterUserReqUSRValueFieldNumber;
const int Req::kQueryUsrInfoReqUSRValueFieldNumber;
const int Req::kModifyUserInfoReqUSRValueFieldNumber;
const int Req::kLoginReqUSRValueFieldNumber;
const int Req::kLogoutReqUSRValueFieldNumber;
const int Req::kShakehandReqUSRValueFieldNumber;
const int Req::kConfigInfoReqUSRValueFieldNumber;
const int Req::kAddDevReqUSRValueFieldNumber;
const int Req::kDelDevReqUSRValueFieldNumber;
const int Req::kModifyDevReqUSRValueFieldNumber;
const int Req::kQueryDevInfoReqUSRValueFieldNumber;
const int Req::kQueryDevReqUSRValueFieldNumber;
const int Req::kQueryUserReqUSRValueFieldNumber;
const int Req::kSharingDevReqUSRValueFieldNumber;
const int Req::kCancelSharedDevReqUSRValueFieldNumber;
const int Req::kAddFriendsReqUSRValueFieldNumber;
const int Req::kDelFriendsReqUSRValueFieldNumber;
const int Req::kQueryFriendsReqUSRValueFieldNumber;
const int Req::kStorageAddressReqUSRValueFieldNumber;
const int Req::kP2PInfoReqUSRValueFieldNumber;
const int Req::kDeleteFileReqUSRValueFieldNumber;
const int Req::kDownloadFileReqUSRValueFieldNumber;
const int Req::kQueryFileReqUSRValueFieldNumber;
const int Req::kGetOnlineDevInfoReqINNERValueFieldNumber;
const int Req::kBroadcastOnlineDevInfoINNERValueFieldNumber;
const int Req::kGetOnlineUserInfoReqINNERValueFieldNumber;
const int Req::kBroadcastOnlineUserInfoINNERValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req::Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Req)
}
Req::Req(const Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_getaccessaddressreq_dev_value()) {
    getaccessaddressreq_dev_value_ = new ::Interactive::Message::GetAccessAddressReq_DEV(*from.getaccessaddressreq_dev_value_);
  } else {
    getaccessaddressreq_dev_value_ = NULL;
  }
  if (from.has_loginreq_dev_value()) {
    loginreq_dev_value_ = new ::Interactive::Message::LoginReq_DEV(*from.loginreq_dev_value_);
  } else {
    loginreq_dev_value_ = NULL;
  }
  if (from.has_logoutreq_dev_value()) {
    logoutreq_dev_value_ = new ::Interactive::Message::LogoutReq_DEV(*from.logoutreq_dev_value_);
  } else {
    logoutreq_dev_value_ = NULL;
  }
  if (from.has_shakehandreq_dev_value()) {
    shakehandreq_dev_value_ = new ::Interactive::Message::ShakehandReq_DEV(*from.shakehandreq_dev_value_);
  } else {
    shakehandreq_dev_value_ = NULL;
  }
  if (from.has_configinforeq_dev_value()) {
    configinforeq_dev_value_ = new ::Interactive::Message::ConfigInfoReq_DEV(*from.configinforeq_dev_value_);
  } else {
    configinforeq_dev_value_ = NULL;
  }
  if (from.has_storageaddressreq_dev_value()) {
    storageaddressreq_dev_value_ = new ::Interactive::Message::StorageAddressReq_DEV(*from.storageaddressreq_dev_value_);
  } else {
    storageaddressreq_dev_value_ = NULL;
  }
  if (from.has_p2pinforeq_dev_value()) {
    p2pinforeq_dev_value_ = new ::Interactive::Message::P2pInfoReq_DEV(*from.p2pinforeq_dev_value_);
  } else {
    p2pinforeq_dev_value_ = NULL;
  }
  if (from.has_addfilereq_dev_value()) {
    addfilereq_dev_value_ = new ::Interactive::Message::AddFileReq_DEV(*from.addfilereq_dev_value_);
  } else {
    addfilereq_dev_value_ = NULL;
  }
  if (from.has_msgprehandlerreq_usr_value()) {
    msgprehandlerreq_usr_value_ = new ::Interactive::Message::MsgPreHandlerReq_USR(*from.msgprehandlerreq_usr_value_);
  } else {
    msgprehandlerreq_usr_value_ = NULL;
  }
  if (from.has_getaccessaddressreq_usr_value()) {
    getaccessaddressreq_usr_value_ = new ::Interactive::Message::GetAccessAddressReq_USR(*from.getaccessaddressreq_usr_value_);
  } else {
    getaccessaddressreq_usr_value_ = NULL;
  }
  if (from.has_registeruserreq_usr_value()) {
    registeruserreq_usr_value_ = new ::Interactive::Message::RegisterUserReq_USR(*from.registeruserreq_usr_value_);
  } else {
    registeruserreq_usr_value_ = NULL;
  }
  if (from.has_unregisteruserreq_usr_value()) {
    unregisteruserreq_usr_value_ = new ::Interactive::Message::UnRegisterUserReq_USR(*from.unregisteruserreq_usr_value_);
  } else {
    unregisteruserreq_usr_value_ = NULL;
  }
  if (from.has_queryusrinforeq_usr_value()) {
    queryusrinforeq_usr_value_ = new ::Interactive::Message::QueryUsrInfoReq_USR(*from.queryusrinforeq_usr_value_);
  } else {
    queryusrinforeq_usr_value_ = NULL;
  }
  if (from.has_modifyuserinforeq_usr_value()) {
    modifyuserinforeq_usr_value_ = new ::Interactive::Message::ModifyUserInfoReq_USR(*from.modifyuserinforeq_usr_value_);
  } else {
    modifyuserinforeq_usr_value_ = NULL;
  }
  if (from.has_loginreq_usr_value()) {
    loginreq_usr_value_ = new ::Interactive::Message::LoginReq_USR(*from.loginreq_usr_value_);
  } else {
    loginreq_usr_value_ = NULL;
  }
  if (from.has_logoutreq_usr_value()) {
    logoutreq_usr_value_ = new ::Interactive::Message::LogoutReq_USR(*from.logoutreq_usr_value_);
  } else {
    logoutreq_usr_value_ = NULL;
  }
  if (from.has_shakehandreq_usr_value()) {
    shakehandreq_usr_value_ = new ::Interactive::Message::ShakehandReq_USR(*from.shakehandreq_usr_value_);
  } else {
    shakehandreq_usr_value_ = NULL;
  }
  if (from.has_configinforeq_usr_value()) {
    configinforeq_usr_value_ = new ::Interactive::Message::ConfigInfoReq_USR(*from.configinforeq_usr_value_);
  } else {
    configinforeq_usr_value_ = NULL;
  }
  if (from.has_adddevreq_usr_value()) {
    adddevreq_usr_value_ = new ::Interactive::Message::AddDevReq_USR(*from.adddevreq_usr_value_);
  } else {
    adddevreq_usr_value_ = NULL;
  }
  if (from.has_deldevreq_usr_value()) {
    deldevreq_usr_value_ = new ::Interactive::Message::DelDevReq_USR(*from.deldevreq_usr_value_);
  } else {
    deldevreq_usr_value_ = NULL;
  }
  if (from.has_modifydevreq_usr_value()) {
    modifydevreq_usr_value_ = new ::Interactive::Message::ModifyDevReq_USR(*from.modifydevreq_usr_value_);
  } else {
    modifydevreq_usr_value_ = NULL;
  }
  if (from.has_querydevinforeq_usr_value()) {
    querydevinforeq_usr_value_ = new ::Interactive::Message::QueryDevInfoReq_USR(*from.querydevinforeq_usr_value_);
  } else {
    querydevinforeq_usr_value_ = NULL;
  }
  if (from.has_querydevreq_usr_value()) {
    querydevreq_usr_value_ = new ::Interactive::Message::QueryDevReq_USR(*from.querydevreq_usr_value_);
  } else {
    querydevreq_usr_value_ = NULL;
  }
  if (from.has_queryuserreq_usr_value()) {
    queryuserreq_usr_value_ = new ::Interactive::Message::QueryUserReq_USR(*from.queryuserreq_usr_value_);
  } else {
    queryuserreq_usr_value_ = NULL;
  }
  if (from.has_sharingdevreq_usr_value()) {
    sharingdevreq_usr_value_ = new ::Interactive::Message::SharingDevReq_USR(*from.sharingdevreq_usr_value_);
  } else {
    sharingdevreq_usr_value_ = NULL;
  }
  if (from.has_cancelshareddevreq_usr_value()) {
    cancelshareddevreq_usr_value_ = new ::Interactive::Message::CancelSharedDevReq_USR(*from.cancelshareddevreq_usr_value_);
  } else {
    cancelshareddevreq_usr_value_ = NULL;
  }
  if (from.has_addfriendsreq_usr_value()) {
    addfriendsreq_usr_value_ = new ::Interactive::Message::AddFriendsReq_USR(*from.addfriendsreq_usr_value_);
  } else {
    addfriendsreq_usr_value_ = NULL;
  }
  if (from.has_delfriendsreq_usr_value()) {
    delfriendsreq_usr_value_ = new ::Interactive::Message::DelFriendsReq_USR(*from.delfriendsreq_usr_value_);
  } else {
    delfriendsreq_usr_value_ = NULL;
  }
  if (from.has_queryfriendsreq_usr_value()) {
    queryfriendsreq_usr_value_ = new ::Interactive::Message::QueryFriendsReq_USR(*from.queryfriendsreq_usr_value_);
  } else {
    queryfriendsreq_usr_value_ = NULL;
  }
  if (from.has_storageaddressreq_usr_value()) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressReq_USR(*from.storageaddressreq_usr_value_);
  } else {
    storageaddressreq_usr_value_ = NULL;
  }
  if (from.has_p2pinforeq_usr_value()) {
    p2pinforeq_usr_value_ = new ::Interactive::Message::P2pInfoReq_USR(*from.p2pinforeq_usr_value_);
  } else {
    p2pinforeq_usr_value_ = NULL;
  }
  if (from.has_deletefilereq_usr_value()) {
    deletefilereq_usr_value_ = new ::Interactive::Message::DeleteFileReq_USR(*from.deletefilereq_usr_value_);
  } else {
    deletefilereq_usr_value_ = NULL;
  }
  if (from.has_downloadfilereq_usr_value()) {
    downloadfilereq_usr_value_ = new ::Interactive::Message::DownloadFileReq_USR(*from.downloadfilereq_usr_value_);
  } else {
    downloadfilereq_usr_value_ = NULL;
  }
  if (from.has_queryfilereq_usr_value()) {
    queryfilereq_usr_value_ = new ::Interactive::Message::QueryFileReq_USR(*from.queryfilereq_usr_value_);
  } else {
    queryfilereq_usr_value_ = NULL;
  }
  if (from.has_getonlinedevinforeq_inner_value()) {
    getonlinedevinforeq_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoReq_INNER(*from.getonlinedevinforeq_inner_value_);
  } else {
    getonlinedevinforeq_inner_value_ = NULL;
  }
  if (from.has_broadcastonlinedevinfo_inner_value()) {
    broadcastonlinedevinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineDevInfo_INNER(*from.broadcastonlinedevinfo_inner_value_);
  } else {
    broadcastonlinedevinfo_inner_value_ = NULL;
  }
  if (from.has_getonlineuserinforeq_inner_value()) {
    getonlineuserinforeq_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoReq_INNER(*from.getonlineuserinforeq_inner_value_);
  } else {
    getonlineuserinforeq_inner_value_ = NULL;
  }
  if (from.has_broadcastonlineuserinfo_inner_value()) {
    broadcastonlineuserinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineUserInfo_INNER(*from.broadcastonlineuserinfo_inner_value_);
  } else {
    broadcastonlineuserinfo_inner_value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Req)
}

void Req::SharedCtor() {
  ::memset(&getaccessaddressreq_dev_value_, 0, reinterpret_cast<char*>(&broadcastonlineuserinfo_inner_value_) -
    reinterpret_cast<char*>(&getaccessaddressreq_dev_value_) + sizeof(broadcastonlineuserinfo_inner_value_));
  _cached_size_ = 0;
}

Req::~Req() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Req)
  SharedDtor();
}

void Req::SharedDtor() {
  if (this != internal_default_instance()) {
    delete getaccessaddressreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete loginreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforeq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressreq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforeq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete addfilereq_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete msgprehandlerreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getaccessaddressreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete registeruserreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete unregisteruserreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryusrinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyuserinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete loginreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete adddevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deldevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryuserreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete sharingdevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete cancelshareddevreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete addfriendsreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete delfriendsreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfriendsreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforeq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletefilereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete downloadfilereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfilereq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlinedevinforeq_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete broadcastonlinedevinfo_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlineuserinforeq_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete broadcastonlineuserinfo_inner_value_;
  }
}

void Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Req::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[80].descriptor;
}

const Req& Req::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Req* Req::New(::google::protobuf::Arena* arena) const {
  Req* n = new Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Req::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Req)
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_dev_value_ != NULL) {
    delete getaccessaddressreq_dev_value_;
  }
  getaccessaddressreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginreq_dev_value_ != NULL) {
    delete loginreq_dev_value_;
  }
  loginreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutreq_dev_value_ != NULL) {
    delete logoutreq_dev_value_;
  }
  logoutreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandreq_dev_value_ != NULL) {
    delete shakehandreq_dev_value_;
  }
  shakehandreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforeq_dev_value_ != NULL) {
    delete configinforeq_dev_value_;
  }
  configinforeq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressreq_dev_value_ != NULL) {
    delete storageaddressreq_dev_value_;
  }
  storageaddressreq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforeq_dev_value_ != NULL) {
    delete p2pinforeq_dev_value_;
  }
  p2pinforeq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfilereq_dev_value_ != NULL) {
    delete addfilereq_dev_value_;
  }
  addfilereq_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgprehandlerreq_usr_value_ != NULL) {
    delete msgprehandlerreq_usr_value_;
  }
  msgprehandlerreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_usr_value_ != NULL) {
    delete getaccessaddressreq_usr_value_;
  }
  getaccessaddressreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && registeruserreq_usr_value_ != NULL) {
    delete registeruserreq_usr_value_;
  }
  registeruserreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unregisteruserreq_usr_value_ != NULL) {
    delete unregisteruserreq_usr_value_;
  }
  unregisteruserreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryusrinforeq_usr_value_ != NULL) {
    delete queryusrinforeq_usr_value_;
  }
  queryusrinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyuserinforeq_usr_value_ != NULL) {
    delete modifyuserinforeq_usr_value_;
  }
  modifyuserinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginreq_usr_value_ != NULL) {
    delete loginreq_usr_value_;
  }
  loginreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutreq_usr_value_ != NULL) {
    delete logoutreq_usr_value_;
  }
  logoutreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandreq_usr_value_ != NULL) {
    delete shakehandreq_usr_value_;
  }
  shakehandreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforeq_usr_value_ != NULL) {
    delete configinforeq_usr_value_;
  }
  configinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && adddevreq_usr_value_ != NULL) {
    delete adddevreq_usr_value_;
  }
  adddevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deldevreq_usr_value_ != NULL) {
    delete deldevreq_usr_value_;
  }
  deldevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydevreq_usr_value_ != NULL) {
    delete modifydevreq_usr_value_;
  }
  modifydevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevinforeq_usr_value_ != NULL) {
    delete querydevinforeq_usr_value_;
  }
  querydevinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevreq_usr_value_ != NULL) {
    delete querydevreq_usr_value_;
  }
  querydevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryuserreq_usr_value_ != NULL) {
    delete queryuserreq_usr_value_;
  }
  queryuserreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && sharingdevreq_usr_value_ != NULL) {
    delete sharingdevreq_usr_value_;
  }
  sharingdevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancelshareddevreq_usr_value_ != NULL) {
    delete cancelshareddevreq_usr_value_;
  }
  cancelshareddevreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfriendsreq_usr_value_ != NULL) {
    delete addfriendsreq_usr_value_;
  }
  addfriendsreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && delfriendsreq_usr_value_ != NULL) {
    delete delfriendsreq_usr_value_;
  }
  delfriendsreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfriendsreq_usr_value_ != NULL) {
    delete queryfriendsreq_usr_value_;
  }
  queryfriendsreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) {
    delete storageaddressreq_usr_value_;
  }
  storageaddressreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforeq_usr_value_ != NULL) {
    delete p2pinforeq_usr_value_;
  }
  p2pinforeq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletefilereq_usr_value_ != NULL) {
    delete deletefilereq_usr_value_;
  }
  deletefilereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && downloadfilereq_usr_value_ != NULL) {
    delete downloadfilereq_usr_value_;
  }
  downloadfilereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfilereq_usr_value_ != NULL) {
    delete queryfilereq_usr_value_;
  }
  queryfilereq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlinedevinforeq_inner_value_ != NULL) {
    delete getonlinedevinforeq_inner_value_;
  }
  getonlinedevinforeq_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && broadcastonlinedevinfo_inner_value_ != NULL) {
    delete broadcastonlinedevinfo_inner_value_;
  }
  broadcastonlinedevinfo_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlineuserinforeq_inner_value_ != NULL) {
    delete getonlineuserinforeq_inner_value_;
  }
  getonlineuserinforeq_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && broadcastonlineuserinfo_inner_value_ != NULL) {
    delete broadcastonlineuserinfo_inner_value_;
  }
  broadcastonlineuserinfo_inner_value_ = NULL;
}

bool Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforeq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
      case 52: {
        if (tag == 418u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressreq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
      case 54: {
        if (tag == 434u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforeq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfilereq_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
      case 65: {
        if (tag == 522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgprehandlerreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registeruserreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
      case 90: {
        if (tag == 722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unregisteruserreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryusrinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
      case 102: {
        if (tag == 818u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyuserinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
      case 110: {
        if (tag == 882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
      case 120: {
        if (tag == 962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
      case 130: {
        if (tag == 1042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
      case 140: {
        if (tag == 1122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
      case 150: {
        if (tag == 1202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adddevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
      case 160: {
        if (tag == 1282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deldevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
      case 170: {
        if (tag == 1362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
      case 180: {
        if (tag == 1442u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
      case 190: {
        if (tag == 1522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
      case 200: {
        if (tag == 1602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryuserreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
      case 210: {
        if (tag == 1682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sharingdevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
      case 220: {
        if (tag == 1762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancelshareddevreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
      case 230: {
        if (tag == 1842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfriendsreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
      case 240: {
        if (tag == 1922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delfriendsreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
      case 250: {
        if (tag == 2002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfriendsreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
      case 252: {
        if (tag == 2018u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
      case 254: {
        if (tag == 2034u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforeq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
      case 260: {
        if (tag == 2082u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlinedevinforeq_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
      case 270: {
        if (tag == 2162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_broadcastonlinedevinfo_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
      case 280: {
        if (tag == 2242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlineuserinforeq_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
      case 290: {
        if (tag == 2322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_broadcastonlineuserinfo_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
      case 310: {
        if (tag == 2482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletefilereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
      case 320: {
        if (tag == 2562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_downloadfilereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
      case 330: {
        if (tag == 2642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfilereq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Req)
  return false;
#undef DO_
}

void Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Req)
  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  if (this->has_getaccessaddressreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->getaccessaddressreq_dev_value_, output);
  }

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  if (this->has_loginreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->loginreq_dev_value_, output);
  }

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  if (this->has_logoutreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->logoutreq_dev_value_, output);
  }

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  if (this->has_shakehandreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->shakehandreq_dev_value_, output);
  }

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  if (this->has_configinforeq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->configinforeq_dev_value_, output);
  }

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  if (this->has_storageaddressreq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, *this->storageaddressreq_dev_value_, output);
  }

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  if (this->has_p2pinforeq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, *this->p2pinforeq_dev_value_, output);
  }

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  if (this->has_addfilereq_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->addfilereq_dev_value_, output);
  }

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  if (this->has_msgprehandlerreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65, *this->msgprehandlerreq_usr_value_, output);
  }

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  if (this->has_getaccessaddressreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->getaccessaddressreq_usr_value_, output);
  }

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  if (this->has_registeruserreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->registeruserreq_usr_value_, output);
  }

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  if (this->has_unregisteruserreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->unregisteruserreq_usr_value_, output);
  }

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  if (this->has_queryusrinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->queryusrinforeq_usr_value_, output);
  }

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  if (this->has_modifyuserinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *this->modifyuserinforeq_usr_value_, output);
  }

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  if (this->has_loginreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, *this->loginreq_usr_value_, output);
  }

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  if (this->has_logoutreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, *this->logoutreq_usr_value_, output);
  }

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  if (this->has_shakehandreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      130, *this->shakehandreq_usr_value_, output);
  }

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  if (this->has_configinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140, *this->configinforeq_usr_value_, output);
  }

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  if (this->has_adddevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150, *this->adddevreq_usr_value_, output);
  }

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  if (this->has_deldevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160, *this->deldevreq_usr_value_, output);
  }

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  if (this->has_modifydevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170, *this->modifydevreq_usr_value_, output);
  }

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  if (this->has_querydevinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180, *this->querydevinforeq_usr_value_, output);
  }

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  if (this->has_querydevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190, *this->querydevreq_usr_value_, output);
  }

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  if (this->has_queryuserreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->queryuserreq_usr_value_, output);
  }

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  if (this->has_sharingdevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      210, *this->sharingdevreq_usr_value_, output);
  }

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  if (this->has_cancelshareddevreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, *this->cancelshareddevreq_usr_value_, output);
  }

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  if (this->has_addfriendsreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230, *this->addfriendsreq_usr_value_, output);
  }

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  if (this->has_delfriendsreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      240, *this->delfriendsreq_usr_value_, output);
  }

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  if (this->has_queryfriendsreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250, *this->queryfriendsreq_usr_value_, output);
  }

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  if (this->has_storageaddressreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252, *this->storageaddressreq_usr_value_, output);
  }

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  if (this->has_p2pinforeq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      254, *this->p2pinforeq_usr_value_, output);
  }

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  if (this->has_getonlinedevinforeq_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      260, *this->getonlinedevinforeq_inner_value_, output);
  }

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  if (this->has_broadcastonlinedevinfo_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270, *this->broadcastonlinedevinfo_inner_value_, output);
  }

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  if (this->has_getonlineuserinforeq_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      280, *this->getonlineuserinforeq_inner_value_, output);
  }

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  if (this->has_broadcastonlineuserinfo_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290, *this->broadcastonlineuserinfo_inner_value_, output);
  }

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  if (this->has_deletefilereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      310, *this->deletefilereq_usr_value_, output);
  }

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  if (this->has_downloadfilereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      320, *this->downloadfilereq_usr_value_, output);
  }

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  if (this->has_queryfilereq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330, *this->queryfilereq_usr_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Req)
}

::google::protobuf::uint8* Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Req)
  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  if (this->has_getaccessaddressreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->getaccessaddressreq_dev_value_, false, target);
  }

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  if (this->has_loginreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->loginreq_dev_value_, false, target);
  }

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  if (this->has_logoutreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->logoutreq_dev_value_, false, target);
  }

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  if (this->has_shakehandreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->shakehandreq_dev_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  if (this->has_configinforeq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->configinforeq_dev_value_, false, target);
  }

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  if (this->has_storageaddressreq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        52, *this->storageaddressreq_dev_value_, false, target);
  }

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  if (this->has_p2pinforeq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        54, *this->p2pinforeq_dev_value_, false, target);
  }

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  if (this->has_addfilereq_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->addfilereq_dev_value_, false, target);
  }

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  if (this->has_msgprehandlerreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        65, *this->msgprehandlerreq_usr_value_, false, target);
  }

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  if (this->has_getaccessaddressreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->getaccessaddressreq_usr_value_, false, target);
  }

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  if (this->has_registeruserreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->registeruserreq_usr_value_, false, target);
  }

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  if (this->has_unregisteruserreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->unregisteruserreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  if (this->has_queryusrinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->queryusrinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  if (this->has_modifyuserinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *this->modifyuserinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  if (this->has_loginreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        110, *this->loginreq_usr_value_, false, target);
  }

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  if (this->has_logoutreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        120, *this->logoutreq_usr_value_, false, target);
  }

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  if (this->has_shakehandreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        130, *this->shakehandreq_usr_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  if (this->has_configinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        140, *this->configinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  if (this->has_adddevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        150, *this->adddevreq_usr_value_, false, target);
  }

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  if (this->has_deldevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        160, *this->deldevreq_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  if (this->has_modifydevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        170, *this->modifydevreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  if (this->has_querydevinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        180, *this->querydevinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  if (this->has_querydevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        190, *this->querydevreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  if (this->has_queryuserreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->queryuserreq_usr_value_, false, target);
  }

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  if (this->has_sharingdevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        210, *this->sharingdevreq_usr_value_, false, target);
  }

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  if (this->has_cancelshareddevreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        220, *this->cancelshareddevreq_usr_value_, false, target);
  }

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  if (this->has_addfriendsreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        230, *this->addfriendsreq_usr_value_, false, target);
  }

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  if (this->has_delfriendsreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        240, *this->delfriendsreq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  if (this->has_queryfriendsreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        250, *this->queryfriendsreq_usr_value_, false, target);
  }

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  if (this->has_storageaddressreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        252, *this->storageaddressreq_usr_value_, false, target);
  }

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  if (this->has_p2pinforeq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        254, *this->p2pinforeq_usr_value_, false, target);
  }

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  if (this->has_getonlinedevinforeq_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        260, *this->getonlinedevinforeq_inner_value_, false, target);
  }

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  if (this->has_broadcastonlinedevinfo_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        270, *this->broadcastonlinedevinfo_inner_value_, false, target);
  }

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  if (this->has_getonlineuserinforeq_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        280, *this->getonlineuserinforeq_inner_value_, false, target);
  }

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  if (this->has_broadcastonlineuserinfo_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        290, *this->broadcastonlineuserinfo_inner_value_, false, target);
  }

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  if (this->has_deletefilereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        310, *this->deletefilereq_usr_value_, false, target);
  }

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  if (this->has_downloadfilereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        320, *this->downloadfilereq_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  if (this->has_queryfilereq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        330, *this->queryfilereq_usr_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Req)
  return target;
}

size_t Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Req)
  size_t total_size = 0;

  // .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
  if (this->has_getaccessaddressreq_dev_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressreq_dev_value_);
  }

  // .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
  if (this->has_loginreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginreq_dev_value_);
  }

  // .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
  if (this->has_logoutreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutreq_dev_value_);
  }

  // .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
  if (this->has_shakehandreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandreq_dev_value_);
  }

  // .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
  if (this->has_configinforeq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforeq_dev_value_);
  }

  // .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
  if (this->has_storageaddressreq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressreq_dev_value_);
  }

  // .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
  if (this->has_p2pinforeq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforeq_dev_value_);
  }

  // .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
  if (this->has_addfilereq_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfilereq_dev_value_);
  }

  // .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
  if (this->has_msgprehandlerreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgprehandlerreq_usr_value_);
  }

  // .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
  if (this->has_getaccessaddressreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressreq_usr_value_);
  }

  // .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
  if (this->has_registeruserreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->registeruserreq_usr_value_);
  }

  // .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
  if (this->has_unregisteruserreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unregisteruserreq_usr_value_);
  }

  // .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
  if (this->has_queryusrinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryusrinforeq_usr_value_);
  }

  // .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
  if (this->has_modifyuserinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyuserinforeq_usr_value_);
  }

  // .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
  if (this->has_loginreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginreq_usr_value_);
  }

  // .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
  if (this->has_logoutreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutreq_usr_value_);
  }

  // .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
  if (this->has_shakehandreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandreq_usr_value_);
  }

  // .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
  if (this->has_configinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforeq_usr_value_);
  }

  // .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
  if (this->has_adddevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->adddevreq_usr_value_);
  }

  // .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
  if (this->has_deldevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deldevreq_usr_value_);
  }

  // .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
  if (this->has_modifydevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydevreq_usr_value_);
  }

  // .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
  if (this->has_querydevinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevinforeq_usr_value_);
  }

  // .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
  if (this->has_querydevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevreq_usr_value_);
  }

  // .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
  if (this->has_queryuserreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryuserreq_usr_value_);
  }

  // .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
  if (this->has_sharingdevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sharingdevreq_usr_value_);
  }

  // .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
  if (this->has_cancelshareddevreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cancelshareddevreq_usr_value_);
  }

  // .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
  if (this->has_addfriendsreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfriendsreq_usr_value_);
  }

  // .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
  if (this->has_delfriendsreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delfriendsreq_usr_value_);
  }

  // .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
  if (this->has_queryfriendsreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfriendsreq_usr_value_);
  }

  // .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
  if (this->has_storageaddressreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressreq_usr_value_);
  }

  // .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
  if (this->has_p2pinforeq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforeq_usr_value_);
  }

  // .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
  if (this->has_deletefilereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletefilereq_usr_value_);
  }

  // .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
  if (this->has_downloadfilereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->downloadfilereq_usr_value_);
  }

  // .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
  if (this->has_queryfilereq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfilereq_usr_value_);
  }

  // .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
  if (this->has_getonlinedevinforeq_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlinedevinforeq_inner_value_);
  }

  // .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
  if (this->has_broadcastonlinedevinfo_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->broadcastonlinedevinfo_inner_value_);
  }

  // .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
  if (this->has_getonlineuserinforeq_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlineuserinforeq_inner_value_);
  }

  // .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
  if (this->has_broadcastonlineuserinfo_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->broadcastonlineuserinfo_inner_value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Req)
    MergeFrom(*source);
  }
}

void Req::MergeFrom(const Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_getaccessaddressreq_dev_value()) {
    mutable_getaccessaddressreq_dev_value()->::Interactive::Message::GetAccessAddressReq_DEV::MergeFrom(from.getaccessaddressreq_dev_value());
  }
  if (from.has_loginreq_dev_value()) {
    mutable_loginreq_dev_value()->::Interactive::Message::LoginReq_DEV::MergeFrom(from.loginreq_dev_value());
  }
  if (from.has_logoutreq_dev_value()) {
    mutable_logoutreq_dev_value()->::Interactive::Message::LogoutReq_DEV::MergeFrom(from.logoutreq_dev_value());
  }
  if (from.has_shakehandreq_dev_value()) {
    mutable_shakehandreq_dev_value()->::Interactive::Message::ShakehandReq_DEV::MergeFrom(from.shakehandreq_dev_value());
  }
  if (from.has_configinforeq_dev_value()) {
    mutable_configinforeq_dev_value()->::Interactive::Message::ConfigInfoReq_DEV::MergeFrom(from.configinforeq_dev_value());
  }
  if (from.has_storageaddressreq_dev_value()) {
    mutable_storageaddressreq_dev_value()->::Interactive::Message::StorageAddressReq_DEV::MergeFrom(from.storageaddressreq_dev_value());
  }
  if (from.has_p2pinforeq_dev_value()) {
    mutable_p2pinforeq_dev_value()->::Interactive::Message::P2pInfoReq_DEV::MergeFrom(from.p2pinforeq_dev_value());
  }
  if (from.has_addfilereq_dev_value()) {
    mutable_addfilereq_dev_value()->::Interactive::Message::AddFileReq_DEV::MergeFrom(from.addfilereq_dev_value());
  }
  if (from.has_msgprehandlerreq_usr_value()) {
    mutable_msgprehandlerreq_usr_value()->::Interactive::Message::MsgPreHandlerReq_USR::MergeFrom(from.msgprehandlerreq_usr_value());
  }
  if (from.has_getaccessaddressreq_usr_value()) {
    mutable_getaccessaddressreq_usr_value()->::Interactive::Message::GetAccessAddressReq_USR::MergeFrom(from.getaccessaddressreq_usr_value());
  }
  if (from.has_registeruserreq_usr_value()) {
    mutable_registeruserreq_usr_value()->::Interactive::Message::RegisterUserReq_USR::MergeFrom(from.registeruserreq_usr_value());
  }
  if (from.has_unregisteruserreq_usr_value()) {
    mutable_unregisteruserreq_usr_value()->::Interactive::Message::UnRegisterUserReq_USR::MergeFrom(from.unregisteruserreq_usr_value());
  }
  if (from.has_queryusrinforeq_usr_value()) {
    mutable_queryusrinforeq_usr_value()->::Interactive::Message::QueryUsrInfoReq_USR::MergeFrom(from.queryusrinforeq_usr_value());
  }
  if (from.has_modifyuserinforeq_usr_value()) {
    mutable_modifyuserinforeq_usr_value()->::Interactive::Message::ModifyUserInfoReq_USR::MergeFrom(from.modifyuserinforeq_usr_value());
  }
  if (from.has_loginreq_usr_value()) {
    mutable_loginreq_usr_value()->::Interactive::Message::LoginReq_USR::MergeFrom(from.loginreq_usr_value());
  }
  if (from.has_logoutreq_usr_value()) {
    mutable_logoutreq_usr_value()->::Interactive::Message::LogoutReq_USR::MergeFrom(from.logoutreq_usr_value());
  }
  if (from.has_shakehandreq_usr_value()) {
    mutable_shakehandreq_usr_value()->::Interactive::Message::ShakehandReq_USR::MergeFrom(from.shakehandreq_usr_value());
  }
  if (from.has_configinforeq_usr_value()) {
    mutable_configinforeq_usr_value()->::Interactive::Message::ConfigInfoReq_USR::MergeFrom(from.configinforeq_usr_value());
  }
  if (from.has_adddevreq_usr_value()) {
    mutable_adddevreq_usr_value()->::Interactive::Message::AddDevReq_USR::MergeFrom(from.adddevreq_usr_value());
  }
  if (from.has_deldevreq_usr_value()) {
    mutable_deldevreq_usr_value()->::Interactive::Message::DelDevReq_USR::MergeFrom(from.deldevreq_usr_value());
  }
  if (from.has_modifydevreq_usr_value()) {
    mutable_modifydevreq_usr_value()->::Interactive::Message::ModifyDevReq_USR::MergeFrom(from.modifydevreq_usr_value());
  }
  if (from.has_querydevinforeq_usr_value()) {
    mutable_querydevinforeq_usr_value()->::Interactive::Message::QueryDevInfoReq_USR::MergeFrom(from.querydevinforeq_usr_value());
  }
  if (from.has_querydevreq_usr_value()) {
    mutable_querydevreq_usr_value()->::Interactive::Message::QueryDevReq_USR::MergeFrom(from.querydevreq_usr_value());
  }
  if (from.has_queryuserreq_usr_value()) {
    mutable_queryuserreq_usr_value()->::Interactive::Message::QueryUserReq_USR::MergeFrom(from.queryuserreq_usr_value());
  }
  if (from.has_sharingdevreq_usr_value()) {
    mutable_sharingdevreq_usr_value()->::Interactive::Message::SharingDevReq_USR::MergeFrom(from.sharingdevreq_usr_value());
  }
  if (from.has_cancelshareddevreq_usr_value()) {
    mutable_cancelshareddevreq_usr_value()->::Interactive::Message::CancelSharedDevReq_USR::MergeFrom(from.cancelshareddevreq_usr_value());
  }
  if (from.has_addfriendsreq_usr_value()) {
    mutable_addfriendsreq_usr_value()->::Interactive::Message::AddFriendsReq_USR::MergeFrom(from.addfriendsreq_usr_value());
  }
  if (from.has_delfriendsreq_usr_value()) {
    mutable_delfriendsreq_usr_value()->::Interactive::Message::DelFriendsReq_USR::MergeFrom(from.delfriendsreq_usr_value());
  }
  if (from.has_queryfriendsreq_usr_value()) {
    mutable_queryfriendsreq_usr_value()->::Interactive::Message::QueryFriendsReq_USR::MergeFrom(from.queryfriendsreq_usr_value());
  }
  if (from.has_storageaddressreq_usr_value()) {
    mutable_storageaddressreq_usr_value()->::Interactive::Message::StorageAddressReq_USR::MergeFrom(from.storageaddressreq_usr_value());
  }
  if (from.has_p2pinforeq_usr_value()) {
    mutable_p2pinforeq_usr_value()->::Interactive::Message::P2pInfoReq_USR::MergeFrom(from.p2pinforeq_usr_value());
  }
  if (from.has_deletefilereq_usr_value()) {
    mutable_deletefilereq_usr_value()->::Interactive::Message::DeleteFileReq_USR::MergeFrom(from.deletefilereq_usr_value());
  }
  if (from.has_downloadfilereq_usr_value()) {
    mutable_downloadfilereq_usr_value()->::Interactive::Message::DownloadFileReq_USR::MergeFrom(from.downloadfilereq_usr_value());
  }
  if (from.has_queryfilereq_usr_value()) {
    mutable_queryfilereq_usr_value()->::Interactive::Message::QueryFileReq_USR::MergeFrom(from.queryfilereq_usr_value());
  }
  if (from.has_getonlinedevinforeq_inner_value()) {
    mutable_getonlinedevinforeq_inner_value()->::Interactive::Message::GetOnlineDevInfoReq_INNER::MergeFrom(from.getonlinedevinforeq_inner_value());
  }
  if (from.has_broadcastonlinedevinfo_inner_value()) {
    mutable_broadcastonlinedevinfo_inner_value()->::Interactive::Message::BroadcastOnlineDevInfo_INNER::MergeFrom(from.broadcastonlinedevinfo_inner_value());
  }
  if (from.has_getonlineuserinforeq_inner_value()) {
    mutable_getonlineuserinforeq_inner_value()->::Interactive::Message::GetOnlineUserInfoReq_INNER::MergeFrom(from.getonlineuserinforeq_inner_value());
  }
  if (from.has_broadcastonlineuserinfo_inner_value()) {
    mutable_broadcastonlineuserinfo_inner_value()->::Interactive::Message::BroadcastOnlineUserInfo_INNER::MergeFrom(from.broadcastonlineuserinfo_inner_value());
  }
}

void Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req::CopyFrom(const Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req::IsInitialized() const {
  return true;
}

void Req::Swap(Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req::InternalSwap(Req* other) {
  std::swap(getaccessaddressreq_dev_value_, other->getaccessaddressreq_dev_value_);
  std::swap(loginreq_dev_value_, other->loginreq_dev_value_);
  std::swap(logoutreq_dev_value_, other->logoutreq_dev_value_);
  std::swap(shakehandreq_dev_value_, other->shakehandreq_dev_value_);
  std::swap(configinforeq_dev_value_, other->configinforeq_dev_value_);
  std::swap(storageaddressreq_dev_value_, other->storageaddressreq_dev_value_);
  std::swap(p2pinforeq_dev_value_, other->p2pinforeq_dev_value_);
  std::swap(addfilereq_dev_value_, other->addfilereq_dev_value_);
  std::swap(msgprehandlerreq_usr_value_, other->msgprehandlerreq_usr_value_);
  std::swap(getaccessaddressreq_usr_value_, other->getaccessaddressreq_usr_value_);
  std::swap(registeruserreq_usr_value_, other->registeruserreq_usr_value_);
  std::swap(unregisteruserreq_usr_value_, other->unregisteruserreq_usr_value_);
  std::swap(queryusrinforeq_usr_value_, other->queryusrinforeq_usr_value_);
  std::swap(modifyuserinforeq_usr_value_, other->modifyuserinforeq_usr_value_);
  std::swap(loginreq_usr_value_, other->loginreq_usr_value_);
  std::swap(logoutreq_usr_value_, other->logoutreq_usr_value_);
  std::swap(shakehandreq_usr_value_, other->shakehandreq_usr_value_);
  std::swap(configinforeq_usr_value_, other->configinforeq_usr_value_);
  std::swap(adddevreq_usr_value_, other->adddevreq_usr_value_);
  std::swap(deldevreq_usr_value_, other->deldevreq_usr_value_);
  std::swap(modifydevreq_usr_value_, other->modifydevreq_usr_value_);
  std::swap(querydevinforeq_usr_value_, other->querydevinforeq_usr_value_);
  std::swap(querydevreq_usr_value_, other->querydevreq_usr_value_);
  std::swap(queryuserreq_usr_value_, other->queryuserreq_usr_value_);
  std::swap(sharingdevreq_usr_value_, other->sharingdevreq_usr_value_);
  std::swap(cancelshareddevreq_usr_value_, other->cancelshareddevreq_usr_value_);
  std::swap(addfriendsreq_usr_value_, other->addfriendsreq_usr_value_);
  std::swap(delfriendsreq_usr_value_, other->delfriendsreq_usr_value_);
  std::swap(queryfriendsreq_usr_value_, other->queryfriendsreq_usr_value_);
  std::swap(storageaddressreq_usr_value_, other->storageaddressreq_usr_value_);
  std::swap(p2pinforeq_usr_value_, other->p2pinforeq_usr_value_);
  std::swap(deletefilereq_usr_value_, other->deletefilereq_usr_value_);
  std::swap(downloadfilereq_usr_value_, other->downloadfilereq_usr_value_);
  std::swap(queryfilereq_usr_value_, other->queryfilereq_usr_value_);
  std::swap(getonlinedevinforeq_inner_value_, other->getonlinedevinforeq_inner_value_);
  std::swap(broadcastonlinedevinfo_inner_value_, other->broadcastonlinedevinfo_inner_value_);
  std::swap(getonlineuserinforeq_inner_value_, other->getonlineuserinforeq_inner_value_);
  std::swap(broadcastonlineuserinfo_inner_value_, other->broadcastonlineuserinfo_inner_value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Req::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[80];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Req

// .Interactive.Message.GetAccessAddressReq_DEV GetAccessAddressReq_DEV_Value = 10;
bool Req::has_getaccessaddressreq_dev_value() const {
  return this != internal_default_instance() && getaccessaddressreq_dev_value_ != NULL;
}
void Req::clear_getaccessaddressreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_dev_value_ != NULL) delete getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressReq_DEV& Req::getaccessaddressreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  return getaccessaddressreq_dev_value_ != NULL ? *getaccessaddressreq_dev_value_
                         : *::Interactive::Message::GetAccessAddressReq_DEV::internal_default_instance();
}
::Interactive::Message::GetAccessAddressReq_DEV* Req::mutable_getaccessaddressreq_dev_value() {
  
  if (getaccessaddressreq_dev_value_ == NULL) {
    getaccessaddressreq_dev_value_ = new ::Interactive::Message::GetAccessAddressReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  return getaccessaddressreq_dev_value_;
}
::Interactive::Message::GetAccessAddressReq_DEV* Req::release_getaccessaddressreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
  
  ::Interactive::Message::GetAccessAddressReq_DEV* temp = getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_getaccessaddressreq_dev_value(::Interactive::Message::GetAccessAddressReq_DEV* getaccessaddressreq_dev_value) {
  delete getaccessaddressreq_dev_value_;
  getaccessaddressreq_dev_value_ = getaccessaddressreq_dev_value;
  if (getaccessaddressreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetAccessAddressReq_DEV_Value)
}

// .Interactive.Message.LoginReq_DEV LoginReq_DEV_Value = 20;
bool Req::has_loginreq_dev_value() const {
  return this != internal_default_instance() && loginreq_dev_value_ != NULL;
}
void Req::clear_loginreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && loginreq_dev_value_ != NULL) delete loginreq_dev_value_;
  loginreq_dev_value_ = NULL;
}
const ::Interactive::Message::LoginReq_DEV& Req::loginreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LoginReq_DEV_Value)
  return loginreq_dev_value_ != NULL ? *loginreq_dev_value_
                         : *::Interactive::Message::LoginReq_DEV::internal_default_instance();
}
::Interactive::Message::LoginReq_DEV* Req::mutable_loginreq_dev_value() {
  
  if (loginreq_dev_value_ == NULL) {
    loginreq_dev_value_ = new ::Interactive::Message::LoginReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LoginReq_DEV_Value)
  return loginreq_dev_value_;
}
::Interactive::Message::LoginReq_DEV* Req::release_loginreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LoginReq_DEV_Value)
  
  ::Interactive::Message::LoginReq_DEV* temp = loginreq_dev_value_;
  loginreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_loginreq_dev_value(::Interactive::Message::LoginReq_DEV* loginreq_dev_value) {
  delete loginreq_dev_value_;
  loginreq_dev_value_ = loginreq_dev_value;
  if (loginreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LoginReq_DEV_Value)
}

// .Interactive.Message.LogoutReq_DEV LogoutReq_DEV_Value = 30;
bool Req::has_logoutreq_dev_value() const {
  return this != internal_default_instance() && logoutreq_dev_value_ != NULL;
}
void Req::clear_logoutreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && logoutreq_dev_value_ != NULL) delete logoutreq_dev_value_;
  logoutreq_dev_value_ = NULL;
}
const ::Interactive::Message::LogoutReq_DEV& Req::logoutreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LogoutReq_DEV_Value)
  return logoutreq_dev_value_ != NULL ? *logoutreq_dev_value_
                         : *::Interactive::Message::LogoutReq_DEV::internal_default_instance();
}
::Interactive::Message::LogoutReq_DEV* Req::mutable_logoutreq_dev_value() {
  
  if (logoutreq_dev_value_ == NULL) {
    logoutreq_dev_value_ = new ::Interactive::Message::LogoutReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LogoutReq_DEV_Value)
  return logoutreq_dev_value_;
}
::Interactive::Message::LogoutReq_DEV* Req::release_logoutreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LogoutReq_DEV_Value)
  
  ::Interactive::Message::LogoutReq_DEV* temp = logoutreq_dev_value_;
  logoutreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_logoutreq_dev_value(::Interactive::Message::LogoutReq_DEV* logoutreq_dev_value) {
  delete logoutreq_dev_value_;
  logoutreq_dev_value_ = logoutreq_dev_value;
  if (logoutreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LogoutReq_DEV_Value)
}

// .Interactive.Message.ShakehandReq_DEV ShakehandReq_DEV_Value = 40;
bool Req::has_shakehandreq_dev_value() const {
  return this != internal_default_instance() && shakehandreq_dev_value_ != NULL;
}
void Req::clear_shakehandreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_dev_value_ != NULL) delete shakehandreq_dev_value_;
  shakehandreq_dev_value_ = NULL;
}
const ::Interactive::Message::ShakehandReq_DEV& Req::shakehandreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ShakehandReq_DEV_Value)
  return shakehandreq_dev_value_ != NULL ? *shakehandreq_dev_value_
                         : *::Interactive::Message::ShakehandReq_DEV::internal_default_instance();
}
::Interactive::Message::ShakehandReq_DEV* Req::mutable_shakehandreq_dev_value() {
  
  if (shakehandreq_dev_value_ == NULL) {
    shakehandreq_dev_value_ = new ::Interactive::Message::ShakehandReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ShakehandReq_DEV_Value)
  return shakehandreq_dev_value_;
}
::Interactive::Message::ShakehandReq_DEV* Req::release_shakehandreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ShakehandReq_DEV_Value)
  
  ::Interactive::Message::ShakehandReq_DEV* temp = shakehandreq_dev_value_;
  shakehandreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_shakehandreq_dev_value(::Interactive::Message::ShakehandReq_DEV* shakehandreq_dev_value) {
  delete shakehandreq_dev_value_;
  shakehandreq_dev_value_ = shakehandreq_dev_value;
  if (shakehandreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ShakehandReq_DEV_Value)
}

// .Interactive.Message.ConfigInfoReq_DEV ConfigInfoReq_DEV_Value = 50;
bool Req::has_configinforeq_dev_value() const {
  return this != internal_default_instance() && configinforeq_dev_value_ != NULL;
}
void Req::clear_configinforeq_dev_value() {
  if (GetArenaNoVirtual() == NULL && configinforeq_dev_value_ != NULL) delete configinforeq_dev_value_;
  configinforeq_dev_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoReq_DEV& Req::configinforeq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  return configinforeq_dev_value_ != NULL ? *configinforeq_dev_value_
                         : *::Interactive::Message::ConfigInfoReq_DEV::internal_default_instance();
}
::Interactive::Message::ConfigInfoReq_DEV* Req::mutable_configinforeq_dev_value() {
  
  if (configinforeq_dev_value_ == NULL) {
    configinforeq_dev_value_ = new ::Interactive::Message::ConfigInfoReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  return configinforeq_dev_value_;
}
::Interactive::Message::ConfigInfoReq_DEV* Req::release_configinforeq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
  
  ::Interactive::Message::ConfigInfoReq_DEV* temp = configinforeq_dev_value_;
  configinforeq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_configinforeq_dev_value(::Interactive::Message::ConfigInfoReq_DEV* configinforeq_dev_value) {
  delete configinforeq_dev_value_;
  configinforeq_dev_value_ = configinforeq_dev_value;
  if (configinforeq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ConfigInfoReq_DEV_Value)
}

// .Interactive.Message.StorageAddressReq_DEV StorageAddressReq_DEV_Value = 52;
bool Req::has_storageaddressreq_dev_value() const {
  return this != internal_default_instance() && storageaddressreq_dev_value_ != NULL;
}
void Req::clear_storageaddressreq_dev_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_dev_value_ != NULL) delete storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = NULL;
}
const ::Interactive::Message::StorageAddressReq_DEV& Req::storageaddressreq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  return storageaddressreq_dev_value_ != NULL ? *storageaddressreq_dev_value_
                         : *::Interactive::Message::StorageAddressReq_DEV::internal_default_instance();
}
::Interactive::Message::StorageAddressReq_DEV* Req::mutable_storageaddressreq_dev_value() {
  
  if (storageaddressreq_dev_value_ == NULL) {
    storageaddressreq_dev_value_ = new ::Interactive::Message::StorageAddressReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  return storageaddressreq_dev_value_;
}
::Interactive::Message::StorageAddressReq_DEV* Req::release_storageaddressreq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.StorageAddressReq_DEV_Value)
  
  ::Interactive::Message::StorageAddressReq_DEV* temp = storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_storageaddressreq_dev_value(::Interactive::Message::StorageAddressReq_DEV* storageaddressreq_dev_value) {
  delete storageaddressreq_dev_value_;
  storageaddressreq_dev_value_ = storageaddressreq_dev_value;
  if (storageaddressreq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.StorageAddressReq_DEV_Value)
}

// .Interactive.Message.P2pInfoReq_DEV P2pInfoReq_DEV_Value = 54;
bool Req::has_p2pinforeq_dev_value() const {
  return this != internal_default_instance() && p2pinforeq_dev_value_ != NULL;
}
void Req::clear_p2pinforeq_dev_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforeq_dev_value_ != NULL) delete p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = NULL;
}
const ::Interactive::Message::P2pInfoReq_DEV& Req::p2pinforeq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  return p2pinforeq_dev_value_ != NULL ? *p2pinforeq_dev_value_
                         : *::Interactive::Message::P2pInfoReq_DEV::internal_default_instance();
}
::Interactive::Message::P2pInfoReq_DEV* Req::mutable_p2pinforeq_dev_value() {
  
  if (p2pinforeq_dev_value_ == NULL) {
    p2pinforeq_dev_value_ = new ::Interactive::Message::P2pInfoReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  return p2pinforeq_dev_value_;
}
::Interactive::Message::P2pInfoReq_DEV* Req::release_p2pinforeq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.P2pInfoReq_DEV_Value)
  
  ::Interactive::Message::P2pInfoReq_DEV* temp = p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_p2pinforeq_dev_value(::Interactive::Message::P2pInfoReq_DEV* p2pinforeq_dev_value) {
  delete p2pinforeq_dev_value_;
  p2pinforeq_dev_value_ = p2pinforeq_dev_value;
  if (p2pinforeq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.P2pInfoReq_DEV_Value)
}

// .Interactive.Message.AddFileReq_DEV AddFileReq_DEV_Value = 60;
bool Req::has_addfilereq_dev_value() const {
  return this != internal_default_instance() && addfilereq_dev_value_ != NULL;
}
void Req::clear_addfilereq_dev_value() {
  if (GetArenaNoVirtual() == NULL && addfilereq_dev_value_ != NULL) delete addfilereq_dev_value_;
  addfilereq_dev_value_ = NULL;
}
const ::Interactive::Message::AddFileReq_DEV& Req::addfilereq_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddFileReq_DEV_Value)
  return addfilereq_dev_value_ != NULL ? *addfilereq_dev_value_
                         : *::Interactive::Message::AddFileReq_DEV::internal_default_instance();
}
::Interactive::Message::AddFileReq_DEV* Req::mutable_addfilereq_dev_value() {
  
  if (addfilereq_dev_value_ == NULL) {
    addfilereq_dev_value_ = new ::Interactive::Message::AddFileReq_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddFileReq_DEV_Value)
  return addfilereq_dev_value_;
}
::Interactive::Message::AddFileReq_DEV* Req::release_addfilereq_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddFileReq_DEV_Value)
  
  ::Interactive::Message::AddFileReq_DEV* temp = addfilereq_dev_value_;
  addfilereq_dev_value_ = NULL;
  return temp;
}
void Req::set_allocated_addfilereq_dev_value(::Interactive::Message::AddFileReq_DEV* addfilereq_dev_value) {
  delete addfilereq_dev_value_;
  addfilereq_dev_value_ = addfilereq_dev_value;
  if (addfilereq_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddFileReq_DEV_Value)
}

// .Interactive.Message.MsgPreHandlerReq_USR MsgPreHandlerReq_USR_Value = 65;
bool Req::has_msgprehandlerreq_usr_value() const {
  return this != internal_default_instance() && msgprehandlerreq_usr_value_ != NULL;
}
void Req::clear_msgprehandlerreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && msgprehandlerreq_usr_value_ != NULL) delete msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = NULL;
}
const ::Interactive::Message::MsgPreHandlerReq_USR& Req::msgprehandlerreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  return msgprehandlerreq_usr_value_ != NULL ? *msgprehandlerreq_usr_value_
                         : *::Interactive::Message::MsgPreHandlerReq_USR::internal_default_instance();
}
::Interactive::Message::MsgPreHandlerReq_USR* Req::mutable_msgprehandlerreq_usr_value() {
  
  if (msgprehandlerreq_usr_value_ == NULL) {
    msgprehandlerreq_usr_value_ = new ::Interactive::Message::MsgPreHandlerReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  return msgprehandlerreq_usr_value_;
}
::Interactive::Message::MsgPreHandlerReq_USR* Req::release_msgprehandlerreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
  
  ::Interactive::Message::MsgPreHandlerReq_USR* temp = msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_msgprehandlerreq_usr_value(::Interactive::Message::MsgPreHandlerReq_USR* msgprehandlerreq_usr_value) {
  delete msgprehandlerreq_usr_value_;
  msgprehandlerreq_usr_value_ = msgprehandlerreq_usr_value;
  if (msgprehandlerreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.MsgPreHandlerReq_USR_Value)
}

// .Interactive.Message.GetAccessAddressReq_USR GetAccessAddressReq_USR_Value = 70;
bool Req::has_getaccessaddressreq_usr_value() const {
  return this != internal_default_instance() && getaccessaddressreq_usr_value_ != NULL;
}
void Req::clear_getaccessaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressreq_usr_value_ != NULL) delete getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressReq_USR& Req::getaccessaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  return getaccessaddressreq_usr_value_ != NULL ? *getaccessaddressreq_usr_value_
                         : *::Interactive::Message::GetAccessAddressReq_USR::internal_default_instance();
}
::Interactive::Message::GetAccessAddressReq_USR* Req::mutable_getaccessaddressreq_usr_value() {
  
  if (getaccessaddressreq_usr_value_ == NULL) {
    getaccessaddressreq_usr_value_ = new ::Interactive::Message::GetAccessAddressReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  return getaccessaddressreq_usr_value_;
}
::Interactive::Message::GetAccessAddressReq_USR* Req::release_getaccessaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
  
  ::Interactive::Message::GetAccessAddressReq_USR* temp = getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_getaccessaddressreq_usr_value(::Interactive::Message::GetAccessAddressReq_USR* getaccessaddressreq_usr_value) {
  delete getaccessaddressreq_usr_value_;
  getaccessaddressreq_usr_value_ = getaccessaddressreq_usr_value;
  if (getaccessaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetAccessAddressReq_USR_Value)
}

// .Interactive.Message.RegisterUserReq_USR RegisterUserReq_USR_Value = 80;
bool Req::has_registeruserreq_usr_value() const {
  return this != internal_default_instance() && registeruserreq_usr_value_ != NULL;
}
void Req::clear_registeruserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && registeruserreq_usr_value_ != NULL) delete registeruserreq_usr_value_;
  registeruserreq_usr_value_ = NULL;
}
const ::Interactive::Message::RegisterUserReq_USR& Req::registeruserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.RegisterUserReq_USR_Value)
  return registeruserreq_usr_value_ != NULL ? *registeruserreq_usr_value_
                         : *::Interactive::Message::RegisterUserReq_USR::internal_default_instance();
}
::Interactive::Message::RegisterUserReq_USR* Req::mutable_registeruserreq_usr_value() {
  
  if (registeruserreq_usr_value_ == NULL) {
    registeruserreq_usr_value_ = new ::Interactive::Message::RegisterUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.RegisterUserReq_USR_Value)
  return registeruserreq_usr_value_;
}
::Interactive::Message::RegisterUserReq_USR* Req::release_registeruserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.RegisterUserReq_USR_Value)
  
  ::Interactive::Message::RegisterUserReq_USR* temp = registeruserreq_usr_value_;
  registeruserreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_registeruserreq_usr_value(::Interactive::Message::RegisterUserReq_USR* registeruserreq_usr_value) {
  delete registeruserreq_usr_value_;
  registeruserreq_usr_value_ = registeruserreq_usr_value;
  if (registeruserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.RegisterUserReq_USR_Value)
}

// .Interactive.Message.UnRegisterUserReq_USR UnRegisterUserReq_USR_Value = 90;
bool Req::has_unregisteruserreq_usr_value() const {
  return this != internal_default_instance() && unregisteruserreq_usr_value_ != NULL;
}
void Req::clear_unregisteruserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregisteruserreq_usr_value_ != NULL) delete unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = NULL;
}
const ::Interactive::Message::UnRegisterUserReq_USR& Req::unregisteruserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  return unregisteruserreq_usr_value_ != NULL ? *unregisteruserreq_usr_value_
                         : *::Interactive::Message::UnRegisterUserReq_USR::internal_default_instance();
}
::Interactive::Message::UnRegisterUserReq_USR* Req::mutable_unregisteruserreq_usr_value() {
  
  if (unregisteruserreq_usr_value_ == NULL) {
    unregisteruserreq_usr_value_ = new ::Interactive::Message::UnRegisterUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  return unregisteruserreq_usr_value_;
}
::Interactive::Message::UnRegisterUserReq_USR* Req::release_unregisteruserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
  
  ::Interactive::Message::UnRegisterUserReq_USR* temp = unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_unregisteruserreq_usr_value(::Interactive::Message::UnRegisterUserReq_USR* unregisteruserreq_usr_value) {
  delete unregisteruserreq_usr_value_;
  unregisteruserreq_usr_value_ = unregisteruserreq_usr_value;
  if (unregisteruserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.UnRegisterUserReq_USR_Value)
}

// .Interactive.Message.QueryUsrInfoReq_USR QueryUsrInfoReq_USR_Value = 100;
bool Req::has_queryusrinforeq_usr_value() const {
  return this != internal_default_instance() && queryusrinforeq_usr_value_ != NULL;
}
void Req::clear_queryusrinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusrinforeq_usr_value_ != NULL) delete queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUsrInfoReq_USR& Req::queryusrinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  return queryusrinforeq_usr_value_ != NULL ? *queryusrinforeq_usr_value_
                         : *::Interactive::Message::QueryUsrInfoReq_USR::internal_default_instance();
}
::Interactive::Message::QueryUsrInfoReq_USR* Req::mutable_queryusrinforeq_usr_value() {
  
  if (queryusrinforeq_usr_value_ == NULL) {
    queryusrinforeq_usr_value_ = new ::Interactive::Message::QueryUsrInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  return queryusrinforeq_usr_value_;
}
::Interactive::Message::QueryUsrInfoReq_USR* Req::release_queryusrinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
  
  ::Interactive::Message::QueryUsrInfoReq_USR* temp = queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryusrinforeq_usr_value(::Interactive::Message::QueryUsrInfoReq_USR* queryusrinforeq_usr_value) {
  delete queryusrinforeq_usr_value_;
  queryusrinforeq_usr_value_ = queryusrinforeq_usr_value;
  if (queryusrinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUsrInfoReq_USR_Value)
}

// .Interactive.Message.ModifyUserInfoReq_USR ModifyUserInfoReq_USR_Value = 102;
bool Req::has_modifyuserinforeq_usr_value() const {
  return this != internal_default_instance() && modifyuserinforeq_usr_value_ != NULL;
}
void Req::clear_modifyuserinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifyuserinforeq_usr_value_ != NULL) delete modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyUserInfoReq_USR& Req::modifyuserinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  return modifyuserinforeq_usr_value_ != NULL ? *modifyuserinforeq_usr_value_
                         : *::Interactive::Message::ModifyUserInfoReq_USR::internal_default_instance();
}
::Interactive::Message::ModifyUserInfoReq_USR* Req::mutable_modifyuserinforeq_usr_value() {
  
  if (modifyuserinforeq_usr_value_ == NULL) {
    modifyuserinforeq_usr_value_ = new ::Interactive::Message::ModifyUserInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  return modifyuserinforeq_usr_value_;
}
::Interactive::Message::ModifyUserInfoReq_USR* Req::release_modifyuserinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
  
  ::Interactive::Message::ModifyUserInfoReq_USR* temp = modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifyuserinforeq_usr_value(::Interactive::Message::ModifyUserInfoReq_USR* modifyuserinforeq_usr_value) {
  delete modifyuserinforeq_usr_value_;
  modifyuserinforeq_usr_value_ = modifyuserinforeq_usr_value;
  if (modifyuserinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyUserInfoReq_USR_Value)
}

// .Interactive.Message.LoginReq_USR LoginReq_USR_Value = 110;
bool Req::has_loginreq_usr_value() const {
  return this != internal_default_instance() && loginreq_usr_value_ != NULL;
}
void Req::clear_loginreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && loginreq_usr_value_ != NULL) delete loginreq_usr_value_;
  loginreq_usr_value_ = NULL;
}
const ::Interactive::Message::LoginReq_USR& Req::loginreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LoginReq_USR_Value)
  return loginreq_usr_value_ != NULL ? *loginreq_usr_value_
                         : *::Interactive::Message::LoginReq_USR::internal_default_instance();
}
::Interactive::Message::LoginReq_USR* Req::mutable_loginreq_usr_value() {
  
  if (loginreq_usr_value_ == NULL) {
    loginreq_usr_value_ = new ::Interactive::Message::LoginReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LoginReq_USR_Value)
  return loginreq_usr_value_;
}
::Interactive::Message::LoginReq_USR* Req::release_loginreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LoginReq_USR_Value)
  
  ::Interactive::Message::LoginReq_USR* temp = loginreq_usr_value_;
  loginreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_loginreq_usr_value(::Interactive::Message::LoginReq_USR* loginreq_usr_value) {
  delete loginreq_usr_value_;
  loginreq_usr_value_ = loginreq_usr_value;
  if (loginreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LoginReq_USR_Value)
}

// .Interactive.Message.LogoutReq_USR LogoutReq_USR_Value = 120;
bool Req::has_logoutreq_usr_value() const {
  return this != internal_default_instance() && logoutreq_usr_value_ != NULL;
}
void Req::clear_logoutreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && logoutreq_usr_value_ != NULL) delete logoutreq_usr_value_;
  logoutreq_usr_value_ = NULL;
}
const ::Interactive::Message::LogoutReq_USR& Req::logoutreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.LogoutReq_USR_Value)
  return logoutreq_usr_value_ != NULL ? *logoutreq_usr_value_
                         : *::Interactive::Message::LogoutReq_USR::internal_default_instance();
}
::Interactive::Message::LogoutReq_USR* Req::mutable_logoutreq_usr_value() {
  
  if (logoutreq_usr_value_ == NULL) {
    logoutreq_usr_value_ = new ::Interactive::Message::LogoutReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.LogoutReq_USR_Value)
  return logoutreq_usr_value_;
}
::Interactive::Message::LogoutReq_USR* Req::release_logoutreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.LogoutReq_USR_Value)
  
  ::Interactive::Message::LogoutReq_USR* temp = logoutreq_usr_value_;
  logoutreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_logoutreq_usr_value(::Interactive::Message::LogoutReq_USR* logoutreq_usr_value) {
  delete logoutreq_usr_value_;
  logoutreq_usr_value_ = logoutreq_usr_value;
  if (logoutreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.LogoutReq_USR_Value)
}

// .Interactive.Message.ShakehandReq_USR ShakehandReq_USR_Value = 130;
bool Req::has_shakehandreq_usr_value() const {
  return this != internal_default_instance() && shakehandreq_usr_value_ != NULL;
}
void Req::clear_shakehandreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && shakehandreq_usr_value_ != NULL) delete shakehandreq_usr_value_;
  shakehandreq_usr_value_ = NULL;
}
const ::Interactive::Message::ShakehandReq_USR& Req::shakehandreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ShakehandReq_USR_Value)
  return shakehandreq_usr_value_ != NULL ? *shakehandreq_usr_value_
                         : *::Interactive::Message::ShakehandReq_USR::internal_default_instance();
}
::Interactive::Message::ShakehandReq_USR* Req::mutable_shakehandreq_usr_value() {
  
  if (shakehandreq_usr_value_ == NULL) {
    shakehandreq_usr_value_ = new ::Interactive::Message::ShakehandReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ShakehandReq_USR_Value)
  return shakehandreq_usr_value_;
}
::Interactive::Message::ShakehandReq_USR* Req::release_shakehandreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ShakehandReq_USR_Value)
  
  ::Interactive::Message::ShakehandReq_USR* temp = shakehandreq_usr_value_;
  shakehandreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_shakehandreq_usr_value(::Interactive::Message::ShakehandReq_USR* shakehandreq_usr_value) {
  delete shakehandreq_usr_value_;
  shakehandreq_usr_value_ = shakehandreq_usr_value;
  if (shakehandreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ShakehandReq_USR_Value)
}

// .Interactive.Message.ConfigInfoReq_USR ConfigInfoReq_USR_Value = 140;
bool Req::has_configinforeq_usr_value() const {
  return this != internal_default_instance() && configinforeq_usr_value_ != NULL;
}
void Req::clear_configinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && configinforeq_usr_value_ != NULL) delete configinforeq_usr_value_;
  configinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoReq_USR& Req::configinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  return configinforeq_usr_value_ != NULL ? *configinforeq_usr_value_
                         : *::Interactive::Message::ConfigInfoReq_USR::internal_default_instance();
}
::Interactive::Message::ConfigInfoReq_USR* Req::mutable_configinforeq_usr_value() {
  
  if (configinforeq_usr_value_ == NULL) {
    configinforeq_usr_value_ = new ::Interactive::Message::ConfigInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  return configinforeq_usr_value_;
}
::Interactive::Message::ConfigInfoReq_USR* Req::release_configinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ConfigInfoReq_USR_Value)
  
  ::Interactive::Message::ConfigInfoReq_USR* temp = configinforeq_usr_value_;
  configinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_configinforeq_usr_value(::Interactive::Message::ConfigInfoReq_USR* configinforeq_usr_value) {
  delete configinforeq_usr_value_;
  configinforeq_usr_value_ = configinforeq_usr_value;
  if (configinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ConfigInfoReq_USR_Value)
}

// .Interactive.Message.AddDevReq_USR AddDevReq_USR_Value = 150;
bool Req::has_adddevreq_usr_value() const {
  return this != internal_default_instance() && adddevreq_usr_value_ != NULL;
}
void Req::clear_adddevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && adddevreq_usr_value_ != NULL) delete adddevreq_usr_value_;
  adddevreq_usr_value_ = NULL;
}
const ::Interactive::Message::AddDevReq_USR& Req::adddevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddDevReq_USR_Value)
  return adddevreq_usr_value_ != NULL ? *adddevreq_usr_value_
                         : *::Interactive::Message::AddDevReq_USR::internal_default_instance();
}
::Interactive::Message::AddDevReq_USR* Req::mutable_adddevreq_usr_value() {
  
  if (adddevreq_usr_value_ == NULL) {
    adddevreq_usr_value_ = new ::Interactive::Message::AddDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddDevReq_USR_Value)
  return adddevreq_usr_value_;
}
::Interactive::Message::AddDevReq_USR* Req::release_adddevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddDevReq_USR_Value)
  
  ::Interactive::Message::AddDevReq_USR* temp = adddevreq_usr_value_;
  adddevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_adddevreq_usr_value(::Interactive::Message::AddDevReq_USR* adddevreq_usr_value) {
  delete adddevreq_usr_value_;
  adddevreq_usr_value_ = adddevreq_usr_value;
  if (adddevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddDevReq_USR_Value)
}

// .Interactive.Message.DelDevReq_USR DelDevReq_USR_Value = 160;
bool Req::has_deldevreq_usr_value() const {
  return this != internal_default_instance() && deldevreq_usr_value_ != NULL;
}
void Req::clear_deldevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deldevreq_usr_value_ != NULL) delete deldevreq_usr_value_;
  deldevreq_usr_value_ = NULL;
}
const ::Interactive::Message::DelDevReq_USR& Req::deldevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DelDevReq_USR_Value)
  return deldevreq_usr_value_ != NULL ? *deldevreq_usr_value_
                         : *::Interactive::Message::DelDevReq_USR::internal_default_instance();
}
::Interactive::Message::DelDevReq_USR* Req::mutable_deldevreq_usr_value() {
  
  if (deldevreq_usr_value_ == NULL) {
    deldevreq_usr_value_ = new ::Interactive::Message::DelDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DelDevReq_USR_Value)
  return deldevreq_usr_value_;
}
::Interactive::Message::DelDevReq_USR* Req::release_deldevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DelDevReq_USR_Value)
  
  ::Interactive::Message::DelDevReq_USR* temp = deldevreq_usr_value_;
  deldevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deldevreq_usr_value(::Interactive::Message::DelDevReq_USR* deldevreq_usr_value) {
  delete deldevreq_usr_value_;
  deldevreq_usr_value_ = deldevreq_usr_value;
  if (deldevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DelDevReq_USR_Value)
}

// .Interactive.Message.ModifyDevReq_USR ModifyDevReq_USR_Value = 170;
bool Req::has_modifydevreq_usr_value() const {
  return this != internal_default_instance() && modifydevreq_usr_value_ != NULL;
}
void Req::clear_modifydevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydevreq_usr_value_ != NULL) delete modifydevreq_usr_value_;
  modifydevreq_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyDevReq_USR& Req::modifydevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.ModifyDevReq_USR_Value)
  return modifydevreq_usr_value_ != NULL ? *modifydevreq_usr_value_
                         : *::Interactive::Message::ModifyDevReq_USR::internal_default_instance();
}
::Interactive::Message::ModifyDevReq_USR* Req::mutable_modifydevreq_usr_value() {
  
  if (modifydevreq_usr_value_ == NULL) {
    modifydevreq_usr_value_ = new ::Interactive::Message::ModifyDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.ModifyDevReq_USR_Value)
  return modifydevreq_usr_value_;
}
::Interactive::Message::ModifyDevReq_USR* Req::release_modifydevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.ModifyDevReq_USR_Value)
  
  ::Interactive::Message::ModifyDevReq_USR* temp = modifydevreq_usr_value_;
  modifydevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_modifydevreq_usr_value(::Interactive::Message::ModifyDevReq_USR* modifydevreq_usr_value) {
  delete modifydevreq_usr_value_;
  modifydevreq_usr_value_ = modifydevreq_usr_value;
  if (modifydevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.ModifyDevReq_USR_Value)
}

// .Interactive.Message.QueryDevInfoReq_USR QueryDevInfoReq_USR_Value = 180;
bool Req::has_querydevinforeq_usr_value() const {
  return this != internal_default_instance() && querydevinforeq_usr_value_ != NULL;
}
void Req::clear_querydevinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevinforeq_usr_value_ != NULL) delete querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevInfoReq_USR& Req::querydevinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  return querydevinforeq_usr_value_ != NULL ? *querydevinforeq_usr_value_
                         : *::Interactive::Message::QueryDevInfoReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDevInfoReq_USR* Req::mutable_querydevinforeq_usr_value() {
  
  if (querydevinforeq_usr_value_ == NULL) {
    querydevinforeq_usr_value_ = new ::Interactive::Message::QueryDevInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  return querydevinforeq_usr_value_;
}
::Interactive::Message::QueryDevInfoReq_USR* Req::release_querydevinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
  
  ::Interactive::Message::QueryDevInfoReq_USR* temp = querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydevinforeq_usr_value(::Interactive::Message::QueryDevInfoReq_USR* querydevinforeq_usr_value) {
  delete querydevinforeq_usr_value_;
  querydevinforeq_usr_value_ = querydevinforeq_usr_value;
  if (querydevinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDevInfoReq_USR_Value)
}

// .Interactive.Message.QueryDevReq_USR QueryDevReq_USR_Value = 190;
bool Req::has_querydevreq_usr_value() const {
  return this != internal_default_instance() && querydevreq_usr_value_ != NULL;
}
void Req::clear_querydevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevreq_usr_value_ != NULL) delete querydevreq_usr_value_;
  querydevreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevReq_USR& Req::querydevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryDevReq_USR_Value)
  return querydevreq_usr_value_ != NULL ? *querydevreq_usr_value_
                         : *::Interactive::Message::QueryDevReq_USR::internal_default_instance();
}
::Interactive::Message::QueryDevReq_USR* Req::mutable_querydevreq_usr_value() {
  
  if (querydevreq_usr_value_ == NULL) {
    querydevreq_usr_value_ = new ::Interactive::Message::QueryDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryDevReq_USR_Value)
  return querydevreq_usr_value_;
}
::Interactive::Message::QueryDevReq_USR* Req::release_querydevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryDevReq_USR_Value)
  
  ::Interactive::Message::QueryDevReq_USR* temp = querydevreq_usr_value_;
  querydevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_querydevreq_usr_value(::Interactive::Message::QueryDevReq_USR* querydevreq_usr_value) {
  delete querydevreq_usr_value_;
  querydevreq_usr_value_ = querydevreq_usr_value;
  if (querydevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryDevReq_USR_Value)
}

// .Interactive.Message.QueryUserReq_USR QueryUserReq_USR_Value = 200;
bool Req::has_queryuserreq_usr_value() const {
  return this != internal_default_instance() && queryuserreq_usr_value_ != NULL;
}
void Req::clear_queryuserreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryuserreq_usr_value_ != NULL) delete queryuserreq_usr_value_;
  queryuserreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUserReq_USR& Req::queryuserreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryUserReq_USR_Value)
  return queryuserreq_usr_value_ != NULL ? *queryuserreq_usr_value_
                         : *::Interactive::Message::QueryUserReq_USR::internal_default_instance();
}
::Interactive::Message::QueryUserReq_USR* Req::mutable_queryuserreq_usr_value() {
  
  if (queryuserreq_usr_value_ == NULL) {
    queryuserreq_usr_value_ = new ::Interactive::Message::QueryUserReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryUserReq_USR_Value)
  return queryuserreq_usr_value_;
}
::Interactive::Message::QueryUserReq_USR* Req::release_queryuserreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryUserReq_USR_Value)
  
  ::Interactive::Message::QueryUserReq_USR* temp = queryuserreq_usr_value_;
  queryuserreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryuserreq_usr_value(::Interactive::Message::QueryUserReq_USR* queryuserreq_usr_value) {
  delete queryuserreq_usr_value_;
  queryuserreq_usr_value_ = queryuserreq_usr_value;
  if (queryuserreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryUserReq_USR_Value)
}

// .Interactive.Message.SharingDevReq_USR SharingDevReq_USR_Value = 210;
bool Req::has_sharingdevreq_usr_value() const {
  return this != internal_default_instance() && sharingdevreq_usr_value_ != NULL;
}
void Req::clear_sharingdevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && sharingdevreq_usr_value_ != NULL) delete sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = NULL;
}
const ::Interactive::Message::SharingDevReq_USR& Req::sharingdevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.SharingDevReq_USR_Value)
  return sharingdevreq_usr_value_ != NULL ? *sharingdevreq_usr_value_
                         : *::Interactive::Message::SharingDevReq_USR::internal_default_instance();
}
::Interactive::Message::SharingDevReq_USR* Req::mutable_sharingdevreq_usr_value() {
  
  if (sharingdevreq_usr_value_ == NULL) {
    sharingdevreq_usr_value_ = new ::Interactive::Message::SharingDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.SharingDevReq_USR_Value)
  return sharingdevreq_usr_value_;
}
::Interactive::Message::SharingDevReq_USR* Req::release_sharingdevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.SharingDevReq_USR_Value)
  
  ::Interactive::Message::SharingDevReq_USR* temp = sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_sharingdevreq_usr_value(::Interactive::Message::SharingDevReq_USR* sharingdevreq_usr_value) {
  delete sharingdevreq_usr_value_;
  sharingdevreq_usr_value_ = sharingdevreq_usr_value;
  if (sharingdevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.SharingDevReq_USR_Value)
}

// .Interactive.Message.CancelSharedDevReq_USR CancelSharedDevReq_USR_Value = 220;
bool Req::has_cancelshareddevreq_usr_value() const {
  return this != internal_default_instance() && cancelshareddevreq_usr_value_ != NULL;
}
void Req::clear_cancelshareddevreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && cancelshareddevreq_usr_value_ != NULL) delete cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = NULL;
}
const ::Interactive::Message::CancelSharedDevReq_USR& Req::cancelshareddevreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  return cancelshareddevreq_usr_value_ != NULL ? *cancelshareddevreq_usr_value_
                         : *::Interactive::Message::CancelSharedDevReq_USR::internal_default_instance();
}
::Interactive::Message::CancelSharedDevReq_USR* Req::mutable_cancelshareddevreq_usr_value() {
  
  if (cancelshareddevreq_usr_value_ == NULL) {
    cancelshareddevreq_usr_value_ = new ::Interactive::Message::CancelSharedDevReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  return cancelshareddevreq_usr_value_;
}
::Interactive::Message::CancelSharedDevReq_USR* Req::release_cancelshareddevreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
  
  ::Interactive::Message::CancelSharedDevReq_USR* temp = cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_cancelshareddevreq_usr_value(::Interactive::Message::CancelSharedDevReq_USR* cancelshareddevreq_usr_value) {
  delete cancelshareddevreq_usr_value_;
  cancelshareddevreq_usr_value_ = cancelshareddevreq_usr_value;
  if (cancelshareddevreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.CancelSharedDevReq_USR_Value)
}

// .Interactive.Message.AddFriendsReq_USR AddFriendsReq_USR_Value = 230;
bool Req::has_addfriendsreq_usr_value() const {
  return this != internal_default_instance() && addfriendsreq_usr_value_ != NULL;
}
void Req::clear_addfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && addfriendsreq_usr_value_ != NULL) delete addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = NULL;
}
const ::Interactive::Message::AddFriendsReq_USR& Req::addfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.AddFriendsReq_USR_Value)
  return addfriendsreq_usr_value_ != NULL ? *addfriendsreq_usr_value_
                         : *::Interactive::Message::AddFriendsReq_USR::internal_default_instance();
}
::Interactive::Message::AddFriendsReq_USR* Req::mutable_addfriendsreq_usr_value() {
  
  if (addfriendsreq_usr_value_ == NULL) {
    addfriendsreq_usr_value_ = new ::Interactive::Message::AddFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.AddFriendsReq_USR_Value)
  return addfriendsreq_usr_value_;
}
::Interactive::Message::AddFriendsReq_USR* Req::release_addfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.AddFriendsReq_USR_Value)
  
  ::Interactive::Message::AddFriendsReq_USR* temp = addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_addfriendsreq_usr_value(::Interactive::Message::AddFriendsReq_USR* addfriendsreq_usr_value) {
  delete addfriendsreq_usr_value_;
  addfriendsreq_usr_value_ = addfriendsreq_usr_value;
  if (addfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.AddFriendsReq_USR_Value)
}

// .Interactive.Message.DelFriendsReq_USR DelFriendsReq_USR_Value = 240;
bool Req::has_delfriendsreq_usr_value() const {
  return this != internal_default_instance() && delfriendsreq_usr_value_ != NULL;
}
void Req::clear_delfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && delfriendsreq_usr_value_ != NULL) delete delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = NULL;
}
const ::Interactive::Message::DelFriendsReq_USR& Req::delfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DelFriendsReq_USR_Value)
  return delfriendsreq_usr_value_ != NULL ? *delfriendsreq_usr_value_
                         : *::Interactive::Message::DelFriendsReq_USR::internal_default_instance();
}
::Interactive::Message::DelFriendsReq_USR* Req::mutable_delfriendsreq_usr_value() {
  
  if (delfriendsreq_usr_value_ == NULL) {
    delfriendsreq_usr_value_ = new ::Interactive::Message::DelFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DelFriendsReq_USR_Value)
  return delfriendsreq_usr_value_;
}
::Interactive::Message::DelFriendsReq_USR* Req::release_delfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DelFriendsReq_USR_Value)
  
  ::Interactive::Message::DelFriendsReq_USR* temp = delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_delfriendsreq_usr_value(::Interactive::Message::DelFriendsReq_USR* delfriendsreq_usr_value) {
  delete delfriendsreq_usr_value_;
  delfriendsreq_usr_value_ = delfriendsreq_usr_value;
  if (delfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DelFriendsReq_USR_Value)
}

// .Interactive.Message.QueryFriendsReq_USR QueryFriendsReq_USR_Value = 250;
bool Req::has_queryfriendsreq_usr_value() const {
  return this != internal_default_instance() && queryfriendsreq_usr_value_ != NULL;
}
void Req::clear_queryfriendsreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfriendsreq_usr_value_ != NULL) delete queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFriendsReq_USR& Req::queryfriendsreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  return queryfriendsreq_usr_value_ != NULL ? *queryfriendsreq_usr_value_
                         : *::Interactive::Message::QueryFriendsReq_USR::internal_default_instance();
}
::Interactive::Message::QueryFriendsReq_USR* Req::mutable_queryfriendsreq_usr_value() {
  
  if (queryfriendsreq_usr_value_ == NULL) {
    queryfriendsreq_usr_value_ = new ::Interactive::Message::QueryFriendsReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  return queryfriendsreq_usr_value_;
}
::Interactive::Message::QueryFriendsReq_USR* Req::release_queryfriendsreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFriendsReq_USR_Value)
  
  ::Interactive::Message::QueryFriendsReq_USR* temp = queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryfriendsreq_usr_value(::Interactive::Message::QueryFriendsReq_USR* queryfriendsreq_usr_value) {
  delete queryfriendsreq_usr_value_;
  queryfriendsreq_usr_value_ = queryfriendsreq_usr_value;
  if (queryfriendsreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFriendsReq_USR_Value)
}

// .Interactive.Message.StorageAddressReq_USR StorageAddressReq_USR_Value = 252;
bool Req::has_storageaddressreq_usr_value() const {
  return this != internal_default_instance() && storageaddressreq_usr_value_ != NULL;
}
void Req::clear_storageaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
}
const ::Interactive::Message::StorageAddressReq_USR& Req::storageaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_ != NULL ? *storageaddressreq_usr_value_
                         : *::Interactive::Message::StorageAddressReq_USR::internal_default_instance();
}
::Interactive::Message::StorageAddressReq_USR* Req::mutable_storageaddressreq_usr_value() {
  
  if (storageaddressreq_usr_value_ == NULL) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_;
}
::Interactive::Message::StorageAddressReq_USR* Req::release_storageaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.StorageAddressReq_USR_Value)
  
  ::Interactive::Message::StorageAddressReq_USR* temp = storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressReq_USR* storageaddressreq_usr_value) {
  delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = storageaddressreq_usr_value;
  if (storageaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.StorageAddressReq_USR_Value)
}

// .Interactive.Message.P2pInfoReq_USR P2pInfoReq_USR_Value = 254;
bool Req::has_p2pinforeq_usr_value() const {
  return this != internal_default_instance() && p2pinforeq_usr_value_ != NULL;
}
void Req::clear_p2pinforeq_usr_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforeq_usr_value_ != NULL) delete p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = NULL;
}
const ::Interactive::Message::P2pInfoReq_USR& Req::p2pinforeq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.P2pInfoReq_USR_Value)
  return p2pinforeq_usr_value_ != NULL ? *p2pinforeq_usr_value_
                         : *::Interactive::Message::P2pInfoReq_USR::internal_default_instance();
}
::Interactive::Message::P2pInfoReq_USR* Req::mutable_p2pinforeq_usr_value() {
  
  if (p2pinforeq_usr_value_ == NULL) {
    p2pinforeq_usr_value_ = new ::Interactive::Message::P2pInfoReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.P2pInfoReq_USR_Value)
  return p2pinforeq_usr_value_;
}
::Interactive::Message::P2pInfoReq_USR* Req::release_p2pinforeq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.P2pInfoReq_USR_Value)
  
  ::Interactive::Message::P2pInfoReq_USR* temp = p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_p2pinforeq_usr_value(::Interactive::Message::P2pInfoReq_USR* p2pinforeq_usr_value) {
  delete p2pinforeq_usr_value_;
  p2pinforeq_usr_value_ = p2pinforeq_usr_value;
  if (p2pinforeq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.P2pInfoReq_USR_Value)
}

// .Interactive.Message.DeleteFileReq_USR DeleteFileReq_USR_Value = 310;
bool Req::has_deletefilereq_usr_value() const {
  return this != internal_default_instance() && deletefilereq_usr_value_ != NULL;
}
void Req::clear_deletefilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletefilereq_usr_value_ != NULL) delete deletefilereq_usr_value_;
  deletefilereq_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteFileReq_USR& Req::deletefilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DeleteFileReq_USR_Value)
  return deletefilereq_usr_value_ != NULL ? *deletefilereq_usr_value_
                         : *::Interactive::Message::DeleteFileReq_USR::internal_default_instance();
}
::Interactive::Message::DeleteFileReq_USR* Req::mutable_deletefilereq_usr_value() {
  
  if (deletefilereq_usr_value_ == NULL) {
    deletefilereq_usr_value_ = new ::Interactive::Message::DeleteFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DeleteFileReq_USR_Value)
  return deletefilereq_usr_value_;
}
::Interactive::Message::DeleteFileReq_USR* Req::release_deletefilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DeleteFileReq_USR_Value)
  
  ::Interactive::Message::DeleteFileReq_USR* temp = deletefilereq_usr_value_;
  deletefilereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_deletefilereq_usr_value(::Interactive::Message::DeleteFileReq_USR* deletefilereq_usr_value) {
  delete deletefilereq_usr_value_;
  deletefilereq_usr_value_ = deletefilereq_usr_value;
  if (deletefilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DeleteFileReq_USR_Value)
}

// .Interactive.Message.DownloadFileReq_USR DownloadFileReq_USR_Value = 320;
bool Req::has_downloadfilereq_usr_value() const {
  return this != internal_default_instance() && downloadfilereq_usr_value_ != NULL;
}
void Req::clear_downloadfilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && downloadfilereq_usr_value_ != NULL) delete downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = NULL;
}
const ::Interactive::Message::DownloadFileReq_USR& Req::downloadfilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.DownloadFileReq_USR_Value)
  return downloadfilereq_usr_value_ != NULL ? *downloadfilereq_usr_value_
                         : *::Interactive::Message::DownloadFileReq_USR::internal_default_instance();
}
::Interactive::Message::DownloadFileReq_USR* Req::mutable_downloadfilereq_usr_value() {
  
  if (downloadfilereq_usr_value_ == NULL) {
    downloadfilereq_usr_value_ = new ::Interactive::Message::DownloadFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.DownloadFileReq_USR_Value)
  return downloadfilereq_usr_value_;
}
::Interactive::Message::DownloadFileReq_USR* Req::release_downloadfilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.DownloadFileReq_USR_Value)
  
  ::Interactive::Message::DownloadFileReq_USR* temp = downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_downloadfilereq_usr_value(::Interactive::Message::DownloadFileReq_USR* downloadfilereq_usr_value) {
  delete downloadfilereq_usr_value_;
  downloadfilereq_usr_value_ = downloadfilereq_usr_value;
  if (downloadfilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.DownloadFileReq_USR_Value)
}

// .Interactive.Message.QueryFileReq_USR QueryFileReq_USR_Value = 330;
bool Req::has_queryfilereq_usr_value() const {
  return this != internal_default_instance() && queryfilereq_usr_value_ != NULL;
}
void Req::clear_queryfilereq_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfilereq_usr_value_ != NULL) delete queryfilereq_usr_value_;
  queryfilereq_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFileReq_USR& Req::queryfilereq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.QueryFileReq_USR_Value)
  return queryfilereq_usr_value_ != NULL ? *queryfilereq_usr_value_
                         : *::Interactive::Message::QueryFileReq_USR::internal_default_instance();
}
::Interactive::Message::QueryFileReq_USR* Req::mutable_queryfilereq_usr_value() {
  
  if (queryfilereq_usr_value_ == NULL) {
    queryfilereq_usr_value_ = new ::Interactive::Message::QueryFileReq_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.QueryFileReq_USR_Value)
  return queryfilereq_usr_value_;
}
::Interactive::Message::QueryFileReq_USR* Req::release_queryfilereq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.QueryFileReq_USR_Value)
  
  ::Interactive::Message::QueryFileReq_USR* temp = queryfilereq_usr_value_;
  queryfilereq_usr_value_ = NULL;
  return temp;
}
void Req::set_allocated_queryfilereq_usr_value(::Interactive::Message::QueryFileReq_USR* queryfilereq_usr_value) {
  delete queryfilereq_usr_value_;
  queryfilereq_usr_value_ = queryfilereq_usr_value;
  if (queryfilereq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.QueryFileReq_USR_Value)
}

// .Interactive.Message.GetOnlineDevInfoReq_INNER GetOnlineDevInfoReq_INNER_Value = 260;
bool Req::has_getonlinedevinforeq_inner_value() const {
  return this != internal_default_instance() && getonlinedevinforeq_inner_value_ != NULL;
}
void Req::clear_getonlinedevinforeq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlinedevinforeq_inner_value_ != NULL) delete getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineDevInfoReq_INNER& Req::getonlinedevinforeq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  return getonlinedevinforeq_inner_value_ != NULL ? *getonlinedevinforeq_inner_value_
                         : *::Interactive::Message::GetOnlineDevInfoReq_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineDevInfoReq_INNER* Req::mutable_getonlinedevinforeq_inner_value() {
  
  if (getonlinedevinforeq_inner_value_ == NULL) {
    getonlinedevinforeq_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  return getonlinedevinforeq_inner_value_;
}
::Interactive::Message::GetOnlineDevInfoReq_INNER* Req::release_getonlinedevinforeq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
  
  ::Interactive::Message::GetOnlineDevInfoReq_INNER* temp = getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_getonlinedevinforeq_inner_value(::Interactive::Message::GetOnlineDevInfoReq_INNER* getonlinedevinforeq_inner_value) {
  delete getonlinedevinforeq_inner_value_;
  getonlinedevinforeq_inner_value_ = getonlinedevinforeq_inner_value;
  if (getonlinedevinforeq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetOnlineDevInfoReq_INNER_Value)
}

// .Interactive.Message.BroadcastOnlineDevInfo_INNER BroadcastOnlineDevInfo_INNER_Value = 270;
bool Req::has_broadcastonlinedevinfo_inner_value() const {
  return this != internal_default_instance() && broadcastonlinedevinfo_inner_value_ != NULL;
}
void Req::clear_broadcastonlinedevinfo_inner_value() {
  if (GetArenaNoVirtual() == NULL && broadcastonlinedevinfo_inner_value_ != NULL) delete broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = NULL;
}
const ::Interactive::Message::BroadcastOnlineDevInfo_INNER& Req::broadcastonlinedevinfo_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  return broadcastonlinedevinfo_inner_value_ != NULL ? *broadcastonlinedevinfo_inner_value_
                         : *::Interactive::Message::BroadcastOnlineDevInfo_INNER::internal_default_instance();
}
::Interactive::Message::BroadcastOnlineDevInfo_INNER* Req::mutable_broadcastonlinedevinfo_inner_value() {
  
  if (broadcastonlinedevinfo_inner_value_ == NULL) {
    broadcastonlinedevinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineDevInfo_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  return broadcastonlinedevinfo_inner_value_;
}
::Interactive::Message::BroadcastOnlineDevInfo_INNER* Req::release_broadcastonlinedevinfo_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
  
  ::Interactive::Message::BroadcastOnlineDevInfo_INNER* temp = broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_broadcastonlinedevinfo_inner_value(::Interactive::Message::BroadcastOnlineDevInfo_INNER* broadcastonlinedevinfo_inner_value) {
  delete broadcastonlinedevinfo_inner_value_;
  broadcastonlinedevinfo_inner_value_ = broadcastonlinedevinfo_inner_value;
  if (broadcastonlinedevinfo_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.BroadcastOnlineDevInfo_INNER_Value)
}

// .Interactive.Message.GetOnlineUserInfoReq_INNER GetOnlineUserInfoReq_INNER_Value = 280;
bool Req::has_getonlineuserinforeq_inner_value() const {
  return this != internal_default_instance() && getonlineuserinforeq_inner_value_ != NULL;
}
void Req::clear_getonlineuserinforeq_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlineuserinforeq_inner_value_ != NULL) delete getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineUserInfoReq_INNER& Req::getonlineuserinforeq_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  return getonlineuserinforeq_inner_value_ != NULL ? *getonlineuserinforeq_inner_value_
                         : *::Interactive::Message::GetOnlineUserInfoReq_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineUserInfoReq_INNER* Req::mutable_getonlineuserinforeq_inner_value() {
  
  if (getonlineuserinforeq_inner_value_ == NULL) {
    getonlineuserinforeq_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoReq_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  return getonlineuserinforeq_inner_value_;
}
::Interactive::Message::GetOnlineUserInfoReq_INNER* Req::release_getonlineuserinforeq_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
  
  ::Interactive::Message::GetOnlineUserInfoReq_INNER* temp = getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_getonlineuserinforeq_inner_value(::Interactive::Message::GetOnlineUserInfoReq_INNER* getonlineuserinforeq_inner_value) {
  delete getonlineuserinforeq_inner_value_;
  getonlineuserinforeq_inner_value_ = getonlineuserinforeq_inner_value;
  if (getonlineuserinforeq_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.GetOnlineUserInfoReq_INNER_Value)
}

// .Interactive.Message.BroadcastOnlineUserInfo_INNER BroadcastOnlineUserInfo_INNER_Value = 290;
bool Req::has_broadcastonlineuserinfo_inner_value() const {
  return this != internal_default_instance() && broadcastonlineuserinfo_inner_value_ != NULL;
}
void Req::clear_broadcastonlineuserinfo_inner_value() {
  if (GetArenaNoVirtual() == NULL && broadcastonlineuserinfo_inner_value_ != NULL) delete broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = NULL;
}
const ::Interactive::Message::BroadcastOnlineUserInfo_INNER& Req::broadcastonlineuserinfo_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  return broadcastonlineuserinfo_inner_value_ != NULL ? *broadcastonlineuserinfo_inner_value_
                         : *::Interactive::Message::BroadcastOnlineUserInfo_INNER::internal_default_instance();
}
::Interactive::Message::BroadcastOnlineUserInfo_INNER* Req::mutable_broadcastonlineuserinfo_inner_value() {
  
  if (broadcastonlineuserinfo_inner_value_ == NULL) {
    broadcastonlineuserinfo_inner_value_ = new ::Interactive::Message::BroadcastOnlineUserInfo_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  return broadcastonlineuserinfo_inner_value_;
}
::Interactive::Message::BroadcastOnlineUserInfo_INNER* Req::release_broadcastonlineuserinfo_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
  
  ::Interactive::Message::BroadcastOnlineUserInfo_INNER* temp = broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = NULL;
  return temp;
}
void Req::set_allocated_broadcastonlineuserinfo_inner_value(::Interactive::Message::BroadcastOnlineUserInfo_INNER* broadcastonlineuserinfo_inner_value) {
  delete broadcastonlineuserinfo_inner_value_;
  broadcastonlineuserinfo_inner_value_ = broadcastonlineuserinfo_inner_value;
  if (broadcastonlineuserinfo_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Req.BroadcastOnlineUserInfo_INNER_Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp::kIRetcodeFieldNumber;
const int Rsp::kStrRetMsgFieldNumber;
const int Rsp::kGetAccessAddressRspDEVValueFieldNumber;
const int Rsp::kLoginRspDEVValueFieldNumber;
const int Rsp::kLogoutRspDEVValueFieldNumber;
const int Rsp::kShakehandRspDEVValueFieldNumber;
const int Rsp::kConfigInfoRspDEVValueFieldNumber;
const int Rsp::kStorageAddressRspDEVValueFieldNumber;
const int Rsp::kP2PInfoRspDEVValueFieldNumber;
const int Rsp::kAddFileRspDEVValueFieldNumber;
const int Rsp::kMsgPreHandlerRspUSRValueFieldNumber;
const int Rsp::kGetAccessAddressRspUSRValueFieldNumber;
const int Rsp::kRegisterUserRspUSRValueFieldNumber;
const int Rsp::kUnRegisterUserRspUSRValueFieldNumber;
const int Rsp::kQueryUsrInfoRspUSRValueFieldNumber;
const int Rsp::kModifyUserInfoRspUSRValueFieldNumber;
const int Rsp::kLoginRspUSRValueFieldNumber;
const int Rsp::kLogoutRspUSRValueFieldNumber;
const int Rsp::kShakehandRspUSRValueFieldNumber;
const int Rsp::kConfigInfoRspUSRValueFieldNumber;
const int Rsp::kAddDevRspUSRValueFieldNumber;
const int Rsp::kDelDevRspUSRValueFieldNumber;
const int Rsp::kModifyDevRspUSRValueFieldNumber;
const int Rsp::kQueryDevInfoRspUSRValueFieldNumber;
const int Rsp::kQueryDevRspUSRValueFieldNumber;
const int Rsp::kQueryUserRspUSRValueFieldNumber;
const int Rsp::kSharingDevRspUSRValueFieldNumber;
const int Rsp::kCancelSharedDevRspUSRValueFieldNumber;
const int Rsp::kAddFriendsRspUSRValueFieldNumber;
const int Rsp::kDelFriendsRspUSRValueFieldNumber;
const int Rsp::kQueryFriendsRspUSRValueFieldNumber;
const int Rsp::kStorageAddressReqUSRValueFieldNumber;
const int Rsp::kP2PInfoRspUSRValueFieldNumber;
const int Rsp::kDeleteFileRspUSRValueFieldNumber;
const int Rsp::kDownloadFileRspUSRValueFieldNumber;
const int Rsp::kQueryFileRspUSRValueFieldNumber;
const int Rsp::kGetOnlineDevInfoRspINNERValueFieldNumber;
const int Rsp::kGetOnlineUserInfoRspINNERValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp::Rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.Rsp)
}
Rsp::Rsp(const Rsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strretmsg().size() > 0) {
    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_getaccessaddressrsp_dev_value()) {
    getaccessaddressrsp_dev_value_ = new ::Interactive::Message::GetAccessAddressRsp_DEV(*from.getaccessaddressrsp_dev_value_);
  } else {
    getaccessaddressrsp_dev_value_ = NULL;
  }
  if (from.has_loginrsp_dev_value()) {
    loginrsp_dev_value_ = new ::Interactive::Message::LoginRsp_DEV(*from.loginrsp_dev_value_);
  } else {
    loginrsp_dev_value_ = NULL;
  }
  if (from.has_logoutrsp_dev_value()) {
    logoutrsp_dev_value_ = new ::Interactive::Message::LogoutRsp_DEV(*from.logoutrsp_dev_value_);
  } else {
    logoutrsp_dev_value_ = NULL;
  }
  if (from.has_shakehandrsp_dev_value()) {
    shakehandrsp_dev_value_ = new ::Interactive::Message::ShakehandRsp_DEV(*from.shakehandrsp_dev_value_);
  } else {
    shakehandrsp_dev_value_ = NULL;
  }
  if (from.has_configinforsp_dev_value()) {
    configinforsp_dev_value_ = new ::Interactive::Message::ConfigInfoRsp_DEV(*from.configinforsp_dev_value_);
  } else {
    configinforsp_dev_value_ = NULL;
  }
  if (from.has_storageaddressrsp_dev_value()) {
    storageaddressrsp_dev_value_ = new ::Interactive::Message::StorageAddressRsp_DEV(*from.storageaddressrsp_dev_value_);
  } else {
    storageaddressrsp_dev_value_ = NULL;
  }
  if (from.has_p2pinforsp_dev_value()) {
    p2pinforsp_dev_value_ = new ::Interactive::Message::P2pInfoRsp_DEV(*from.p2pinforsp_dev_value_);
  } else {
    p2pinforsp_dev_value_ = NULL;
  }
  if (from.has_addfilersp_dev_value()) {
    addfilersp_dev_value_ = new ::Interactive::Message::AddFileRsp_DEV(*from.addfilersp_dev_value_);
  } else {
    addfilersp_dev_value_ = NULL;
  }
  if (from.has_msgprehandlerrsp_usr_value()) {
    msgprehandlerrsp_usr_value_ = new ::Interactive::Message::MsgPreHandlerRsp_USR(*from.msgprehandlerrsp_usr_value_);
  } else {
    msgprehandlerrsp_usr_value_ = NULL;
  }
  if (from.has_getaccessaddressrsp_usr_value()) {
    getaccessaddressrsp_usr_value_ = new ::Interactive::Message::GetAccessAddressRsp_USR(*from.getaccessaddressrsp_usr_value_);
  } else {
    getaccessaddressrsp_usr_value_ = NULL;
  }
  if (from.has_registeruserrsp_usr_value()) {
    registeruserrsp_usr_value_ = new ::Interactive::Message::RegisterUserRsp_USR(*from.registeruserrsp_usr_value_);
  } else {
    registeruserrsp_usr_value_ = NULL;
  }
  if (from.has_unregisteruserrsp_usr_value()) {
    unregisteruserrsp_usr_value_ = new ::Interactive::Message::UnRegisterUserRsp_USR(*from.unregisteruserrsp_usr_value_);
  } else {
    unregisteruserrsp_usr_value_ = NULL;
  }
  if (from.has_queryusrinforsp_usr_value()) {
    queryusrinforsp_usr_value_ = new ::Interactive::Message::QueryUsrInfoRsp_USR(*from.queryusrinforsp_usr_value_);
  } else {
    queryusrinforsp_usr_value_ = NULL;
  }
  if (from.has_modifyuserinforsp_usr_value()) {
    modifyuserinforsp_usr_value_ = new ::Interactive::Message::ModifyUserInfoRsp_USR(*from.modifyuserinforsp_usr_value_);
  } else {
    modifyuserinforsp_usr_value_ = NULL;
  }
  if (from.has_loginrsp_usr_value()) {
    loginrsp_usr_value_ = new ::Interactive::Message::LoginRsp_USR(*from.loginrsp_usr_value_);
  } else {
    loginrsp_usr_value_ = NULL;
  }
  if (from.has_logoutrsp_usr_value()) {
    logoutrsp_usr_value_ = new ::Interactive::Message::LogoutRsp_USR(*from.logoutrsp_usr_value_);
  } else {
    logoutrsp_usr_value_ = NULL;
  }
  if (from.has_shakehandrsp_usr_value()) {
    shakehandrsp_usr_value_ = new ::Interactive::Message::ShakehandRsp_USR(*from.shakehandrsp_usr_value_);
  } else {
    shakehandrsp_usr_value_ = NULL;
  }
  if (from.has_configinforsp_usr_value()) {
    configinforsp_usr_value_ = new ::Interactive::Message::ConfigInfoRsp_USR(*from.configinforsp_usr_value_);
  } else {
    configinforsp_usr_value_ = NULL;
  }
  if (from.has_adddevrsp_usr_value()) {
    adddevrsp_usr_value_ = new ::Interactive::Message::AddDevRsp_USR(*from.adddevrsp_usr_value_);
  } else {
    adddevrsp_usr_value_ = NULL;
  }
  if (from.has_deldevrsp_usr_value()) {
    deldevrsp_usr_value_ = new ::Interactive::Message::DelDevRsp_USR(*from.deldevrsp_usr_value_);
  } else {
    deldevrsp_usr_value_ = NULL;
  }
  if (from.has_modifydevrsp_usr_value()) {
    modifydevrsp_usr_value_ = new ::Interactive::Message::ModifyDevRsp_USR(*from.modifydevrsp_usr_value_);
  } else {
    modifydevrsp_usr_value_ = NULL;
  }
  if (from.has_querydevinforsp_usr_value()) {
    querydevinforsp_usr_value_ = new ::Interactive::Message::QueryDevInfoRsp_USR(*from.querydevinforsp_usr_value_);
  } else {
    querydevinforsp_usr_value_ = NULL;
  }
  if (from.has_querydevrsp_usr_value()) {
    querydevrsp_usr_value_ = new ::Interactive::Message::QueryDevRsp_USR(*from.querydevrsp_usr_value_);
  } else {
    querydevrsp_usr_value_ = NULL;
  }
  if (from.has_queryuserrsp_usr_value()) {
    queryuserrsp_usr_value_ = new ::Interactive::Message::QueryUserRsp_USR(*from.queryuserrsp_usr_value_);
  } else {
    queryuserrsp_usr_value_ = NULL;
  }
  if (from.has_sharingdevrsp_usr_value()) {
    sharingdevrsp_usr_value_ = new ::Interactive::Message::SharingDevRsp_USR(*from.sharingdevrsp_usr_value_);
  } else {
    sharingdevrsp_usr_value_ = NULL;
  }
  if (from.has_cancelshareddevrsp_usr_value()) {
    cancelshareddevrsp_usr_value_ = new ::Interactive::Message::CancelSharedDevRsp_USR(*from.cancelshareddevrsp_usr_value_);
  } else {
    cancelshareddevrsp_usr_value_ = NULL;
  }
  if (from.has_addfriendsrsp_usr_value()) {
    addfriendsrsp_usr_value_ = new ::Interactive::Message::AddFriendsRsp_USR(*from.addfriendsrsp_usr_value_);
  } else {
    addfriendsrsp_usr_value_ = NULL;
  }
  if (from.has_delfriendsrsp_usr_value()) {
    delfriendsrsp_usr_value_ = new ::Interactive::Message::DelFriendsRsp_USR(*from.delfriendsrsp_usr_value_);
  } else {
    delfriendsrsp_usr_value_ = NULL;
  }
  if (from.has_queryfriendsrsp_usr_value()) {
    queryfriendsrsp_usr_value_ = new ::Interactive::Message::QueryFriendsRsp_USR(*from.queryfriendsrsp_usr_value_);
  } else {
    queryfriendsrsp_usr_value_ = NULL;
  }
  if (from.has_storageaddressreq_usr_value()) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressRsp_USR(*from.storageaddressreq_usr_value_);
  } else {
    storageaddressreq_usr_value_ = NULL;
  }
  if (from.has_p2pinforsp_usr_value()) {
    p2pinforsp_usr_value_ = new ::Interactive::Message::P2pInfoRsp_USR(*from.p2pinforsp_usr_value_);
  } else {
    p2pinforsp_usr_value_ = NULL;
  }
  if (from.has_deletefilersp_usr_value()) {
    deletefilersp_usr_value_ = new ::Interactive::Message::DeleteFileRsp_USR(*from.deletefilersp_usr_value_);
  } else {
    deletefilersp_usr_value_ = NULL;
  }
  if (from.has_downloadfilersp_usr_value()) {
    downloadfilersp_usr_value_ = new ::Interactive::Message::DownloadFileRsp_USR(*from.downloadfilersp_usr_value_);
  } else {
    downloadfilersp_usr_value_ = NULL;
  }
  if (from.has_queryfilersp_usr_value()) {
    queryfilersp_usr_value_ = new ::Interactive::Message::QueryFileRsp_USR(*from.queryfilersp_usr_value_);
  } else {
    queryfilersp_usr_value_ = NULL;
  }
  if (from.has_getonlinedevinforsp_inner_value()) {
    getonlinedevinforsp_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoRsp_INNER(*from.getonlinedevinforsp_inner_value_);
  } else {
    getonlinedevinforsp_inner_value_ = NULL;
  }
  if (from.has_getonlineuserinforsp_inner_value()) {
    getonlineuserinforsp_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoRsp_INNER(*from.getonlineuserinforsp_inner_value_);
  } else {
    getonlineuserinforsp_inner_value_ = NULL;
  }
  iretcode_ = from.iretcode_;
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.Rsp)
}

void Rsp::SharedCtor() {
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&getaccessaddressrsp_dev_value_, 0, reinterpret_cast<char*>(&iretcode_) -
    reinterpret_cast<char*>(&getaccessaddressrsp_dev_value_) + sizeof(iretcode_));
  _cached_size_ = 0;
}

Rsp::~Rsp() {
  // @@protoc_insertion_point(destructor:Interactive.Message.Rsp)
  SharedDtor();
}

void Rsp::SharedDtor() {
  strretmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete getaccessaddressrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete loginrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressrsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforsp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete addfilersp_dev_value_;
  }
  if (this != internal_default_instance()) {
    delete msgprehandlerrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getaccessaddressrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete registeruserrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete unregisteruserrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryusrinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyuserinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete loginrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete logoutrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete configinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete adddevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deldevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete modifydevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete querydevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryuserrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete sharingdevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete cancelshareddevrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete addfriendsrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete delfriendsrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfriendsrsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete storageaddressreq_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete p2pinforsp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete deletefilersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete downloadfilersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete queryfilersp_usr_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlinedevinforsp_inner_value_;
  }
  if (this != internal_default_instance()) {
    delete getonlineuserinforsp_inner_value_;
  }
}

void Rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rsp::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[81].descriptor;
}

const Rsp& Rsp::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

Rsp* Rsp::New(::google::protobuf::Arena* arena) const {
  Rsp* n = new Rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.Rsp)
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_dev_value_ != NULL) {
    delete getaccessaddressrsp_dev_value_;
  }
  getaccessaddressrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginrsp_dev_value_ != NULL) {
    delete loginrsp_dev_value_;
  }
  loginrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutrsp_dev_value_ != NULL) {
    delete logoutrsp_dev_value_;
  }
  logoutrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandrsp_dev_value_ != NULL) {
    delete shakehandrsp_dev_value_;
  }
  shakehandrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforsp_dev_value_ != NULL) {
    delete configinforsp_dev_value_;
  }
  configinforsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressrsp_dev_value_ != NULL) {
    delete storageaddressrsp_dev_value_;
  }
  storageaddressrsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforsp_dev_value_ != NULL) {
    delete p2pinforsp_dev_value_;
  }
  p2pinforsp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfilersp_dev_value_ != NULL) {
    delete addfilersp_dev_value_;
  }
  addfilersp_dev_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgprehandlerrsp_usr_value_ != NULL) {
    delete msgprehandlerrsp_usr_value_;
  }
  msgprehandlerrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_usr_value_ != NULL) {
    delete getaccessaddressrsp_usr_value_;
  }
  getaccessaddressrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && registeruserrsp_usr_value_ != NULL) {
    delete registeruserrsp_usr_value_;
  }
  registeruserrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unregisteruserrsp_usr_value_ != NULL) {
    delete unregisteruserrsp_usr_value_;
  }
  unregisteruserrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryusrinforsp_usr_value_ != NULL) {
    delete queryusrinforsp_usr_value_;
  }
  queryusrinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyuserinforsp_usr_value_ != NULL) {
    delete modifyuserinforsp_usr_value_;
  }
  modifyuserinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginrsp_usr_value_ != NULL) {
    delete loginrsp_usr_value_;
  }
  loginrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && logoutrsp_usr_value_ != NULL) {
    delete logoutrsp_usr_value_;
  }
  logoutrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandrsp_usr_value_ != NULL) {
    delete shakehandrsp_usr_value_;
  }
  shakehandrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforsp_usr_value_ != NULL) {
    delete configinforsp_usr_value_;
  }
  configinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && adddevrsp_usr_value_ != NULL) {
    delete adddevrsp_usr_value_;
  }
  adddevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deldevrsp_usr_value_ != NULL) {
    delete deldevrsp_usr_value_;
  }
  deldevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifydevrsp_usr_value_ != NULL) {
    delete modifydevrsp_usr_value_;
  }
  modifydevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevinforsp_usr_value_ != NULL) {
    delete querydevinforsp_usr_value_;
  }
  querydevinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && querydevrsp_usr_value_ != NULL) {
    delete querydevrsp_usr_value_;
  }
  querydevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryuserrsp_usr_value_ != NULL) {
    delete queryuserrsp_usr_value_;
  }
  queryuserrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && sharingdevrsp_usr_value_ != NULL) {
    delete sharingdevrsp_usr_value_;
  }
  sharingdevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancelshareddevrsp_usr_value_ != NULL) {
    delete cancelshareddevrsp_usr_value_;
  }
  cancelshareddevrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && addfriendsrsp_usr_value_ != NULL) {
    delete addfriendsrsp_usr_value_;
  }
  addfriendsrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && delfriendsrsp_usr_value_ != NULL) {
    delete delfriendsrsp_usr_value_;
  }
  delfriendsrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfriendsrsp_usr_value_ != NULL) {
    delete queryfriendsrsp_usr_value_;
  }
  queryfriendsrsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) {
    delete storageaddressreq_usr_value_;
  }
  storageaddressreq_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && p2pinforsp_usr_value_ != NULL) {
    delete p2pinforsp_usr_value_;
  }
  p2pinforsp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletefilersp_usr_value_ != NULL) {
    delete deletefilersp_usr_value_;
  }
  deletefilersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && downloadfilersp_usr_value_ != NULL) {
    delete downloadfilersp_usr_value_;
  }
  downloadfilersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryfilersp_usr_value_ != NULL) {
    delete queryfilersp_usr_value_;
  }
  queryfilersp_usr_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlinedevinforsp_inner_value_ != NULL) {
    delete getonlinedevinforsp_inner_value_;
  }
  getonlinedevinforsp_inner_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && getonlineuserinforsp_inner_value_ != NULL) {
    delete getonlineuserinforsp_inner_value_;
  }
  getonlineuserinforsp_inner_value_ = NULL;
  iretcode_ = 0;
}

bool Rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.Rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 iRetcode = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRetMsg = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strretmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strretmsg().data(), this->strretmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.Rsp.strRetMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
      case 72: {
        if (tag == 578u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressrsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
      case 74: {
        if (tag == 594u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforsp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfilersp_dev_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
      case 85: {
        if (tag == 682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgprehandlerrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
      case 90: {
        if (tag == 722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccessaddressrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registeruserrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
      case 110: {
        if (tag == 882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unregisteruserrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
      case 120: {
        if (tag == 962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryusrinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
      case 122: {
        if (tag == 978u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyuserinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
      case 130: {
        if (tag == 1042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
      case 140: {
        if (tag == 1122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
      case 150: {
        if (tag == 1202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
      case 160: {
        if (tag == 1282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
      case 170: {
        if (tag == 1362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adddevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
      case 180: {
        if (tag == 1442u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deldevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
      case 190: {
        if (tag == 1522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifydevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
      case 200: {
        if (tag == 1602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
      case 210: {
        if (tag == 1682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
      case 220: {
        if (tag == 1762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryuserrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
      case 230: {
        if (tag == 1842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sharingdevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
      case 240: {
        if (tag == 1922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancelshareddevrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
      case 250: {
        if (tag == 2002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addfriendsrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
      case 260: {
        if (tag == 2082u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delfriendsrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
      case 270: {
        if (tag == 2162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfriendsrsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
      case 272: {
        if (tag == 2178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storageaddressreq_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
      case 274: {
        if (tag == 2194u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p2pinforsp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
      case 280: {
        if (tag == 2242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlinedevinforsp_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
      case 290: {
        if (tag == 2322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getonlineuserinforsp_inner_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
      case 310: {
        if (tag == 2482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletefilersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
      case 320: {
        if (tag == 2562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_downloadfilersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
      case 330: {
        if (tag == 2642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfilersp_usr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.Rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.Rsp)
  return false;
#undef DO_
}

void Rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.Rsp)
  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->iretcode(), output);
  }

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Rsp.strRetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->strretmsg(), output);
  }

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  if (this->has_getaccessaddressrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->getaccessaddressrsp_dev_value_, output);
  }

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  if (this->has_loginrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->loginrsp_dev_value_, output);
  }

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  if (this->has_logoutrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->logoutrsp_dev_value_, output);
  }

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  if (this->has_shakehandrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->shakehandrsp_dev_value_, output);
  }

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  if (this->has_configinforsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->configinforsp_dev_value_, output);
  }

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  if (this->has_storageaddressrsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, *this->storageaddressrsp_dev_value_, output);
  }

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  if (this->has_p2pinforsp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74, *this->p2pinforsp_dev_value_, output);
  }

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  if (this->has_addfilersp_dev_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->addfilersp_dev_value_, output);
  }

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  if (this->has_msgprehandlerrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85, *this->msgprehandlerrsp_usr_value_, output);
  }

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  if (this->has_getaccessaddressrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->getaccessaddressrsp_usr_value_, output);
  }

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  if (this->has_registeruserrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->registeruserrsp_usr_value_, output);
  }

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  if (this->has_unregisteruserrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, *this->unregisteruserrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  if (this->has_queryusrinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, *this->queryusrinforsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  if (this->has_modifyuserinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122, *this->modifyuserinforsp_usr_value_, output);
  }

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  if (this->has_loginrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      130, *this->loginrsp_usr_value_, output);
  }

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  if (this->has_logoutrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140, *this->logoutrsp_usr_value_, output);
  }

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  if (this->has_shakehandrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150, *this->shakehandrsp_usr_value_, output);
  }

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  if (this->has_configinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160, *this->configinforsp_usr_value_, output);
  }

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  if (this->has_adddevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170, *this->adddevrsp_usr_value_, output);
  }

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  if (this->has_deldevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180, *this->deldevrsp_usr_value_, output);
  }

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  if (this->has_modifydevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190, *this->modifydevrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  if (this->has_querydevinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->querydevinforsp_usr_value_, output);
  }

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  if (this->has_querydevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      210, *this->querydevrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  if (this->has_queryuserrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, *this->queryuserrsp_usr_value_, output);
  }

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  if (this->has_sharingdevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230, *this->sharingdevrsp_usr_value_, output);
  }

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  if (this->has_cancelshareddevrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      240, *this->cancelshareddevrsp_usr_value_, output);
  }

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  if (this->has_addfriendsrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250, *this->addfriendsrsp_usr_value_, output);
  }

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  if (this->has_delfriendsrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      260, *this->delfriendsrsp_usr_value_, output);
  }

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  if (this->has_queryfriendsrsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270, *this->queryfriendsrsp_usr_value_, output);
  }

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  if (this->has_storageaddressreq_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      272, *this->storageaddressreq_usr_value_, output);
  }

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  if (this->has_p2pinforsp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      274, *this->p2pinforsp_usr_value_, output);
  }

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  if (this->has_getonlinedevinforsp_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      280, *this->getonlinedevinforsp_inner_value_, output);
  }

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  if (this->has_getonlineuserinforsp_inner_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290, *this->getonlineuserinforsp_inner_value_, output);
  }

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  if (this->has_deletefilersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      310, *this->deletefilersp_usr_value_, output);
  }

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  if (this->has_downloadfilersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      320, *this->downloadfilersp_usr_value_, output);
  }

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  if (this->has_queryfilersp_usr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330, *this->queryfilersp_usr_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.Rsp)
}

::google::protobuf::uint8* Rsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.Rsp)
  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->iretcode(), target);
  }

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.Rsp.strRetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strretmsg(), target);
  }

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  if (this->has_getaccessaddressrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->getaccessaddressrsp_dev_value_, false, target);
  }

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  if (this->has_loginrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->loginrsp_dev_value_, false, target);
  }

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  if (this->has_logoutrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->logoutrsp_dev_value_, false, target);
  }

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  if (this->has_shakehandrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->shakehandrsp_dev_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  if (this->has_configinforsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->configinforsp_dev_value_, false, target);
  }

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  if (this->has_storageaddressrsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        72, *this->storageaddressrsp_dev_value_, false, target);
  }

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  if (this->has_p2pinforsp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        74, *this->p2pinforsp_dev_value_, false, target);
  }

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  if (this->has_addfilersp_dev_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->addfilersp_dev_value_, false, target);
  }

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  if (this->has_msgprehandlerrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        85, *this->msgprehandlerrsp_usr_value_, false, target);
  }

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  if (this->has_getaccessaddressrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->getaccessaddressrsp_usr_value_, false, target);
  }

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  if (this->has_registeruserrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->registeruserrsp_usr_value_, false, target);
  }

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  if (this->has_unregisteruserrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        110, *this->unregisteruserrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  if (this->has_queryusrinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        120, *this->queryusrinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  if (this->has_modifyuserinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        122, *this->modifyuserinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  if (this->has_loginrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        130, *this->loginrsp_usr_value_, false, target);
  }

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  if (this->has_logoutrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        140, *this->logoutrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  if (this->has_shakehandrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        150, *this->shakehandrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  if (this->has_configinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        160, *this->configinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  if (this->has_adddevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        170, *this->adddevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  if (this->has_deldevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        180, *this->deldevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  if (this->has_modifydevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        190, *this->modifydevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  if (this->has_querydevinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->querydevinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  if (this->has_querydevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        210, *this->querydevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  if (this->has_queryuserrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        220, *this->queryuserrsp_usr_value_, false, target);
  }

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  if (this->has_sharingdevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        230, *this->sharingdevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  if (this->has_cancelshareddevrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        240, *this->cancelshareddevrsp_usr_value_, false, target);
  }

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  if (this->has_addfriendsrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        250, *this->addfriendsrsp_usr_value_, false, target);
  }

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  if (this->has_delfriendsrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        260, *this->delfriendsrsp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  if (this->has_queryfriendsrsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        270, *this->queryfriendsrsp_usr_value_, false, target);
  }

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  if (this->has_storageaddressreq_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        272, *this->storageaddressreq_usr_value_, false, target);
  }

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  if (this->has_p2pinforsp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        274, *this->p2pinforsp_usr_value_, false, target);
  }

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  if (this->has_getonlinedevinforsp_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        280, *this->getonlinedevinforsp_inner_value_, false, target);
  }

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  if (this->has_getonlineuserinforsp_inner_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        290, *this->getonlineuserinforsp_inner_value_, false, target);
  }

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  if (this->has_deletefilersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        310, *this->deletefilersp_usr_value_, false, target);
  }

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  if (this->has_downloadfilersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        320, *this->downloadfilersp_usr_value_, false, target);
  }

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  if (this->has_queryfilersp_usr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        330, *this->queryfilersp_usr_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.Rsp)
  return target;
}

size_t Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.Rsp)
  size_t total_size = 0;

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strretmsg());
  }

  // .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
  if (this->has_getaccessaddressrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressrsp_dev_value_);
  }

  // .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
  if (this->has_loginrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginrsp_dev_value_);
  }

  // .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
  if (this->has_logoutrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutrsp_dev_value_);
  }

  // .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
  if (this->has_shakehandrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandrsp_dev_value_);
  }

  // .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
  if (this->has_configinforsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforsp_dev_value_);
  }

  // .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
  if (this->has_storageaddressrsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressrsp_dev_value_);
  }

  // .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
  if (this->has_p2pinforsp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforsp_dev_value_);
  }

  // .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
  if (this->has_addfilersp_dev_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfilersp_dev_value_);
  }

  // .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
  if (this->has_msgprehandlerrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgprehandlerrsp_usr_value_);
  }

  // .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
  if (this->has_getaccessaddressrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getaccessaddressrsp_usr_value_);
  }

  // .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
  if (this->has_registeruserrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->registeruserrsp_usr_value_);
  }

  // .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
  if (this->has_unregisteruserrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unregisteruserrsp_usr_value_);
  }

  // .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
  if (this->has_queryusrinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryusrinforsp_usr_value_);
  }

  // .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
  if (this->has_modifyuserinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyuserinforsp_usr_value_);
  }

  // .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
  if (this->has_loginrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginrsp_usr_value_);
  }

  // .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
  if (this->has_logoutrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logoutrsp_usr_value_);
  }

  // .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
  if (this->has_shakehandrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandrsp_usr_value_);
  }

  // .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
  if (this->has_configinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforsp_usr_value_);
  }

  // .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
  if (this->has_adddevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->adddevrsp_usr_value_);
  }

  // .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
  if (this->has_deldevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deldevrsp_usr_value_);
  }

  // .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
  if (this->has_modifydevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifydevrsp_usr_value_);
  }

  // .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
  if (this->has_querydevinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevinforsp_usr_value_);
  }

  // .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
  if (this->has_querydevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->querydevrsp_usr_value_);
  }

  // .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
  if (this->has_queryuserrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryuserrsp_usr_value_);
  }

  // .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
  if (this->has_sharingdevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sharingdevrsp_usr_value_);
  }

  // .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
  if (this->has_cancelshareddevrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cancelshareddevrsp_usr_value_);
  }

  // .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
  if (this->has_addfriendsrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addfriendsrsp_usr_value_);
  }

  // .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
  if (this->has_delfriendsrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delfriendsrsp_usr_value_);
  }

  // .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
  if (this->has_queryfriendsrsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfriendsrsp_usr_value_);
  }

  // .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
  if (this->has_storageaddressreq_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->storageaddressreq_usr_value_);
  }

  // .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
  if (this->has_p2pinforsp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->p2pinforsp_usr_value_);
  }

  // .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
  if (this->has_deletefilersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletefilersp_usr_value_);
  }

  // .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
  if (this->has_downloadfilersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->downloadfilersp_usr_value_);
  }

  // .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
  if (this->has_queryfilersp_usr_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryfilersp_usr_value_);
  }

  // .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
  if (this->has_getonlinedevinforsp_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlinedevinforsp_inner_value_);
  }

  // .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
  if (this->has_getonlineuserinforsp_inner_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getonlineuserinforsp_inner_value_);
  }

  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iretcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.Rsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.Rsp)
    MergeFrom(*source);
  }
}

void Rsp::MergeFrom(const Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strretmsg().size() > 0) {

    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_getaccessaddressrsp_dev_value()) {
    mutable_getaccessaddressrsp_dev_value()->::Interactive::Message::GetAccessAddressRsp_DEV::MergeFrom(from.getaccessaddressrsp_dev_value());
  }
  if (from.has_loginrsp_dev_value()) {
    mutable_loginrsp_dev_value()->::Interactive::Message::LoginRsp_DEV::MergeFrom(from.loginrsp_dev_value());
  }
  if (from.has_logoutrsp_dev_value()) {
    mutable_logoutrsp_dev_value()->::Interactive::Message::LogoutRsp_DEV::MergeFrom(from.logoutrsp_dev_value());
  }
  if (from.has_shakehandrsp_dev_value()) {
    mutable_shakehandrsp_dev_value()->::Interactive::Message::ShakehandRsp_DEV::MergeFrom(from.shakehandrsp_dev_value());
  }
  if (from.has_configinforsp_dev_value()) {
    mutable_configinforsp_dev_value()->::Interactive::Message::ConfigInfoRsp_DEV::MergeFrom(from.configinforsp_dev_value());
  }
  if (from.has_storageaddressrsp_dev_value()) {
    mutable_storageaddressrsp_dev_value()->::Interactive::Message::StorageAddressRsp_DEV::MergeFrom(from.storageaddressrsp_dev_value());
  }
  if (from.has_p2pinforsp_dev_value()) {
    mutable_p2pinforsp_dev_value()->::Interactive::Message::P2pInfoRsp_DEV::MergeFrom(from.p2pinforsp_dev_value());
  }
  if (from.has_addfilersp_dev_value()) {
    mutable_addfilersp_dev_value()->::Interactive::Message::AddFileRsp_DEV::MergeFrom(from.addfilersp_dev_value());
  }
  if (from.has_msgprehandlerrsp_usr_value()) {
    mutable_msgprehandlerrsp_usr_value()->::Interactive::Message::MsgPreHandlerRsp_USR::MergeFrom(from.msgprehandlerrsp_usr_value());
  }
  if (from.has_getaccessaddressrsp_usr_value()) {
    mutable_getaccessaddressrsp_usr_value()->::Interactive::Message::GetAccessAddressRsp_USR::MergeFrom(from.getaccessaddressrsp_usr_value());
  }
  if (from.has_registeruserrsp_usr_value()) {
    mutable_registeruserrsp_usr_value()->::Interactive::Message::RegisterUserRsp_USR::MergeFrom(from.registeruserrsp_usr_value());
  }
  if (from.has_unregisteruserrsp_usr_value()) {
    mutable_unregisteruserrsp_usr_value()->::Interactive::Message::UnRegisterUserRsp_USR::MergeFrom(from.unregisteruserrsp_usr_value());
  }
  if (from.has_queryusrinforsp_usr_value()) {
    mutable_queryusrinforsp_usr_value()->::Interactive::Message::QueryUsrInfoRsp_USR::MergeFrom(from.queryusrinforsp_usr_value());
  }
  if (from.has_modifyuserinforsp_usr_value()) {
    mutable_modifyuserinforsp_usr_value()->::Interactive::Message::ModifyUserInfoRsp_USR::MergeFrom(from.modifyuserinforsp_usr_value());
  }
  if (from.has_loginrsp_usr_value()) {
    mutable_loginrsp_usr_value()->::Interactive::Message::LoginRsp_USR::MergeFrom(from.loginrsp_usr_value());
  }
  if (from.has_logoutrsp_usr_value()) {
    mutable_logoutrsp_usr_value()->::Interactive::Message::LogoutRsp_USR::MergeFrom(from.logoutrsp_usr_value());
  }
  if (from.has_shakehandrsp_usr_value()) {
    mutable_shakehandrsp_usr_value()->::Interactive::Message::ShakehandRsp_USR::MergeFrom(from.shakehandrsp_usr_value());
  }
  if (from.has_configinforsp_usr_value()) {
    mutable_configinforsp_usr_value()->::Interactive::Message::ConfigInfoRsp_USR::MergeFrom(from.configinforsp_usr_value());
  }
  if (from.has_adddevrsp_usr_value()) {
    mutable_adddevrsp_usr_value()->::Interactive::Message::AddDevRsp_USR::MergeFrom(from.adddevrsp_usr_value());
  }
  if (from.has_deldevrsp_usr_value()) {
    mutable_deldevrsp_usr_value()->::Interactive::Message::DelDevRsp_USR::MergeFrom(from.deldevrsp_usr_value());
  }
  if (from.has_modifydevrsp_usr_value()) {
    mutable_modifydevrsp_usr_value()->::Interactive::Message::ModifyDevRsp_USR::MergeFrom(from.modifydevrsp_usr_value());
  }
  if (from.has_querydevinforsp_usr_value()) {
    mutable_querydevinforsp_usr_value()->::Interactive::Message::QueryDevInfoRsp_USR::MergeFrom(from.querydevinforsp_usr_value());
  }
  if (from.has_querydevrsp_usr_value()) {
    mutable_querydevrsp_usr_value()->::Interactive::Message::QueryDevRsp_USR::MergeFrom(from.querydevrsp_usr_value());
  }
  if (from.has_queryuserrsp_usr_value()) {
    mutable_queryuserrsp_usr_value()->::Interactive::Message::QueryUserRsp_USR::MergeFrom(from.queryuserrsp_usr_value());
  }
  if (from.has_sharingdevrsp_usr_value()) {
    mutable_sharingdevrsp_usr_value()->::Interactive::Message::SharingDevRsp_USR::MergeFrom(from.sharingdevrsp_usr_value());
  }
  if (from.has_cancelshareddevrsp_usr_value()) {
    mutable_cancelshareddevrsp_usr_value()->::Interactive::Message::CancelSharedDevRsp_USR::MergeFrom(from.cancelshareddevrsp_usr_value());
  }
  if (from.has_addfriendsrsp_usr_value()) {
    mutable_addfriendsrsp_usr_value()->::Interactive::Message::AddFriendsRsp_USR::MergeFrom(from.addfriendsrsp_usr_value());
  }
  if (from.has_delfriendsrsp_usr_value()) {
    mutable_delfriendsrsp_usr_value()->::Interactive::Message::DelFriendsRsp_USR::MergeFrom(from.delfriendsrsp_usr_value());
  }
  if (from.has_queryfriendsrsp_usr_value()) {
    mutable_queryfriendsrsp_usr_value()->::Interactive::Message::QueryFriendsRsp_USR::MergeFrom(from.queryfriendsrsp_usr_value());
  }
  if (from.has_storageaddressreq_usr_value()) {
    mutable_storageaddressreq_usr_value()->::Interactive::Message::StorageAddressRsp_USR::MergeFrom(from.storageaddressreq_usr_value());
  }
  if (from.has_p2pinforsp_usr_value()) {
    mutable_p2pinforsp_usr_value()->::Interactive::Message::P2pInfoRsp_USR::MergeFrom(from.p2pinforsp_usr_value());
  }
  if (from.has_deletefilersp_usr_value()) {
    mutable_deletefilersp_usr_value()->::Interactive::Message::DeleteFileRsp_USR::MergeFrom(from.deletefilersp_usr_value());
  }
  if (from.has_downloadfilersp_usr_value()) {
    mutable_downloadfilersp_usr_value()->::Interactive::Message::DownloadFileRsp_USR::MergeFrom(from.downloadfilersp_usr_value());
  }
  if (from.has_queryfilersp_usr_value()) {
    mutable_queryfilersp_usr_value()->::Interactive::Message::QueryFileRsp_USR::MergeFrom(from.queryfilersp_usr_value());
  }
  if (from.has_getonlinedevinforsp_inner_value()) {
    mutable_getonlinedevinforsp_inner_value()->::Interactive::Message::GetOnlineDevInfoRsp_INNER::MergeFrom(from.getonlinedevinforsp_inner_value());
  }
  if (from.has_getonlineuserinforsp_inner_value()) {
    mutable_getonlineuserinforsp_inner_value()->::Interactive::Message::GetOnlineUserInfoRsp_INNER::MergeFrom(from.getonlineuserinforsp_inner_value());
  }
  if (from.iretcode() != 0) {
    set_iretcode(from.iretcode());
  }
}

void Rsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp::CopyFrom(const Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp::IsInitialized() const {
  return true;
}

void Rsp::Swap(Rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp::InternalSwap(Rsp* other) {
  strretmsg_.Swap(&other->strretmsg_);
  std::swap(getaccessaddressrsp_dev_value_, other->getaccessaddressrsp_dev_value_);
  std::swap(loginrsp_dev_value_, other->loginrsp_dev_value_);
  std::swap(logoutrsp_dev_value_, other->logoutrsp_dev_value_);
  std::swap(shakehandrsp_dev_value_, other->shakehandrsp_dev_value_);
  std::swap(configinforsp_dev_value_, other->configinforsp_dev_value_);
  std::swap(storageaddressrsp_dev_value_, other->storageaddressrsp_dev_value_);
  std::swap(p2pinforsp_dev_value_, other->p2pinforsp_dev_value_);
  std::swap(addfilersp_dev_value_, other->addfilersp_dev_value_);
  std::swap(msgprehandlerrsp_usr_value_, other->msgprehandlerrsp_usr_value_);
  std::swap(getaccessaddressrsp_usr_value_, other->getaccessaddressrsp_usr_value_);
  std::swap(registeruserrsp_usr_value_, other->registeruserrsp_usr_value_);
  std::swap(unregisteruserrsp_usr_value_, other->unregisteruserrsp_usr_value_);
  std::swap(queryusrinforsp_usr_value_, other->queryusrinforsp_usr_value_);
  std::swap(modifyuserinforsp_usr_value_, other->modifyuserinforsp_usr_value_);
  std::swap(loginrsp_usr_value_, other->loginrsp_usr_value_);
  std::swap(logoutrsp_usr_value_, other->logoutrsp_usr_value_);
  std::swap(shakehandrsp_usr_value_, other->shakehandrsp_usr_value_);
  std::swap(configinforsp_usr_value_, other->configinforsp_usr_value_);
  std::swap(adddevrsp_usr_value_, other->adddevrsp_usr_value_);
  std::swap(deldevrsp_usr_value_, other->deldevrsp_usr_value_);
  std::swap(modifydevrsp_usr_value_, other->modifydevrsp_usr_value_);
  std::swap(querydevinforsp_usr_value_, other->querydevinforsp_usr_value_);
  std::swap(querydevrsp_usr_value_, other->querydevrsp_usr_value_);
  std::swap(queryuserrsp_usr_value_, other->queryuserrsp_usr_value_);
  std::swap(sharingdevrsp_usr_value_, other->sharingdevrsp_usr_value_);
  std::swap(cancelshareddevrsp_usr_value_, other->cancelshareddevrsp_usr_value_);
  std::swap(addfriendsrsp_usr_value_, other->addfriendsrsp_usr_value_);
  std::swap(delfriendsrsp_usr_value_, other->delfriendsrsp_usr_value_);
  std::swap(queryfriendsrsp_usr_value_, other->queryfriendsrsp_usr_value_);
  std::swap(storageaddressreq_usr_value_, other->storageaddressreq_usr_value_);
  std::swap(p2pinforsp_usr_value_, other->p2pinforsp_usr_value_);
  std::swap(deletefilersp_usr_value_, other->deletefilersp_usr_value_);
  std::swap(downloadfilersp_usr_value_, other->downloadfilersp_usr_value_);
  std::swap(queryfilersp_usr_value_, other->queryfilersp_usr_value_);
  std::swap(getonlinedevinforsp_inner_value_, other->getonlinedevinforsp_inner_value_);
  std::swap(getonlineuserinforsp_inner_value_, other->getonlineuserinforsp_inner_value_);
  std::swap(iretcode_, other->iretcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rsp::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[81];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rsp

// int32 iRetcode = 10;
void Rsp::clear_iretcode() {
  iretcode_ = 0;
}
::google::protobuf::int32 Rsp::iretcode() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.iRetcode)
  return iretcode_;
}
void Rsp::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.Rsp.iRetcode)
}

// string strRetMsg = 20;
void Rsp::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Rsp::strretmsg() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.strRetMsg)
  return strretmsg_.GetNoArena();
}
void Rsp::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.Rsp.strRetMsg)
}
#if LANG_CXX11
void Rsp::set_strretmsg(::std::string&& value) {
  
  strretmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.Rsp.strRetMsg)
}
#endif
void Rsp::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.Rsp.strRetMsg)
}
void Rsp::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.Rsp.strRetMsg)
}
::std::string* Rsp::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Rsp::release_strretmsg() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Rsp::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.strRetMsg)
}

// .Interactive.Message.GetAccessAddressRsp_DEV GetAccessAddressRsp_DEV_Value = 30;
bool Rsp::has_getaccessaddressrsp_dev_value() const {
  return this != internal_default_instance() && getaccessaddressrsp_dev_value_ != NULL;
}
void Rsp::clear_getaccessaddressrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_dev_value_ != NULL) delete getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressRsp_DEV& Rsp::getaccessaddressrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  return getaccessaddressrsp_dev_value_ != NULL ? *getaccessaddressrsp_dev_value_
                         : *::Interactive::Message::GetAccessAddressRsp_DEV::internal_default_instance();
}
::Interactive::Message::GetAccessAddressRsp_DEV* Rsp::mutable_getaccessaddressrsp_dev_value() {
  
  if (getaccessaddressrsp_dev_value_ == NULL) {
    getaccessaddressrsp_dev_value_ = new ::Interactive::Message::GetAccessAddressRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  return getaccessaddressrsp_dev_value_;
}
::Interactive::Message::GetAccessAddressRsp_DEV* Rsp::release_getaccessaddressrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
  
  ::Interactive::Message::GetAccessAddressRsp_DEV* temp = getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getaccessaddressrsp_dev_value(::Interactive::Message::GetAccessAddressRsp_DEV* getaccessaddressrsp_dev_value) {
  delete getaccessaddressrsp_dev_value_;
  getaccessaddressrsp_dev_value_ = getaccessaddressrsp_dev_value;
  if (getaccessaddressrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetAccessAddressRsp_DEV_Value)
}

// .Interactive.Message.LoginRsp_DEV LoginRsp_DEV_Value = 40;
bool Rsp::has_loginrsp_dev_value() const {
  return this != internal_default_instance() && loginrsp_dev_value_ != NULL;
}
void Rsp::clear_loginrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && loginrsp_dev_value_ != NULL) delete loginrsp_dev_value_;
  loginrsp_dev_value_ = NULL;
}
const ::Interactive::Message::LoginRsp_DEV& Rsp::loginrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  return loginrsp_dev_value_ != NULL ? *loginrsp_dev_value_
                         : *::Interactive::Message::LoginRsp_DEV::internal_default_instance();
}
::Interactive::Message::LoginRsp_DEV* Rsp::mutable_loginrsp_dev_value() {
  
  if (loginrsp_dev_value_ == NULL) {
    loginrsp_dev_value_ = new ::Interactive::Message::LoginRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  return loginrsp_dev_value_;
}
::Interactive::Message::LoginRsp_DEV* Rsp::release_loginrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LoginRsp_DEV_Value)
  
  ::Interactive::Message::LoginRsp_DEV* temp = loginrsp_dev_value_;
  loginrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_loginrsp_dev_value(::Interactive::Message::LoginRsp_DEV* loginrsp_dev_value) {
  delete loginrsp_dev_value_;
  loginrsp_dev_value_ = loginrsp_dev_value;
  if (loginrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LoginRsp_DEV_Value)
}

// .Interactive.Message.LogoutRsp_DEV LogoutRsp_DEV_Value = 50;
bool Rsp::has_logoutrsp_dev_value() const {
  return this != internal_default_instance() && logoutrsp_dev_value_ != NULL;
}
void Rsp::clear_logoutrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && logoutrsp_dev_value_ != NULL) delete logoutrsp_dev_value_;
  logoutrsp_dev_value_ = NULL;
}
const ::Interactive::Message::LogoutRsp_DEV& Rsp::logoutrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  return logoutrsp_dev_value_ != NULL ? *logoutrsp_dev_value_
                         : *::Interactive::Message::LogoutRsp_DEV::internal_default_instance();
}
::Interactive::Message::LogoutRsp_DEV* Rsp::mutable_logoutrsp_dev_value() {
  
  if (logoutrsp_dev_value_ == NULL) {
    logoutrsp_dev_value_ = new ::Interactive::Message::LogoutRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  return logoutrsp_dev_value_;
}
::Interactive::Message::LogoutRsp_DEV* Rsp::release_logoutrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
  
  ::Interactive::Message::LogoutRsp_DEV* temp = logoutrsp_dev_value_;
  logoutrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_logoutrsp_dev_value(::Interactive::Message::LogoutRsp_DEV* logoutrsp_dev_value) {
  delete logoutrsp_dev_value_;
  logoutrsp_dev_value_ = logoutrsp_dev_value;
  if (logoutrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LogoutRsp_DEV_Value)
}

// .Interactive.Message.ShakehandRsp_DEV ShakehandRsp_DEV_Value = 60;
bool Rsp::has_shakehandrsp_dev_value() const {
  return this != internal_default_instance() && shakehandrsp_dev_value_ != NULL;
}
void Rsp::clear_shakehandrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_dev_value_ != NULL) delete shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = NULL;
}
const ::Interactive::Message::ShakehandRsp_DEV& Rsp::shakehandrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  return shakehandrsp_dev_value_ != NULL ? *shakehandrsp_dev_value_
                         : *::Interactive::Message::ShakehandRsp_DEV::internal_default_instance();
}
::Interactive::Message::ShakehandRsp_DEV* Rsp::mutable_shakehandrsp_dev_value() {
  
  if (shakehandrsp_dev_value_ == NULL) {
    shakehandrsp_dev_value_ = new ::Interactive::Message::ShakehandRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  return shakehandrsp_dev_value_;
}
::Interactive::Message::ShakehandRsp_DEV* Rsp::release_shakehandrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
  
  ::Interactive::Message::ShakehandRsp_DEV* temp = shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_shakehandrsp_dev_value(::Interactive::Message::ShakehandRsp_DEV* shakehandrsp_dev_value) {
  delete shakehandrsp_dev_value_;
  shakehandrsp_dev_value_ = shakehandrsp_dev_value;
  if (shakehandrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ShakehandRsp_DEV_Value)
}

// .Interactive.Message.ConfigInfoRsp_DEV ConfigInfoRsp_DEV_Value = 70;
bool Rsp::has_configinforsp_dev_value() const {
  return this != internal_default_instance() && configinforsp_dev_value_ != NULL;
}
void Rsp::clear_configinforsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && configinforsp_dev_value_ != NULL) delete configinforsp_dev_value_;
  configinforsp_dev_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoRsp_DEV& Rsp::configinforsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  return configinforsp_dev_value_ != NULL ? *configinforsp_dev_value_
                         : *::Interactive::Message::ConfigInfoRsp_DEV::internal_default_instance();
}
::Interactive::Message::ConfigInfoRsp_DEV* Rsp::mutable_configinforsp_dev_value() {
  
  if (configinforsp_dev_value_ == NULL) {
    configinforsp_dev_value_ = new ::Interactive::Message::ConfigInfoRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  return configinforsp_dev_value_;
}
::Interactive::Message::ConfigInfoRsp_DEV* Rsp::release_configinforsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
  
  ::Interactive::Message::ConfigInfoRsp_DEV* temp = configinforsp_dev_value_;
  configinforsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_configinforsp_dev_value(::Interactive::Message::ConfigInfoRsp_DEV* configinforsp_dev_value) {
  delete configinforsp_dev_value_;
  configinforsp_dev_value_ = configinforsp_dev_value;
  if (configinforsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ConfigInfoRsp_DEV_Value)
}

// .Interactive.Message.StorageAddressRsp_DEV StorageAddressRsp_DEV_Value = 72;
bool Rsp::has_storageaddressrsp_dev_value() const {
  return this != internal_default_instance() && storageaddressrsp_dev_value_ != NULL;
}
void Rsp::clear_storageaddressrsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressrsp_dev_value_ != NULL) delete storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = NULL;
}
const ::Interactive::Message::StorageAddressRsp_DEV& Rsp::storageaddressrsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  return storageaddressrsp_dev_value_ != NULL ? *storageaddressrsp_dev_value_
                         : *::Interactive::Message::StorageAddressRsp_DEV::internal_default_instance();
}
::Interactive::Message::StorageAddressRsp_DEV* Rsp::mutable_storageaddressrsp_dev_value() {
  
  if (storageaddressrsp_dev_value_ == NULL) {
    storageaddressrsp_dev_value_ = new ::Interactive::Message::StorageAddressRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  return storageaddressrsp_dev_value_;
}
::Interactive::Message::StorageAddressRsp_DEV* Rsp::release_storageaddressrsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
  
  ::Interactive::Message::StorageAddressRsp_DEV* temp = storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_storageaddressrsp_dev_value(::Interactive::Message::StorageAddressRsp_DEV* storageaddressrsp_dev_value) {
  delete storageaddressrsp_dev_value_;
  storageaddressrsp_dev_value_ = storageaddressrsp_dev_value;
  if (storageaddressrsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.StorageAddressRsp_DEV_Value)
}

// .Interactive.Message.P2pInfoRsp_DEV P2pInfoRsp_DEV_Value = 74;
bool Rsp::has_p2pinforsp_dev_value() const {
  return this != internal_default_instance() && p2pinforsp_dev_value_ != NULL;
}
void Rsp::clear_p2pinforsp_dev_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforsp_dev_value_ != NULL) delete p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = NULL;
}
const ::Interactive::Message::P2pInfoRsp_DEV& Rsp::p2pinforsp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  return p2pinforsp_dev_value_ != NULL ? *p2pinforsp_dev_value_
                         : *::Interactive::Message::P2pInfoRsp_DEV::internal_default_instance();
}
::Interactive::Message::P2pInfoRsp_DEV* Rsp::mutable_p2pinforsp_dev_value() {
  
  if (p2pinforsp_dev_value_ == NULL) {
    p2pinforsp_dev_value_ = new ::Interactive::Message::P2pInfoRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  return p2pinforsp_dev_value_;
}
::Interactive::Message::P2pInfoRsp_DEV* Rsp::release_p2pinforsp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
  
  ::Interactive::Message::P2pInfoRsp_DEV* temp = p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_p2pinforsp_dev_value(::Interactive::Message::P2pInfoRsp_DEV* p2pinforsp_dev_value) {
  delete p2pinforsp_dev_value_;
  p2pinforsp_dev_value_ = p2pinforsp_dev_value;
  if (p2pinforsp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.P2pInfoRsp_DEV_Value)
}

// .Interactive.Message.AddFileRsp_DEV AddFileRsp_DEV_Value = 80;
bool Rsp::has_addfilersp_dev_value() const {
  return this != internal_default_instance() && addfilersp_dev_value_ != NULL;
}
void Rsp::clear_addfilersp_dev_value() {
  if (GetArenaNoVirtual() == NULL && addfilersp_dev_value_ != NULL) delete addfilersp_dev_value_;
  addfilersp_dev_value_ = NULL;
}
const ::Interactive::Message::AddFileRsp_DEV& Rsp::addfilersp_dev_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  return addfilersp_dev_value_ != NULL ? *addfilersp_dev_value_
                         : *::Interactive::Message::AddFileRsp_DEV::internal_default_instance();
}
::Interactive::Message::AddFileRsp_DEV* Rsp::mutable_addfilersp_dev_value() {
  
  if (addfilersp_dev_value_ == NULL) {
    addfilersp_dev_value_ = new ::Interactive::Message::AddFileRsp_DEV;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  return addfilersp_dev_value_;
}
::Interactive::Message::AddFileRsp_DEV* Rsp::release_addfilersp_dev_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
  
  ::Interactive::Message::AddFileRsp_DEV* temp = addfilersp_dev_value_;
  addfilersp_dev_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_addfilersp_dev_value(::Interactive::Message::AddFileRsp_DEV* addfilersp_dev_value) {
  delete addfilersp_dev_value_;
  addfilersp_dev_value_ = addfilersp_dev_value;
  if (addfilersp_dev_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddFileRsp_DEV_Value)
}

// .Interactive.Message.MsgPreHandlerRsp_USR MsgPreHandlerRsp_USR_Value = 85;
bool Rsp::has_msgprehandlerrsp_usr_value() const {
  return this != internal_default_instance() && msgprehandlerrsp_usr_value_ != NULL;
}
void Rsp::clear_msgprehandlerrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && msgprehandlerrsp_usr_value_ != NULL) delete msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = NULL;
}
const ::Interactive::Message::MsgPreHandlerRsp_USR& Rsp::msgprehandlerrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  return msgprehandlerrsp_usr_value_ != NULL ? *msgprehandlerrsp_usr_value_
                         : *::Interactive::Message::MsgPreHandlerRsp_USR::internal_default_instance();
}
::Interactive::Message::MsgPreHandlerRsp_USR* Rsp::mutable_msgprehandlerrsp_usr_value() {
  
  if (msgprehandlerrsp_usr_value_ == NULL) {
    msgprehandlerrsp_usr_value_ = new ::Interactive::Message::MsgPreHandlerRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  return msgprehandlerrsp_usr_value_;
}
::Interactive::Message::MsgPreHandlerRsp_USR* Rsp::release_msgprehandlerrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
  
  ::Interactive::Message::MsgPreHandlerRsp_USR* temp = msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_msgprehandlerrsp_usr_value(::Interactive::Message::MsgPreHandlerRsp_USR* msgprehandlerrsp_usr_value) {
  delete msgprehandlerrsp_usr_value_;
  msgprehandlerrsp_usr_value_ = msgprehandlerrsp_usr_value;
  if (msgprehandlerrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.MsgPreHandlerRsp_USR_Value)
}

// .Interactive.Message.GetAccessAddressRsp_USR GetAccessAddressRsp_USR_Value = 90;
bool Rsp::has_getaccessaddressrsp_usr_value() const {
  return this != internal_default_instance() && getaccessaddressrsp_usr_value_ != NULL;
}
void Rsp::clear_getaccessaddressrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && getaccessaddressrsp_usr_value_ != NULL) delete getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = NULL;
}
const ::Interactive::Message::GetAccessAddressRsp_USR& Rsp::getaccessaddressrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  return getaccessaddressrsp_usr_value_ != NULL ? *getaccessaddressrsp_usr_value_
                         : *::Interactive::Message::GetAccessAddressRsp_USR::internal_default_instance();
}
::Interactive::Message::GetAccessAddressRsp_USR* Rsp::mutable_getaccessaddressrsp_usr_value() {
  
  if (getaccessaddressrsp_usr_value_ == NULL) {
    getaccessaddressrsp_usr_value_ = new ::Interactive::Message::GetAccessAddressRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  return getaccessaddressrsp_usr_value_;
}
::Interactive::Message::GetAccessAddressRsp_USR* Rsp::release_getaccessaddressrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
  
  ::Interactive::Message::GetAccessAddressRsp_USR* temp = getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getaccessaddressrsp_usr_value(::Interactive::Message::GetAccessAddressRsp_USR* getaccessaddressrsp_usr_value) {
  delete getaccessaddressrsp_usr_value_;
  getaccessaddressrsp_usr_value_ = getaccessaddressrsp_usr_value;
  if (getaccessaddressrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetAccessAddressRsp_USR_Value)
}

// .Interactive.Message.RegisterUserRsp_USR RegisterUserRsp_USR_Value = 100;
bool Rsp::has_registeruserrsp_usr_value() const {
  return this != internal_default_instance() && registeruserrsp_usr_value_ != NULL;
}
void Rsp::clear_registeruserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && registeruserrsp_usr_value_ != NULL) delete registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = NULL;
}
const ::Interactive::Message::RegisterUserRsp_USR& Rsp::registeruserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  return registeruserrsp_usr_value_ != NULL ? *registeruserrsp_usr_value_
                         : *::Interactive::Message::RegisterUserRsp_USR::internal_default_instance();
}
::Interactive::Message::RegisterUserRsp_USR* Rsp::mutable_registeruserrsp_usr_value() {
  
  if (registeruserrsp_usr_value_ == NULL) {
    registeruserrsp_usr_value_ = new ::Interactive::Message::RegisterUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  return registeruserrsp_usr_value_;
}
::Interactive::Message::RegisterUserRsp_USR* Rsp::release_registeruserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
  
  ::Interactive::Message::RegisterUserRsp_USR* temp = registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_registeruserrsp_usr_value(::Interactive::Message::RegisterUserRsp_USR* registeruserrsp_usr_value) {
  delete registeruserrsp_usr_value_;
  registeruserrsp_usr_value_ = registeruserrsp_usr_value;
  if (registeruserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.RegisterUserRsp_USR_Value)
}

// .Interactive.Message.UnRegisterUserRsp_USR UnRegisterUserRsp_USR_Value = 110;
bool Rsp::has_unregisteruserrsp_usr_value() const {
  return this != internal_default_instance() && unregisteruserrsp_usr_value_ != NULL;
}
void Rsp::clear_unregisteruserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && unregisteruserrsp_usr_value_ != NULL) delete unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = NULL;
}
const ::Interactive::Message::UnRegisterUserRsp_USR& Rsp::unregisteruserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  return unregisteruserrsp_usr_value_ != NULL ? *unregisteruserrsp_usr_value_
                         : *::Interactive::Message::UnRegisterUserRsp_USR::internal_default_instance();
}
::Interactive::Message::UnRegisterUserRsp_USR* Rsp::mutable_unregisteruserrsp_usr_value() {
  
  if (unregisteruserrsp_usr_value_ == NULL) {
    unregisteruserrsp_usr_value_ = new ::Interactive::Message::UnRegisterUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  return unregisteruserrsp_usr_value_;
}
::Interactive::Message::UnRegisterUserRsp_USR* Rsp::release_unregisteruserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
  
  ::Interactive::Message::UnRegisterUserRsp_USR* temp = unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_unregisteruserrsp_usr_value(::Interactive::Message::UnRegisterUserRsp_USR* unregisteruserrsp_usr_value) {
  delete unregisteruserrsp_usr_value_;
  unregisteruserrsp_usr_value_ = unregisteruserrsp_usr_value;
  if (unregisteruserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.UnRegisterUserRsp_USR_Value)
}

// .Interactive.Message.QueryUsrInfoRsp_USR QueryUsrInfoRsp_USR_Value = 120;
bool Rsp::has_queryusrinforsp_usr_value() const {
  return this != internal_default_instance() && queryusrinforsp_usr_value_ != NULL;
}
void Rsp::clear_queryusrinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryusrinforsp_usr_value_ != NULL) delete queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUsrInfoRsp_USR& Rsp::queryusrinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  return queryusrinforsp_usr_value_ != NULL ? *queryusrinforsp_usr_value_
                         : *::Interactive::Message::QueryUsrInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryUsrInfoRsp_USR* Rsp::mutable_queryusrinforsp_usr_value() {
  
  if (queryusrinforsp_usr_value_ == NULL) {
    queryusrinforsp_usr_value_ = new ::Interactive::Message::QueryUsrInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  return queryusrinforsp_usr_value_;
}
::Interactive::Message::QueryUsrInfoRsp_USR* Rsp::release_queryusrinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryUsrInfoRsp_USR* temp = queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryusrinforsp_usr_value(::Interactive::Message::QueryUsrInfoRsp_USR* queryusrinforsp_usr_value) {
  delete queryusrinforsp_usr_value_;
  queryusrinforsp_usr_value_ = queryusrinforsp_usr_value;
  if (queryusrinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUsrInfoRsp_USR_Value)
}

// .Interactive.Message.ModifyUserInfoRsp_USR ModifyUserInfoRsp_USR_Value = 122;
bool Rsp::has_modifyuserinforsp_usr_value() const {
  return this != internal_default_instance() && modifyuserinforsp_usr_value_ != NULL;
}
void Rsp::clear_modifyuserinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifyuserinforsp_usr_value_ != NULL) delete modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyUserInfoRsp_USR& Rsp::modifyuserinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  return modifyuserinforsp_usr_value_ != NULL ? *modifyuserinforsp_usr_value_
                         : *::Interactive::Message::ModifyUserInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::ModifyUserInfoRsp_USR* Rsp::mutable_modifyuserinforsp_usr_value() {
  
  if (modifyuserinforsp_usr_value_ == NULL) {
    modifyuserinforsp_usr_value_ = new ::Interactive::Message::ModifyUserInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  return modifyuserinforsp_usr_value_;
}
::Interactive::Message::ModifyUserInfoRsp_USR* Rsp::release_modifyuserinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
  
  ::Interactive::Message::ModifyUserInfoRsp_USR* temp = modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifyuserinforsp_usr_value(::Interactive::Message::ModifyUserInfoRsp_USR* modifyuserinforsp_usr_value) {
  delete modifyuserinforsp_usr_value_;
  modifyuserinforsp_usr_value_ = modifyuserinforsp_usr_value;
  if (modifyuserinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyUserInfoRsp_USR_Value)
}

// .Interactive.Message.LoginRsp_USR LoginRsp_USR_Value = 130;
bool Rsp::has_loginrsp_usr_value() const {
  return this != internal_default_instance() && loginrsp_usr_value_ != NULL;
}
void Rsp::clear_loginrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && loginrsp_usr_value_ != NULL) delete loginrsp_usr_value_;
  loginrsp_usr_value_ = NULL;
}
const ::Interactive::Message::LoginRsp_USR& Rsp::loginrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LoginRsp_USR_Value)
  return loginrsp_usr_value_ != NULL ? *loginrsp_usr_value_
                         : *::Interactive::Message::LoginRsp_USR::internal_default_instance();
}
::Interactive::Message::LoginRsp_USR* Rsp::mutable_loginrsp_usr_value() {
  
  if (loginrsp_usr_value_ == NULL) {
    loginrsp_usr_value_ = new ::Interactive::Message::LoginRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LoginRsp_USR_Value)
  return loginrsp_usr_value_;
}
::Interactive::Message::LoginRsp_USR* Rsp::release_loginrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LoginRsp_USR_Value)
  
  ::Interactive::Message::LoginRsp_USR* temp = loginrsp_usr_value_;
  loginrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_loginrsp_usr_value(::Interactive::Message::LoginRsp_USR* loginrsp_usr_value) {
  delete loginrsp_usr_value_;
  loginrsp_usr_value_ = loginrsp_usr_value;
  if (loginrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LoginRsp_USR_Value)
}

// .Interactive.Message.LogoutRsp_USR LogoutRsp_USR_Value = 140;
bool Rsp::has_logoutrsp_usr_value() const {
  return this != internal_default_instance() && logoutrsp_usr_value_ != NULL;
}
void Rsp::clear_logoutrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && logoutrsp_usr_value_ != NULL) delete logoutrsp_usr_value_;
  logoutrsp_usr_value_ = NULL;
}
const ::Interactive::Message::LogoutRsp_USR& Rsp::logoutrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  return logoutrsp_usr_value_ != NULL ? *logoutrsp_usr_value_
                         : *::Interactive::Message::LogoutRsp_USR::internal_default_instance();
}
::Interactive::Message::LogoutRsp_USR* Rsp::mutable_logoutrsp_usr_value() {
  
  if (logoutrsp_usr_value_ == NULL) {
    logoutrsp_usr_value_ = new ::Interactive::Message::LogoutRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  return logoutrsp_usr_value_;
}
::Interactive::Message::LogoutRsp_USR* Rsp::release_logoutrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.LogoutRsp_USR_Value)
  
  ::Interactive::Message::LogoutRsp_USR* temp = logoutrsp_usr_value_;
  logoutrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_logoutrsp_usr_value(::Interactive::Message::LogoutRsp_USR* logoutrsp_usr_value) {
  delete logoutrsp_usr_value_;
  logoutrsp_usr_value_ = logoutrsp_usr_value;
  if (logoutrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.LogoutRsp_USR_Value)
}

// .Interactive.Message.ShakehandRsp_USR ShakehandRsp_USR_Value = 150;
bool Rsp::has_shakehandrsp_usr_value() const {
  return this != internal_default_instance() && shakehandrsp_usr_value_ != NULL;
}
void Rsp::clear_shakehandrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && shakehandrsp_usr_value_ != NULL) delete shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = NULL;
}
const ::Interactive::Message::ShakehandRsp_USR& Rsp::shakehandrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  return shakehandrsp_usr_value_ != NULL ? *shakehandrsp_usr_value_
                         : *::Interactive::Message::ShakehandRsp_USR::internal_default_instance();
}
::Interactive::Message::ShakehandRsp_USR* Rsp::mutable_shakehandrsp_usr_value() {
  
  if (shakehandrsp_usr_value_ == NULL) {
    shakehandrsp_usr_value_ = new ::Interactive::Message::ShakehandRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  return shakehandrsp_usr_value_;
}
::Interactive::Message::ShakehandRsp_USR* Rsp::release_shakehandrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
  
  ::Interactive::Message::ShakehandRsp_USR* temp = shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_shakehandrsp_usr_value(::Interactive::Message::ShakehandRsp_USR* shakehandrsp_usr_value) {
  delete shakehandrsp_usr_value_;
  shakehandrsp_usr_value_ = shakehandrsp_usr_value;
  if (shakehandrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ShakehandRsp_USR_Value)
}

// .Interactive.Message.ConfigInfoRsp_USR ConfigInfoRsp_USR_Value = 160;
bool Rsp::has_configinforsp_usr_value() const {
  return this != internal_default_instance() && configinforsp_usr_value_ != NULL;
}
void Rsp::clear_configinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && configinforsp_usr_value_ != NULL) delete configinforsp_usr_value_;
  configinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::ConfigInfoRsp_USR& Rsp::configinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  return configinforsp_usr_value_ != NULL ? *configinforsp_usr_value_
                         : *::Interactive::Message::ConfigInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::ConfigInfoRsp_USR* Rsp::mutable_configinforsp_usr_value() {
  
  if (configinforsp_usr_value_ == NULL) {
    configinforsp_usr_value_ = new ::Interactive::Message::ConfigInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  return configinforsp_usr_value_;
}
::Interactive::Message::ConfigInfoRsp_USR* Rsp::release_configinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
  
  ::Interactive::Message::ConfigInfoRsp_USR* temp = configinforsp_usr_value_;
  configinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_configinforsp_usr_value(::Interactive::Message::ConfigInfoRsp_USR* configinforsp_usr_value) {
  delete configinforsp_usr_value_;
  configinforsp_usr_value_ = configinforsp_usr_value;
  if (configinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ConfigInfoRsp_USR_Value)
}

// .Interactive.Message.AddDevRsp_USR AddDevRsp_USR_Value = 170;
bool Rsp::has_adddevrsp_usr_value() const {
  return this != internal_default_instance() && adddevrsp_usr_value_ != NULL;
}
void Rsp::clear_adddevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && adddevrsp_usr_value_ != NULL) delete adddevrsp_usr_value_;
  adddevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::AddDevRsp_USR& Rsp::adddevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  return adddevrsp_usr_value_ != NULL ? *adddevrsp_usr_value_
                         : *::Interactive::Message::AddDevRsp_USR::internal_default_instance();
}
::Interactive::Message::AddDevRsp_USR* Rsp::mutable_adddevrsp_usr_value() {
  
  if (adddevrsp_usr_value_ == NULL) {
    adddevrsp_usr_value_ = new ::Interactive::Message::AddDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  return adddevrsp_usr_value_;
}
::Interactive::Message::AddDevRsp_USR* Rsp::release_adddevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddDevRsp_USR_Value)
  
  ::Interactive::Message::AddDevRsp_USR* temp = adddevrsp_usr_value_;
  adddevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_adddevrsp_usr_value(::Interactive::Message::AddDevRsp_USR* adddevrsp_usr_value) {
  delete adddevrsp_usr_value_;
  adddevrsp_usr_value_ = adddevrsp_usr_value;
  if (adddevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddDevRsp_USR_Value)
}

// .Interactive.Message.DelDevRsp_USR DelDevRsp_USR_Value = 180;
bool Rsp::has_deldevrsp_usr_value() const {
  return this != internal_default_instance() && deldevrsp_usr_value_ != NULL;
}
void Rsp::clear_deldevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deldevrsp_usr_value_ != NULL) delete deldevrsp_usr_value_;
  deldevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::DelDevRsp_USR& Rsp::deldevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  return deldevrsp_usr_value_ != NULL ? *deldevrsp_usr_value_
                         : *::Interactive::Message::DelDevRsp_USR::internal_default_instance();
}
::Interactive::Message::DelDevRsp_USR* Rsp::mutable_deldevrsp_usr_value() {
  
  if (deldevrsp_usr_value_ == NULL) {
    deldevrsp_usr_value_ = new ::Interactive::Message::DelDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  return deldevrsp_usr_value_;
}
::Interactive::Message::DelDevRsp_USR* Rsp::release_deldevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DelDevRsp_USR_Value)
  
  ::Interactive::Message::DelDevRsp_USR* temp = deldevrsp_usr_value_;
  deldevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deldevrsp_usr_value(::Interactive::Message::DelDevRsp_USR* deldevrsp_usr_value) {
  delete deldevrsp_usr_value_;
  deldevrsp_usr_value_ = deldevrsp_usr_value;
  if (deldevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DelDevRsp_USR_Value)
}

// .Interactive.Message.ModifyDevRsp_USR ModifyDevRsp_USR_Value = 190;
bool Rsp::has_modifydevrsp_usr_value() const {
  return this != internal_default_instance() && modifydevrsp_usr_value_ != NULL;
}
void Rsp::clear_modifydevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && modifydevrsp_usr_value_ != NULL) delete modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::ModifyDevRsp_USR& Rsp::modifydevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  return modifydevrsp_usr_value_ != NULL ? *modifydevrsp_usr_value_
                         : *::Interactive::Message::ModifyDevRsp_USR::internal_default_instance();
}
::Interactive::Message::ModifyDevRsp_USR* Rsp::mutable_modifydevrsp_usr_value() {
  
  if (modifydevrsp_usr_value_ == NULL) {
    modifydevrsp_usr_value_ = new ::Interactive::Message::ModifyDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  return modifydevrsp_usr_value_;
}
::Interactive::Message::ModifyDevRsp_USR* Rsp::release_modifydevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
  
  ::Interactive::Message::ModifyDevRsp_USR* temp = modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_modifydevrsp_usr_value(::Interactive::Message::ModifyDevRsp_USR* modifydevrsp_usr_value) {
  delete modifydevrsp_usr_value_;
  modifydevrsp_usr_value_ = modifydevrsp_usr_value;
  if (modifydevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.ModifyDevRsp_USR_Value)
}

// .Interactive.Message.QueryDevInfoRsp_USR QueryDevInfoRsp_USR_Value = 200;
bool Rsp::has_querydevinforsp_usr_value() const {
  return this != internal_default_instance() && querydevinforsp_usr_value_ != NULL;
}
void Rsp::clear_querydevinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevinforsp_usr_value_ != NULL) delete querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevInfoRsp_USR& Rsp::querydevinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  return querydevinforsp_usr_value_ != NULL ? *querydevinforsp_usr_value_
                         : *::Interactive::Message::QueryDevInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDevInfoRsp_USR* Rsp::mutable_querydevinforsp_usr_value() {
  
  if (querydevinforsp_usr_value_ == NULL) {
    querydevinforsp_usr_value_ = new ::Interactive::Message::QueryDevInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  return querydevinforsp_usr_value_;
}
::Interactive::Message::QueryDevInfoRsp_USR* Rsp::release_querydevinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
  
  ::Interactive::Message::QueryDevInfoRsp_USR* temp = querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydevinforsp_usr_value(::Interactive::Message::QueryDevInfoRsp_USR* querydevinforsp_usr_value) {
  delete querydevinforsp_usr_value_;
  querydevinforsp_usr_value_ = querydevinforsp_usr_value;
  if (querydevinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDevInfoRsp_USR_Value)
}

// .Interactive.Message.QueryDevRsp_USR QueryDevRsp_USR_Value = 210;
bool Rsp::has_querydevrsp_usr_value() const {
  return this != internal_default_instance() && querydevrsp_usr_value_ != NULL;
}
void Rsp::clear_querydevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && querydevrsp_usr_value_ != NULL) delete querydevrsp_usr_value_;
  querydevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryDevRsp_USR& Rsp::querydevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  return querydevrsp_usr_value_ != NULL ? *querydevrsp_usr_value_
                         : *::Interactive::Message::QueryDevRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryDevRsp_USR* Rsp::mutable_querydevrsp_usr_value() {
  
  if (querydevrsp_usr_value_ == NULL) {
    querydevrsp_usr_value_ = new ::Interactive::Message::QueryDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  return querydevrsp_usr_value_;
}
::Interactive::Message::QueryDevRsp_USR* Rsp::release_querydevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
  
  ::Interactive::Message::QueryDevRsp_USR* temp = querydevrsp_usr_value_;
  querydevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_querydevrsp_usr_value(::Interactive::Message::QueryDevRsp_USR* querydevrsp_usr_value) {
  delete querydevrsp_usr_value_;
  querydevrsp_usr_value_ = querydevrsp_usr_value;
  if (querydevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryDevRsp_USR_Value)
}

// .Interactive.Message.QueryUserRsp_USR QueryUserRsp_USR_Value = 220;
bool Rsp::has_queryuserrsp_usr_value() const {
  return this != internal_default_instance() && queryuserrsp_usr_value_ != NULL;
}
void Rsp::clear_queryuserrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryuserrsp_usr_value_ != NULL) delete queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryUserRsp_USR& Rsp::queryuserrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  return queryuserrsp_usr_value_ != NULL ? *queryuserrsp_usr_value_
                         : *::Interactive::Message::QueryUserRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryUserRsp_USR* Rsp::mutable_queryuserrsp_usr_value() {
  
  if (queryuserrsp_usr_value_ == NULL) {
    queryuserrsp_usr_value_ = new ::Interactive::Message::QueryUserRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  return queryuserrsp_usr_value_;
}
::Interactive::Message::QueryUserRsp_USR* Rsp::release_queryuserrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
  
  ::Interactive::Message::QueryUserRsp_USR* temp = queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryuserrsp_usr_value(::Interactive::Message::QueryUserRsp_USR* queryuserrsp_usr_value) {
  delete queryuserrsp_usr_value_;
  queryuserrsp_usr_value_ = queryuserrsp_usr_value;
  if (queryuserrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryUserRsp_USR_Value)
}

// .Interactive.Message.SharingDevRsp_USR SharingDevRsp_USR_Value = 230;
bool Rsp::has_sharingdevrsp_usr_value() const {
  return this != internal_default_instance() && sharingdevrsp_usr_value_ != NULL;
}
void Rsp::clear_sharingdevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && sharingdevrsp_usr_value_ != NULL) delete sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::SharingDevRsp_USR& Rsp::sharingdevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  return sharingdevrsp_usr_value_ != NULL ? *sharingdevrsp_usr_value_
                         : *::Interactive::Message::SharingDevRsp_USR::internal_default_instance();
}
::Interactive::Message::SharingDevRsp_USR* Rsp::mutable_sharingdevrsp_usr_value() {
  
  if (sharingdevrsp_usr_value_ == NULL) {
    sharingdevrsp_usr_value_ = new ::Interactive::Message::SharingDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  return sharingdevrsp_usr_value_;
}
::Interactive::Message::SharingDevRsp_USR* Rsp::release_sharingdevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
  
  ::Interactive::Message::SharingDevRsp_USR* temp = sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_sharingdevrsp_usr_value(::Interactive::Message::SharingDevRsp_USR* sharingdevrsp_usr_value) {
  delete sharingdevrsp_usr_value_;
  sharingdevrsp_usr_value_ = sharingdevrsp_usr_value;
  if (sharingdevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.SharingDevRsp_USR_Value)
}

// .Interactive.Message.CancelSharedDevRsp_USR CancelSharedDevRsp_USR_Value = 240;
bool Rsp::has_cancelshareddevrsp_usr_value() const {
  return this != internal_default_instance() && cancelshareddevrsp_usr_value_ != NULL;
}
void Rsp::clear_cancelshareddevrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && cancelshareddevrsp_usr_value_ != NULL) delete cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = NULL;
}
const ::Interactive::Message::CancelSharedDevRsp_USR& Rsp::cancelshareddevrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  return cancelshareddevrsp_usr_value_ != NULL ? *cancelshareddevrsp_usr_value_
                         : *::Interactive::Message::CancelSharedDevRsp_USR::internal_default_instance();
}
::Interactive::Message::CancelSharedDevRsp_USR* Rsp::mutable_cancelshareddevrsp_usr_value() {
  
  if (cancelshareddevrsp_usr_value_ == NULL) {
    cancelshareddevrsp_usr_value_ = new ::Interactive::Message::CancelSharedDevRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  return cancelshareddevrsp_usr_value_;
}
::Interactive::Message::CancelSharedDevRsp_USR* Rsp::release_cancelshareddevrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
  
  ::Interactive::Message::CancelSharedDevRsp_USR* temp = cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_cancelshareddevrsp_usr_value(::Interactive::Message::CancelSharedDevRsp_USR* cancelshareddevrsp_usr_value) {
  delete cancelshareddevrsp_usr_value_;
  cancelshareddevrsp_usr_value_ = cancelshareddevrsp_usr_value;
  if (cancelshareddevrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.CancelSharedDevRsp_USR_Value)
}

// .Interactive.Message.AddFriendsRsp_USR AddFriendsRsp_USR_Value = 250;
bool Rsp::has_addfriendsrsp_usr_value() const {
  return this != internal_default_instance() && addfriendsrsp_usr_value_ != NULL;
}
void Rsp::clear_addfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && addfriendsrsp_usr_value_ != NULL) delete addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = NULL;
}
const ::Interactive::Message::AddFriendsRsp_USR& Rsp::addfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  return addfriendsrsp_usr_value_ != NULL ? *addfriendsrsp_usr_value_
                         : *::Interactive::Message::AddFriendsRsp_USR::internal_default_instance();
}
::Interactive::Message::AddFriendsRsp_USR* Rsp::mutable_addfriendsrsp_usr_value() {
  
  if (addfriendsrsp_usr_value_ == NULL) {
    addfriendsrsp_usr_value_ = new ::Interactive::Message::AddFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  return addfriendsrsp_usr_value_;
}
::Interactive::Message::AddFriendsRsp_USR* Rsp::release_addfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
  
  ::Interactive::Message::AddFriendsRsp_USR* temp = addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_addfriendsrsp_usr_value(::Interactive::Message::AddFriendsRsp_USR* addfriendsrsp_usr_value) {
  delete addfriendsrsp_usr_value_;
  addfriendsrsp_usr_value_ = addfriendsrsp_usr_value;
  if (addfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.AddFriendsRsp_USR_Value)
}

// .Interactive.Message.DelFriendsRsp_USR DelFriendsRsp_USR_Value = 260;
bool Rsp::has_delfriendsrsp_usr_value() const {
  return this != internal_default_instance() && delfriendsrsp_usr_value_ != NULL;
}
void Rsp::clear_delfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && delfriendsrsp_usr_value_ != NULL) delete delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = NULL;
}
const ::Interactive::Message::DelFriendsRsp_USR& Rsp::delfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  return delfriendsrsp_usr_value_ != NULL ? *delfriendsrsp_usr_value_
                         : *::Interactive::Message::DelFriendsRsp_USR::internal_default_instance();
}
::Interactive::Message::DelFriendsRsp_USR* Rsp::mutable_delfriendsrsp_usr_value() {
  
  if (delfriendsrsp_usr_value_ == NULL) {
    delfriendsrsp_usr_value_ = new ::Interactive::Message::DelFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  return delfriendsrsp_usr_value_;
}
::Interactive::Message::DelFriendsRsp_USR* Rsp::release_delfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
  
  ::Interactive::Message::DelFriendsRsp_USR* temp = delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_delfriendsrsp_usr_value(::Interactive::Message::DelFriendsRsp_USR* delfriendsrsp_usr_value) {
  delete delfriendsrsp_usr_value_;
  delfriendsrsp_usr_value_ = delfriendsrsp_usr_value;
  if (delfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DelFriendsRsp_USR_Value)
}

// .Interactive.Message.QueryFriendsRsp_USR QueryFriendsRsp_USR_Value = 270;
bool Rsp::has_queryfriendsrsp_usr_value() const {
  return this != internal_default_instance() && queryfriendsrsp_usr_value_ != NULL;
}
void Rsp::clear_queryfriendsrsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfriendsrsp_usr_value_ != NULL) delete queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFriendsRsp_USR& Rsp::queryfriendsrsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  return queryfriendsrsp_usr_value_ != NULL ? *queryfriendsrsp_usr_value_
                         : *::Interactive::Message::QueryFriendsRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryFriendsRsp_USR* Rsp::mutable_queryfriendsrsp_usr_value() {
  
  if (queryfriendsrsp_usr_value_ == NULL) {
    queryfriendsrsp_usr_value_ = new ::Interactive::Message::QueryFriendsRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  return queryfriendsrsp_usr_value_;
}
::Interactive::Message::QueryFriendsRsp_USR* Rsp::release_queryfriendsrsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
  
  ::Interactive::Message::QueryFriendsRsp_USR* temp = queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryfriendsrsp_usr_value(::Interactive::Message::QueryFriendsRsp_USR* queryfriendsrsp_usr_value) {
  delete queryfriendsrsp_usr_value_;
  queryfriendsrsp_usr_value_ = queryfriendsrsp_usr_value;
  if (queryfriendsrsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFriendsRsp_USR_Value)
}

// .Interactive.Message.StorageAddressRsp_USR StorageAddressReq_USR_Value = 272;
bool Rsp::has_storageaddressreq_usr_value() const {
  return this != internal_default_instance() && storageaddressreq_usr_value_ != NULL;
}
void Rsp::clear_storageaddressreq_usr_value() {
  if (GetArenaNoVirtual() == NULL && storageaddressreq_usr_value_ != NULL) delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
}
const ::Interactive::Message::StorageAddressRsp_USR& Rsp::storageaddressreq_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_ != NULL ? *storageaddressreq_usr_value_
                         : *::Interactive::Message::StorageAddressRsp_USR::internal_default_instance();
}
::Interactive::Message::StorageAddressRsp_USR* Rsp::mutable_storageaddressreq_usr_value() {
  
  if (storageaddressreq_usr_value_ == NULL) {
    storageaddressreq_usr_value_ = new ::Interactive::Message::StorageAddressRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  return storageaddressreq_usr_value_;
}
::Interactive::Message::StorageAddressRsp_USR* Rsp::release_storageaddressreq_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
  
  ::Interactive::Message::StorageAddressRsp_USR* temp = storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_storageaddressreq_usr_value(::Interactive::Message::StorageAddressRsp_USR* storageaddressreq_usr_value) {
  delete storageaddressreq_usr_value_;
  storageaddressreq_usr_value_ = storageaddressreq_usr_value;
  if (storageaddressreq_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.StorageAddressReq_USR_Value)
}

// .Interactive.Message.P2pInfoRsp_USR P2pInfoRsp_USR_Value = 274;
bool Rsp::has_p2pinforsp_usr_value() const {
  return this != internal_default_instance() && p2pinforsp_usr_value_ != NULL;
}
void Rsp::clear_p2pinforsp_usr_value() {
  if (GetArenaNoVirtual() == NULL && p2pinforsp_usr_value_ != NULL) delete p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = NULL;
}
const ::Interactive::Message::P2pInfoRsp_USR& Rsp::p2pinforsp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  return p2pinforsp_usr_value_ != NULL ? *p2pinforsp_usr_value_
                         : *::Interactive::Message::P2pInfoRsp_USR::internal_default_instance();
}
::Interactive::Message::P2pInfoRsp_USR* Rsp::mutable_p2pinforsp_usr_value() {
  
  if (p2pinforsp_usr_value_ == NULL) {
    p2pinforsp_usr_value_ = new ::Interactive::Message::P2pInfoRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  return p2pinforsp_usr_value_;
}
::Interactive::Message::P2pInfoRsp_USR* Rsp::release_p2pinforsp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
  
  ::Interactive::Message::P2pInfoRsp_USR* temp = p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_p2pinforsp_usr_value(::Interactive::Message::P2pInfoRsp_USR* p2pinforsp_usr_value) {
  delete p2pinforsp_usr_value_;
  p2pinforsp_usr_value_ = p2pinforsp_usr_value;
  if (p2pinforsp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.P2pInfoRsp_USR_Value)
}

// .Interactive.Message.DeleteFileRsp_USR DeleteFileRsp_USR_Value = 310;
bool Rsp::has_deletefilersp_usr_value() const {
  return this != internal_default_instance() && deletefilersp_usr_value_ != NULL;
}
void Rsp::clear_deletefilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && deletefilersp_usr_value_ != NULL) delete deletefilersp_usr_value_;
  deletefilersp_usr_value_ = NULL;
}
const ::Interactive::Message::DeleteFileRsp_USR& Rsp::deletefilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  return deletefilersp_usr_value_ != NULL ? *deletefilersp_usr_value_
                         : *::Interactive::Message::DeleteFileRsp_USR::internal_default_instance();
}
::Interactive::Message::DeleteFileRsp_USR* Rsp::mutable_deletefilersp_usr_value() {
  
  if (deletefilersp_usr_value_ == NULL) {
    deletefilersp_usr_value_ = new ::Interactive::Message::DeleteFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  return deletefilersp_usr_value_;
}
::Interactive::Message::DeleteFileRsp_USR* Rsp::release_deletefilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
  
  ::Interactive::Message::DeleteFileRsp_USR* temp = deletefilersp_usr_value_;
  deletefilersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_deletefilersp_usr_value(::Interactive::Message::DeleteFileRsp_USR* deletefilersp_usr_value) {
  delete deletefilersp_usr_value_;
  deletefilersp_usr_value_ = deletefilersp_usr_value;
  if (deletefilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DeleteFileRsp_USR_Value)
}

// .Interactive.Message.DownloadFileRsp_USR DownloadFileRsp_USR_Value = 320;
bool Rsp::has_downloadfilersp_usr_value() const {
  return this != internal_default_instance() && downloadfilersp_usr_value_ != NULL;
}
void Rsp::clear_downloadfilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && downloadfilersp_usr_value_ != NULL) delete downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = NULL;
}
const ::Interactive::Message::DownloadFileRsp_USR& Rsp::downloadfilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  return downloadfilersp_usr_value_ != NULL ? *downloadfilersp_usr_value_
                         : *::Interactive::Message::DownloadFileRsp_USR::internal_default_instance();
}
::Interactive::Message::DownloadFileRsp_USR* Rsp::mutable_downloadfilersp_usr_value() {
  
  if (downloadfilersp_usr_value_ == NULL) {
    downloadfilersp_usr_value_ = new ::Interactive::Message::DownloadFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  return downloadfilersp_usr_value_;
}
::Interactive::Message::DownloadFileRsp_USR* Rsp::release_downloadfilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
  
  ::Interactive::Message::DownloadFileRsp_USR* temp = downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_downloadfilersp_usr_value(::Interactive::Message::DownloadFileRsp_USR* downloadfilersp_usr_value) {
  delete downloadfilersp_usr_value_;
  downloadfilersp_usr_value_ = downloadfilersp_usr_value;
  if (downloadfilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.DownloadFileRsp_USR_Value)
}

// .Interactive.Message.QueryFileRsp_USR QueryFileRsp_USR_Value = 330;
bool Rsp::has_queryfilersp_usr_value() const {
  return this != internal_default_instance() && queryfilersp_usr_value_ != NULL;
}
void Rsp::clear_queryfilersp_usr_value() {
  if (GetArenaNoVirtual() == NULL && queryfilersp_usr_value_ != NULL) delete queryfilersp_usr_value_;
  queryfilersp_usr_value_ = NULL;
}
const ::Interactive::Message::QueryFileRsp_USR& Rsp::queryfilersp_usr_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  return queryfilersp_usr_value_ != NULL ? *queryfilersp_usr_value_
                         : *::Interactive::Message::QueryFileRsp_USR::internal_default_instance();
}
::Interactive::Message::QueryFileRsp_USR* Rsp::mutable_queryfilersp_usr_value() {
  
  if (queryfilersp_usr_value_ == NULL) {
    queryfilersp_usr_value_ = new ::Interactive::Message::QueryFileRsp_USR;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  return queryfilersp_usr_value_;
}
::Interactive::Message::QueryFileRsp_USR* Rsp::release_queryfilersp_usr_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
  
  ::Interactive::Message::QueryFileRsp_USR* temp = queryfilersp_usr_value_;
  queryfilersp_usr_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_queryfilersp_usr_value(::Interactive::Message::QueryFileRsp_USR* queryfilersp_usr_value) {
  delete queryfilersp_usr_value_;
  queryfilersp_usr_value_ = queryfilersp_usr_value;
  if (queryfilersp_usr_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.QueryFileRsp_USR_Value)
}

// .Interactive.Message.GetOnlineDevInfoRsp_INNER GetOnlineDevInfoRsp_INNER_Value = 280;
bool Rsp::has_getonlinedevinforsp_inner_value() const {
  return this != internal_default_instance() && getonlinedevinforsp_inner_value_ != NULL;
}
void Rsp::clear_getonlinedevinforsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlinedevinforsp_inner_value_ != NULL) delete getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineDevInfoRsp_INNER& Rsp::getonlinedevinforsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  return getonlinedevinforsp_inner_value_ != NULL ? *getonlinedevinforsp_inner_value_
                         : *::Interactive::Message::GetOnlineDevInfoRsp_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineDevInfoRsp_INNER* Rsp::mutable_getonlinedevinforsp_inner_value() {
  
  if (getonlinedevinforsp_inner_value_ == NULL) {
    getonlinedevinforsp_inner_value_ = new ::Interactive::Message::GetOnlineDevInfoRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  return getonlinedevinforsp_inner_value_;
}
::Interactive::Message::GetOnlineDevInfoRsp_INNER* Rsp::release_getonlinedevinforsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
  
  ::Interactive::Message::GetOnlineDevInfoRsp_INNER* temp = getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getonlinedevinforsp_inner_value(::Interactive::Message::GetOnlineDevInfoRsp_INNER* getonlinedevinforsp_inner_value) {
  delete getonlinedevinforsp_inner_value_;
  getonlinedevinforsp_inner_value_ = getonlinedevinforsp_inner_value;
  if (getonlinedevinforsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetOnlineDevInfoRsp_INNER_Value)
}

// .Interactive.Message.GetOnlineUserInfoRsp_INNER GetOnlineUserInfoRsp_INNER_Value = 290;
bool Rsp::has_getonlineuserinforsp_inner_value() const {
  return this != internal_default_instance() && getonlineuserinforsp_inner_value_ != NULL;
}
void Rsp::clear_getonlineuserinforsp_inner_value() {
  if (GetArenaNoVirtual() == NULL && getonlineuserinforsp_inner_value_ != NULL) delete getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = NULL;
}
const ::Interactive::Message::GetOnlineUserInfoRsp_INNER& Rsp::getonlineuserinforsp_inner_value() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  return getonlineuserinforsp_inner_value_ != NULL ? *getonlineuserinforsp_inner_value_
                         : *::Interactive::Message::GetOnlineUserInfoRsp_INNER::internal_default_instance();
}
::Interactive::Message::GetOnlineUserInfoRsp_INNER* Rsp::mutable_getonlineuserinforsp_inner_value() {
  
  if (getonlineuserinforsp_inner_value_ == NULL) {
    getonlineuserinforsp_inner_value_ = new ::Interactive::Message::GetOnlineUserInfoRsp_INNER;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  return getonlineuserinforsp_inner_value_;
}
::Interactive::Message::GetOnlineUserInfoRsp_INNER* Rsp::release_getonlineuserinforsp_inner_value() {
  // @@protoc_insertion_point(field_release:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
  
  ::Interactive::Message::GetOnlineUserInfoRsp_INNER* temp = getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = NULL;
  return temp;
}
void Rsp::set_allocated_getonlineuserinforsp_inner_value(::Interactive::Message::GetOnlineUserInfoRsp_INNER* getonlineuserinforsp_inner_value) {
  delete getonlineuserinforsp_inner_value_;
  getonlineuserinforsp_inner_value_ = getonlineuserinforsp_inner_value;
  if (getonlineuserinforsp_inner_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.Rsp.GetOnlineUserInfoRsp_INNER_Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InteractiveMessage::kTypeFieldNumber;
const int InteractiveMessage::kUiMsgSeqFieldNumber;
const int InteractiveMessage::kStrSIDFieldNumber;
const int InteractiveMessage::kReqValueFieldNumber;
const int InteractiveMessage::kRspValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InteractiveMessage::InteractiveMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interactive.Message.InteractiveMessage)
}
InteractiveMessage::InteractiveMessage(const InteractiveMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsid().size() > 0) {
    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    reqvalue_ = new ::Interactive::Message::Req(*from.reqvalue_);
  } else {
    reqvalue_ = NULL;
  }
  if (from.has_rspvalue()) {
    rspvalue_ = new ::Interactive::Message::Rsp(*from.rspvalue_);
  } else {
    rspvalue_ = NULL;
  }
  ::memcpy(&uimsgseq_, &from.uimsgseq_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Interactive.Message.InteractiveMessage)
}

void InteractiveMessage::SharedCtor() {
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqvalue_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&reqvalue_) + sizeof(type_));
  _cached_size_ = 0;
}

InteractiveMessage::~InteractiveMessage() {
  // @@protoc_insertion_point(destructor:Interactive.Message.InteractiveMessage)
  SharedDtor();
}

void InteractiveMessage::SharedDtor() {
  strsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqvalue_;
  }
  if (this != internal_default_instance()) {
    delete rspvalue_;
  }
}

void InteractiveMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InteractiveMessage::descriptor() {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[82].descriptor;
}

const InteractiveMessage& InteractiveMessage::default_instance() {
  protobuf_InteractiveProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

InteractiveMessage* InteractiveMessage::New(::google::protobuf::Arena* arena) const {
  InteractiveMessage* n = new InteractiveMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InteractiveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Interactive.Message.InteractiveMessage)
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) {
    delete reqvalue_;
  }
  reqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) {
    delete rspvalue_;
  }
  rspvalue_ = NULL;
  ::memset(&uimsgseq_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
}

bool InteractiveMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interactive.Message.InteractiveMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Interactive.Message.MsgType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Interactive::Message::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uiMsgSeq = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uimsgseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsid().data(), this->strsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interactive.Message.InteractiveMessage.strSID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Req ReqValue = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Interactive.Message.Rsp RspValue = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rspvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interactive.Message.InteractiveMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interactive.Message.InteractiveMessage)
  return false;
#undef DO_
}

void InteractiveMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interactive.Message.InteractiveMessage)
  // .Interactive.Message.MsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uimsgseq(), output);
  }

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.InteractiveMessage.strSID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strsid(), output);
  }

  // .Interactive.Message.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reqvalue_, output);
  }

  // .Interactive.Message.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rspvalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:Interactive.Message.InteractiveMessage)
}

::google::protobuf::uint8* InteractiveMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interactive.Message.InteractiveMessage)
  // .Interactive.Message.MsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uimsgseq(), target);
  }

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interactive.Message.InteractiveMessage.strSID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strsid(), target);
  }

  // .Interactive.Message.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reqvalue_, false, target);
  }

  // .Interactive.Message.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rspvalue_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Interactive.Message.InteractiveMessage)
  return target;
}

size_t InteractiveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interactive.Message.InteractiveMessage)
  size_t total_size = 0;

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsid());
  }

  // .Interactive.Message.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqvalue_);
  }

  // .Interactive.Message.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rspvalue_);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uimsgseq());
  }

  // .Interactive.Message.MsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InteractiveMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interactive.Message.InteractiveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InteractiveMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InteractiveMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interactive.Message.InteractiveMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interactive.Message.InteractiveMessage)
    MergeFrom(*source);
  }
}

void InteractiveMessage::MergeFrom(const InteractiveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interactive.Message.InteractiveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strsid().size() > 0) {

    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    mutable_reqvalue()->::Interactive::Message::Req::MergeFrom(from.reqvalue());
  }
  if (from.has_rspvalue()) {
    mutable_rspvalue()->::Interactive::Message::Rsp::MergeFrom(from.rspvalue());
  }
  if (from.uimsgseq() != 0) {
    set_uimsgseq(from.uimsgseq());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void InteractiveMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interactive.Message.InteractiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InteractiveMessage::CopyFrom(const InteractiveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interactive.Message.InteractiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InteractiveMessage::IsInitialized() const {
  return true;
}

void InteractiveMessage::Swap(InteractiveMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InteractiveMessage::InternalSwap(InteractiveMessage* other) {
  strsid_.Swap(&other->strsid_);
  std::swap(reqvalue_, other->reqvalue_);
  std::swap(rspvalue_, other->rspvalue_);
  std::swap(uimsgseq_, other->uimsgseq_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InteractiveMessage::GetMetadata() const {
  protobuf_InteractiveProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocol_2eproto::file_level_metadata[82];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InteractiveMessage

// .Interactive.Message.MsgType type = 1;
void InteractiveMessage::clear_type() {
  type_ = 0;
}
::Interactive::Message::MsgType InteractiveMessage::type() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.type)
  return static_cast< ::Interactive::Message::MsgType >(type_);
}
void InteractiveMessage::set_type(::Interactive::Message::MsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.type)
}

// uint64 uiMsgSeq = 2;
void InteractiveMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 InteractiveMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.uiMsgSeq)
  return uimsgseq_;
}
void InteractiveMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.uiMsgSeq)
}

// string strSID = 3;
void InteractiveMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InteractiveMessage::strsid() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.strSID)
  return strsid_.GetNoArena();
}
void InteractiveMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interactive.Message.InteractiveMessage.strSID)
}
#if LANG_CXX11
void InteractiveMessage::set_strsid(::std::string&& value) {
  
  strsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interactive.Message.InteractiveMessage.strSID)
}
#endif
void InteractiveMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interactive.Message.InteractiveMessage.strSID)
}
void InteractiveMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interactive.Message.InteractiveMessage.strSID)
}
::std::string* InteractiveMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InteractiveMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InteractiveMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.strSID)
}

// .Interactive.Message.Req ReqValue = 4;
bool InteractiveMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
void InteractiveMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
const ::Interactive::Message::Req& InteractiveMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.ReqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::Interactive::Message::Req::internal_default_instance();
}
::Interactive::Message::Req* InteractiveMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::Interactive::Message::Req;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.ReqValue)
  return reqvalue_;
}
::Interactive::Message::Req* InteractiveMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.ReqValue)
  
  ::Interactive::Message::Req* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
void InteractiveMessage::set_allocated_reqvalue(::Interactive::Message::Req* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.ReqValue)
}

// .Interactive.Message.Rsp RspValue = 5;
bool InteractiveMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
void InteractiveMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
const ::Interactive::Message::Rsp& InteractiveMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:Interactive.Message.InteractiveMessage.RspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::Interactive::Message::Rsp::internal_default_instance();
}
::Interactive::Message::Rsp* InteractiveMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::Interactive::Message::Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Interactive.Message.InteractiveMessage.RspValue)
  return rspvalue_;
}
::Interactive::Message::Rsp* InteractiveMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:Interactive.Message.InteractiveMessage.RspValue)
  
  ::Interactive::Message::Rsp* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
void InteractiveMessage::set_allocated_rspvalue(::Interactive::Message::Rsp* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Interactive.Message.InteractiveMessage.RspValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Interactive

// @@protoc_insertion_point(global_scope)
