// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TDFS.proto

#ifndef PROTOBUF_TDFS_2eproto__INCLUDED
#define PROTOBUF_TDFS_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TDFS {
namespace MESSAGE {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_TDFS_2eproto();
void protobuf_InitDefaults_TDFS_2eproto();
void protobuf_AssignDesc_TDFS_2eproto();
void protobuf_ShutdownFile_TDFS_2eproto();

class ActiveReportingReq;
class ActiveReportingRsp;
class Address;
class ConfigInfoReq;
class ConfigInfoRsp;
class ControlCMDReq;
class ControlCMDRsp;
class FileInfo;
class FullSyncConform;
class FullSyncReq;
class FullSyncRsp;
class GetFileInfoReq;
class GetFileInfoRsp;
class GetSyncAddressReq;
class GetSyncAddressRsp;
class LoginReq;
class LoginRsp;
class LoginoutReq;
class LoginoutRsp;
class Req;
class Rsp;
class ShakehandReq;
class ShakehandRsp;
class SyncFileListPendingReq;
class SyncFileListPendingRsp;
class SyncMessage;

enum Address_NodeType {
  Address_NodeType_Center = 0,
  Address_NodeType_Sync = 1,
  Address_NodeType_Address_NodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Address_NodeType_Address_NodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Address_NodeType_IsValid(int value);
const Address_NodeType Address_NodeType_NodeType_MIN = Address_NodeType_Center;
const Address_NodeType Address_NodeType_NodeType_MAX = Address_NodeType_Sync;
const int Address_NodeType_NodeType_ARRAYSIZE = Address_NodeType_NodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Address_NodeType_descriptor();
inline const ::std::string& Address_NodeType_Name(Address_NodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Address_NodeType_descriptor(), value);
}
inline bool Address_NodeType_Parse(
    const ::std::string& name, Address_NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Address_NodeType>(
    Address_NodeType_descriptor(), name, value);
}
enum MsgType {
  Init_T = 0,
  LoginReq_T = 10000,
  LoginRsp_T = 10010,
  LoginoutReq_T = 10020,
  LoginoutRsp_T = 10030,
  ConfigInfoReq_T = 10040,
  ConfigInfoRsp_T = 10050,
  ShakehandReq_T = 10060,
  ShakehandRsp_T = 10070,
  GetSyncAddressReq_T = 10080,
  GetSyncAddressRsp_T = 10090,
  SyncFileListPendingReq_T = 10100,
  SyncFileListPendingRsp_T = 10110,
  ControlCMDReq_T = 10120,
  ControlCMDRsp_T = 10130,
  GetFileInfoReq_T = 10140,
  GetFileInfoRsp_T = 10150,
  FullSyncReq_T = 10160,
  FullSyncRsp_T = 10170,
  FullSyncConform_T = 10180,
  ActiveReportingReq_T = 10190,
  ActiveReportingRsp_T = 10200,
  MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = Init_T;
const MsgType MsgType_MAX = ActiveReportingRsp_T;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
enum SyncServiceStatus {
  IDLE = 0,
  BUSSY = 1,
  FAULT = 2,
  SyncServiceStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncServiceStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncServiceStatus_IsValid(int value);
const SyncServiceStatus SyncServiceStatus_MIN = IDLE;
const SyncServiceStatus SyncServiceStatus_MAX = FAULT;
const int SyncServiceStatus_ARRAYSIZE = SyncServiceStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncServiceStatus_descriptor();
inline const ::std::string& SyncServiceStatus_Name(SyncServiceStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncServiceStatus_descriptor(), value);
}
inline bool SyncServiceStatus_Parse(
    const ::std::string& name, SyncServiceStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncServiceStatus>(
    SyncServiceStatus_descriptor(), name, value);
}
// ===================================================================

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static const LoginReq* internal_default_instance();

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReq* other);
  void UnsafeMergeFrom(const LoginReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strSyncServiceName = 1;
  void clear_strsyncservicename();
  static const int kStrSyncServiceNameFieldNumber = 1;
  const ::std::string& strsyncservicename() const;
  void set_strsyncservicename(const ::std::string& value);
  void set_strsyncservicename(const char* value);
  void set_strsyncservicename(const char* value, size_t size);
  ::std::string* mutable_strsyncservicename();
  ::std::string* release_strsyncservicename();
  void set_allocated_strsyncservicename(::std::string* strsyncservicename);

  // optional string strPassword = 2;
  void clear_strpassword();
  static const int kStrPasswordFieldNumber = 2;
  const ::std::string& strpassword() const;
  void set_strpassword(const ::std::string& value);
  void set_strpassword(const char* value);
  void set_strpassword(const char* value, size_t size);
  ::std::string* mutable_strpassword();
  ::std::string* release_strpassword();
  void set_allocated_strpassword(::std::string* strpassword);

  // optional string strStorageIP = 3;
  void clear_strstorageip();
  static const int kStrStorageIPFieldNumber = 3;
  const ::std::string& strstorageip() const;
  void set_strstorageip(const ::std::string& value);
  void set_strstorageip(const char* value);
  void set_strstorageip(const char* value, size_t size);
  ::std::string* mutable_strstorageip();
  ::std::string* release_strstorageip();
  void set_allocated_strstorageip(::std::string* strstorageip);

  // optional string strStoragePort = 4;
  void clear_strstorageport();
  static const int kStrStoragePortFieldNumber = 4;
  const ::std::string& strstorageport() const;
  void set_strstorageport(const ::std::string& value);
  void set_strstorageport(const char* value);
  void set_strstorageport(const char* value, size_t size);
  ::std::string* mutable_strstorageport();
  ::std::string* release_strstorageport();
  void set_allocated_strstorageport(::std::string* strstorageport);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.LoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsyncservicename_;
  ::google::protobuf::internal::ArenaStringPtr strpassword_;
  ::google::protobuf::internal::ArenaStringPtr strstorageip_;
  ::google::protobuf::internal::ArenaStringPtr strstorageport_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> LoginReq_default_instance_;

// -------------------------------------------------------------------

class LoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.LoginRsp) */ {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp& default_instance();

  static const LoginRsp* internal_default_instance();

  void Swap(LoginRsp* other);

  // implements Message ----------------------------------------------

  inline LoginRsp* New() const { return New(NULL); }

  LoginRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRsp* other);
  void UnsafeMergeFrom(const LoginRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strSID = 3;
  void clear_strsid();
  static const int kStrSIDFieldNumber = 3;
  const ::std::string& strsid() const;
  void set_strsid(const ::std::string& value);
  void set_strsid(const char* value);
  void set_strsid(const char* value, size_t size);
  ::std::string* mutable_strsid();
  ::std::string* release_strsid();
  void set_allocated_strsid(::std::string* strsid);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.LoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp> LoginRsp_default_instance_;

// -------------------------------------------------------------------

class LoginoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.LoginoutReq) */ {
 public:
  LoginoutReq();
  virtual ~LoginoutReq();

  LoginoutReq(const LoginoutReq& from);

  inline LoginoutReq& operator=(const LoginoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginoutReq& default_instance();

  static const LoginoutReq* internal_default_instance();

  void Swap(LoginoutReq* other);

  // implements Message ----------------------------------------------

  inline LoginoutReq* New() const { return New(NULL); }

  LoginoutReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginoutReq& from);
  void MergeFrom(const LoginoutReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginoutReq* other);
  void UnsafeMergeFrom(const LoginoutReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.LoginoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginoutReq> LoginoutReq_default_instance_;

// -------------------------------------------------------------------

class LoginoutRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.LoginoutRsp) */ {
 public:
  LoginoutRsp();
  virtual ~LoginoutRsp();

  LoginoutRsp(const LoginoutRsp& from);

  inline LoginoutRsp& operator=(const LoginoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginoutRsp& default_instance();

  static const LoginoutRsp* internal_default_instance();

  void Swap(LoginoutRsp* other);

  // implements Message ----------------------------------------------

  inline LoginoutRsp* New() const { return New(NULL); }

  LoginoutRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginoutRsp& from);
  void MergeFrom(const LoginoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginoutRsp* other);
  void UnsafeMergeFrom(const LoginoutRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.LoginoutRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginoutRsp> LoginoutRsp_default_instance_;

// -------------------------------------------------------------------

class ConfigInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ConfigInfoReq) */ {
 public:
  ConfigInfoReq();
  virtual ~ConfigInfoReq();

  ConfigInfoReq(const ConfigInfoReq& from);

  inline ConfigInfoReq& operator=(const ConfigInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoReq& default_instance();

  static const ConfigInfoReq* internal_default_instance();

  void Swap(ConfigInfoReq* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoReq* New() const { return New(NULL); }

  ConfigInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigInfoReq& from);
  void MergeFrom(const ConfigInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigInfoReq* other);
  void UnsafeMergeFrom(const ConfigInfoReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strSyncServiceName = 1;
  void clear_strsyncservicename();
  static const int kStrSyncServiceNameFieldNumber = 1;
  const ::std::string& strsyncservicename() const;
  void set_strsyncservicename(const ::std::string& value);
  void set_strsyncservicename(const char* value);
  void set_strsyncservicename(const char* value, size_t size);
  ::std::string* mutable_strsyncservicename();
  ::std::string* release_strsyncservicename();
  void set_allocated_strsyncservicename(::std::string* strsyncservicename);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ConfigInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsyncservicename_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoReq> ConfigInfoReq_default_instance_;

// -------------------------------------------------------------------

class ConfigInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ConfigInfoRsp) */ {
 public:
  ConfigInfoRsp();
  virtual ~ConfigInfoRsp();

  ConfigInfoRsp(const ConfigInfoRsp& from);

  inline ConfigInfoRsp& operator=(const ConfigInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoRsp& default_instance();

  static const ConfigInfoRsp* internal_default_instance();

  void Swap(ConfigInfoRsp* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoRsp* New() const { return New(NULL); }

  ConfigInfoRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigInfoRsp& from);
  void MergeFrom(const ConfigInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigInfoRsp* other);
  void UnsafeMergeFrom(const ConfigInfoRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strConfigJson = 1;
  void clear_strconfigjson();
  static const int kStrConfigJsonFieldNumber = 1;
  const ::std::string& strconfigjson() const;
  void set_strconfigjson(const ::std::string& value);
  void set_strconfigjson(const char* value);
  void set_strconfigjson(const char* value, size_t size);
  ::std::string* mutable_strconfigjson();
  ::std::string* release_strconfigjson();
  void set_allocated_strconfigjson(::std::string* strconfigjson);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ConfigInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strconfigjson_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoRsp> ConfigInfoRsp_default_instance_;

// -------------------------------------------------------------------

class ShakehandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ShakehandReq) */ {
 public:
  ShakehandReq();
  virtual ~ShakehandReq();

  ShakehandReq(const ShakehandReq& from);

  inline ShakehandReq& operator=(const ShakehandReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandReq& default_instance();

  static const ShakehandReq* internal_default_instance();

  void Swap(ShakehandReq* other);

  // implements Message ----------------------------------------------

  inline ShakehandReq* New() const { return New(NULL); }

  ShakehandReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShakehandReq& from);
  void MergeFrom(const ShakehandReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShakehandReq* other);
  void UnsafeMergeFrom(const ShakehandReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::TDFS::MESSAGE::SyncServiceStatus status() const;
  void set_status(::TDFS::MESSAGE::SyncServiceStatus value);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ShakehandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ShakehandReq> ShakehandReq_default_instance_;

// -------------------------------------------------------------------

class ShakehandRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ShakehandRsp) */ {
 public:
  ShakehandRsp();
  virtual ~ShakehandRsp();

  ShakehandRsp(const ShakehandRsp& from);

  inline ShakehandRsp& operator=(const ShakehandRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakehandRsp& default_instance();

  static const ShakehandRsp* internal_default_instance();

  void Swap(ShakehandRsp* other);

  // implements Message ----------------------------------------------

  inline ShakehandRsp* New() const { return New(NULL); }

  ShakehandRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShakehandRsp& from);
  void MergeFrom(const ShakehandRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShakehandRsp* other);
  void UnsafeMergeFrom(const ShakehandRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ShakehandRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ShakehandRsp> ShakehandRsp_default_instance_;

// -------------------------------------------------------------------

class Address : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.Address) */ {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Address& default_instance();

  static const Address* internal_default_instance();

  void Swap(Address* other);

  // implements Message ----------------------------------------------

  inline Address* New() const { return New(NULL); }

  Address* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Address* other);
  void UnsafeMergeFrom(const Address& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Address_NodeType NodeType;
  static const NodeType Center =
    Address_NodeType_Center;
  static const NodeType Sync =
    Address_NodeType_Sync;
  static inline bool NodeType_IsValid(int value) {
    return Address_NodeType_IsValid(value);
  }
  static const NodeType NodeType_MIN =
    Address_NodeType_NodeType_MIN;
  static const NodeType NodeType_MAX =
    Address_NodeType_NodeType_MAX;
  static const int NodeType_ARRAYSIZE =
    Address_NodeType_NodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NodeType_descriptor() {
    return Address_NodeType_descriptor();
  }
  static inline const ::std::string& NodeType_Name(NodeType value) {
    return Address_NodeType_Name(value);
  }
  static inline bool NodeType_Parse(const ::std::string& name,
      NodeType* value) {
    return Address_NodeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string strAddress = 1;
  void clear_straddress();
  static const int kStrAddressFieldNumber = 1;
  const ::std::string& straddress() const;
  void set_straddress(const ::std::string& value);
  void set_straddress(const char* value);
  void set_straddress(const char* value, size_t size);
  ::std::string* mutable_straddress();
  ::std::string* release_straddress();
  void set_allocated_straddress(::std::string* straddress);

  // optional .TDFS.MESSAGE.Address.NodeType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::TDFS::MESSAGE::Address_NodeType type() const;
  void set_type(::TDFS::MESSAGE::Address_NodeType value);

  // optional string AreaID = 3;
  void clear_areaid();
  static const int kAreaIDFieldNumber = 3;
  const ::std::string& areaid() const;
  void set_areaid(const ::std::string& value);
  void set_areaid(const char* value);
  void set_areaid(const char* value, size_t size);
  ::std::string* mutable_areaid();
  ::std::string* release_areaid();
  void set_allocated_areaid(::std::string* areaid);

  // optional string strStorageIP = 4;
  void clear_strstorageip();
  static const int kStrStorageIPFieldNumber = 4;
  const ::std::string& strstorageip() const;
  void set_strstorageip(const ::std::string& value);
  void set_strstorageip(const char* value);
  void set_strstorageip(const char* value, size_t size);
  ::std::string* mutable_strstorageip();
  ::std::string* release_strstorageip();
  void set_allocated_strstorageip(::std::string* strstorageip);

  // optional string strStoragePort = 5;
  void clear_strstorageport();
  static const int kStrStoragePortFieldNumber = 5;
  const ::std::string& strstorageport() const;
  void set_strstorageport(const ::std::string& value);
  void set_strstorageport(const char* value);
  void set_strstorageport(const char* value, size_t size);
  ::std::string* mutable_strstorageport();
  ::std::string* release_strstorageport();
  void set_allocated_strstorageport(::std::string* strstorageport);

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::TDFS::MESSAGE::SyncServiceStatus status() const;
  void set_status(::TDFS::MESSAGE::SyncServiceStatus value);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.Address)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr straddress_;
  ::google::protobuf::internal::ArenaStringPtr areaid_;
  ::google::protobuf::internal::ArenaStringPtr strstorageip_;
  ::google::protobuf::internal::ArenaStringPtr strstorageport_;
  int type_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Address> Address_default_instance_;

// -------------------------------------------------------------------

class GetSyncAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.GetSyncAddressReq) */ {
 public:
  GetSyncAddressReq();
  virtual ~GetSyncAddressReq();

  GetSyncAddressReq(const GetSyncAddressReq& from);

  inline GetSyncAddressReq& operator=(const GetSyncAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSyncAddressReq& default_instance();

  static const GetSyncAddressReq* internal_default_instance();

  void Swap(GetSyncAddressReq* other);

  // implements Message ----------------------------------------------

  inline GetSyncAddressReq* New() const { return New(NULL); }

  GetSyncAddressReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSyncAddressReq& from);
  void MergeFrom(const GetSyncAddressReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetSyncAddressReq* other);
  void UnsafeMergeFrom(const GetSyncAddressReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.GetSyncAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetSyncAddressReq> GetSyncAddressReq_default_instance_;

// -------------------------------------------------------------------

class GetSyncAddressRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.GetSyncAddressRsp) */ {
 public:
  GetSyncAddressRsp();
  virtual ~GetSyncAddressRsp();

  GetSyncAddressRsp(const GetSyncAddressRsp& from);

  inline GetSyncAddressRsp& operator=(const GetSyncAddressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSyncAddressRsp& default_instance();

  static const GetSyncAddressRsp* internal_default_instance();

  void Swap(GetSyncAddressRsp* other);

  // implements Message ----------------------------------------------

  inline GetSyncAddressRsp* New() const { return New(NULL); }

  GetSyncAddressRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSyncAddressRsp& from);
  void MergeFrom(const GetSyncAddressRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetSyncAddressRsp* other);
  void UnsafeMergeFrom(const GetSyncAddressRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
  int addressofsync_size() const;
  void clear_addressofsync();
  static const int kAddressOfSyncFieldNumber = 1;
  const ::TDFS::MESSAGE::Address& addressofsync(int index) const;
  ::TDFS::MESSAGE::Address* mutable_addressofsync(int index);
  ::TDFS::MESSAGE::Address* add_addressofsync();
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address >*
      mutable_addressofsync();
  const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address >&
      addressofsync() const;

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.GetSyncAddressRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address > addressofsync_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetSyncAddressRsp> GetSyncAddressRsp_default_instance_;

// -------------------------------------------------------------------

class FileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.FileInfo) */ {
 public:
  FileInfo();
  virtual ~FileInfo();

  FileInfo(const FileInfo& from);

  inline FileInfo& operator=(const FileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfo& default_instance();

  static const FileInfo* internal_default_instance();

  void Swap(FileInfo* other);

  // implements Message ----------------------------------------------

  inline FileInfo* New() const { return New(NULL); }

  FileInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileInfo& from);
  void MergeFrom(const FileInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileInfo* other);
  void UnsafeMergeFrom(const FileInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strFileID = 1;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 1;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // optional string strFileName = 2;
  void clear_strfilename();
  static const int kStrFileNameFieldNumber = 2;
  const ::std::string& strfilename() const;
  void set_strfilename(const ::std::string& value);
  void set_strfilename(const char* value);
  void set_strfilename(const char* value, size_t size);
  ::std::string* mutable_strfilename();
  ::std::string* release_strfilename();
  void set_allocated_strfilename(::std::string* strfilename);

  // optional uint32 uiFileSize = 3;
  void clear_uifilesize();
  static const int kUiFileSizeFieldNumber = 3;
  ::google::protobuf::uint32 uifilesize() const;
  void set_uifilesize(::google::protobuf::uint32 value);

  // optional string strFileMD5 = 4;
  void clear_strfilemd5();
  static const int kStrFileMD5FieldNumber = 4;
  const ::std::string& strfilemd5() const;
  void set_strfilemd5(const ::std::string& value);
  void set_strfilemd5(const char* value);
  void set_strfilemd5(const char* value, size_t size);
  ::std::string* mutable_strfilemd5();
  ::std::string* release_strfilemd5();
  void set_allocated_strfilemd5(::std::string* strfilemd5);

  // optional string strCreatedate = 5;
  void clear_strcreatedate();
  static const int kStrCreatedateFieldNumber = 5;
  const ::std::string& strcreatedate() const;
  void set_strcreatedate(const ::std::string& value);
  void set_strcreatedate(const char* value);
  void set_strcreatedate(const char* value, size_t size);
  ::std::string* mutable_strcreatedate();
  ::std::string* release_strcreatedate();
  void set_allocated_strcreatedate(::std::string* strcreatedate);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.FileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  ::google::protobuf::internal::ArenaStringPtr strfilename_;
  ::google::protobuf::internal::ArenaStringPtr strfilemd5_;
  ::google::protobuf::internal::ArenaStringPtr strcreatedate_;
  ::google::protobuf::uint32 uifilesize_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FileInfo> FileInfo_default_instance_;

// -------------------------------------------------------------------

class SyncFileListPendingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.SyncFileListPendingReq) */ {
 public:
  SyncFileListPendingReq();
  virtual ~SyncFileListPendingReq();

  SyncFileListPendingReq(const SyncFileListPendingReq& from);

  inline SyncFileListPendingReq& operator=(const SyncFileListPendingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncFileListPendingReq& default_instance();

  static const SyncFileListPendingReq* internal_default_instance();

  void Swap(SyncFileListPendingReq* other);

  // implements Message ----------------------------------------------

  inline SyncFileListPendingReq* New() const { return New(NULL); }

  SyncFileListPendingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncFileListPendingReq& from);
  void MergeFrom(const SyncFileListPendingReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncFileListPendingReq* other);
  void UnsafeMergeFrom(const SyncFileListPendingReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  int fileinfolist_size() const;
  void clear_fileinfolist();
  static const int kFileInfoListFieldNumber = 1;
  const ::TDFS::MESSAGE::FileInfo& fileinfolist(int index) const;
  ::TDFS::MESSAGE::FileInfo* mutable_fileinfolist(int index);
  ::TDFS::MESSAGE::FileInfo* add_fileinfolist();
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
      mutable_fileinfolist();
  const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
      fileinfolist() const;

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.SyncFileListPendingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo > fileinfolist_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SyncFileListPendingReq> SyncFileListPendingReq_default_instance_;

// -------------------------------------------------------------------

class SyncFileListPendingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.SyncFileListPendingRsp) */ {
 public:
  SyncFileListPendingRsp();
  virtual ~SyncFileListPendingRsp();

  SyncFileListPendingRsp(const SyncFileListPendingRsp& from);

  inline SyncFileListPendingRsp& operator=(const SyncFileListPendingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncFileListPendingRsp& default_instance();

  static const SyncFileListPendingRsp* internal_default_instance();

  void Swap(SyncFileListPendingRsp* other);

  // implements Message ----------------------------------------------

  inline SyncFileListPendingRsp* New() const { return New(NULL); }

  SyncFileListPendingRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncFileListPendingRsp& from);
  void MergeFrom(const SyncFileListPendingRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncFileListPendingRsp* other);
  void UnsafeMergeFrom(const SyncFileListPendingRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  int fileinfolist_size() const;
  void clear_fileinfolist();
  static const int kFileInfoListFieldNumber = 1;
  const ::TDFS::MESSAGE::FileInfo& fileinfolist(int index) const;
  ::TDFS::MESSAGE::FileInfo* mutable_fileinfolist(int index);
  ::TDFS::MESSAGE::FileInfo* add_fileinfolist();
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
      mutable_fileinfolist();
  const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
      fileinfolist() const;

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.SyncFileListPendingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo > fileinfolist_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SyncFileListPendingRsp> SyncFileListPendingRsp_default_instance_;

// -------------------------------------------------------------------

class GetFileInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.GetFileInfoReq) */ {
 public:
  GetFileInfoReq();
  virtual ~GetFileInfoReq();

  GetFileInfoReq(const GetFileInfoReq& from);

  inline GetFileInfoReq& operator=(const GetFileInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileInfoReq& default_instance();

  static const GetFileInfoReq* internal_default_instance();

  void Swap(GetFileInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetFileInfoReq* New() const { return New(NULL); }

  GetFileInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFileInfoReq& from);
  void MergeFrom(const GetFileInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetFileInfoReq* other);
  void UnsafeMergeFrom(const GetFileInfoReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strFileID = 1;
  void clear_strfileid();
  static const int kStrFileIDFieldNumber = 1;
  const ::std::string& strfileid() const;
  void set_strfileid(const ::std::string& value);
  void set_strfileid(const char* value);
  void set_strfileid(const char* value, size_t size);
  ::std::string* mutable_strfileid();
  ::std::string* release_strfileid();
  void set_allocated_strfileid(::std::string* strfileid);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.GetFileInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strfileid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetFileInfoReq> GetFileInfoReq_default_instance_;

// -------------------------------------------------------------------

class GetFileInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.GetFileInfoRsp) */ {
 public:
  GetFileInfoRsp();
  virtual ~GetFileInfoRsp();

  GetFileInfoRsp(const GetFileInfoRsp& from);

  inline GetFileInfoRsp& operator=(const GetFileInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileInfoRsp& default_instance();

  static const GetFileInfoRsp* internal_default_instance();

  void Swap(GetFileInfoRsp* other);

  // implements Message ----------------------------------------------

  inline GetFileInfoRsp* New() const { return New(NULL); }

  GetFileInfoRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFileInfoRsp& from);
  void MergeFrom(const GetFileInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetFileInfoRsp* other);
  void UnsafeMergeFrom(const GetFileInfoRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
  bool has_fileinfo() const;
  void clear_fileinfo();
  static const int kFileinfoFieldNumber = 1;
  const ::TDFS::MESSAGE::FileInfo& fileinfo() const;
  ::TDFS::MESSAGE::FileInfo* mutable_fileinfo();
  ::TDFS::MESSAGE::FileInfo* release_fileinfo();
  void set_allocated_fileinfo(::TDFS::MESSAGE::FileInfo* fileinfo);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.GetFileInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TDFS::MESSAGE::FileInfo* fileinfo_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetFileInfoRsp> GetFileInfoRsp_default_instance_;

// -------------------------------------------------------------------

class ControlCMDReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ControlCMDReq) */ {
 public:
  ControlCMDReq();
  virtual ~ControlCMDReq();

  ControlCMDReq(const ControlCMDReq& from);

  inline ControlCMDReq& operator=(const ControlCMDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlCMDReq& default_instance();

  static const ControlCMDReq* internal_default_instance();

  void Swap(ControlCMDReq* other);

  // implements Message ----------------------------------------------

  inline ControlCMDReq* New() const { return New(NULL); }

  ControlCMDReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlCMDReq& from);
  void MergeFrom(const ControlCMDReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ControlCMDReq* other);
  void UnsafeMergeFrom(const ControlCMDReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiCMD = 1;
  void clear_uicmd();
  static const int kUiCMDFieldNumber = 1;
  ::google::protobuf::uint32 uicmd() const;
  void set_uicmd(::google::protobuf::uint32 value);

  // optional string strCMDMsg = 2;
  void clear_strcmdmsg();
  static const int kStrCMDMsgFieldNumber = 2;
  const ::std::string& strcmdmsg() const;
  void set_strcmdmsg(const ::std::string& value);
  void set_strcmdmsg(const char* value);
  void set_strcmdmsg(const char* value, size_t size);
  ::std::string* mutable_strcmdmsg();
  ::std::string* release_strcmdmsg();
  void set_allocated_strcmdmsg(::std::string* strcmdmsg);

  // optional bool blNeedActiveReporting = 3;
  void clear_blneedactivereporting();
  static const int kBlNeedActiveReportingFieldNumber = 3;
  bool blneedactivereporting() const;
  void set_blneedactivereporting(bool value);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ControlCMDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strcmdmsg_;
  ::google::protobuf::uint32 uicmd_;
  bool blneedactivereporting_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ControlCMDReq> ControlCMDReq_default_instance_;

// -------------------------------------------------------------------

class ControlCMDRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ControlCMDRsp) */ {
 public:
  ControlCMDRsp();
  virtual ~ControlCMDRsp();

  ControlCMDRsp(const ControlCMDRsp& from);

  inline ControlCMDRsp& operator=(const ControlCMDRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlCMDRsp& default_instance();

  static const ControlCMDRsp* internal_default_instance();

  void Swap(ControlCMDRsp* other);

  // implements Message ----------------------------------------------

  inline ControlCMDRsp* New() const { return New(NULL); }

  ControlCMDRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlCMDRsp& from);
  void MergeFrom(const ControlCMDRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ControlCMDRsp* other);
  void UnsafeMergeFrom(const ControlCMDRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiCMD = 1;
  void clear_uicmd();
  static const int kUiCMDFieldNumber = 1;
  ::google::protobuf::uint32 uicmd() const;
  void set_uicmd(::google::protobuf::uint32 value);

  // optional bool blNeedActiveReporting = 2;
  void clear_blneedactivereporting();
  static const int kBlNeedActiveReportingFieldNumber = 2;
  bool blneedactivereporting() const;
  void set_blneedactivereporting(bool value);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ControlCMDRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uicmd_;
  bool blneedactivereporting_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ControlCMDRsp> ControlCMDRsp_default_instance_;

// -------------------------------------------------------------------

class FullSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.FullSyncReq) */ {
 public:
  FullSyncReq();
  virtual ~FullSyncReq();

  FullSyncReq(const FullSyncReq& from);

  inline FullSyncReq& operator=(const FullSyncReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FullSyncReq& default_instance();

  static const FullSyncReq* internal_default_instance();

  void Swap(FullSyncReq* other);

  // implements Message ----------------------------------------------

  inline FullSyncReq* New() const { return New(NULL); }

  FullSyncReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FullSyncReq& from);
  void MergeFrom(const FullSyncReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullSyncReq* other);
  void UnsafeMergeFrom(const FullSyncReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.FullSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FullSyncReq> FullSyncReq_default_instance_;

// -------------------------------------------------------------------

class FullSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.FullSyncRsp) */ {
 public:
  FullSyncRsp();
  virtual ~FullSyncRsp();

  FullSyncRsp(const FullSyncRsp& from);

  inline FullSyncRsp& operator=(const FullSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FullSyncRsp& default_instance();

  static const FullSyncRsp* internal_default_instance();

  void Swap(FullSyncRsp* other);

  // implements Message ----------------------------------------------

  inline FullSyncRsp* New() const { return New(NULL); }

  FullSyncRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FullSyncRsp& from);
  void MergeFrom(const FullSyncRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullSyncRsp* other);
  void UnsafeMergeFrom(const FullSyncRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  int fileinfolist_size() const;
  void clear_fileinfolist();
  static const int kFileInfoListFieldNumber = 1;
  const ::TDFS::MESSAGE::FileInfo& fileinfolist(int index) const;
  ::TDFS::MESSAGE::FileInfo* mutable_fileinfolist(int index);
  ::TDFS::MESSAGE::FileInfo* add_fileinfolist();
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
      mutable_fileinfolist();
  const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
      fileinfolist() const;

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.FullSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo > fileinfolist_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FullSyncRsp> FullSyncRsp_default_instance_;

// -------------------------------------------------------------------

class FullSyncConform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.FullSyncConform) */ {
 public:
  FullSyncConform();
  virtual ~FullSyncConform();

  FullSyncConform(const FullSyncConform& from);

  inline FullSyncConform& operator=(const FullSyncConform& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FullSyncConform& default_instance();

  static const FullSyncConform* internal_default_instance();

  void Swap(FullSyncConform* other);

  // implements Message ----------------------------------------------

  inline FullSyncConform* New() const { return New(NULL); }

  FullSyncConform* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FullSyncConform& from);
  void MergeFrom(const FullSyncConform& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullSyncConform* other);
  void UnsafeMergeFrom(const FullSyncConform& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiFlag = 1;
  void clear_uiflag();
  static const int kUiFlagFieldNumber = 1;
  ::google::protobuf::uint32 uiflag() const;
  void set_uiflag(::google::protobuf::uint32 value);

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
  int fileinfolist_size() const;
  void clear_fileinfolist();
  static const int kFileInfoListFieldNumber = 2;
  const ::TDFS::MESSAGE::FileInfo& fileinfolist(int index) const;
  ::TDFS::MESSAGE::FileInfo* mutable_fileinfolist(int index);
  ::TDFS::MESSAGE::FileInfo* add_fileinfolist();
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
      mutable_fileinfolist();
  const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
      fileinfolist() const;

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.FullSyncConform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo > fileinfolist_;
  ::google::protobuf::uint32 uiflag_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FullSyncConform> FullSyncConform_default_instance_;

// -------------------------------------------------------------------

class ActiveReportingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ActiveReportingReq) */ {
 public:
  ActiveReportingReq();
  virtual ~ActiveReportingReq();

  ActiveReportingReq(const ActiveReportingReq& from);

  inline ActiveReportingReq& operator=(const ActiveReportingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveReportingReq& default_instance();

  static const ActiveReportingReq* internal_default_instance();

  void Swap(ActiveReportingReq* other);

  // implements Message ----------------------------------------------

  inline ActiveReportingReq* New() const { return New(NULL); }

  ActiveReportingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveReportingReq& from);
  void MergeFrom(const ActiveReportingReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActiveReportingReq* other);
  void UnsafeMergeFrom(const ActiveReportingReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiTotal = 1;
  void clear_uitotal();
  static const int kUiTotalFieldNumber = 1;
  ::google::protobuf::uint32 uitotal() const;
  void set_uitotal(::google::protobuf::uint32 value);

  // optional uint32 uiCurrentCompleted = 2;
  void clear_uicurrentcompleted();
  static const int kUiCurrentCompletedFieldNumber = 2;
  ::google::protobuf::uint32 uicurrentcompleted() const;
  void set_uicurrentcompleted(::google::protobuf::uint32 value);

  // optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
  bool has_currentcompletedfileinfo() const;
  void clear_currentcompletedfileinfo();
  static const int kCurrentCompletedFileInfoFieldNumber = 3;
  const ::TDFS::MESSAGE::FileInfo& currentcompletedfileinfo() const;
  ::TDFS::MESSAGE::FileInfo* mutable_currentcompletedfileinfo();
  ::TDFS::MESSAGE::FileInfo* release_currentcompletedfileinfo();
  void set_allocated_currentcompletedfileinfo(::TDFS::MESSAGE::FileInfo* currentcompletedfileinfo);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ActiveReportingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TDFS::MESSAGE::FileInfo* currentcompletedfileinfo_;
  ::google::protobuf::uint32 uitotal_;
  ::google::protobuf::uint32 uicurrentcompleted_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActiveReportingReq> ActiveReportingReq_default_instance_;

// -------------------------------------------------------------------

class ActiveReportingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.ActiveReportingRsp) */ {
 public:
  ActiveReportingRsp();
  virtual ~ActiveReportingRsp();

  ActiveReportingRsp(const ActiveReportingRsp& from);

  inline ActiveReportingRsp& operator=(const ActiveReportingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveReportingRsp& default_instance();

  static const ActiveReportingRsp* internal_default_instance();

  void Swap(ActiveReportingRsp* other);

  // implements Message ----------------------------------------------

  inline ActiveReportingRsp* New() const { return New(NULL); }

  ActiveReportingRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveReportingRsp& from);
  void MergeFrom(const ActiveReportingRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActiveReportingRsp* other);
  void UnsafeMergeFrom(const ActiveReportingRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  const ::std::string& strvalue() const;
  void set_strvalue(const ::std::string& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  ::std::string* mutable_strvalue();
  ::std::string* release_strvalue();
  void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.ActiveReportingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActiveReportingRsp> ActiveReportingRsp_default_instance_;

// -------------------------------------------------------------------

class Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.Req) */ {
 public:
  Req();
  virtual ~Req();

  Req(const Req& from);

  inline Req& operator=(const Req& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Req& default_instance();

  static const Req* internal_default_instance();

  void Swap(Req* other);

  // implements Message ----------------------------------------------

  inline Req* New() const { return New(NULL); }

  Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Req& from);
  void MergeFrom(const Req& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Req* other);
  void UnsafeMergeFrom(const Req& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
  bool has_loginreqvalue() const;
  void clear_loginreqvalue();
  static const int kLoginReqValueFieldNumber = 1;
  const ::TDFS::MESSAGE::LoginReq& loginreqvalue() const;
  ::TDFS::MESSAGE::LoginReq* mutable_loginreqvalue();
  ::TDFS::MESSAGE::LoginReq* release_loginreqvalue();
  void set_allocated_loginreqvalue(::TDFS::MESSAGE::LoginReq* loginreqvalue);

  // optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
  bool has_loginoutreqvalue() const;
  void clear_loginoutreqvalue();
  static const int kLoginoutReqValueFieldNumber = 2;
  const ::TDFS::MESSAGE::LoginoutReq& loginoutreqvalue() const;
  ::TDFS::MESSAGE::LoginoutReq* mutable_loginoutreqvalue();
  ::TDFS::MESSAGE::LoginoutReq* release_loginoutreqvalue();
  void set_allocated_loginoutreqvalue(::TDFS::MESSAGE::LoginoutReq* loginoutreqvalue);

  // optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
  bool has_configinforeqvalue() const;
  void clear_configinforeqvalue();
  static const int kConfigInfoReqValueFieldNumber = 3;
  const ::TDFS::MESSAGE::ConfigInfoReq& configinforeqvalue() const;
  ::TDFS::MESSAGE::ConfigInfoReq* mutable_configinforeqvalue();
  ::TDFS::MESSAGE::ConfigInfoReq* release_configinforeqvalue();
  void set_allocated_configinforeqvalue(::TDFS::MESSAGE::ConfigInfoReq* configinforeqvalue);

  // optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
  bool has_shakehandreqvalue() const;
  void clear_shakehandreqvalue();
  static const int kShakehandReqValueFieldNumber = 4;
  const ::TDFS::MESSAGE::ShakehandReq& shakehandreqvalue() const;
  ::TDFS::MESSAGE::ShakehandReq* mutable_shakehandreqvalue();
  ::TDFS::MESSAGE::ShakehandReq* release_shakehandreqvalue();
  void set_allocated_shakehandreqvalue(::TDFS::MESSAGE::ShakehandReq* shakehandreqvalue);

  // optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
  bool has_getsyncaddressreqvalue() const;
  void clear_getsyncaddressreqvalue();
  static const int kGetSyncAddressReqValueFieldNumber = 5;
  const ::TDFS::MESSAGE::GetSyncAddressReq& getsyncaddressreqvalue() const;
  ::TDFS::MESSAGE::GetSyncAddressReq* mutable_getsyncaddressreqvalue();
  ::TDFS::MESSAGE::GetSyncAddressReq* release_getsyncaddressreqvalue();
  void set_allocated_getsyncaddressreqvalue(::TDFS::MESSAGE::GetSyncAddressReq* getsyncaddressreqvalue);

  // optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
  bool has_syncfilelistpendingreqvalue() const;
  void clear_syncfilelistpendingreqvalue();
  static const int kSyncFileListPendingReqValueFieldNumber = 6;
  const ::TDFS::MESSAGE::SyncFileListPendingReq& syncfilelistpendingreqvalue() const;
  ::TDFS::MESSAGE::SyncFileListPendingReq* mutable_syncfilelistpendingreqvalue();
  ::TDFS::MESSAGE::SyncFileListPendingReq* release_syncfilelistpendingreqvalue();
  void set_allocated_syncfilelistpendingreqvalue(::TDFS::MESSAGE::SyncFileListPendingReq* syncfilelistpendingreqvalue);

  // optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
  bool has_controlcmdreqvalue() const;
  void clear_controlcmdreqvalue();
  static const int kControlCMDReqValueFieldNumber = 7;
  const ::TDFS::MESSAGE::ControlCMDReq& controlcmdreqvalue() const;
  ::TDFS::MESSAGE::ControlCMDReq* mutable_controlcmdreqvalue();
  ::TDFS::MESSAGE::ControlCMDReq* release_controlcmdreqvalue();
  void set_allocated_controlcmdreqvalue(::TDFS::MESSAGE::ControlCMDReq* controlcmdreqvalue);

  // optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
  bool has_getfileinforeqvalue() const;
  void clear_getfileinforeqvalue();
  static const int kGetFileInfoReqValueFieldNumber = 8;
  const ::TDFS::MESSAGE::GetFileInfoReq& getfileinforeqvalue() const;
  ::TDFS::MESSAGE::GetFileInfoReq* mutable_getfileinforeqvalue();
  ::TDFS::MESSAGE::GetFileInfoReq* release_getfileinforeqvalue();
  void set_allocated_getfileinforeqvalue(::TDFS::MESSAGE::GetFileInfoReq* getfileinforeqvalue);

  // optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
  bool has_fullsyncreqvalue() const;
  void clear_fullsyncreqvalue();
  static const int kFullSyncReqValueFieldNumber = 9;
  const ::TDFS::MESSAGE::FullSyncReq& fullsyncreqvalue() const;
  ::TDFS::MESSAGE::FullSyncReq* mutable_fullsyncreqvalue();
  ::TDFS::MESSAGE::FullSyncReq* release_fullsyncreqvalue();
  void set_allocated_fullsyncreqvalue(::TDFS::MESSAGE::FullSyncReq* fullsyncreqvalue);

  // optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
  bool has_fullsyncconformvalue() const;
  void clear_fullsyncconformvalue();
  static const int kFullSyncConformValueFieldNumber = 10;
  const ::TDFS::MESSAGE::FullSyncConform& fullsyncconformvalue() const;
  ::TDFS::MESSAGE::FullSyncConform* mutable_fullsyncconformvalue();
  ::TDFS::MESSAGE::FullSyncConform* release_fullsyncconformvalue();
  void set_allocated_fullsyncconformvalue(::TDFS::MESSAGE::FullSyncConform* fullsyncconformvalue);

  // optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
  bool has_activereportingreqvalue() const;
  void clear_activereportingreqvalue();
  static const int kActiveReportingReqValueFieldNumber = 11;
  const ::TDFS::MESSAGE::ActiveReportingReq& activereportingreqvalue() const;
  ::TDFS::MESSAGE::ActiveReportingReq* mutable_activereportingreqvalue();
  ::TDFS::MESSAGE::ActiveReportingReq* release_activereportingreqvalue();
  void set_allocated_activereportingreqvalue(::TDFS::MESSAGE::ActiveReportingReq* activereportingreqvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TDFS::MESSAGE::LoginReq* loginreqvalue_;
  ::TDFS::MESSAGE::LoginoutReq* loginoutreqvalue_;
  ::TDFS::MESSAGE::ConfigInfoReq* configinforeqvalue_;
  ::TDFS::MESSAGE::ShakehandReq* shakehandreqvalue_;
  ::TDFS::MESSAGE::GetSyncAddressReq* getsyncaddressreqvalue_;
  ::TDFS::MESSAGE::SyncFileListPendingReq* syncfilelistpendingreqvalue_;
  ::TDFS::MESSAGE::ControlCMDReq* controlcmdreqvalue_;
  ::TDFS::MESSAGE::GetFileInfoReq* getfileinforeqvalue_;
  ::TDFS::MESSAGE::FullSyncReq* fullsyncreqvalue_;
  ::TDFS::MESSAGE::FullSyncConform* fullsyncconformvalue_;
  ::TDFS::MESSAGE::ActiveReportingReq* activereportingreqvalue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Req> Req_default_instance_;

// -------------------------------------------------------------------

class Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.Rsp) */ {
 public:
  Rsp();
  virtual ~Rsp();

  Rsp(const Rsp& from);

  inline Rsp& operator=(const Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rsp& default_instance();

  static const Rsp* internal_default_instance();

  void Swap(Rsp* other);

  // implements Message ----------------------------------------------

  inline Rsp* New() const { return New(NULL); }

  Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rsp& from);
  void MergeFrom(const Rsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rsp* other);
  void UnsafeMergeFrom(const Rsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRetcode = 1;
  void clear_iretcode();
  static const int kIRetcodeFieldNumber = 1;
  ::google::protobuf::int32 iretcode() const;
  void set_iretcode(::google::protobuf::int32 value);

  // optional string strRetMsg = 2;
  void clear_strretmsg();
  static const int kStrRetMsgFieldNumber = 2;
  const ::std::string& strretmsg() const;
  void set_strretmsg(const ::std::string& value);
  void set_strretmsg(const char* value);
  void set_strretmsg(const char* value, size_t size);
  ::std::string* mutable_strretmsg();
  ::std::string* release_strretmsg();
  void set_allocated_strretmsg(::std::string* strretmsg);

  // optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
  bool has_loginrspvalue() const;
  void clear_loginrspvalue();
  static const int kLoginRspValueFieldNumber = 3;
  const ::TDFS::MESSAGE::LoginRsp& loginrspvalue() const;
  ::TDFS::MESSAGE::LoginRsp* mutable_loginrspvalue();
  ::TDFS::MESSAGE::LoginRsp* release_loginrspvalue();
  void set_allocated_loginrspvalue(::TDFS::MESSAGE::LoginRsp* loginrspvalue);

  // optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
  bool has_loginoutrspvalue() const;
  void clear_loginoutrspvalue();
  static const int kLoginoutRspValueFieldNumber = 4;
  const ::TDFS::MESSAGE::LoginoutRsp& loginoutrspvalue() const;
  ::TDFS::MESSAGE::LoginoutRsp* mutable_loginoutrspvalue();
  ::TDFS::MESSAGE::LoginoutRsp* release_loginoutrspvalue();
  void set_allocated_loginoutrspvalue(::TDFS::MESSAGE::LoginoutRsp* loginoutrspvalue);

  // optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
  bool has_configinforspvalue() const;
  void clear_configinforspvalue();
  static const int kConfigInfoRspValueFieldNumber = 5;
  const ::TDFS::MESSAGE::ConfigInfoRsp& configinforspvalue() const;
  ::TDFS::MESSAGE::ConfigInfoRsp* mutable_configinforspvalue();
  ::TDFS::MESSAGE::ConfigInfoRsp* release_configinforspvalue();
  void set_allocated_configinforspvalue(::TDFS::MESSAGE::ConfigInfoRsp* configinforspvalue);

  // optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
  bool has_shakehandrspvalue() const;
  void clear_shakehandrspvalue();
  static const int kShakehandRspValueFieldNumber = 6;
  const ::TDFS::MESSAGE::ShakehandRsp& shakehandrspvalue() const;
  ::TDFS::MESSAGE::ShakehandRsp* mutable_shakehandrspvalue();
  ::TDFS::MESSAGE::ShakehandRsp* release_shakehandrspvalue();
  void set_allocated_shakehandrspvalue(::TDFS::MESSAGE::ShakehandRsp* shakehandrspvalue);

  // optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
  bool has_getsyncaddressrspvalue() const;
  void clear_getsyncaddressrspvalue();
  static const int kGetSyncAddressRspValueFieldNumber = 7;
  const ::TDFS::MESSAGE::GetSyncAddressRsp& getsyncaddressrspvalue() const;
  ::TDFS::MESSAGE::GetSyncAddressRsp* mutable_getsyncaddressrspvalue();
  ::TDFS::MESSAGE::GetSyncAddressRsp* release_getsyncaddressrspvalue();
  void set_allocated_getsyncaddressrspvalue(::TDFS::MESSAGE::GetSyncAddressRsp* getsyncaddressrspvalue);

  // optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
  bool has_syncfilelistpendingrspvalue() const;
  void clear_syncfilelistpendingrspvalue();
  static const int kSyncFileListPendingRspValueFieldNumber = 8;
  const ::TDFS::MESSAGE::SyncFileListPendingRsp& syncfilelistpendingrspvalue() const;
  ::TDFS::MESSAGE::SyncFileListPendingRsp* mutable_syncfilelistpendingrspvalue();
  ::TDFS::MESSAGE::SyncFileListPendingRsp* release_syncfilelistpendingrspvalue();
  void set_allocated_syncfilelistpendingrspvalue(::TDFS::MESSAGE::SyncFileListPendingRsp* syncfilelistpendingrspvalue);

  // optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
  bool has_controlcmdrspvalue() const;
  void clear_controlcmdrspvalue();
  static const int kControlCMDRspValueFieldNumber = 9;
  const ::TDFS::MESSAGE::ControlCMDRsp& controlcmdrspvalue() const;
  ::TDFS::MESSAGE::ControlCMDRsp* mutable_controlcmdrspvalue();
  ::TDFS::MESSAGE::ControlCMDRsp* release_controlcmdrspvalue();
  void set_allocated_controlcmdrspvalue(::TDFS::MESSAGE::ControlCMDRsp* controlcmdrspvalue);

  // optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
  bool has_getfileinforspvalue() const;
  void clear_getfileinforspvalue();
  static const int kGetFileInfoRspValueFieldNumber = 10;
  const ::TDFS::MESSAGE::GetFileInfoRsp& getfileinforspvalue() const;
  ::TDFS::MESSAGE::GetFileInfoRsp* mutable_getfileinforspvalue();
  ::TDFS::MESSAGE::GetFileInfoRsp* release_getfileinforspvalue();
  void set_allocated_getfileinforspvalue(::TDFS::MESSAGE::GetFileInfoRsp* getfileinforspvalue);

  // optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
  bool has_fullsyncrspvalue() const;
  void clear_fullsyncrspvalue();
  static const int kFullSyncRspValueFieldNumber = 11;
  const ::TDFS::MESSAGE::FullSyncRsp& fullsyncrspvalue() const;
  ::TDFS::MESSAGE::FullSyncRsp* mutable_fullsyncrspvalue();
  ::TDFS::MESSAGE::FullSyncRsp* release_fullsyncrspvalue();
  void set_allocated_fullsyncrspvalue(::TDFS::MESSAGE::FullSyncRsp* fullsyncrspvalue);

  // optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
  bool has_activereportingrspvalue() const;
  void clear_activereportingrspvalue();
  static const int kActiveReportingRspValueFieldNumber = 12;
  const ::TDFS::MESSAGE::ActiveReportingRsp& activereportingrspvalue() const;
  ::TDFS::MESSAGE::ActiveReportingRsp* mutable_activereportingrspvalue();
  ::TDFS::MESSAGE::ActiveReportingRsp* release_activereportingrspvalue();
  void set_allocated_activereportingrspvalue(::TDFS::MESSAGE::ActiveReportingRsp* activereportingrspvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strretmsg_;
  ::TDFS::MESSAGE::LoginRsp* loginrspvalue_;
  ::TDFS::MESSAGE::LoginoutRsp* loginoutrspvalue_;
  ::TDFS::MESSAGE::ConfigInfoRsp* configinforspvalue_;
  ::TDFS::MESSAGE::ShakehandRsp* shakehandrspvalue_;
  ::TDFS::MESSAGE::GetSyncAddressRsp* getsyncaddressrspvalue_;
  ::TDFS::MESSAGE::SyncFileListPendingRsp* syncfilelistpendingrspvalue_;
  ::TDFS::MESSAGE::ControlCMDRsp* controlcmdrspvalue_;
  ::TDFS::MESSAGE::GetFileInfoRsp* getfileinforspvalue_;
  ::TDFS::MESSAGE::FullSyncRsp* fullsyncrspvalue_;
  ::TDFS::MESSAGE::ActiveReportingRsp* activereportingrspvalue_;
  ::google::protobuf::int32 iretcode_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Rsp> Rsp_default_instance_;

// -------------------------------------------------------------------

class SyncMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TDFS.MESSAGE.SyncMessage) */ {
 public:
  SyncMessage();
  virtual ~SyncMessage();

  SyncMessage(const SyncMessage& from);

  inline SyncMessage& operator=(const SyncMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncMessage& default_instance();

  static const SyncMessage* internal_default_instance();

  void Swap(SyncMessage* other);

  // implements Message ----------------------------------------------

  inline SyncMessage* New() const { return New(NULL); }

  SyncMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncMessage& from);
  void MergeFrom(const SyncMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncMessage* other);
  void UnsafeMergeFrom(const SyncMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TDFS.MESSAGE.MsgType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::TDFS::MESSAGE::MsgType type() const;
  void set_type(::TDFS::MESSAGE::MsgType value);

  // optional uint64 uiMsgSeq = 2;
  void clear_uimsgseq();
  static const int kUiMsgSeqFieldNumber = 2;
  ::google::protobuf::uint64 uimsgseq() const;
  void set_uimsgseq(::google::protobuf::uint64 value);

  // optional string strSID = 3;
  void clear_strsid();
  static const int kStrSIDFieldNumber = 3;
  const ::std::string& strsid() const;
  void set_strsid(const ::std::string& value);
  void set_strsid(const char* value);
  void set_strsid(const char* value, size_t size);
  ::std::string* mutable_strsid();
  ::std::string* release_strsid();
  void set_allocated_strsid(::std::string* strsid);

  // optional .TDFS.MESSAGE.Req ReqValue = 4;
  bool has_reqvalue() const;
  void clear_reqvalue();
  static const int kReqValueFieldNumber = 4;
  const ::TDFS::MESSAGE::Req& reqvalue() const;
  ::TDFS::MESSAGE::Req* mutable_reqvalue();
  ::TDFS::MESSAGE::Req* release_reqvalue();
  void set_allocated_reqvalue(::TDFS::MESSAGE::Req* reqvalue);

  // optional .TDFS.MESSAGE.Rsp RspValue = 5;
  bool has_rspvalue() const;
  void clear_rspvalue();
  static const int kRspValueFieldNumber = 5;
  const ::TDFS::MESSAGE::Rsp& rspvalue() const;
  ::TDFS::MESSAGE::Rsp* mutable_rspvalue();
  ::TDFS::MESSAGE::Rsp* release_rspvalue();
  void set_allocated_rspvalue(::TDFS::MESSAGE::Rsp* rspvalue);

  // @@protoc_insertion_point(class_scope:TDFS.MESSAGE.SyncMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strsid_;
  ::TDFS::MESSAGE::Req* reqvalue_;
  ::TDFS::MESSAGE::Rsp* rspvalue_;
  ::google::protobuf::uint64 uimsgseq_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TDFS_2eproto_impl();
  friend void  protobuf_AddDesc_TDFS_2eproto_impl();
  friend void protobuf_AssignDesc_TDFS_2eproto();
  friend void protobuf_ShutdownFile_TDFS_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SyncMessage> SyncMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// optional string strSyncServiceName = 1;
inline void LoginReq::clear_strsyncservicename() {
  strsyncservicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::strsyncservicename() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strSyncServiceName)
  return strsyncservicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_strsyncservicename(const ::std::string& value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}
inline void LoginReq::set_strsyncservicename(const char* value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}
inline void LoginReq::set_strsyncservicename(const char* value, size_t size) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}
inline ::std::string* LoginReq::mutable_strsyncservicename() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strSyncServiceName)
  return strsyncservicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_strsyncservicename() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strSyncServiceName)
  
  return strsyncservicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_strsyncservicename(::std::string* strsyncservicename) {
  if (strsyncservicename != NULL) {
    
  } else {
    
  }
  strsyncservicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsyncservicename);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}

// optional string strPassword = 2;
inline void LoginReq::clear_strpassword() {
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::strpassword() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strPassword)
  return strpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_strpassword(const ::std::string& value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strPassword)
}
inline void LoginReq::set_strpassword(const char* value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strPassword)
}
inline void LoginReq::set_strpassword(const char* value, size_t size) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strPassword)
}
inline ::std::string* LoginReq::mutable_strpassword() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strPassword)
  return strpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_strpassword() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strPassword)
  
  return strpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_strpassword(::std::string* strpassword) {
  if (strpassword != NULL) {
    
  } else {
    
  }
  strpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpassword);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strPassword)
}

// optional string strStorageIP = 3;
inline void LoginReq::clear_strstorageip() {
  strstorageip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::strstorageip() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strStorageIP)
  return strstorageip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_strstorageip(const ::std::string& value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strStorageIP)
}
inline void LoginReq::set_strstorageip(const char* value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strStorageIP)
}
inline void LoginReq::set_strstorageip(const char* value, size_t size) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strStorageIP)
}
inline ::std::string* LoginReq::mutable_strstorageip() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strStorageIP)
  return strstorageip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_strstorageip() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strStorageIP)
  
  return strstorageip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_strstorageip(::std::string* strstorageip) {
  if (strstorageip != NULL) {
    
  } else {
    
  }
  strstorageip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageip);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strStorageIP)
}

// optional string strStoragePort = 4;
inline void LoginReq::clear_strstorageport() {
  strstorageport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::strstorageport() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strStoragePort)
  return strstorageport_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_strstorageport(const ::std::string& value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strStoragePort)
}
inline void LoginReq::set_strstorageport(const char* value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strStoragePort)
}
inline void LoginReq::set_strstorageport(const char* value, size_t size) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strStoragePort)
}
inline ::std::string* LoginReq::mutable_strstorageport() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strStoragePort)
  return strstorageport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_strstorageport() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strStoragePort)
  
  return strstorageport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_strstorageport(::std::string* strstorageport) {
  if (strstorageport != NULL) {
    
  } else {
    
  }
  strstorageport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageport);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strStoragePort)
}

inline const LoginReq* LoginReq::internal_default_instance() {
  return &LoginReq_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginRsp

// optional string strSID = 3;
inline void LoginRsp::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRsp::strsid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginRsp.strSID)
  return strsid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginRsp.strSID)
}
inline void LoginRsp::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginRsp.strSID)
}
inline void LoginRsp::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginRsp.strSID)
}
inline ::std::string* LoginRsp::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginRsp.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRsp::release_strsid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginRsp.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginRsp.strSID)
}

inline const LoginRsp* LoginRsp::internal_default_instance() {
  return &LoginRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginoutReq

// optional string strValue = 1;
inline void LoginoutReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginoutReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginoutReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginoutReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginoutReq.strValue)
}
inline void LoginoutReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginoutReq.strValue)
}
inline void LoginoutReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginoutReq.strValue)
}
inline ::std::string* LoginoutReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginoutReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginoutReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginoutReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginoutReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginoutReq.strValue)
}

inline const LoginoutReq* LoginoutReq::internal_default_instance() {
  return &LoginoutReq_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginoutRsp

// optional string strValue = 1;
inline void LoginoutRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginoutRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginoutRsp.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginoutRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginoutRsp.strValue)
}
inline void LoginoutRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginoutRsp.strValue)
}
inline void LoginoutRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginoutRsp.strValue)
}
inline ::std::string* LoginoutRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginoutRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginoutRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginoutRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginoutRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginoutRsp.strValue)
}

inline const LoginoutRsp* LoginoutRsp::internal_default_instance() {
  return &LoginoutRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigInfoReq

// optional string strSyncServiceName = 1;
inline void ConfigInfoReq::clear_strsyncservicename() {
  strsyncservicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoReq::strsyncservicename() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
  return strsyncservicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoReq::set_strsyncservicename(const ::std::string& value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}
inline void ConfigInfoReq::set_strsyncservicename(const char* value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}
inline void ConfigInfoReq::set_strsyncservicename(const char* value, size_t size) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}
inline ::std::string* ConfigInfoReq::mutable_strsyncservicename() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
  return strsyncservicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoReq::release_strsyncservicename() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
  
  return strsyncservicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoReq::set_allocated_strsyncservicename(::std::string* strsyncservicename) {
  if (strsyncservicename != NULL) {
    
  } else {
    
  }
  strsyncservicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsyncservicename);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}

inline const ConfigInfoReq* ConfigInfoReq::internal_default_instance() {
  return &ConfigInfoReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigInfoRsp

// optional string strConfigJson = 1;
inline void ConfigInfoRsp::clear_strconfigjson() {
  strconfigjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfoRsp::strconfigjson() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
  return strconfigjson_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoRsp::set_strconfigjson(const ::std::string& value) {
  
  strconfigjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}
inline void ConfigInfoRsp::set_strconfigjson(const char* value) {
  
  strconfigjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}
inline void ConfigInfoRsp::set_strconfigjson(const char* value, size_t size) {
  
  strconfigjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}
inline ::std::string* ConfigInfoRsp::mutable_strconfigjson() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
  return strconfigjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoRsp::release_strconfigjson() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
  
  return strconfigjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoRsp::set_allocated_strconfigjson(::std::string* strconfigjson) {
  if (strconfigjson != NULL) {
    
  } else {
    
  }
  strconfigjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconfigjson);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}

inline const ConfigInfoRsp* ConfigInfoRsp::internal_default_instance() {
  return &ConfigInfoRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// ShakehandReq

// optional string strValue = 1;
inline void ShakehandReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ShakehandReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ShakehandReq.strValue)
}
inline void ShakehandReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ShakehandReq.strValue)
}
inline void ShakehandReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ShakehandReq.strValue)
}
inline ::std::string* ShakehandReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ShakehandReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ShakehandReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ShakehandReq.strValue)
}

// optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
inline void ShakehandReq::clear_status() {
  status_ = 0;
}
inline ::TDFS::MESSAGE::SyncServiceStatus ShakehandReq::status() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ShakehandReq.status)
  return static_cast< ::TDFS::MESSAGE::SyncServiceStatus >(status_);
}
inline void ShakehandReq::set_status(::TDFS::MESSAGE::SyncServiceStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ShakehandReq.status)
}

inline const ShakehandReq* ShakehandReq::internal_default_instance() {
  return &ShakehandReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ShakehandRsp

// optional string strValue = 1;
inline void ShakehandRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShakehandRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ShakehandRsp.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ShakehandRsp.strValue)
}
inline void ShakehandRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ShakehandRsp.strValue)
}
inline void ShakehandRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ShakehandRsp.strValue)
}
inline ::std::string* ShakehandRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ShakehandRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakehandRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ShakehandRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakehandRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ShakehandRsp.strValue)
}

inline const ShakehandRsp* ShakehandRsp::internal_default_instance() {
  return &ShakehandRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// Address

// optional string strAddress = 1;
inline void Address::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::straddress() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.strAddress)
  return straddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.strAddress)
}
inline void Address::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.strAddress)
}
inline void Address::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.strAddress)
}
inline ::std::string* Address::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_straddress() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.strAddress)
}

// optional .TDFS.MESSAGE.Address.NodeType type = 2;
inline void Address::clear_type() {
  type_ = 0;
}
inline ::TDFS::MESSAGE::Address_NodeType Address::type() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.type)
  return static_cast< ::TDFS::MESSAGE::Address_NodeType >(type_);
}
inline void Address::set_type(::TDFS::MESSAGE::Address_NodeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.type)
}

// optional string AreaID = 3;
inline void Address::clear_areaid() {
  areaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::areaid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.AreaID)
  return areaid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_areaid(const ::std::string& value) {
  
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.AreaID)
}
inline void Address::set_areaid(const char* value) {
  
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.AreaID)
}
inline void Address::set_areaid(const char* value, size_t size) {
  
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.AreaID)
}
inline ::std::string* Address::mutable_areaid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.AreaID)
  return areaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_areaid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.AreaID)
  
  return areaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_areaid(::std::string* areaid) {
  if (areaid != NULL) {
    
  } else {
    
  }
  areaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), areaid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.AreaID)
}

// optional string strStorageIP = 4;
inline void Address::clear_strstorageip() {
  strstorageip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::strstorageip() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.strStorageIP)
  return strstorageip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_strstorageip(const ::std::string& value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.strStorageIP)
}
inline void Address::set_strstorageip(const char* value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.strStorageIP)
}
inline void Address::set_strstorageip(const char* value, size_t size) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.strStorageIP)
}
inline ::std::string* Address::mutable_strstorageip() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.strStorageIP)
  return strstorageip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_strstorageip() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.strStorageIP)
  
  return strstorageip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_strstorageip(::std::string* strstorageip) {
  if (strstorageip != NULL) {
    
  } else {
    
  }
  strstorageip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageip);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.strStorageIP)
}

// optional string strStoragePort = 5;
inline void Address::clear_strstorageport() {
  strstorageport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::strstorageport() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.strStoragePort)
  return strstorageport_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_strstorageport(const ::std::string& value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.strStoragePort)
}
inline void Address::set_strstorageport(const char* value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.strStoragePort)
}
inline void Address::set_strstorageport(const char* value, size_t size) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.strStoragePort)
}
inline ::std::string* Address::mutable_strstorageport() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.strStoragePort)
  return strstorageport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_strstorageport() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.strStoragePort)
  
  return strstorageport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_strstorageport(::std::string* strstorageport) {
  if (strstorageport != NULL) {
    
  } else {
    
  }
  strstorageport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageport);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.strStoragePort)
}

// optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
inline void Address::clear_status() {
  status_ = 0;
}
inline ::TDFS::MESSAGE::SyncServiceStatus Address::status() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.status)
  return static_cast< ::TDFS::MESSAGE::SyncServiceStatus >(status_);
}
inline void Address::set_status(::TDFS::MESSAGE::SyncServiceStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.status)
}

inline const Address* Address::internal_default_instance() {
  return &Address_default_instance_.get();
}
// -------------------------------------------------------------------

// GetSyncAddressReq

// optional string strValue = 1;
inline void GetSyncAddressReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSyncAddressReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetSyncAddressReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSyncAddressReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}
inline void GetSyncAddressReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}
inline void GetSyncAddressReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}
inline ::std::string* GetSyncAddressReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetSyncAddressReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSyncAddressReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.GetSyncAddressReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSyncAddressReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}

inline const GetSyncAddressReq* GetSyncAddressReq::internal_default_instance() {
  return &GetSyncAddressReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetSyncAddressRsp

// repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
inline int GetSyncAddressRsp::addressofsync_size() const {
  return addressofsync_.size();
}
inline void GetSyncAddressRsp::clear_addressofsync() {
  addressofsync_.Clear();
}
inline const ::TDFS::MESSAGE::Address& GetSyncAddressRsp::addressofsync(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_.Get(index);
}
inline ::TDFS::MESSAGE::Address* GetSyncAddressRsp::mutable_addressofsync(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_.Mutable(index);
}
inline ::TDFS::MESSAGE::Address* GetSyncAddressRsp::add_addressofsync() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address >*
GetSyncAddressRsp::mutable_addressofsync() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return &addressofsync_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address >&
GetSyncAddressRsp::addressofsync() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_;
}

inline const GetSyncAddressRsp* GetSyncAddressRsp::internal_default_instance() {
  return &GetSyncAddressRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// FileInfo

// optional string strFileID = 1;
inline void FileInfo::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::strfileid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strFileID)
  return strfileid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strFileID)
}
inline void FileInfo::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strFileID)
}
inline void FileInfo::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strFileID)
}
inline ::std::string* FileInfo::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_strfileid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strFileID)
}

// optional string strFileName = 2;
inline void FileInfo::clear_strfilename() {
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::strfilename() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strFileName)
  return strfilename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_strfilename(const ::std::string& value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strFileName)
}
inline void FileInfo::set_strfilename(const char* value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strFileName)
}
inline void FileInfo::set_strfilename(const char* value, size_t size) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strFileName)
}
inline ::std::string* FileInfo::mutable_strfilename() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strFileName)
  return strfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_strfilename() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strFileName)
  
  return strfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_strfilename(::std::string* strfilename) {
  if (strfilename != NULL) {
    
  } else {
    
  }
  strfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilename);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strFileName)
}

// optional uint32 uiFileSize = 3;
inline void FileInfo::clear_uifilesize() {
  uifilesize_ = 0u;
}
inline ::google::protobuf::uint32 FileInfo::uifilesize() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.uiFileSize)
  return uifilesize_;
}
inline void FileInfo::set_uifilesize(::google::protobuf::uint32 value) {
  
  uifilesize_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.uiFileSize)
}

// optional string strFileMD5 = 4;
inline void FileInfo::clear_strfilemd5() {
  strfilemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::strfilemd5() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strFileMD5)
  return strfilemd5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_strfilemd5(const ::std::string& value) {
  
  strfilemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strFileMD5)
}
inline void FileInfo::set_strfilemd5(const char* value) {
  
  strfilemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strFileMD5)
}
inline void FileInfo::set_strfilemd5(const char* value, size_t size) {
  
  strfilemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strFileMD5)
}
inline ::std::string* FileInfo::mutable_strfilemd5() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strFileMD5)
  return strfilemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_strfilemd5() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strFileMD5)
  
  return strfilemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_strfilemd5(::std::string* strfilemd5) {
  if (strfilemd5 != NULL) {
    
  } else {
    
  }
  strfilemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilemd5);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strFileMD5)
}

// optional string strCreatedate = 5;
inline void FileInfo::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::strcreatedate() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strCreatedate)
  return strcreatedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strCreatedate)
}
inline void FileInfo::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strCreatedate)
}
inline void FileInfo::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strCreatedate)
}
inline ::std::string* FileInfo::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strCreatedate)
}

inline const FileInfo* FileInfo::internal_default_instance() {
  return &FileInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// SyncFileListPendingReq

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
inline int SyncFileListPendingReq::fileinfolist_size() const {
  return fileinfolist_.size();
}
inline void SyncFileListPendingReq::clear_fileinfolist() {
  fileinfolist_.Clear();
}
inline const ::TDFS::MESSAGE::FileInfo& SyncFileListPendingReq::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_.Get(index);
}
inline ::TDFS::MESSAGE::FileInfo* SyncFileListPendingReq::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_.Mutable(index);
}
inline ::TDFS::MESSAGE::FileInfo* SyncFileListPendingReq::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
SyncFileListPendingReq::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return &fileinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
SyncFileListPendingReq::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_;
}

inline const SyncFileListPendingReq* SyncFileListPendingReq::internal_default_instance() {
  return &SyncFileListPendingReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SyncFileListPendingRsp

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
inline int SyncFileListPendingRsp::fileinfolist_size() const {
  return fileinfolist_.size();
}
inline void SyncFileListPendingRsp::clear_fileinfolist() {
  fileinfolist_.Clear();
}
inline const ::TDFS::MESSAGE::FileInfo& SyncFileListPendingRsp::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_.Get(index);
}
inline ::TDFS::MESSAGE::FileInfo* SyncFileListPendingRsp::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_.Mutable(index);
}
inline ::TDFS::MESSAGE::FileInfo* SyncFileListPendingRsp::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
SyncFileListPendingRsp::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return &fileinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
SyncFileListPendingRsp::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_;
}

inline const SyncFileListPendingRsp* SyncFileListPendingRsp::internal_default_instance() {
  return &SyncFileListPendingRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// GetFileInfoReq

// optional string strFileID = 1;
inline void GetFileInfoReq::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileInfoReq::strfileid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetFileInfoReq.strFileID)
  return strfileid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileInfoReq::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}
inline void GetFileInfoReq::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}
inline void GetFileInfoReq::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}
inline ::std::string* GetFileInfoReq::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetFileInfoReq.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileInfoReq::release_strfileid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.GetFileInfoReq.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileInfoReq::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}

inline const GetFileInfoReq* GetFileInfoReq::internal_default_instance() {
  return &GetFileInfoReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetFileInfoRsp

// optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
inline bool GetFileInfoRsp::has_fileinfo() const {
  return this != internal_default_instance() && fileinfo_ != NULL;
}
inline void GetFileInfoRsp::clear_fileinfo() {
  if (GetArenaNoVirtual() == NULL && fileinfo_ != NULL) delete fileinfo_;
  fileinfo_ = NULL;
}
inline const ::TDFS::MESSAGE::FileInfo& GetFileInfoRsp::fileinfo() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
  return fileinfo_ != NULL ? *fileinfo_
                         : *::TDFS::MESSAGE::FileInfo::internal_default_instance();
}
inline ::TDFS::MESSAGE::FileInfo* GetFileInfoRsp::mutable_fileinfo() {
  
  if (fileinfo_ == NULL) {
    fileinfo_ = new ::TDFS::MESSAGE::FileInfo;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
  return fileinfo_;
}
inline ::TDFS::MESSAGE::FileInfo* GetFileInfoRsp::release_fileinfo() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
  
  ::TDFS::MESSAGE::FileInfo* temp = fileinfo_;
  fileinfo_ = NULL;
  return temp;
}
inline void GetFileInfoRsp::set_allocated_fileinfo(::TDFS::MESSAGE::FileInfo* fileinfo) {
  delete fileinfo_;
  fileinfo_ = fileinfo;
  if (fileinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
}

inline const GetFileInfoRsp* GetFileInfoRsp::internal_default_instance() {
  return &GetFileInfoRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// ControlCMDReq

// optional uint32 uiCMD = 1;
inline void ControlCMDReq::clear_uicmd() {
  uicmd_ = 0u;
}
inline ::google::protobuf::uint32 ControlCMDReq::uicmd() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDReq.uiCMD)
  return uicmd_;
}
inline void ControlCMDReq::set_uicmd(::google::protobuf::uint32 value) {
  
  uicmd_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDReq.uiCMD)
}

// optional string strCMDMsg = 2;
inline void ControlCMDReq::clear_strcmdmsg() {
  strcmdmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControlCMDReq::strcmdmsg() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
  return strcmdmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlCMDReq::set_strcmdmsg(const ::std::string& value) {
  
  strcmdmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}
inline void ControlCMDReq::set_strcmdmsg(const char* value) {
  
  strcmdmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}
inline void ControlCMDReq::set_strcmdmsg(const char* value, size_t size) {
  
  strcmdmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}
inline ::std::string* ControlCMDReq::mutable_strcmdmsg() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
  return strcmdmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControlCMDReq::release_strcmdmsg() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
  
  return strcmdmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlCMDReq::set_allocated_strcmdmsg(::std::string* strcmdmsg) {
  if (strcmdmsg != NULL) {
    
  } else {
    
  }
  strcmdmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcmdmsg);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}

// optional bool blNeedActiveReporting = 3;
inline void ControlCMDReq::clear_blneedactivereporting() {
  blneedactivereporting_ = false;
}
inline bool ControlCMDReq::blneedactivereporting() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDReq.blNeedActiveReporting)
  return blneedactivereporting_;
}
inline void ControlCMDReq::set_blneedactivereporting(bool value) {
  
  blneedactivereporting_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDReq.blNeedActiveReporting)
}

inline const ControlCMDReq* ControlCMDReq::internal_default_instance() {
  return &ControlCMDReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ControlCMDRsp

// optional uint32 uiCMD = 1;
inline void ControlCMDRsp::clear_uicmd() {
  uicmd_ = 0u;
}
inline ::google::protobuf::uint32 ControlCMDRsp::uicmd() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDRsp.uiCMD)
  return uicmd_;
}
inline void ControlCMDRsp::set_uicmd(::google::protobuf::uint32 value) {
  
  uicmd_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDRsp.uiCMD)
}

// optional bool blNeedActiveReporting = 2;
inline void ControlCMDRsp::clear_blneedactivereporting() {
  blneedactivereporting_ = false;
}
inline bool ControlCMDRsp::blneedactivereporting() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDRsp.blNeedActiveReporting)
  return blneedactivereporting_;
}
inline void ControlCMDRsp::set_blneedactivereporting(bool value) {
  
  blneedactivereporting_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDRsp.blNeedActiveReporting)
}

inline const ControlCMDRsp* ControlCMDRsp::internal_default_instance() {
  return &ControlCMDRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// FullSyncReq

// optional string strValue = 1;
inline void FullSyncReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FullSyncReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullSyncReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FullSyncReq.strValue)
}
inline void FullSyncReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FullSyncReq.strValue)
}
inline void FullSyncReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FullSyncReq.strValue)
}
inline ::std::string* FullSyncReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FullSyncReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FullSyncReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FullSyncReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullSyncReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FullSyncReq.strValue)
}

inline const FullSyncReq* FullSyncReq::internal_default_instance() {
  return &FullSyncReq_default_instance_.get();
}
// -------------------------------------------------------------------

// FullSyncRsp

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
inline int FullSyncRsp::fileinfolist_size() const {
  return fileinfolist_.size();
}
inline void FullSyncRsp::clear_fileinfolist() {
  fileinfolist_.Clear();
}
inline const ::TDFS::MESSAGE::FileInfo& FullSyncRsp::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_.Get(index);
}
inline ::TDFS::MESSAGE::FileInfo* FullSyncRsp::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_.Mutable(index);
}
inline ::TDFS::MESSAGE::FileInfo* FullSyncRsp::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
FullSyncRsp::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return &fileinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
FullSyncRsp::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_;
}

inline const FullSyncRsp* FullSyncRsp::internal_default_instance() {
  return &FullSyncRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// FullSyncConform

// optional uint32 uiFlag = 1;
inline void FullSyncConform::clear_uiflag() {
  uiflag_ = 0u;
}
inline ::google::protobuf::uint32 FullSyncConform::uiflag() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncConform.uiFlag)
  return uiflag_;
}
inline void FullSyncConform::set_uiflag(::google::protobuf::uint32 value) {
  
  uiflag_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FullSyncConform.uiFlag)
}

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
inline int FullSyncConform::fileinfolist_size() const {
  return fileinfolist_.size();
}
inline void FullSyncConform::clear_fileinfolist() {
  fileinfolist_.Clear();
}
inline const ::TDFS::MESSAGE::FileInfo& FullSyncConform::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_.Get(index);
}
inline ::TDFS::MESSAGE::FileInfo* FullSyncConform::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_.Mutable(index);
}
inline ::TDFS::MESSAGE::FileInfo* FullSyncConform::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
FullSyncConform::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return &fileinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
FullSyncConform::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_;
}

inline const FullSyncConform* FullSyncConform::internal_default_instance() {
  return &FullSyncConform_default_instance_.get();
}
// -------------------------------------------------------------------

// ActiveReportingReq

// optional uint32 uiTotal = 1;
inline void ActiveReportingReq::clear_uitotal() {
  uitotal_ = 0u;
}
inline ::google::protobuf::uint32 ActiveReportingReq::uitotal() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingReq.uiTotal)
  return uitotal_;
}
inline void ActiveReportingReq::set_uitotal(::google::protobuf::uint32 value) {
  
  uitotal_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ActiveReportingReq.uiTotal)
}

// optional uint32 uiCurrentCompleted = 2;
inline void ActiveReportingReq::clear_uicurrentcompleted() {
  uicurrentcompleted_ = 0u;
}
inline ::google::protobuf::uint32 ActiveReportingReq::uicurrentcompleted() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingReq.uiCurrentCompleted)
  return uicurrentcompleted_;
}
inline void ActiveReportingReq::set_uicurrentcompleted(::google::protobuf::uint32 value) {
  
  uicurrentcompleted_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ActiveReportingReq.uiCurrentCompleted)
}

// optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
inline bool ActiveReportingReq::has_currentcompletedfileinfo() const {
  return this != internal_default_instance() && currentcompletedfileinfo_ != NULL;
}
inline void ActiveReportingReq::clear_currentcompletedfileinfo() {
  if (GetArenaNoVirtual() == NULL && currentcompletedfileinfo_ != NULL) delete currentcompletedfileinfo_;
  currentcompletedfileinfo_ = NULL;
}
inline const ::TDFS::MESSAGE::FileInfo& ActiveReportingReq::currentcompletedfileinfo() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
  return currentcompletedfileinfo_ != NULL ? *currentcompletedfileinfo_
                         : *::TDFS::MESSAGE::FileInfo::internal_default_instance();
}
inline ::TDFS::MESSAGE::FileInfo* ActiveReportingReq::mutable_currentcompletedfileinfo() {
  
  if (currentcompletedfileinfo_ == NULL) {
    currentcompletedfileinfo_ = new ::TDFS::MESSAGE::FileInfo;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
  return currentcompletedfileinfo_;
}
inline ::TDFS::MESSAGE::FileInfo* ActiveReportingReq::release_currentcompletedfileinfo() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
  
  ::TDFS::MESSAGE::FileInfo* temp = currentcompletedfileinfo_;
  currentcompletedfileinfo_ = NULL;
  return temp;
}
inline void ActiveReportingReq::set_allocated_currentcompletedfileinfo(::TDFS::MESSAGE::FileInfo* currentcompletedfileinfo) {
  delete currentcompletedfileinfo_;
  currentcompletedfileinfo_ = currentcompletedfileinfo;
  if (currentcompletedfileinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
}

inline const ActiveReportingReq* ActiveReportingReq::internal_default_instance() {
  return &ActiveReportingReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ActiveReportingRsp

// optional string strValue = 1;
inline void ActiveReportingRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveReportingRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingRsp.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveReportingRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}
inline void ActiveReportingRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}
inline void ActiveReportingRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}
inline ::std::string* ActiveReportingRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ActiveReportingRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveReportingRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ActiveReportingRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveReportingRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}

inline const ActiveReportingRsp* ActiveReportingRsp::internal_default_instance() {
  return &ActiveReportingRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// Req

// optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
inline bool Req::has_loginreqvalue() const {
  return this != internal_default_instance() && loginreqvalue_ != NULL;
}
inline void Req::clear_loginreqvalue() {
  if (GetArenaNoVirtual() == NULL && loginreqvalue_ != NULL) delete loginreqvalue_;
  loginreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::LoginReq& Req::loginreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.LoginReqValue)
  return loginreqvalue_ != NULL ? *loginreqvalue_
                         : *::TDFS::MESSAGE::LoginReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::LoginReq* Req::mutable_loginreqvalue() {
  
  if (loginreqvalue_ == NULL) {
    loginreqvalue_ = new ::TDFS::MESSAGE::LoginReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.LoginReqValue)
  return loginreqvalue_;
}
inline ::TDFS::MESSAGE::LoginReq* Req::release_loginreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.LoginReqValue)
  
  ::TDFS::MESSAGE::LoginReq* temp = loginreqvalue_;
  loginreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_loginreqvalue(::TDFS::MESSAGE::LoginReq* loginreqvalue) {
  delete loginreqvalue_;
  loginreqvalue_ = loginreqvalue;
  if (loginreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.LoginReqValue)
}

// optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
inline bool Req::has_loginoutreqvalue() const {
  return this != internal_default_instance() && loginoutreqvalue_ != NULL;
}
inline void Req::clear_loginoutreqvalue() {
  if (GetArenaNoVirtual() == NULL && loginoutreqvalue_ != NULL) delete loginoutreqvalue_;
  loginoutreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::LoginoutReq& Req::loginoutreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.LoginoutReqValue)
  return loginoutreqvalue_ != NULL ? *loginoutreqvalue_
                         : *::TDFS::MESSAGE::LoginoutReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::LoginoutReq* Req::mutable_loginoutreqvalue() {
  
  if (loginoutreqvalue_ == NULL) {
    loginoutreqvalue_ = new ::TDFS::MESSAGE::LoginoutReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.LoginoutReqValue)
  return loginoutreqvalue_;
}
inline ::TDFS::MESSAGE::LoginoutReq* Req::release_loginoutreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.LoginoutReqValue)
  
  ::TDFS::MESSAGE::LoginoutReq* temp = loginoutreqvalue_;
  loginoutreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_loginoutreqvalue(::TDFS::MESSAGE::LoginoutReq* loginoutreqvalue) {
  delete loginoutreqvalue_;
  loginoutreqvalue_ = loginoutreqvalue;
  if (loginoutreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.LoginoutReqValue)
}

// optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
inline bool Req::has_configinforeqvalue() const {
  return this != internal_default_instance() && configinforeqvalue_ != NULL;
}
inline void Req::clear_configinforeqvalue() {
  if (GetArenaNoVirtual() == NULL && configinforeqvalue_ != NULL) delete configinforeqvalue_;
  configinforeqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ConfigInfoReq& Req::configinforeqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ConfigInfoReqValue)
  return configinforeqvalue_ != NULL ? *configinforeqvalue_
                         : *::TDFS::MESSAGE::ConfigInfoReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::ConfigInfoReq* Req::mutable_configinforeqvalue() {
  
  if (configinforeqvalue_ == NULL) {
    configinforeqvalue_ = new ::TDFS::MESSAGE::ConfigInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ConfigInfoReqValue)
  return configinforeqvalue_;
}
inline ::TDFS::MESSAGE::ConfigInfoReq* Req::release_configinforeqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ConfigInfoReqValue)
  
  ::TDFS::MESSAGE::ConfigInfoReq* temp = configinforeqvalue_;
  configinforeqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_configinforeqvalue(::TDFS::MESSAGE::ConfigInfoReq* configinforeqvalue) {
  delete configinforeqvalue_;
  configinforeqvalue_ = configinforeqvalue;
  if (configinforeqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ConfigInfoReqValue)
}

// optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
inline bool Req::has_shakehandreqvalue() const {
  return this != internal_default_instance() && shakehandreqvalue_ != NULL;
}
inline void Req::clear_shakehandreqvalue() {
  if (GetArenaNoVirtual() == NULL && shakehandreqvalue_ != NULL) delete shakehandreqvalue_;
  shakehandreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ShakehandReq& Req::shakehandreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ShakehandReqValue)
  return shakehandreqvalue_ != NULL ? *shakehandreqvalue_
                         : *::TDFS::MESSAGE::ShakehandReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::ShakehandReq* Req::mutable_shakehandreqvalue() {
  
  if (shakehandreqvalue_ == NULL) {
    shakehandreqvalue_ = new ::TDFS::MESSAGE::ShakehandReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ShakehandReqValue)
  return shakehandreqvalue_;
}
inline ::TDFS::MESSAGE::ShakehandReq* Req::release_shakehandreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ShakehandReqValue)
  
  ::TDFS::MESSAGE::ShakehandReq* temp = shakehandreqvalue_;
  shakehandreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_shakehandreqvalue(::TDFS::MESSAGE::ShakehandReq* shakehandreqvalue) {
  delete shakehandreqvalue_;
  shakehandreqvalue_ = shakehandreqvalue;
  if (shakehandreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ShakehandReqValue)
}

// optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
inline bool Req::has_getsyncaddressreqvalue() const {
  return this != internal_default_instance() && getsyncaddressreqvalue_ != NULL;
}
inline void Req::clear_getsyncaddressreqvalue() {
  if (GetArenaNoVirtual() == NULL && getsyncaddressreqvalue_ != NULL) delete getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::GetSyncAddressReq& Req::getsyncaddressreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
  return getsyncaddressreqvalue_ != NULL ? *getsyncaddressreqvalue_
                         : *::TDFS::MESSAGE::GetSyncAddressReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::GetSyncAddressReq* Req::mutable_getsyncaddressreqvalue() {
  
  if (getsyncaddressreqvalue_ == NULL) {
    getsyncaddressreqvalue_ = new ::TDFS::MESSAGE::GetSyncAddressReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
  return getsyncaddressreqvalue_;
}
inline ::TDFS::MESSAGE::GetSyncAddressReq* Req::release_getsyncaddressreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
  
  ::TDFS::MESSAGE::GetSyncAddressReq* temp = getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_getsyncaddressreqvalue(::TDFS::MESSAGE::GetSyncAddressReq* getsyncaddressreqvalue) {
  delete getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = getsyncaddressreqvalue;
  if (getsyncaddressreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
}

// optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
inline bool Req::has_syncfilelistpendingreqvalue() const {
  return this != internal_default_instance() && syncfilelistpendingreqvalue_ != NULL;
}
inline void Req::clear_syncfilelistpendingreqvalue() {
  if (GetArenaNoVirtual() == NULL && syncfilelistpendingreqvalue_ != NULL) delete syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::SyncFileListPendingReq& Req::syncfilelistpendingreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
  return syncfilelistpendingreqvalue_ != NULL ? *syncfilelistpendingreqvalue_
                         : *::TDFS::MESSAGE::SyncFileListPendingReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::SyncFileListPendingReq* Req::mutable_syncfilelistpendingreqvalue() {
  
  if (syncfilelistpendingreqvalue_ == NULL) {
    syncfilelistpendingreqvalue_ = new ::TDFS::MESSAGE::SyncFileListPendingReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
  return syncfilelistpendingreqvalue_;
}
inline ::TDFS::MESSAGE::SyncFileListPendingReq* Req::release_syncfilelistpendingreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
  
  ::TDFS::MESSAGE::SyncFileListPendingReq* temp = syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_syncfilelistpendingreqvalue(::TDFS::MESSAGE::SyncFileListPendingReq* syncfilelistpendingreqvalue) {
  delete syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = syncfilelistpendingreqvalue;
  if (syncfilelistpendingreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
}

// optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
inline bool Req::has_controlcmdreqvalue() const {
  return this != internal_default_instance() && controlcmdreqvalue_ != NULL;
}
inline void Req::clear_controlcmdreqvalue() {
  if (GetArenaNoVirtual() == NULL && controlcmdreqvalue_ != NULL) delete controlcmdreqvalue_;
  controlcmdreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ControlCMDReq& Req::controlcmdreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ControlCMDReqValue)
  return controlcmdreqvalue_ != NULL ? *controlcmdreqvalue_
                         : *::TDFS::MESSAGE::ControlCMDReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::ControlCMDReq* Req::mutable_controlcmdreqvalue() {
  
  if (controlcmdreqvalue_ == NULL) {
    controlcmdreqvalue_ = new ::TDFS::MESSAGE::ControlCMDReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ControlCMDReqValue)
  return controlcmdreqvalue_;
}
inline ::TDFS::MESSAGE::ControlCMDReq* Req::release_controlcmdreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ControlCMDReqValue)
  
  ::TDFS::MESSAGE::ControlCMDReq* temp = controlcmdreqvalue_;
  controlcmdreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_controlcmdreqvalue(::TDFS::MESSAGE::ControlCMDReq* controlcmdreqvalue) {
  delete controlcmdreqvalue_;
  controlcmdreqvalue_ = controlcmdreqvalue;
  if (controlcmdreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ControlCMDReqValue)
}

// optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
inline bool Req::has_getfileinforeqvalue() const {
  return this != internal_default_instance() && getfileinforeqvalue_ != NULL;
}
inline void Req::clear_getfileinforeqvalue() {
  if (GetArenaNoVirtual() == NULL && getfileinforeqvalue_ != NULL) delete getfileinforeqvalue_;
  getfileinforeqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::GetFileInfoReq& Req::getfileinforeqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.GetFileInfoReqValue)
  return getfileinforeqvalue_ != NULL ? *getfileinforeqvalue_
                         : *::TDFS::MESSAGE::GetFileInfoReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::GetFileInfoReq* Req::mutable_getfileinforeqvalue() {
  
  if (getfileinforeqvalue_ == NULL) {
    getfileinforeqvalue_ = new ::TDFS::MESSAGE::GetFileInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.GetFileInfoReqValue)
  return getfileinforeqvalue_;
}
inline ::TDFS::MESSAGE::GetFileInfoReq* Req::release_getfileinforeqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.GetFileInfoReqValue)
  
  ::TDFS::MESSAGE::GetFileInfoReq* temp = getfileinforeqvalue_;
  getfileinforeqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_getfileinforeqvalue(::TDFS::MESSAGE::GetFileInfoReq* getfileinforeqvalue) {
  delete getfileinforeqvalue_;
  getfileinforeqvalue_ = getfileinforeqvalue;
  if (getfileinforeqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.GetFileInfoReqValue)
}

// optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
inline bool Req::has_fullsyncreqvalue() const {
  return this != internal_default_instance() && fullsyncreqvalue_ != NULL;
}
inline void Req::clear_fullsyncreqvalue() {
  if (GetArenaNoVirtual() == NULL && fullsyncreqvalue_ != NULL) delete fullsyncreqvalue_;
  fullsyncreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::FullSyncReq& Req::fullsyncreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.FullSyncReqValue)
  return fullsyncreqvalue_ != NULL ? *fullsyncreqvalue_
                         : *::TDFS::MESSAGE::FullSyncReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::FullSyncReq* Req::mutable_fullsyncreqvalue() {
  
  if (fullsyncreqvalue_ == NULL) {
    fullsyncreqvalue_ = new ::TDFS::MESSAGE::FullSyncReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.FullSyncReqValue)
  return fullsyncreqvalue_;
}
inline ::TDFS::MESSAGE::FullSyncReq* Req::release_fullsyncreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.FullSyncReqValue)
  
  ::TDFS::MESSAGE::FullSyncReq* temp = fullsyncreqvalue_;
  fullsyncreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_fullsyncreqvalue(::TDFS::MESSAGE::FullSyncReq* fullsyncreqvalue) {
  delete fullsyncreqvalue_;
  fullsyncreqvalue_ = fullsyncreqvalue;
  if (fullsyncreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.FullSyncReqValue)
}

// optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
inline bool Req::has_fullsyncconformvalue() const {
  return this != internal_default_instance() && fullsyncconformvalue_ != NULL;
}
inline void Req::clear_fullsyncconformvalue() {
  if (GetArenaNoVirtual() == NULL && fullsyncconformvalue_ != NULL) delete fullsyncconformvalue_;
  fullsyncconformvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::FullSyncConform& Req::fullsyncconformvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.FullSyncConformValue)
  return fullsyncconformvalue_ != NULL ? *fullsyncconformvalue_
                         : *::TDFS::MESSAGE::FullSyncConform::internal_default_instance();
}
inline ::TDFS::MESSAGE::FullSyncConform* Req::mutable_fullsyncconformvalue() {
  
  if (fullsyncconformvalue_ == NULL) {
    fullsyncconformvalue_ = new ::TDFS::MESSAGE::FullSyncConform;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.FullSyncConformValue)
  return fullsyncconformvalue_;
}
inline ::TDFS::MESSAGE::FullSyncConform* Req::release_fullsyncconformvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.FullSyncConformValue)
  
  ::TDFS::MESSAGE::FullSyncConform* temp = fullsyncconformvalue_;
  fullsyncconformvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_fullsyncconformvalue(::TDFS::MESSAGE::FullSyncConform* fullsyncconformvalue) {
  delete fullsyncconformvalue_;
  fullsyncconformvalue_ = fullsyncconformvalue;
  if (fullsyncconformvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.FullSyncConformValue)
}

// optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
inline bool Req::has_activereportingreqvalue() const {
  return this != internal_default_instance() && activereportingreqvalue_ != NULL;
}
inline void Req::clear_activereportingreqvalue() {
  if (GetArenaNoVirtual() == NULL && activereportingreqvalue_ != NULL) delete activereportingreqvalue_;
  activereportingreqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ActiveReportingReq& Req::activereportingreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ActiveReportingReqValue)
  return activereportingreqvalue_ != NULL ? *activereportingreqvalue_
                         : *::TDFS::MESSAGE::ActiveReportingReq::internal_default_instance();
}
inline ::TDFS::MESSAGE::ActiveReportingReq* Req::mutable_activereportingreqvalue() {
  
  if (activereportingreqvalue_ == NULL) {
    activereportingreqvalue_ = new ::TDFS::MESSAGE::ActiveReportingReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ActiveReportingReqValue)
  return activereportingreqvalue_;
}
inline ::TDFS::MESSAGE::ActiveReportingReq* Req::release_activereportingreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ActiveReportingReqValue)
  
  ::TDFS::MESSAGE::ActiveReportingReq* temp = activereportingreqvalue_;
  activereportingreqvalue_ = NULL;
  return temp;
}
inline void Req::set_allocated_activereportingreqvalue(::TDFS::MESSAGE::ActiveReportingReq* activereportingreqvalue) {
  delete activereportingreqvalue_;
  activereportingreqvalue_ = activereportingreqvalue;
  if (activereportingreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ActiveReportingReqValue)
}

inline const Req* Req::internal_default_instance() {
  return &Req_default_instance_.get();
}
// -------------------------------------------------------------------

// Rsp

// optional int32 iRetcode = 1;
inline void Rsp::clear_iretcode() {
  iretcode_ = 0;
}
inline ::google::protobuf::int32 Rsp::iretcode() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.iRetcode)
  return iretcode_;
}
inline void Rsp::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Rsp.iRetcode)
}

// optional string strRetMsg = 2;
inline void Rsp::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rsp::strretmsg() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.strRetMsg)
  return strretmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rsp::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Rsp.strRetMsg)
}
inline void Rsp::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Rsp.strRetMsg)
}
inline void Rsp::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Rsp.strRetMsg)
}
inline ::std::string* Rsp::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rsp::release_strretmsg() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rsp::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.strRetMsg)
}

// optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
inline bool Rsp::has_loginrspvalue() const {
  return this != internal_default_instance() && loginrspvalue_ != NULL;
}
inline void Rsp::clear_loginrspvalue() {
  if (GetArenaNoVirtual() == NULL && loginrspvalue_ != NULL) delete loginrspvalue_;
  loginrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::LoginRsp& Rsp::loginrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.LoginRspValue)
  return loginrspvalue_ != NULL ? *loginrspvalue_
                         : *::TDFS::MESSAGE::LoginRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::LoginRsp* Rsp::mutable_loginrspvalue() {
  
  if (loginrspvalue_ == NULL) {
    loginrspvalue_ = new ::TDFS::MESSAGE::LoginRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.LoginRspValue)
  return loginrspvalue_;
}
inline ::TDFS::MESSAGE::LoginRsp* Rsp::release_loginrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.LoginRspValue)
  
  ::TDFS::MESSAGE::LoginRsp* temp = loginrspvalue_;
  loginrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_loginrspvalue(::TDFS::MESSAGE::LoginRsp* loginrspvalue) {
  delete loginrspvalue_;
  loginrspvalue_ = loginrspvalue;
  if (loginrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.LoginRspValue)
}

// optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
inline bool Rsp::has_loginoutrspvalue() const {
  return this != internal_default_instance() && loginoutrspvalue_ != NULL;
}
inline void Rsp::clear_loginoutrspvalue() {
  if (GetArenaNoVirtual() == NULL && loginoutrspvalue_ != NULL) delete loginoutrspvalue_;
  loginoutrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::LoginoutRsp& Rsp::loginoutrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.LoginoutRspValue)
  return loginoutrspvalue_ != NULL ? *loginoutrspvalue_
                         : *::TDFS::MESSAGE::LoginoutRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::LoginoutRsp* Rsp::mutable_loginoutrspvalue() {
  
  if (loginoutrspvalue_ == NULL) {
    loginoutrspvalue_ = new ::TDFS::MESSAGE::LoginoutRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.LoginoutRspValue)
  return loginoutrspvalue_;
}
inline ::TDFS::MESSAGE::LoginoutRsp* Rsp::release_loginoutrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.LoginoutRspValue)
  
  ::TDFS::MESSAGE::LoginoutRsp* temp = loginoutrspvalue_;
  loginoutrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_loginoutrspvalue(::TDFS::MESSAGE::LoginoutRsp* loginoutrspvalue) {
  delete loginoutrspvalue_;
  loginoutrspvalue_ = loginoutrspvalue;
  if (loginoutrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.LoginoutRspValue)
}

// optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
inline bool Rsp::has_configinforspvalue() const {
  return this != internal_default_instance() && configinforspvalue_ != NULL;
}
inline void Rsp::clear_configinforspvalue() {
  if (GetArenaNoVirtual() == NULL && configinforspvalue_ != NULL) delete configinforspvalue_;
  configinforspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ConfigInfoRsp& Rsp::configinforspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
  return configinforspvalue_ != NULL ? *configinforspvalue_
                         : *::TDFS::MESSAGE::ConfigInfoRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::ConfigInfoRsp* Rsp::mutable_configinforspvalue() {
  
  if (configinforspvalue_ == NULL) {
    configinforspvalue_ = new ::TDFS::MESSAGE::ConfigInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
  return configinforspvalue_;
}
inline ::TDFS::MESSAGE::ConfigInfoRsp* Rsp::release_configinforspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
  
  ::TDFS::MESSAGE::ConfigInfoRsp* temp = configinforspvalue_;
  configinforspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_configinforspvalue(::TDFS::MESSAGE::ConfigInfoRsp* configinforspvalue) {
  delete configinforspvalue_;
  configinforspvalue_ = configinforspvalue;
  if (configinforspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
}

// optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
inline bool Rsp::has_shakehandrspvalue() const {
  return this != internal_default_instance() && shakehandrspvalue_ != NULL;
}
inline void Rsp::clear_shakehandrspvalue() {
  if (GetArenaNoVirtual() == NULL && shakehandrspvalue_ != NULL) delete shakehandrspvalue_;
  shakehandrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ShakehandRsp& Rsp::shakehandrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ShakehandRspValue)
  return shakehandrspvalue_ != NULL ? *shakehandrspvalue_
                         : *::TDFS::MESSAGE::ShakehandRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::ShakehandRsp* Rsp::mutable_shakehandrspvalue() {
  
  if (shakehandrspvalue_ == NULL) {
    shakehandrspvalue_ = new ::TDFS::MESSAGE::ShakehandRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ShakehandRspValue)
  return shakehandrspvalue_;
}
inline ::TDFS::MESSAGE::ShakehandRsp* Rsp::release_shakehandrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ShakehandRspValue)
  
  ::TDFS::MESSAGE::ShakehandRsp* temp = shakehandrspvalue_;
  shakehandrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_shakehandrspvalue(::TDFS::MESSAGE::ShakehandRsp* shakehandrspvalue) {
  delete shakehandrspvalue_;
  shakehandrspvalue_ = shakehandrspvalue;
  if (shakehandrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ShakehandRspValue)
}

// optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
inline bool Rsp::has_getsyncaddressrspvalue() const {
  return this != internal_default_instance() && getsyncaddressrspvalue_ != NULL;
}
inline void Rsp::clear_getsyncaddressrspvalue() {
  if (GetArenaNoVirtual() == NULL && getsyncaddressrspvalue_ != NULL) delete getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::GetSyncAddressRsp& Rsp::getsyncaddressrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
  return getsyncaddressrspvalue_ != NULL ? *getsyncaddressrspvalue_
                         : *::TDFS::MESSAGE::GetSyncAddressRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::GetSyncAddressRsp* Rsp::mutable_getsyncaddressrspvalue() {
  
  if (getsyncaddressrspvalue_ == NULL) {
    getsyncaddressrspvalue_ = new ::TDFS::MESSAGE::GetSyncAddressRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
  return getsyncaddressrspvalue_;
}
inline ::TDFS::MESSAGE::GetSyncAddressRsp* Rsp::release_getsyncaddressrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
  
  ::TDFS::MESSAGE::GetSyncAddressRsp* temp = getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_getsyncaddressrspvalue(::TDFS::MESSAGE::GetSyncAddressRsp* getsyncaddressrspvalue) {
  delete getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = getsyncaddressrspvalue;
  if (getsyncaddressrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
}

// optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
inline bool Rsp::has_syncfilelistpendingrspvalue() const {
  return this != internal_default_instance() && syncfilelistpendingrspvalue_ != NULL;
}
inline void Rsp::clear_syncfilelistpendingrspvalue() {
  if (GetArenaNoVirtual() == NULL && syncfilelistpendingrspvalue_ != NULL) delete syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::SyncFileListPendingRsp& Rsp::syncfilelistpendingrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
  return syncfilelistpendingrspvalue_ != NULL ? *syncfilelistpendingrspvalue_
                         : *::TDFS::MESSAGE::SyncFileListPendingRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::SyncFileListPendingRsp* Rsp::mutable_syncfilelistpendingrspvalue() {
  
  if (syncfilelistpendingrspvalue_ == NULL) {
    syncfilelistpendingrspvalue_ = new ::TDFS::MESSAGE::SyncFileListPendingRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
  return syncfilelistpendingrspvalue_;
}
inline ::TDFS::MESSAGE::SyncFileListPendingRsp* Rsp::release_syncfilelistpendingrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
  
  ::TDFS::MESSAGE::SyncFileListPendingRsp* temp = syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_syncfilelistpendingrspvalue(::TDFS::MESSAGE::SyncFileListPendingRsp* syncfilelistpendingrspvalue) {
  delete syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = syncfilelistpendingrspvalue;
  if (syncfilelistpendingrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
}

// optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
inline bool Rsp::has_controlcmdrspvalue() const {
  return this != internal_default_instance() && controlcmdrspvalue_ != NULL;
}
inline void Rsp::clear_controlcmdrspvalue() {
  if (GetArenaNoVirtual() == NULL && controlcmdrspvalue_ != NULL) delete controlcmdrspvalue_;
  controlcmdrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ControlCMDRsp& Rsp::controlcmdrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
  return controlcmdrspvalue_ != NULL ? *controlcmdrspvalue_
                         : *::TDFS::MESSAGE::ControlCMDRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::ControlCMDRsp* Rsp::mutable_controlcmdrspvalue() {
  
  if (controlcmdrspvalue_ == NULL) {
    controlcmdrspvalue_ = new ::TDFS::MESSAGE::ControlCMDRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
  return controlcmdrspvalue_;
}
inline ::TDFS::MESSAGE::ControlCMDRsp* Rsp::release_controlcmdrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
  
  ::TDFS::MESSAGE::ControlCMDRsp* temp = controlcmdrspvalue_;
  controlcmdrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_controlcmdrspvalue(::TDFS::MESSAGE::ControlCMDRsp* controlcmdrspvalue) {
  delete controlcmdrspvalue_;
  controlcmdrspvalue_ = controlcmdrspvalue;
  if (controlcmdrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
}

// optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
inline bool Rsp::has_getfileinforspvalue() const {
  return this != internal_default_instance() && getfileinforspvalue_ != NULL;
}
inline void Rsp::clear_getfileinforspvalue() {
  if (GetArenaNoVirtual() == NULL && getfileinforspvalue_ != NULL) delete getfileinforspvalue_;
  getfileinforspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::GetFileInfoRsp& Rsp::getfileinforspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
  return getfileinforspvalue_ != NULL ? *getfileinforspvalue_
                         : *::TDFS::MESSAGE::GetFileInfoRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::GetFileInfoRsp* Rsp::mutable_getfileinforspvalue() {
  
  if (getfileinforspvalue_ == NULL) {
    getfileinforspvalue_ = new ::TDFS::MESSAGE::GetFileInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
  return getfileinforspvalue_;
}
inline ::TDFS::MESSAGE::GetFileInfoRsp* Rsp::release_getfileinforspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
  
  ::TDFS::MESSAGE::GetFileInfoRsp* temp = getfileinforspvalue_;
  getfileinforspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_getfileinforspvalue(::TDFS::MESSAGE::GetFileInfoRsp* getfileinforspvalue) {
  delete getfileinforspvalue_;
  getfileinforspvalue_ = getfileinforspvalue;
  if (getfileinforspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
}

// optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
inline bool Rsp::has_fullsyncrspvalue() const {
  return this != internal_default_instance() && fullsyncrspvalue_ != NULL;
}
inline void Rsp::clear_fullsyncrspvalue() {
  if (GetArenaNoVirtual() == NULL && fullsyncrspvalue_ != NULL) delete fullsyncrspvalue_;
  fullsyncrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::FullSyncRsp& Rsp::fullsyncrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.FullSyncRspValue)
  return fullsyncrspvalue_ != NULL ? *fullsyncrspvalue_
                         : *::TDFS::MESSAGE::FullSyncRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::FullSyncRsp* Rsp::mutable_fullsyncrspvalue() {
  
  if (fullsyncrspvalue_ == NULL) {
    fullsyncrspvalue_ = new ::TDFS::MESSAGE::FullSyncRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.FullSyncRspValue)
  return fullsyncrspvalue_;
}
inline ::TDFS::MESSAGE::FullSyncRsp* Rsp::release_fullsyncrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.FullSyncRspValue)
  
  ::TDFS::MESSAGE::FullSyncRsp* temp = fullsyncrspvalue_;
  fullsyncrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_fullsyncrspvalue(::TDFS::MESSAGE::FullSyncRsp* fullsyncrspvalue) {
  delete fullsyncrspvalue_;
  fullsyncrspvalue_ = fullsyncrspvalue;
  if (fullsyncrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.FullSyncRspValue)
}

// optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
inline bool Rsp::has_activereportingrspvalue() const {
  return this != internal_default_instance() && activereportingrspvalue_ != NULL;
}
inline void Rsp::clear_activereportingrspvalue() {
  if (GetArenaNoVirtual() == NULL && activereportingrspvalue_ != NULL) delete activereportingrspvalue_;
  activereportingrspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::ActiveReportingRsp& Rsp::activereportingrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
  return activereportingrspvalue_ != NULL ? *activereportingrspvalue_
                         : *::TDFS::MESSAGE::ActiveReportingRsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::ActiveReportingRsp* Rsp::mutable_activereportingrspvalue() {
  
  if (activereportingrspvalue_ == NULL) {
    activereportingrspvalue_ = new ::TDFS::MESSAGE::ActiveReportingRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
  return activereportingrspvalue_;
}
inline ::TDFS::MESSAGE::ActiveReportingRsp* Rsp::release_activereportingrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
  
  ::TDFS::MESSAGE::ActiveReportingRsp* temp = activereportingrspvalue_;
  activereportingrspvalue_ = NULL;
  return temp;
}
inline void Rsp::set_allocated_activereportingrspvalue(::TDFS::MESSAGE::ActiveReportingRsp* activereportingrspvalue) {
  delete activereportingrspvalue_;
  activereportingrspvalue_ = activereportingrspvalue;
  if (activereportingrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
}

inline const Rsp* Rsp::internal_default_instance() {
  return &Rsp_default_instance_.get();
}
// -------------------------------------------------------------------

// SyncMessage

// optional .TDFS.MESSAGE.MsgType type = 1;
inline void SyncMessage::clear_type() {
  type_ = 0;
}
inline ::TDFS::MESSAGE::MsgType SyncMessage::type() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.type)
  return static_cast< ::TDFS::MESSAGE::MsgType >(type_);
}
inline void SyncMessage::set_type(::TDFS::MESSAGE::MsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.SyncMessage.type)
}

// optional uint64 uiMsgSeq = 2;
inline void SyncMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SyncMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.uiMsgSeq)
  return uimsgseq_;
}
inline void SyncMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.SyncMessage.uiMsgSeq)
}

// optional string strSID = 3;
inline void SyncMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncMessage::strsid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.strSID)
  return strsid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.SyncMessage.strSID)
}
inline void SyncMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.SyncMessage.strSID)
}
inline void SyncMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.SyncMessage.strSID)
}
inline ::std::string* SyncMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.SyncMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.SyncMessage.strSID)
}

// optional .TDFS.MESSAGE.Req ReqValue = 4;
inline bool SyncMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
inline void SyncMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::Req& SyncMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.ReqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::TDFS::MESSAGE::Req::internal_default_instance();
}
inline ::TDFS::MESSAGE::Req* SyncMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::TDFS::MESSAGE::Req;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncMessage.ReqValue)
  return reqvalue_;
}
inline ::TDFS::MESSAGE::Req* SyncMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.SyncMessage.ReqValue)
  
  ::TDFS::MESSAGE::Req* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
inline void SyncMessage::set_allocated_reqvalue(::TDFS::MESSAGE::Req* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.SyncMessage.ReqValue)
}

// optional .TDFS.MESSAGE.Rsp RspValue = 5;
inline bool SyncMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
inline void SyncMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
inline const ::TDFS::MESSAGE::Rsp& SyncMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.RspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::TDFS::MESSAGE::Rsp::internal_default_instance();
}
inline ::TDFS::MESSAGE::Rsp* SyncMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::TDFS::MESSAGE::Rsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncMessage.RspValue)
  return rspvalue_;
}
inline ::TDFS::MESSAGE::Rsp* SyncMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.SyncMessage.RspValue)
  
  ::TDFS::MESSAGE::Rsp* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
inline void SyncMessage::set_allocated_rspvalue(::TDFS::MESSAGE::Rsp* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.SyncMessage.RspValue)
}

inline const SyncMessage* SyncMessage::internal_default_instance() {
  return &SyncMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MESSAGE
}  // namespace TDFS

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TDFS::MESSAGE::Address_NodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TDFS::MESSAGE::Address_NodeType>() {
  return ::TDFS::MESSAGE::Address_NodeType_descriptor();
}
template <> struct is_proto_enum< ::TDFS::MESSAGE::MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TDFS::MESSAGE::MsgType>() {
  return ::TDFS::MESSAGE::MsgType_descriptor();
}
template <> struct is_proto_enum< ::TDFS::MESSAGE::SyncServiceStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TDFS::MESSAGE::SyncServiceStatus>() {
  return ::TDFS::MESSAGE::SyncServiceStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TDFS_2eproto__INCLUDED
