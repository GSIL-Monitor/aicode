// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InteractiveProtocolManagement.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InteractiveProtocolManagement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Management {
namespace Interactive {
namespace Message {
class ClusterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Cluster> {
} _Cluster_default_instance_;
class ClusterStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClusterStatus> {
} _ClusterStatus_default_instance_;
class AccessedDeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccessedDevice> {
} _AccessedDevice_default_instance_;
class AccessedUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccessedUser> {
} _AccessedUser_default_instance_;
class DeviceAccessRecordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceAccessRecord> {
} _DeviceAccessRecord_default_instance_;
class UserAccessRecordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserAccessRecord> {
} _UserAccessRecord_default_instance_;
class AddClusterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddClusterReq> {
} _AddClusterReq_default_instance_;
class AddClusterRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddClusterRsp> {
} _AddClusterRsp_default_instance_;
class DeleteClusterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterReq> {
} _DeleteClusterReq_default_instance_;
class DeleteClusterRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRsp> {
} _DeleteClusterRsp_default_instance_;
class ModifyClusterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyClusterReq> {
} _ModifyClusterReq_default_instance_;
class ModifyClusterRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyClusterRsp> {
} _ModifyClusterRsp_default_instance_;
class QueryClusterInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryClusterInfoReq> {
} _QueryClusterInfoReq_default_instance_;
class QueryClusterInfoRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryClusterInfoRsp> {
} _QueryClusterInfoRsp_default_instance_;
class ShakehandClusterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandClusterReq> {
} _ShakehandClusterReq_default_instance_;
class ShakehandClusterRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakehandClusterRsp> {
} _ShakehandClusterRsp_default_instance_;
class QueryAllClusterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAllClusterReq> {
} _QueryAllClusterReq_default_instance_;
class QueryAllClusterRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryAllClusterRsp> {
} _QueryAllClusterRsp_default_instance_;
class QueryClusterDeviceReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryClusterDeviceReq> {
} _QueryClusterDeviceReq_default_instance_;
class QueryClusterDeviceRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryClusterDeviceRsp> {
} _QueryClusterDeviceRsp_default_instance_;
class QueryClusterUserReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryClusterUserReq> {
} _QueryClusterUserReq_default_instance_;
class QueryClusterUserRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryClusterUserRsp> {
} _QueryClusterUserRsp_default_instance_;
class PushClusterDeviceReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PushClusterDeviceReq> {
} _PushClusterDeviceReq_default_instance_;
class PushClusterDeviceRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PushClusterDeviceRsp> {
} _PushClusterDeviceRsp_default_instance_;
class PushClusterUserReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PushClusterUserReq> {
} _PushClusterUserReq_default_instance_;
class PushClusterUserRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PushClusterUserRsp> {
} _PushClusterUserRsp_default_instance_;
class RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Request> {
} _Request_default_instance_;
class ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Response> {
} _Response_default_instance_;
class ManagementInteractiveMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ManagementInteractiveMessage> {
} _ManagementInteractiveMessage_default_instance_;

namespace protobuf_InteractiveProtocolManagement_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[29];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, strclusteraddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, strmanagementaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, straliasname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterStatus, clusterinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterStatus, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, strdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, strdevicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, uidevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, strlogintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, strlogouttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedDevice, uionlineduration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, struserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, struseraliasname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, uiclienttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, strlogintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, strlogouttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessedUser, uionlineduration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, straccessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, accesseddevice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceAccessRecord, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, straccessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, accesseduser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, strcreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAccessRecord, uistatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddClusterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddClusterReq, clusterinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddClusterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddClusterRsp, strclusterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterReq, strclusterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterRsp, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyClusterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyClusterReq, clusterinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyClusterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyClusterRsp, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterInfoReq, strclusterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterInfoRsp, clusterstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandClusterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandClusterReq, strclusterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandClusterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandClusterRsp, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllClusterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllClusterReq, strmanagementaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllClusterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllClusterRsp, clusterstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceReq, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceReq, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceReq, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceReq, uirecordtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceReq, uibeginindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterDeviceRsp, accesseddeviceinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserReq, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserReq, strbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserReq, strenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserReq, uirecordtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserReq, uibeginindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryClusterUserRsp, accesseduserinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterDeviceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterDeviceReq, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterDeviceReq, deviceaccessrecord_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterDeviceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterDeviceRsp, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterUserReq, strclusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterUserReq, useraccessrecord_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterUserRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushClusterUserRsp, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, addclusterreq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, deleteclusterreq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, modifyclusterreq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, queryclusterinforeq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, shakehandclusterreq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, queryallclusterreq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, queryclusterdevicereq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, queryclusteruserreq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, pushclusterdevicereq_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, pushclusteruserreq_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, iretcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, strretmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, addclusterrsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, deleteclusterrsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, modifyclusterrsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, queryclusterinforsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, shakehandclusterrsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, queryallclusterrsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, queryclusterdevicersp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, queryclusteruserrsp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, pushclusterdevicersp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, pushclusteruserrsp_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManagementInteractiveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManagementInteractiveMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManagementInteractiveMessage, uimsgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManagementInteractiveMessage, strsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManagementInteractiveMessage, reqvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManagementInteractiveMessage, rspvalue_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Cluster)},
  { 10, -1, sizeof(ClusterStatus)},
  { 16, -1, sizeof(AccessedDevice)},
  { 26, -1, sizeof(AccessedUser)},
  { 37, -1, sizeof(DeviceAccessRecord)},
  { 46, -1, sizeof(UserAccessRecord)},
  { 55, -1, sizeof(AddClusterReq)},
  { 60, -1, sizeof(AddClusterRsp)},
  { 65, -1, sizeof(DeleteClusterReq)},
  { 70, -1, sizeof(DeleteClusterRsp)},
  { 75, -1, sizeof(ModifyClusterReq)},
  { 80, -1, sizeof(ModifyClusterRsp)},
  { 85, -1, sizeof(QueryClusterInfoReq)},
  { 90, -1, sizeof(QueryClusterInfoRsp)},
  { 95, -1, sizeof(ShakehandClusterReq)},
  { 100, -1, sizeof(ShakehandClusterRsp)},
  { 105, -1, sizeof(QueryAllClusterReq)},
  { 110, -1, sizeof(QueryAllClusterRsp)},
  { 115, -1, sizeof(QueryClusterDeviceReq)},
  { 124, -1, sizeof(QueryClusterDeviceRsp)},
  { 129, -1, sizeof(QueryClusterUserReq)},
  { 138, -1, sizeof(QueryClusterUserRsp)},
  { 143, -1, sizeof(PushClusterDeviceReq)},
  { 149, -1, sizeof(PushClusterDeviceRsp)},
  { 154, -1, sizeof(PushClusterUserReq)},
  { 160, -1, sizeof(PushClusterUserRsp)},
  { 165, -1, sizeof(Request)},
  { 179, -1, sizeof(Response)},
  { 195, -1, sizeof(ManagementInteractiveMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccessedDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccessedUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceAccessRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserAccessRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddClusterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddClusterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteClusterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteClusterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyClusterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyClusterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryClusterInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryClusterInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandClusterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakehandClusterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAllClusterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryAllClusterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryClusterDeviceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryClusterDeviceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryClusterUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryClusterUserRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PushClusterDeviceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PushClusterDeviceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PushClusterUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PushClusterUserRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ManagementInteractiveMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "InteractiveProtocolManagement.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

}  // namespace

void TableStruct::Shutdown() {
  _Cluster_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ClusterStatus_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AccessedDevice_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AccessedUser_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _DeviceAccessRecord_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UserAccessRecord_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _AddClusterReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _AddClusterRsp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _DeleteClusterReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _DeleteClusterRsp_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ModifyClusterReq_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _ModifyClusterRsp_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _QueryClusterInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _QueryClusterInfoRsp_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _ShakehandClusterReq_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _ShakehandClusterRsp_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _QueryAllClusterReq_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _QueryAllClusterRsp_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _QueryClusterDeviceReq_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _QueryClusterDeviceRsp_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _QueryClusterUserReq_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _QueryClusterUserRsp_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _PushClusterDeviceReq_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _PushClusterDeviceRsp_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _PushClusterUserReq_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _PushClusterUserRsp_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _Request_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _Response_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _ManagementInteractiveMessage_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Cluster_default_instance_.DefaultConstruct();
  _ClusterStatus_default_instance_.DefaultConstruct();
  _AccessedDevice_default_instance_.DefaultConstruct();
  _AccessedUser_default_instance_.DefaultConstruct();
  _DeviceAccessRecord_default_instance_.DefaultConstruct();
  _UserAccessRecord_default_instance_.DefaultConstruct();
  _AddClusterReq_default_instance_.DefaultConstruct();
  _AddClusterRsp_default_instance_.DefaultConstruct();
  _DeleteClusterReq_default_instance_.DefaultConstruct();
  _DeleteClusterRsp_default_instance_.DefaultConstruct();
  _ModifyClusterReq_default_instance_.DefaultConstruct();
  _ModifyClusterRsp_default_instance_.DefaultConstruct();
  _QueryClusterInfoReq_default_instance_.DefaultConstruct();
  _QueryClusterInfoRsp_default_instance_.DefaultConstruct();
  _ShakehandClusterReq_default_instance_.DefaultConstruct();
  _ShakehandClusterRsp_default_instance_.DefaultConstruct();
  _QueryAllClusterReq_default_instance_.DefaultConstruct();
  _QueryAllClusterRsp_default_instance_.DefaultConstruct();
  _QueryClusterDeviceReq_default_instance_.DefaultConstruct();
  _QueryClusterDeviceRsp_default_instance_.DefaultConstruct();
  _QueryClusterUserReq_default_instance_.DefaultConstruct();
  _QueryClusterUserRsp_default_instance_.DefaultConstruct();
  _PushClusterDeviceReq_default_instance_.DefaultConstruct();
  _PushClusterDeviceRsp_default_instance_.DefaultConstruct();
  _PushClusterUserReq_default_instance_.DefaultConstruct();
  _PushClusterUserRsp_default_instance_.DefaultConstruct();
  _Request_default_instance_.DefaultConstruct();
  _Response_default_instance_.DefaultConstruct();
  _ManagementInteractiveMessage_default_instance_.DefaultConstruct();
  _ClusterStatus_default_instance_.get_mutable()->clusterinfo_ = const_cast< ::Management::Interactive::Message::Cluster*>(
      ::Management::Interactive::Message::Cluster::internal_default_instance());
  _DeviceAccessRecord_default_instance_.get_mutable()->accesseddevice_ = const_cast< ::Management::Interactive::Message::AccessedDevice*>(
      ::Management::Interactive::Message::AccessedDevice::internal_default_instance());
  _UserAccessRecord_default_instance_.get_mutable()->accesseduser_ = const_cast< ::Management::Interactive::Message::AccessedUser*>(
      ::Management::Interactive::Message::AccessedUser::internal_default_instance());
  _AddClusterReq_default_instance_.get_mutable()->clusterinfo_ = const_cast< ::Management::Interactive::Message::Cluster*>(
      ::Management::Interactive::Message::Cluster::internal_default_instance());
  _ModifyClusterReq_default_instance_.get_mutable()->clusterinfo_ = const_cast< ::Management::Interactive::Message::Cluster*>(
      ::Management::Interactive::Message::Cluster::internal_default_instance());
  _QueryClusterInfoRsp_default_instance_.get_mutable()->clusterstatus_ = const_cast< ::Management::Interactive::Message::ClusterStatus*>(
      ::Management::Interactive::Message::ClusterStatus::internal_default_instance());
  _Request_default_instance_.get_mutable()->addclusterreq_value_ = const_cast< ::Management::Interactive::Message::AddClusterReq*>(
      ::Management::Interactive::Message::AddClusterReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->deleteclusterreq_value_ = const_cast< ::Management::Interactive::Message::DeleteClusterReq*>(
      ::Management::Interactive::Message::DeleteClusterReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->modifyclusterreq_value_ = const_cast< ::Management::Interactive::Message::ModifyClusterReq*>(
      ::Management::Interactive::Message::ModifyClusterReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->queryclusterinforeq_value_ = const_cast< ::Management::Interactive::Message::QueryClusterInfoReq*>(
      ::Management::Interactive::Message::QueryClusterInfoReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->shakehandclusterreq_value_ = const_cast< ::Management::Interactive::Message::ShakehandClusterReq*>(
      ::Management::Interactive::Message::ShakehandClusterReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->queryallclusterreq_value_ = const_cast< ::Management::Interactive::Message::QueryAllClusterReq*>(
      ::Management::Interactive::Message::QueryAllClusterReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->queryclusterdevicereq_value_ = const_cast< ::Management::Interactive::Message::QueryClusterDeviceReq*>(
      ::Management::Interactive::Message::QueryClusterDeviceReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->queryclusteruserreq_value_ = const_cast< ::Management::Interactive::Message::QueryClusterUserReq*>(
      ::Management::Interactive::Message::QueryClusterUserReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->pushclusterdevicereq_value_ = const_cast< ::Management::Interactive::Message::PushClusterDeviceReq*>(
      ::Management::Interactive::Message::PushClusterDeviceReq::internal_default_instance());
  _Request_default_instance_.get_mutable()->pushclusteruserreq_value_ = const_cast< ::Management::Interactive::Message::PushClusterUserReq*>(
      ::Management::Interactive::Message::PushClusterUserReq::internal_default_instance());
  _Response_default_instance_.get_mutable()->addclusterrsp_value_ = const_cast< ::Management::Interactive::Message::AddClusterRsp*>(
      ::Management::Interactive::Message::AddClusterRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->deleteclusterrsp_value_ = const_cast< ::Management::Interactive::Message::DeleteClusterRsp*>(
      ::Management::Interactive::Message::DeleteClusterRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->modifyclusterrsp_value_ = const_cast< ::Management::Interactive::Message::ModifyClusterRsp*>(
      ::Management::Interactive::Message::ModifyClusterRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->queryclusterinforsp_value_ = const_cast< ::Management::Interactive::Message::QueryClusterInfoRsp*>(
      ::Management::Interactive::Message::QueryClusterInfoRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->shakehandclusterrsp_value_ = const_cast< ::Management::Interactive::Message::ShakehandClusterRsp*>(
      ::Management::Interactive::Message::ShakehandClusterRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->queryallclusterrsp_value_ = const_cast< ::Management::Interactive::Message::QueryAllClusterRsp*>(
      ::Management::Interactive::Message::QueryAllClusterRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->queryclusterdevicersp_value_ = const_cast< ::Management::Interactive::Message::QueryClusterDeviceRsp*>(
      ::Management::Interactive::Message::QueryClusterDeviceRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->queryclusteruserrsp_value_ = const_cast< ::Management::Interactive::Message::QueryClusterUserRsp*>(
      ::Management::Interactive::Message::QueryClusterUserRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->pushclusterdevicersp_value_ = const_cast< ::Management::Interactive::Message::PushClusterDeviceRsp*>(
      ::Management::Interactive::Message::PushClusterDeviceRsp::internal_default_instance());
  _Response_default_instance_.get_mutable()->pushclusteruserrsp_value_ = const_cast< ::Management::Interactive::Message::PushClusterUserRsp*>(
      ::Management::Interactive::Message::PushClusterUserRsp::internal_default_instance());
  _ManagementInteractiveMessage_default_instance_.get_mutable()->reqvalue_ = const_cast< ::Management::Interactive::Message::Request*>(
      ::Management::Interactive::Message::Request::internal_default_instance());
  _ManagementInteractiveMessage_default_instance_.get_mutable()->rspvalue_ = const_cast< ::Management::Interactive::Message::Response*>(
      ::Management::Interactive::Message::Response::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n#InteractiveProtocolManagement.proto\022\036M"
      "anagement.Interactive.Message\"\227\001\n\007Cluste"
      "r\022\024\n\014strClusterID\030\001 \001(\t\022\031\n\021strClusterAdd"
      "ress\030\002 \001(\t\022\034\n\024strManagementAddress\030\003 \001(\t"
      "\022\024\n\014strAliasname\030\004 \001(\t\022\025\n\rstrCreatedate\030"
      "\005 \001(\t\022\020\n\010uiStatus\030\006 \001(\r\"_\n\rClusterStatus"
      "\022<\n\013clusterInfo\030\001 \001(\0132\'.Management.Inter"
      "active.Message.Cluster\022\020\n\010uiStatus\030\002 \001(\r"
      "\"\231\001\n\016AccessedDevice\022\023\n\013strDeviceID\030\001 \001(\t"
      "\022\025\n\rstrDeviceName\030\002 \001(\t\022\024\n\014uiDeviceType\030"
      "\003 \001(\r\022\024\n\014strLoginTime\030\004 \001(\t\022\025\n\rstrLogout"
      "Time\030\005 \001(\t\022\030\n\020uiOnlineDuration\030\006 \001(\r\"\255\001\n"
      "\014AccessedUser\022\021\n\tstrUserID\030\001 \001(\t\022\023\n\013strU"
      "serName\030\002 \001(\t\022\030\n\020strUserAliasname\030\003 \001(\t\022"
      "\024\n\014uiClientType\030\004 \001(\r\022\024\n\014strLoginTime\030\005 "
      "\001(\t\022\025\n\rstrLogoutTime\030\006 \001(\t\022\030\n\020uiOnlineDu"
      "ration\030\007 \001(\r\"\260\001\n\022DeviceAccessRecord\022\023\n\013s"
      "trAccessID\030\001 \001(\t\022\024\n\014strClusterID\030\002 \001(\t\022F"
      "\n\016accessedDevice\030\003 \001(\0132..Management.Inte"
      "ractive.Message.AccessedDevice\022\025\n\rstrCre"
      "ateDate\030\004 \001(\t\022\020\n\010uiStatus\030\005 \001(\r\"\252\001\n\020User"
      "AccessRecord\022\023\n\013strAccessID\030\001 \001(\t\022\024\n\014str"
      "ClusterID\030\002 \001(\t\022B\n\014accessedUser\030\003 \001(\0132,."
      "Management.Interactive.Message.AccessedU"
      "ser\022\025\n\rstrCreateDate\030\004 \001(\t\022\020\n\010uiStatus\030\005"
      " \001(\r\"M\n\rAddClusterReq\022<\n\013clusterInfo\030\001 \001"
      "(\0132\'.Management.Interactive.Message.Clus"
      "ter\"%\n\rAddClusterRsp\022\024\n\014strClusterID\030\001 \001"
      "(\t\"(\n\020DeleteClusterReq\022\024\n\014strClusterID\030\001"
      " \001(\t\"$\n\020DeleteClusterRsp\022\020\n\010strValue\030\001 \001"
      "(\t\"P\n\020ModifyClusterReq\022<\n\013clusterInfo\030\001 "
      "\001(\0132\'.Management.Interactive.Message.Clu"
      "ster\"$\n\020ModifyClusterRsp\022\020\n\010strValue\030\001 \001"
      "(\t\"+\n\023QueryClusterInfoReq\022\024\n\014strClusterI"
      "D\030\001 \001(\t\"[\n\023QueryClusterInfoRsp\022D\n\rcluste"
      "rStatus\030\001 \001(\0132-.Management.Interactive.M"
      "essage.ClusterStatus\"+\n\023ShakehandCluster"
      "Req\022\024\n\014strClusterID\030\001 \001(\t\"\'\n\023ShakehandCl"
      "usterRsp\022\020\n\010strValue\030\001 \001(\t\"2\n\022QueryAllCl"
      "usterReq\022\034\n\024strManagementAddress\030\001 \001(\t\"Z"
      "\n\022QueryAllClusterRsp\022D\n\rclusterStatus\030\001 "
      "\003(\0132-.Management.Interactive.Message.Clu"
      "sterStatus\"\203\001\n\025QueryClusterDeviceReq\022\024\n\014"
      "strClusterID\030\001 \001(\t\022\024\n\014strBegindate\030\002 \001(\t"
      "\022\022\n\nstrEnddate\030\003 \001(\t\022\024\n\014uiRecordType\030\004 \001"
      "(\r\022\024\n\014uiBeginIndex\030\005 \001(\r\"c\n\025QueryCluster"
      "DeviceRsp\022J\n\022accessedDeviceInfo\030\001 \003(\0132.."
      "Management.Interactive.Message.AccessedD"
      "evice\"\201\001\n\023QueryClusterUserReq\022\024\n\014strClus"
      "terID\030\001 \001(\t\022\024\n\014strBegindate\030\002 \001(\t\022\022\n\nstr"
      "Enddate\030\003 \001(\t\022\024\n\014uiRecordType\030\004 \001(\r\022\024\n\014u"
      "iBeginIndex\030\005 \001(\r\"]\n\023QueryClusterUserRsp"
      "\022F\n\020accessedUserInfo\030\001 \003(\0132,.Management."
      "Interactive.Message.AccessedUser\"|\n\024Push"
      "ClusterDeviceReq\022\024\n\014strClusterID\030\001 \001(\t\022N"
      "\n\022deviceAccessRecord\030\002 \003(\01322.Management."
      "Interactive.Message.DeviceAccessRecord\"("
      "\n\024PushClusterDeviceRsp\022\020\n\010strValue\030\001 \001(\t"
      "\"v\n\022PushClusterUserReq\022\024\n\014strClusterID\030\001"
      " \001(\t\022J\n\020userAccessRecord\030\002 \003(\01320.Managem"
      "ent.Interactive.Message.UserAccessRecord"
      "\"&\n\022PushClusterUserRsp\022\020\n\010strValue\030\001 \001(\t"
      "\"\345\006\n\007Request\022J\n\023AddClusterReq_Value\030\n \001("
      "\0132-.Management.Interactive.Message.AddCl"
      "usterReq\022P\n\026DeleteClusterReq_Value\030\024 \001(\013"
      "20.Management.Interactive.Message.Delete"
      "ClusterReq\022P\n\026ModifyClusterReq_Value\030\036 \001"
      "(\01320.Management.Interactive.Message.Modi"
      "fyClusterReq\022V\n\031QueryClusterInfoReq_Valu"
      "e\030( \001(\01323.Management.Interactive.Message"
      ".QueryClusterInfoReq\022V\n\031ShakehandCluster"
      "Req_Value\0302 \001(\01323.Management.Interactive"
      ".Message.ShakehandClusterReq\022T\n\030QueryAll"
      "ClusterReq_Value\030< \001(\01322.Management.Inte"
      "ractive.Message.QueryAllClusterReq\022Z\n\033Qu"
      "eryClusterDeviceReq_Value\030F \001(\01325.Manage"
      "ment.Interactive.Message.QueryClusterDev"
      "iceReq\022V\n\031QueryClusterUserReq_Value\030P \001("
      "\01323.Management.Interactive.Message.Query"
      "ClusterUserReq\022Y\n\032PushClusterDeviceReq_V"
      "alue\030\216\002 \001(\01324.Management.Interactive.Mes"
      "sage.PushClusterDeviceReq\022U\n\030PushCluster"
      "UserReq_Value\030\230\002 \001(\01322.Management.Intera"
      "ctive.Message.PushClusterUserReq\"\213\007\n\010Res"
      "ponse\022\020\n\010iRetcode\030\n \001(\005\022\021\n\tstrRetMsg\030\024 \001"
      "(\t\022J\n\023AddClusterRsp_Value\030\036 \001(\0132-.Manage"
      "ment.Interactive.Message.AddClusterRsp\022P"
      "\n\026DeleteClusterRsp_Value\030( \001(\01320.Managem"
      "ent.Interactive.Message.DeleteClusterRsp"
      "\022P\n\026ModifyClusterRsp_Value\0302 \001(\01320.Manag"
      "ement.Interactive.Message.ModifyClusterR"
      "sp\022V\n\031QueryClusterInfoRsp_Value\030< \001(\01323."
      "Management.Interactive.Message.QueryClus"
      "terInfoRsp\022V\n\031ShakehandClusterRsp_Value\030"
      "F \001(\01323.Management.Interactive.Message.S"
      "hakehandClusterRsp\022T\n\030QueryAllClusterRsp"
      "_Value\030P \001(\01322.Management.Interactive.Me"
      "ssage.QueryAllClusterRsp\022Z\n\033QueryCluster"
      "DeviceRsp_Value\030Z \001(\01325.Management.Inter"
      "active.Message.QueryClusterDeviceRsp\022V\n\031"
      "QueryClusterUserRsp_Value\030d \001(\01323.Manage"
      "ment.Interactive.Message.QueryClusterUse"
      "rRsp\022Y\n\032PushClusterDeviceRsp_Value\030\242\002 \001("
      "\01324.Management.Interactive.Message.PushC"
      "lusterDeviceRsp\022U\n\030PushClusterUserRsp_Va"
      "lue\030\254\002 \001(\01322.Management.Interactive.Mess"
      "age.PushClusterUserRsp\"\370\001\n\034ManagementInt"
      "eractiveMessage\022\?\n\004type\030\001 \001(\01621.Manageme"
      "nt.Interactive.Message.ManagementMsgType"
      "\022\020\n\010uiMsgSeq\030\002 \001(\004\022\016\n\006strSID\030\003 \001(\t\0229\n\010re"
      "qValue\030\004 \001(\0132\'.Management.Interactive.Me"
      "ssage.Request\022:\n\010rspValue\030\005 \001(\0132(.Manage"
      "ment.Interactive.Message.Response*\271\004\n\021Ma"
      "nagementMsgType\022\n\n\006Init_T\020\000\022\024\n\017AddCluste"
      "rReq_T\020\220N\022\024\n\017AddClusterRsp_T\020\232N\022\027\n\022Delet"
      "eClusterReq_T\020\244N\022\027\n\022DeleteClusterRsp_T\020\256"
      "N\022\027\n\022ModifyClusterReq_T\020\270N\022\027\n\022ModifyClus"
      "terRsp_T\020\302N\022\032\n\025QueryClusterInfoReq_T\020\314N\022"
      "\032\n\025QueryClusterInfoRsp_T\020\326N\022\032\n\025Shakehand"
      "ClusterReq_T\020\340N\022\032\n\025ShakehandClusterRsp_T"
      "\020\352N\022\031\n\024QueryAllClusterReq_T\020\364N\022\031\n\024QueryA"
      "llClusterRsp_T\020\376N\022\034\n\027QueryClusterDeviceR"
      "eq_T\020\354O\022\034\n\027QueryClusterDeviceRsp_T\020\366O\022\032\n"
      "\025QueryClusterUserReq_T\020\274P\022\032\n\025QueryCluste"
      "rUserRsp_T\020\306P\022\033\n\026PushClusterDeviceReq_T\020"
      "\204R\022\033\n\026PushClusterDeviceRsp_T\020\216R\022\031\n\024PushC"
      "lusterUserReq_T\020\230R\022\031\n\024PushClusterUserRsp"
      "_T\020\242Rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5093);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InteractiveProtocolManagement.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_InteractiveProtocolManagement_2eproto

const ::google::protobuf::EnumDescriptor* ManagementMsgType_descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_enum_descriptors[0];
}
bool ManagementMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10010:
    case 10020:
    case 10030:
    case 10040:
    case 10050:
    case 10060:
    case 10070:
    case 10080:
    case 10090:
    case 10100:
    case 10110:
    case 10220:
    case 10230:
    case 10300:
    case 10310:
    case 10500:
    case 10510:
    case 10520:
    case 10530:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kStrClusterIDFieldNumber;
const int Cluster::kStrClusterAddressFieldNumber;
const int Cluster::kStrManagementAddressFieldNumber;
const int Cluster::kStrAliasnameFieldNumber;
const int Cluster::kStrCreatedateFieldNumber;
const int Cluster::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.Cluster)
}
Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  strclusteraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusteraddress().size() > 0) {
    strclusteraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusteraddress_);
  }
  strmanagementaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strmanagementaddress().size() > 0) {
    strmanagementaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmanagementaddress_);
  }
  straliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straliasname().size() > 0) {
    straliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straliasname_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  uistatus_ = from.uistatus_;
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.Cluster)
}

void Cluster::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusteraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmanagementaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uistatus_ = 0u;
  _cached_size_ = 0;
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusteraddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmanagementaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straliasname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Cluster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cluster::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[0].descriptor;
}

const Cluster& Cluster::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

Cluster* Cluster::New(::google::protobuf::Arena* arena) const {
  Cluster* n = new Cluster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.Cluster)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusteraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmanagementaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  straliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uistatus_ = 0u;
}

bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.Cluster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.Cluster.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strClusterAddress = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusteraddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusteraddress().data(), this->strclusteraddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.Cluster.strClusterAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strManagementAddress = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmanagementaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strmanagementaddress().data(), this->strmanagementaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.Cluster.strManagementAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strAliasname = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straliasname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straliasname().data(), this->straliasname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.Cluster.strAliasname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreatedate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.Cluster.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.Cluster)
  return false;
#undef DO_
}

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.Cluster)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // string strClusterAddress = 2;
  if (this->strclusteraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusteraddress().data(), this->strclusteraddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strClusterAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strclusteraddress(), output);
  }

  // string strManagementAddress = 3;
  if (this->strmanagementaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmanagementaddress().data(), this->strmanagementaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strManagementAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strmanagementaddress(), output);
  }

  // string strAliasname = 4;
  if (this->straliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straliasname().data(), this->straliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strAliasname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->straliasname(), output);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.Cluster)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // string strClusterAddress = 2;
  if (this->strclusteraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusteraddress().data(), this->strclusteraddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strClusterAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strclusteraddress(), target);
  }

  // string strManagementAddress = 3;
  if (this->strmanagementaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmanagementaddress().data(), this->strmanagementaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strManagementAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strmanagementaddress(), target);
  }

  // string strAliasname = 4;
  if (this->straliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straliasname().data(), this->straliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strAliasname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->straliasname(), target);
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Cluster.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.Cluster)
  return target;
}

size_t Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.Cluster)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strClusterAddress = 2;
  if (this->strclusteraddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusteraddress());
  }

  // string strManagementAddress = 3;
  if (this->strmanagementaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strmanagementaddress());
  }

  // string strAliasname = 4;
  if (this->straliasname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straliasname());
  }

  // string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // uint32 uiStatus = 6;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const Cluster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.strclusteraddress().size() > 0) {

    strclusteraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusteraddress_);
  }
  if (from.strmanagementaddress().size() > 0) {

    strmanagementaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmanagementaddress_);
  }
  if (from.straliasname().size() > 0) {

    straliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straliasname_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {
  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  strclusterid_.Swap(&other->strclusterid_);
  strclusteraddress_.Swap(&other->strclusteraddress_);
  strmanagementaddress_.Swap(&other->strmanagementaddress_);
  straliasname_.Swap(&other->straliasname_);
  strcreatedate_.Swap(&other->strcreatedate_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cluster

// string strClusterID = 1;
void Cluster::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cluster::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Cluster.strClusterID)
  return strclusterid_.GetNoArena();
}
void Cluster::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Cluster.strClusterID)
}
#if LANG_CXX11
void Cluster::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.Cluster.strClusterID)
}
#endif
void Cluster::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.Cluster.strClusterID)
}
void Cluster::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.Cluster.strClusterID)
}
::std::string* Cluster::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Cluster.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cluster::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Cluster.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cluster::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Cluster.strClusterID)
}

// string strClusterAddress = 2;
void Cluster::clear_strclusteraddress() {
  strclusteraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cluster::strclusteraddress() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Cluster.strClusterAddress)
  return strclusteraddress_.GetNoArena();
}
void Cluster::set_strclusteraddress(const ::std::string& value) {
  
  strclusteraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Cluster.strClusterAddress)
}
#if LANG_CXX11
void Cluster::set_strclusteraddress(::std::string&& value) {
  
  strclusteraddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.Cluster.strClusterAddress)
}
#endif
void Cluster::set_strclusteraddress(const char* value) {
  
  strclusteraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.Cluster.strClusterAddress)
}
void Cluster::set_strclusteraddress(const char* value, size_t size) {
  
  strclusteraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.Cluster.strClusterAddress)
}
::std::string* Cluster::mutable_strclusteraddress() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Cluster.strClusterAddress)
  return strclusteraddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cluster::release_strclusteraddress() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Cluster.strClusterAddress)
  
  return strclusteraddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cluster::set_allocated_strclusteraddress(::std::string* strclusteraddress) {
  if (strclusteraddress != NULL) {
    
  } else {
    
  }
  strclusteraddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusteraddress);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Cluster.strClusterAddress)
}

// string strManagementAddress = 3;
void Cluster::clear_strmanagementaddress() {
  strmanagementaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cluster::strmanagementaddress() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Cluster.strManagementAddress)
  return strmanagementaddress_.GetNoArena();
}
void Cluster::set_strmanagementaddress(const ::std::string& value) {
  
  strmanagementaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Cluster.strManagementAddress)
}
#if LANG_CXX11
void Cluster::set_strmanagementaddress(::std::string&& value) {
  
  strmanagementaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.Cluster.strManagementAddress)
}
#endif
void Cluster::set_strmanagementaddress(const char* value) {
  
  strmanagementaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.Cluster.strManagementAddress)
}
void Cluster::set_strmanagementaddress(const char* value, size_t size) {
  
  strmanagementaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.Cluster.strManagementAddress)
}
::std::string* Cluster::mutable_strmanagementaddress() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Cluster.strManagementAddress)
  return strmanagementaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cluster::release_strmanagementaddress() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Cluster.strManagementAddress)
  
  return strmanagementaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cluster::set_allocated_strmanagementaddress(::std::string* strmanagementaddress) {
  if (strmanagementaddress != NULL) {
    
  } else {
    
  }
  strmanagementaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmanagementaddress);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Cluster.strManagementAddress)
}

// string strAliasname = 4;
void Cluster::clear_straliasname() {
  straliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cluster::straliasname() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Cluster.strAliasname)
  return straliasname_.GetNoArena();
}
void Cluster::set_straliasname(const ::std::string& value) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Cluster.strAliasname)
}
#if LANG_CXX11
void Cluster::set_straliasname(::std::string&& value) {
  
  straliasname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.Cluster.strAliasname)
}
#endif
void Cluster::set_straliasname(const char* value) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.Cluster.strAliasname)
}
void Cluster::set_straliasname(const char* value, size_t size) {
  
  straliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.Cluster.strAliasname)
}
::std::string* Cluster::mutable_straliasname() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Cluster.strAliasname)
  return straliasname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cluster::release_straliasname() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Cluster.strAliasname)
  
  return straliasname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cluster::set_allocated_straliasname(::std::string* straliasname) {
  if (straliasname != NULL) {
    
  } else {
    
  }
  straliasname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straliasname);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Cluster.strAliasname)
}

// string strCreatedate = 5;
void Cluster::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cluster::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Cluster.strCreatedate)
  return strcreatedate_.GetNoArena();
}
void Cluster::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Cluster.strCreatedate)
}
#if LANG_CXX11
void Cluster::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.Cluster.strCreatedate)
}
#endif
void Cluster::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.Cluster.strCreatedate)
}
void Cluster::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.Cluster.strCreatedate)
}
::std::string* Cluster::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Cluster.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cluster::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Cluster.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cluster::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Cluster.strCreatedate)
}

// uint32 uiStatus = 6;
void Cluster::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 Cluster::uistatus() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Cluster.uiStatus)
  return uistatus_;
}
void Cluster::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Cluster.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterStatus::kClusterInfoFieldNumber;
const int ClusterStatus::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterStatus::ClusterStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.ClusterStatus)
}
ClusterStatus::ClusterStatus(const ClusterStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterinfo()) {
    clusterinfo_ = new ::Management::Interactive::Message::Cluster(*from.clusterinfo_);
  } else {
    clusterinfo_ = NULL;
  }
  uistatus_ = from.uistatus_;
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.ClusterStatus)
}

void ClusterStatus::SharedCtor() {
  ::memset(&clusterinfo_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&clusterinfo_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

ClusterStatus::~ClusterStatus() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.ClusterStatus)
  SharedDtor();
}

void ClusterStatus::SharedDtor() {
  if (this != internal_default_instance()) {
    delete clusterinfo_;
  }
}

void ClusterStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterStatus::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[1].descriptor;
}

const ClusterStatus& ClusterStatus::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterStatus* ClusterStatus::New(::google::protobuf::Arena* arena) const {
  ClusterStatus* n = new ClusterStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.ClusterStatus)
  if (GetArenaNoVirtual() == NULL && clusterinfo_ != NULL) {
    delete clusterinfo_;
  }
  clusterinfo_ = NULL;
  uistatus_ = 0u;
}

bool ClusterStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.ClusterStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Management.Interactive.Message.Cluster clusterInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clusterinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.ClusterStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.ClusterStatus)
  return false;
#undef DO_
}

void ClusterStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.ClusterStatus)
  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->clusterinfo_, output);
  }

  // uint32 uiStatus = 2;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.ClusterStatus)
}

::google::protobuf::uint8* ClusterStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.ClusterStatus)
  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->clusterinfo_, false, target);
  }

  // uint32 uiStatus = 2;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.ClusterStatus)
  return target;
}

size_t ClusterStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.ClusterStatus)
  size_t total_size = 0;

  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clusterinfo_);
  }

  // uint32 uiStatus = 2;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.ClusterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.ClusterStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.ClusterStatus)
    MergeFrom(*source);
  }
}

void ClusterStatus::MergeFrom(const ClusterStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.ClusterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterinfo()) {
    mutable_clusterinfo()->::Management::Interactive::Message::Cluster::MergeFrom(from.clusterinfo());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void ClusterStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.ClusterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterStatus::CopyFrom(const ClusterStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.ClusterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterStatus::IsInitialized() const {
  return true;
}

void ClusterStatus::Swap(ClusterStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterStatus::InternalSwap(ClusterStatus* other) {
  std::swap(clusterinfo_, other->clusterinfo_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterStatus::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterStatus

// .Management.Interactive.Message.Cluster clusterInfo = 1;
bool ClusterStatus::has_clusterinfo() const {
  return this != internal_default_instance() && clusterinfo_ != NULL;
}
void ClusterStatus::clear_clusterinfo() {
  if (GetArenaNoVirtual() == NULL && clusterinfo_ != NULL) delete clusterinfo_;
  clusterinfo_ = NULL;
}
const ::Management::Interactive::Message::Cluster& ClusterStatus::clusterinfo() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ClusterStatus.clusterInfo)
  return clusterinfo_ != NULL ? *clusterinfo_
                         : *::Management::Interactive::Message::Cluster::internal_default_instance();
}
::Management::Interactive::Message::Cluster* ClusterStatus::mutable_clusterinfo() {
  
  if (clusterinfo_ == NULL) {
    clusterinfo_ = new ::Management::Interactive::Message::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ClusterStatus.clusterInfo)
  return clusterinfo_;
}
::Management::Interactive::Message::Cluster* ClusterStatus::release_clusterinfo() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ClusterStatus.clusterInfo)
  
  ::Management::Interactive::Message::Cluster* temp = clusterinfo_;
  clusterinfo_ = NULL;
  return temp;
}
void ClusterStatus::set_allocated_clusterinfo(::Management::Interactive::Message::Cluster* clusterinfo) {
  delete clusterinfo_;
  clusterinfo_ = clusterinfo;
  if (clusterinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ClusterStatus.clusterInfo)
}

// uint32 uiStatus = 2;
void ClusterStatus::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 ClusterStatus::uistatus() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ClusterStatus.uiStatus)
  return uistatus_;
}
void ClusterStatus::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ClusterStatus.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessedDevice::kStrDeviceIDFieldNumber;
const int AccessedDevice::kStrDeviceNameFieldNumber;
const int AccessedDevice::kUiDeviceTypeFieldNumber;
const int AccessedDevice::kStrLoginTimeFieldNumber;
const int AccessedDevice::kStrLogoutTimeFieldNumber;
const int AccessedDevice::kUiOnlineDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessedDevice::AccessedDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.AccessedDevice)
}
AccessedDevice::AccessedDevice(const AccessedDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdeviceid().size() > 0) {
    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  strdevicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevicename().size() > 0) {
    strdevicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicename_);
  }
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogintime().size() > 0) {
    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogouttime().size() > 0) {
    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  ::memcpy(&uidevicetype_, &from.uidevicetype_,
    reinterpret_cast<char*>(&uionlineduration_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uionlineduration_));
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.AccessedDevice)
}

void AccessedDevice::SharedCtor() {
  strdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uionlineduration_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uionlineduration_));
  _cached_size_ = 0;
}

AccessedDevice::~AccessedDevice() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.AccessedDevice)
  SharedDtor();
}

void AccessedDevice::SharedDtor() {
  strdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccessedDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccessedDevice::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[2].descriptor;
}

const AccessedDevice& AccessedDevice::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccessedDevice* AccessedDevice::New(::google::protobuf::Arena* arena) const {
  AccessedDevice* n = new AccessedDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccessedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.AccessedDevice)
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strdevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uidevicetype_, 0, reinterpret_cast<char*>(&uionlineduration_) -
    reinterpret_cast<char*>(&uidevicetype_) + sizeof(uionlineduration_));
}

bool AccessedDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.AccessedDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDeviceID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdeviceid().data(), this->strdeviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedDevice.strDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strDeviceName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevicename().data(), this->strdevicename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedDevice.strDeviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiDeviceType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uidevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLoginTime = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogintime().data(), this->strlogintime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedDevice.strLoginTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLogoutTime = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogouttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogouttime().data(), this->strlogouttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedDevice.strLogoutTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiOnlineDuration = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uionlineduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.AccessedDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.AccessedDevice)
  return false;
#undef DO_
}

void AccessedDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.AccessedDevice)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdeviceid(), output);
  }

  // string strDeviceName = 2;
  if (this->strdevicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicename().data(), this->strdevicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strDeviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdevicename(), output);
  }

  // uint32 uiDeviceType = 3;
  if (this->uidevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uidevicetype(), output);
  }

  // string strLoginTime = 4;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strLoginTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strlogintime(), output);
  }

  // string strLogoutTime = 5;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strLogoutTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strlogouttime(), output);
  }

  // uint32 uiOnlineDuration = 6;
  if (this->uionlineduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uionlineduration(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.AccessedDevice)
}

::google::protobuf::uint8* AccessedDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.AccessedDevice)
  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdeviceid().data(), this->strdeviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdeviceid(), target);
  }

  // string strDeviceName = 2;
  if (this->strdevicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevicename().data(), this->strdevicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strDeviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdevicename(), target);
  }

  // uint32 uiDeviceType = 3;
  if (this->uidevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uidevicetype(), target);
  }

  // string strLoginTime = 4;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strLoginTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strlogintime(), target);
  }

  // string strLogoutTime = 5;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedDevice.strLogoutTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strlogouttime(), target);
  }

  // uint32 uiOnlineDuration = 6;
  if (this->uionlineduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uionlineduration(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.AccessedDevice)
  return target;
}

size_t AccessedDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.AccessedDevice)
  size_t total_size = 0;

  // string strDeviceID = 1;
  if (this->strdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdeviceid());
  }

  // string strDeviceName = 2;
  if (this->strdevicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevicename());
  }

  // string strLoginTime = 4;
  if (this->strlogintime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogintime());
  }

  // string strLogoutTime = 5;
  if (this->strlogouttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogouttime());
  }

  // uint32 uiDeviceType = 3;
  if (this->uidevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uidevicetype());
  }

  // uint32 uiOnlineDuration = 6;
  if (this->uionlineduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uionlineduration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccessedDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.AccessedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessedDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccessedDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.AccessedDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.AccessedDevice)
    MergeFrom(*source);
  }
}

void AccessedDevice::MergeFrom(const AccessedDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.AccessedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdeviceid().size() > 0) {

    strdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdeviceid_);
  }
  if (from.strdevicename().size() > 0) {

    strdevicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevicename_);
  }
  if (from.strlogintime().size() > 0) {

    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  if (from.strlogouttime().size() > 0) {

    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  if (from.uidevicetype() != 0) {
    set_uidevicetype(from.uidevicetype());
  }
  if (from.uionlineduration() != 0) {
    set_uionlineduration(from.uionlineduration());
  }
}

void AccessedDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.AccessedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessedDevice::CopyFrom(const AccessedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.AccessedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessedDevice::IsInitialized() const {
  return true;
}

void AccessedDevice::Swap(AccessedDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessedDevice::InternalSwap(AccessedDevice* other) {
  strdeviceid_.Swap(&other->strdeviceid_);
  strdevicename_.Swap(&other->strdevicename_);
  strlogintime_.Swap(&other->strlogintime_);
  strlogouttime_.Swap(&other->strlogouttime_);
  std::swap(uidevicetype_, other->uidevicetype_);
  std::swap(uionlineduration_, other->uionlineduration_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccessedDevice::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccessedDevice

// string strDeviceID = 1;
void AccessedDevice::clear_strdeviceid() {
  strdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedDevice::strdeviceid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedDevice.strDeviceID)
  return strdeviceid_.GetNoArena();
}
void AccessedDevice::set_strdeviceid(const ::std::string& value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedDevice.strDeviceID)
}
#if LANG_CXX11
void AccessedDevice::set_strdeviceid(::std::string&& value) {
  
  strdeviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedDevice.strDeviceID)
}
#endif
void AccessedDevice::set_strdeviceid(const char* value) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedDevice.strDeviceID)
}
void AccessedDevice::set_strdeviceid(const char* value, size_t size) {
  
  strdeviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedDevice.strDeviceID)
}
::std::string* AccessedDevice::mutable_strdeviceid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedDevice.strDeviceID)
  return strdeviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedDevice::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedDevice.strDeviceID)
  
  return strdeviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedDevice::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid != NULL) {
    
  } else {
    
  }
  strdeviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdeviceid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedDevice.strDeviceID)
}

// string strDeviceName = 2;
void AccessedDevice::clear_strdevicename() {
  strdevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedDevice::strdevicename() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedDevice.strDeviceName)
  return strdevicename_.GetNoArena();
}
void AccessedDevice::set_strdevicename(const ::std::string& value) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedDevice.strDeviceName)
}
#if LANG_CXX11
void AccessedDevice::set_strdevicename(::std::string&& value) {
  
  strdevicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedDevice.strDeviceName)
}
#endif
void AccessedDevice::set_strdevicename(const char* value) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedDevice.strDeviceName)
}
void AccessedDevice::set_strdevicename(const char* value, size_t size) {
  
  strdevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedDevice.strDeviceName)
}
::std::string* AccessedDevice::mutable_strdevicename() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedDevice.strDeviceName)
  return strdevicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedDevice::release_strdevicename() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedDevice.strDeviceName)
  
  return strdevicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedDevice::set_allocated_strdevicename(::std::string* strdevicename) {
  if (strdevicename != NULL) {
    
  } else {
    
  }
  strdevicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevicename);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedDevice.strDeviceName)
}

// uint32 uiDeviceType = 3;
void AccessedDevice::clear_uidevicetype() {
  uidevicetype_ = 0u;
}
::google::protobuf::uint32 AccessedDevice::uidevicetype() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedDevice.uiDeviceType)
  return uidevicetype_;
}
void AccessedDevice::set_uidevicetype(::google::protobuf::uint32 value) {
  
  uidevicetype_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedDevice.uiDeviceType)
}

// string strLoginTime = 4;
void AccessedDevice::clear_strlogintime() {
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedDevice::strlogintime() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedDevice.strLoginTime)
  return strlogintime_.GetNoArena();
}
void AccessedDevice::set_strlogintime(const ::std::string& value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedDevice.strLoginTime)
}
#if LANG_CXX11
void AccessedDevice::set_strlogintime(::std::string&& value) {
  
  strlogintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedDevice.strLoginTime)
}
#endif
void AccessedDevice::set_strlogintime(const char* value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedDevice.strLoginTime)
}
void AccessedDevice::set_strlogintime(const char* value, size_t size) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedDevice.strLoginTime)
}
::std::string* AccessedDevice::mutable_strlogintime() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedDevice.strLoginTime)
  return strlogintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedDevice::release_strlogintime() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedDevice.strLoginTime)
  
  return strlogintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedDevice::set_allocated_strlogintime(::std::string* strlogintime) {
  if (strlogintime != NULL) {
    
  } else {
    
  }
  strlogintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogintime);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedDevice.strLoginTime)
}

// string strLogoutTime = 5;
void AccessedDevice::clear_strlogouttime() {
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedDevice::strlogouttime() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedDevice.strLogoutTime)
  return strlogouttime_.GetNoArena();
}
void AccessedDevice::set_strlogouttime(const ::std::string& value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedDevice.strLogoutTime)
}
#if LANG_CXX11
void AccessedDevice::set_strlogouttime(::std::string&& value) {
  
  strlogouttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedDevice.strLogoutTime)
}
#endif
void AccessedDevice::set_strlogouttime(const char* value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedDevice.strLogoutTime)
}
void AccessedDevice::set_strlogouttime(const char* value, size_t size) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedDevice.strLogoutTime)
}
::std::string* AccessedDevice::mutable_strlogouttime() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedDevice.strLogoutTime)
  return strlogouttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedDevice::release_strlogouttime() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedDevice.strLogoutTime)
  
  return strlogouttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedDevice::set_allocated_strlogouttime(::std::string* strlogouttime) {
  if (strlogouttime != NULL) {
    
  } else {
    
  }
  strlogouttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogouttime);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedDevice.strLogoutTime)
}

// uint32 uiOnlineDuration = 6;
void AccessedDevice::clear_uionlineduration() {
  uionlineduration_ = 0u;
}
::google::protobuf::uint32 AccessedDevice::uionlineduration() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedDevice.uiOnlineDuration)
  return uionlineduration_;
}
void AccessedDevice::set_uionlineduration(::google::protobuf::uint32 value) {
  
  uionlineduration_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedDevice.uiOnlineDuration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessedUser::kStrUserIDFieldNumber;
const int AccessedUser::kStrUserNameFieldNumber;
const int AccessedUser::kStrUserAliasnameFieldNumber;
const int AccessedUser::kUiClientTypeFieldNumber;
const int AccessedUser::kStrLoginTimeFieldNumber;
const int AccessedUser::kStrLogoutTimeFieldNumber;
const int AccessedUser::kUiOnlineDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessedUser::AccessedUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.AccessedUser)
}
AccessedUser::AccessedUser(const AccessedUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struserid().size() > 0) {
    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strusername().size() > 0) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  struseraliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.struseraliasname().size() > 0) {
    struseraliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseraliasname_);
  }
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogintime().size() > 0) {
    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlogouttime().size() > 0) {
    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  ::memcpy(&uiclienttype_, &from.uiclienttype_,
    reinterpret_cast<char*>(&uionlineduration_) -
    reinterpret_cast<char*>(&uiclienttype_) + sizeof(uionlineduration_));
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.AccessedUser)
}

void AccessedUser::SharedCtor() {
  struserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseraliasname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uiclienttype_, 0, reinterpret_cast<char*>(&uionlineduration_) -
    reinterpret_cast<char*>(&uiclienttype_) + sizeof(uionlineduration_));
  _cached_size_ = 0;
}

AccessedUser::~AccessedUser() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.AccessedUser)
  SharedDtor();
}

void AccessedUser::SharedDtor() {
  struserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseraliasname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccessedUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccessedUser::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[3].descriptor;
}

const AccessedUser& AccessedUser::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccessedUser* AccessedUser::New(::google::protobuf::Arena* arena) const {
  AccessedUser* n = new AccessedUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccessedUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.AccessedUser)
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struseraliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uiclienttype_, 0, reinterpret_cast<char*>(&uionlineduration_) -
    reinterpret_cast<char*>(&uiclienttype_) + sizeof(uionlineduration_));
}

bool AccessedUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.AccessedUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struserid().data(), this->struserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedUser.strUserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedUser.strUserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strUserAliasname = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struseraliasname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->struseraliasname().data(), this->struseraliasname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedUser.strUserAliasname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiClientType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiclienttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLoginTime = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogintime().data(), this->strlogintime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedUser.strLoginTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLogoutTime = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlogouttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlogouttime().data(), this->strlogouttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AccessedUser.strLogoutTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiOnlineDuration = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uionlineduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.AccessedUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.AccessedUser)
  return false;
#undef DO_
}

void AccessedUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.AccessedUser)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strUserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->struserid(), output);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strusername(), output);
  }

  // string strUserAliasname = 3;
  if (this->struseraliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseraliasname().data(), this->struseraliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strUserAliasname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->struseraliasname(), output);
  }

  // uint32 uiClientType = 4;
  if (this->uiclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uiclienttype(), output);
  }

  // string strLoginTime = 5;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strLoginTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strlogintime(), output);
  }

  // string strLogoutTime = 6;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strLogoutTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strlogouttime(), output);
  }

  // uint32 uiOnlineDuration = 7;
  if (this->uionlineduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uionlineduration(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.AccessedUser)
}

::google::protobuf::uint8* AccessedUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.AccessedUser)
  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struserid().data(), this->struserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strUserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->struserid(), target);
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strusername(), target);
  }

  // string strUserAliasname = 3;
  if (this->struseraliasname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->struseraliasname().data(), this->struseraliasname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strUserAliasname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->struseraliasname(), target);
  }

  // uint32 uiClientType = 4;
  if (this->uiclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uiclienttype(), target);
  }

  // string strLoginTime = 5;
  if (this->strlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogintime().data(), this->strlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strLoginTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strlogintime(), target);
  }

  // string strLogoutTime = 6;
  if (this->strlogouttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlogouttime().data(), this->strlogouttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AccessedUser.strLogoutTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strlogouttime(), target);
  }

  // uint32 uiOnlineDuration = 7;
  if (this->uionlineduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uionlineduration(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.AccessedUser)
  return target;
}

size_t AccessedUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.AccessedUser)
  size_t total_size = 0;

  // string strUserID = 1;
  if (this->struserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struserid());
  }

  // string strUserName = 2;
  if (this->strusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  // string strUserAliasname = 3;
  if (this->struseraliasname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->struseraliasname());
  }

  // string strLoginTime = 5;
  if (this->strlogintime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogintime());
  }

  // string strLogoutTime = 6;
  if (this->strlogouttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlogouttime());
  }

  // uint32 uiClientType = 4;
  if (this->uiclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiclienttype());
  }

  // uint32 uiOnlineDuration = 7;
  if (this->uionlineduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uionlineduration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccessedUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.AccessedUser)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessedUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccessedUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.AccessedUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.AccessedUser)
    MergeFrom(*source);
  }
}

void AccessedUser::MergeFrom(const AccessedUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.AccessedUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.struserid().size() > 0) {

    struserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struserid_);
  }
  if (from.strusername().size() > 0) {

    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  if (from.struseraliasname().size() > 0) {

    struseraliasname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struseraliasname_);
  }
  if (from.strlogintime().size() > 0) {

    strlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogintime_);
  }
  if (from.strlogouttime().size() > 0) {

    strlogouttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlogouttime_);
  }
  if (from.uiclienttype() != 0) {
    set_uiclienttype(from.uiclienttype());
  }
  if (from.uionlineduration() != 0) {
    set_uionlineduration(from.uionlineduration());
  }
}

void AccessedUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.AccessedUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessedUser::CopyFrom(const AccessedUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.AccessedUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessedUser::IsInitialized() const {
  return true;
}

void AccessedUser::Swap(AccessedUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessedUser::InternalSwap(AccessedUser* other) {
  struserid_.Swap(&other->struserid_);
  strusername_.Swap(&other->strusername_);
  struseraliasname_.Swap(&other->struseraliasname_);
  strlogintime_.Swap(&other->strlogintime_);
  strlogouttime_.Swap(&other->strlogouttime_);
  std::swap(uiclienttype_, other->uiclienttype_);
  std::swap(uionlineduration_, other->uionlineduration_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccessedUser::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccessedUser

// string strUserID = 1;
void AccessedUser::clear_struserid() {
  struserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedUser::struserid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.strUserID)
  return struserid_.GetNoArena();
}
void AccessedUser::set_struserid(const ::std::string& value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.strUserID)
}
#if LANG_CXX11
void AccessedUser::set_struserid(::std::string&& value) {
  
  struserid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedUser.strUserID)
}
#endif
void AccessedUser::set_struserid(const char* value) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedUser.strUserID)
}
void AccessedUser::set_struserid(const char* value, size_t size) {
  
  struserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedUser.strUserID)
}
::std::string* AccessedUser::mutable_struserid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedUser.strUserID)
  return struserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedUser::release_struserid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedUser.strUserID)
  
  return struserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedUser::set_allocated_struserid(::std::string* struserid) {
  if (struserid != NULL) {
    
  } else {
    
  }
  struserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struserid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedUser.strUserID)
}

// string strUserName = 2;
void AccessedUser::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedUser::strusername() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.strUserName)
  return strusername_.GetNoArena();
}
void AccessedUser::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.strUserName)
}
#if LANG_CXX11
void AccessedUser::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedUser.strUserName)
}
#endif
void AccessedUser::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedUser.strUserName)
}
void AccessedUser::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedUser.strUserName)
}
::std::string* AccessedUser::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedUser.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedUser::release_strusername() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedUser.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedUser::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedUser.strUserName)
}

// string strUserAliasname = 3;
void AccessedUser::clear_struseraliasname() {
  struseraliasname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedUser::struseraliasname() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.strUserAliasname)
  return struseraliasname_.GetNoArena();
}
void AccessedUser::set_struseraliasname(const ::std::string& value) {
  
  struseraliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.strUserAliasname)
}
#if LANG_CXX11
void AccessedUser::set_struseraliasname(::std::string&& value) {
  
  struseraliasname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedUser.strUserAliasname)
}
#endif
void AccessedUser::set_struseraliasname(const char* value) {
  
  struseraliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedUser.strUserAliasname)
}
void AccessedUser::set_struseraliasname(const char* value, size_t size) {
  
  struseraliasname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedUser.strUserAliasname)
}
::std::string* AccessedUser::mutable_struseraliasname() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedUser.strUserAliasname)
  return struseraliasname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedUser::release_struseraliasname() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedUser.strUserAliasname)
  
  return struseraliasname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedUser::set_allocated_struseraliasname(::std::string* struseraliasname) {
  if (struseraliasname != NULL) {
    
  } else {
    
  }
  struseraliasname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struseraliasname);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedUser.strUserAliasname)
}

// uint32 uiClientType = 4;
void AccessedUser::clear_uiclienttype() {
  uiclienttype_ = 0u;
}
::google::protobuf::uint32 AccessedUser::uiclienttype() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.uiClientType)
  return uiclienttype_;
}
void AccessedUser::set_uiclienttype(::google::protobuf::uint32 value) {
  
  uiclienttype_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.uiClientType)
}

// string strLoginTime = 5;
void AccessedUser::clear_strlogintime() {
  strlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedUser::strlogintime() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.strLoginTime)
  return strlogintime_.GetNoArena();
}
void AccessedUser::set_strlogintime(const ::std::string& value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.strLoginTime)
}
#if LANG_CXX11
void AccessedUser::set_strlogintime(::std::string&& value) {
  
  strlogintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedUser.strLoginTime)
}
#endif
void AccessedUser::set_strlogintime(const char* value) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedUser.strLoginTime)
}
void AccessedUser::set_strlogintime(const char* value, size_t size) {
  
  strlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedUser.strLoginTime)
}
::std::string* AccessedUser::mutable_strlogintime() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedUser.strLoginTime)
  return strlogintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedUser::release_strlogintime() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedUser.strLoginTime)
  
  return strlogintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedUser::set_allocated_strlogintime(::std::string* strlogintime) {
  if (strlogintime != NULL) {
    
  } else {
    
  }
  strlogintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogintime);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedUser.strLoginTime)
}

// string strLogoutTime = 6;
void AccessedUser::clear_strlogouttime() {
  strlogouttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessedUser::strlogouttime() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.strLogoutTime)
  return strlogouttime_.GetNoArena();
}
void AccessedUser::set_strlogouttime(const ::std::string& value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.strLogoutTime)
}
#if LANG_CXX11
void AccessedUser::set_strlogouttime(::std::string&& value) {
  
  strlogouttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AccessedUser.strLogoutTime)
}
#endif
void AccessedUser::set_strlogouttime(const char* value) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AccessedUser.strLogoutTime)
}
void AccessedUser::set_strlogouttime(const char* value, size_t size) {
  
  strlogouttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AccessedUser.strLogoutTime)
}
::std::string* AccessedUser::mutable_strlogouttime() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AccessedUser.strLogoutTime)
  return strlogouttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessedUser::release_strlogouttime() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AccessedUser.strLogoutTime)
  
  return strlogouttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessedUser::set_allocated_strlogouttime(::std::string* strlogouttime) {
  if (strlogouttime != NULL) {
    
  } else {
    
  }
  strlogouttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogouttime);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AccessedUser.strLogoutTime)
}

// uint32 uiOnlineDuration = 7;
void AccessedUser::clear_uionlineduration() {
  uionlineduration_ = 0u;
}
::google::protobuf::uint32 AccessedUser::uionlineduration() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AccessedUser.uiOnlineDuration)
  return uionlineduration_;
}
void AccessedUser::set_uionlineduration(::google::protobuf::uint32 value) {
  
  uionlineduration_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AccessedUser.uiOnlineDuration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAccessRecord::kStrAccessIDFieldNumber;
const int DeviceAccessRecord::kStrClusterIDFieldNumber;
const int DeviceAccessRecord::kAccessedDeviceFieldNumber;
const int DeviceAccessRecord::kStrCreateDateFieldNumber;
const int DeviceAccessRecord::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAccessRecord::DeviceAccessRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.DeviceAccessRecord)
}
DeviceAccessRecord::DeviceAccessRecord(const DeviceAccessRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessid().size() > 0) {
    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.has_accesseddevice()) {
    accesseddevice_ = new ::Management::Interactive::Message::AccessedDevice(*from.accesseddevice_);
  } else {
    accesseddevice_ = NULL;
  }
  uistatus_ = from.uistatus_;
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.DeviceAccessRecord)
}

void DeviceAccessRecord::SharedCtor() {
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accesseddevice_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&accesseddevice_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

DeviceAccessRecord::~DeviceAccessRecord() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.DeviceAccessRecord)
  SharedDtor();
}

void DeviceAccessRecord::SharedDtor() {
  straccessid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete accesseddevice_;
  }
}

void DeviceAccessRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceAccessRecord::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[4].descriptor;
}

const DeviceAccessRecord& DeviceAccessRecord::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceAccessRecord* DeviceAccessRecord::New(::google::protobuf::Arena* arena) const {
  DeviceAccessRecord* n = new DeviceAccessRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceAccessRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.DeviceAccessRecord)
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && accesseddevice_ != NULL) {
    delete accesseddevice_;
  }
  accesseddevice_ = NULL;
  uistatus_ = 0u;
}

bool DeviceAccessRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.DeviceAccessRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessid().data(), this->straccessid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.DeviceAccessRecord.strAccessID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strClusterID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.DeviceAccessRecord.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.AccessedDevice accessedDevice = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_accesseddevice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreateDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.DeviceAccessRecord.strCreateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.DeviceAccessRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.DeviceAccessRecord)
  return false;
#undef DO_
}

void DeviceAccessRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.DeviceAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeviceAccessRecord.strAccessID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessid(), output);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeviceAccessRecord.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strclusterid(), output);
  }

  // .Management.Interactive.Message.AccessedDevice accessedDevice = 3;
  if (this->has_accesseddevice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->accesseddevice_, output);
  }

  // string strCreateDate = 4;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeviceAccessRecord.strCreateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 5;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.DeviceAccessRecord)
}

::google::protobuf::uint8* DeviceAccessRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.DeviceAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeviceAccessRecord.strAccessID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessid(), target);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeviceAccessRecord.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strclusterid(), target);
  }

  // .Management.Interactive.Message.AccessedDevice accessedDevice = 3;
  if (this->has_accesseddevice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->accesseddevice_, false, target);
  }

  // string strCreateDate = 4;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeviceAccessRecord.strCreateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 5;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.DeviceAccessRecord)
  return target;
}

size_t DeviceAccessRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.DeviceAccessRecord)
  size_t total_size = 0;

  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessid());
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strCreateDate = 4;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // .Management.Interactive.Message.AccessedDevice accessedDevice = 3;
  if (this->has_accesseddevice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->accesseddevice_);
  }

  // uint32 uiStatus = 5;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceAccessRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.DeviceAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAccessRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAccessRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.DeviceAccessRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.DeviceAccessRecord)
    MergeFrom(*source);
  }
}

void DeviceAccessRecord::MergeFrom(const DeviceAccessRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.DeviceAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessid().size() > 0) {

    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.has_accesseddevice()) {
    mutable_accesseddevice()->::Management::Interactive::Message::AccessedDevice::MergeFrom(from.accesseddevice());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void DeviceAccessRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.DeviceAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAccessRecord::CopyFrom(const DeviceAccessRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.DeviceAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAccessRecord::IsInitialized() const {
  return true;
}

void DeviceAccessRecord::Swap(DeviceAccessRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAccessRecord::InternalSwap(DeviceAccessRecord* other) {
  straccessid_.Swap(&other->straccessid_);
  strclusterid_.Swap(&other->strclusterid_);
  strcreatedate_.Swap(&other->strcreatedate_);
  std::swap(accesseddevice_, other->accesseddevice_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceAccessRecord::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceAccessRecord

// string strAccessID = 1;
void DeviceAccessRecord::clear_straccessid() {
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::straccessid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
  return straccessid_.GetNoArena();
}
void DeviceAccessRecord::set_straccessid(const ::std::string& value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
}
#if LANG_CXX11
void DeviceAccessRecord::set_straccessid(::std::string&& value) {
  
  straccessid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
}
#endif
void DeviceAccessRecord::set_straccessid(const char* value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
}
void DeviceAccessRecord::set_straccessid(const char* value, size_t size) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
}
::std::string* DeviceAccessRecord::mutable_straccessid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
  return straccessid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_straccessid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
  
  return straccessid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_straccessid(::std::string* straccessid) {
  if (straccessid != NULL) {
    
  } else {
    
  }
  straccessid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.DeviceAccessRecord.strAccessID)
}

// string strClusterID = 2;
void DeviceAccessRecord::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
  return strclusterid_.GetNoArena();
}
void DeviceAccessRecord::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
}
#endif
void DeviceAccessRecord::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
}
void DeviceAccessRecord::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
}
::std::string* DeviceAccessRecord::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.DeviceAccessRecord.strClusterID)
}

// .Management.Interactive.Message.AccessedDevice accessedDevice = 3;
bool DeviceAccessRecord::has_accesseddevice() const {
  return this != internal_default_instance() && accesseddevice_ != NULL;
}
void DeviceAccessRecord::clear_accesseddevice() {
  if (GetArenaNoVirtual() == NULL && accesseddevice_ != NULL) delete accesseddevice_;
  accesseddevice_ = NULL;
}
const ::Management::Interactive::Message::AccessedDevice& DeviceAccessRecord::accesseddevice() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeviceAccessRecord.accessedDevice)
  return accesseddevice_ != NULL ? *accesseddevice_
                         : *::Management::Interactive::Message::AccessedDevice::internal_default_instance();
}
::Management::Interactive::Message::AccessedDevice* DeviceAccessRecord::mutable_accesseddevice() {
  
  if (accesseddevice_ == NULL) {
    accesseddevice_ = new ::Management::Interactive::Message::AccessedDevice;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.DeviceAccessRecord.accessedDevice)
  return accesseddevice_;
}
::Management::Interactive::Message::AccessedDevice* DeviceAccessRecord::release_accesseddevice() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.DeviceAccessRecord.accessedDevice)
  
  ::Management::Interactive::Message::AccessedDevice* temp = accesseddevice_;
  accesseddevice_ = NULL;
  return temp;
}
void DeviceAccessRecord::set_allocated_accesseddevice(::Management::Interactive::Message::AccessedDevice* accesseddevice) {
  delete accesseddevice_;
  accesseddevice_ = accesseddevice;
  if (accesseddevice) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.DeviceAccessRecord.accessedDevice)
}

// string strCreateDate = 4;
void DeviceAccessRecord::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceAccessRecord::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
  return strcreatedate_.GetNoArena();
}
void DeviceAccessRecord::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
}
#if LANG_CXX11
void DeviceAccessRecord::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
}
#endif
void DeviceAccessRecord::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
}
void DeviceAccessRecord::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
}
::std::string* DeviceAccessRecord::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceAccessRecord::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceAccessRecord::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.DeviceAccessRecord.strCreateDate)
}

// uint32 uiStatus = 5;
void DeviceAccessRecord::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 DeviceAccessRecord::uistatus() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeviceAccessRecord.uiStatus)
  return uistatus_;
}
void DeviceAccessRecord::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.DeviceAccessRecord.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAccessRecord::kStrAccessIDFieldNumber;
const int UserAccessRecord::kStrClusterIDFieldNumber;
const int UserAccessRecord::kAccessedUserFieldNumber;
const int UserAccessRecord::kStrCreateDateFieldNumber;
const int UserAccessRecord::kUiStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAccessRecord::UserAccessRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.UserAccessRecord)
}
UserAccessRecord::UserAccessRecord(const UserAccessRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.straccessid().size() > 0) {
    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcreatedate().size() > 0) {
    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.has_accesseduser()) {
    accesseduser_ = new ::Management::Interactive::Message::AccessedUser(*from.accesseduser_);
  } else {
    accesseduser_ = NULL;
  }
  uistatus_ = from.uistatus_;
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.UserAccessRecord)
}

void UserAccessRecord::SharedCtor() {
  straccessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accesseduser_, 0, reinterpret_cast<char*>(&uistatus_) -
    reinterpret_cast<char*>(&accesseduser_) + sizeof(uistatus_));
  _cached_size_ = 0;
}

UserAccessRecord::~UserAccessRecord() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.UserAccessRecord)
  SharedDtor();
}

void UserAccessRecord::SharedDtor() {
  straccessid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete accesseduser_;
  }
}

void UserAccessRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserAccessRecord::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[5].descriptor;
}

const UserAccessRecord& UserAccessRecord::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserAccessRecord* UserAccessRecord::New(::google::protobuf::Arena* arena) const {
  UserAccessRecord* n = new UserAccessRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserAccessRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.UserAccessRecord)
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && accesseduser_ != NULL) {
    delete accesseduser_;
  }
  accesseduser_ = NULL;
  uistatus_ = 0u;
}

bool UserAccessRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.UserAccessRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strAccessID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straccessid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straccessid().data(), this->straccessid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.UserAccessRecord.strAccessID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strClusterID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.UserAccessRecord.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.AccessedUser accessedUser = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_accesseduser()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCreateDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.UserAccessRecord.strCreateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiStatus = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uistatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.UserAccessRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.UserAccessRecord)
  return false;
#undef DO_
}

void UserAccessRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.UserAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.UserAccessRecord.strAccessID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straccessid(), output);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.UserAccessRecord.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strclusterid(), output);
  }

  // .Management.Interactive.Message.AccessedUser accessedUser = 3;
  if (this->has_accesseduser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->accesseduser_, output);
  }

  // string strCreateDate = 4;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.UserAccessRecord.strCreateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strcreatedate(), output);
  }

  // uint32 uiStatus = 5;
  if (this->uistatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uistatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.UserAccessRecord)
}

::google::protobuf::uint8* UserAccessRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.UserAccessRecord)
  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straccessid().data(), this->straccessid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.UserAccessRecord.strAccessID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straccessid(), target);
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.UserAccessRecord.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strclusterid(), target);
  }

  // .Management.Interactive.Message.AccessedUser accessedUser = 3;
  if (this->has_accesseduser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->accesseduser_, false, target);
  }

  // string strCreateDate = 4;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.UserAccessRecord.strCreateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcreatedate(), target);
  }

  // uint32 uiStatus = 5;
  if (this->uistatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uistatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.UserAccessRecord)
  return target;
}

size_t UserAccessRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.UserAccessRecord)
  size_t total_size = 0;

  // string strAccessID = 1;
  if (this->straccessid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straccessid());
  }

  // string strClusterID = 2;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strCreateDate = 4;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  // .Management.Interactive.Message.AccessedUser accessedUser = 3;
  if (this->has_accesseduser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->accesseduser_);
  }

  // uint32 uiStatus = 5;
  if (this->uistatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uistatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserAccessRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.UserAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAccessRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAccessRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.UserAccessRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.UserAccessRecord)
    MergeFrom(*source);
  }
}

void UserAccessRecord::MergeFrom(const UserAccessRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.UserAccessRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.straccessid().size() > 0) {

    straccessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straccessid_);
  }
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
  if (from.has_accesseduser()) {
    mutable_accesseduser()->::Management::Interactive::Message::AccessedUser::MergeFrom(from.accesseduser());
  }
  if (from.uistatus() != 0) {
    set_uistatus(from.uistatus());
  }
}

void UserAccessRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.UserAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAccessRecord::CopyFrom(const UserAccessRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.UserAccessRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAccessRecord::IsInitialized() const {
  return true;
}

void UserAccessRecord::Swap(UserAccessRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAccessRecord::InternalSwap(UserAccessRecord* other) {
  straccessid_.Swap(&other->straccessid_);
  strclusterid_.Swap(&other->strclusterid_);
  strcreatedate_.Swap(&other->strcreatedate_);
  std::swap(accesseduser_, other->accesseduser_);
  std::swap(uistatus_, other->uistatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserAccessRecord::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserAccessRecord

// string strAccessID = 1;
void UserAccessRecord::clear_straccessid() {
  straccessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::straccessid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.UserAccessRecord.strAccessID)
  return straccessid_.GetNoArena();
}
void UserAccessRecord::set_straccessid(const ::std::string& value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.UserAccessRecord.strAccessID)
}
#if LANG_CXX11
void UserAccessRecord::set_straccessid(::std::string&& value) {
  
  straccessid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.UserAccessRecord.strAccessID)
}
#endif
void UserAccessRecord::set_straccessid(const char* value) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.UserAccessRecord.strAccessID)
}
void UserAccessRecord::set_straccessid(const char* value, size_t size) {
  
  straccessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.UserAccessRecord.strAccessID)
}
::std::string* UserAccessRecord::mutable_straccessid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.UserAccessRecord.strAccessID)
  return straccessid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_straccessid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.UserAccessRecord.strAccessID)
  
  return straccessid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_straccessid(::std::string* straccessid) {
  if (straccessid != NULL) {
    
  } else {
    
  }
  straccessid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straccessid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.UserAccessRecord.strAccessID)
}

// string strClusterID = 2;
void UserAccessRecord::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.UserAccessRecord.strClusterID)
  return strclusterid_.GetNoArena();
}
void UserAccessRecord::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.UserAccessRecord.strClusterID)
}
#if LANG_CXX11
void UserAccessRecord::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.UserAccessRecord.strClusterID)
}
#endif
void UserAccessRecord::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.UserAccessRecord.strClusterID)
}
void UserAccessRecord::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.UserAccessRecord.strClusterID)
}
::std::string* UserAccessRecord::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.UserAccessRecord.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.UserAccessRecord.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.UserAccessRecord.strClusterID)
}

// .Management.Interactive.Message.AccessedUser accessedUser = 3;
bool UserAccessRecord::has_accesseduser() const {
  return this != internal_default_instance() && accesseduser_ != NULL;
}
void UserAccessRecord::clear_accesseduser() {
  if (GetArenaNoVirtual() == NULL && accesseduser_ != NULL) delete accesseduser_;
  accesseduser_ = NULL;
}
const ::Management::Interactive::Message::AccessedUser& UserAccessRecord::accesseduser() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.UserAccessRecord.accessedUser)
  return accesseduser_ != NULL ? *accesseduser_
                         : *::Management::Interactive::Message::AccessedUser::internal_default_instance();
}
::Management::Interactive::Message::AccessedUser* UserAccessRecord::mutable_accesseduser() {
  
  if (accesseduser_ == NULL) {
    accesseduser_ = new ::Management::Interactive::Message::AccessedUser;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.UserAccessRecord.accessedUser)
  return accesseduser_;
}
::Management::Interactive::Message::AccessedUser* UserAccessRecord::release_accesseduser() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.UserAccessRecord.accessedUser)
  
  ::Management::Interactive::Message::AccessedUser* temp = accesseduser_;
  accesseduser_ = NULL;
  return temp;
}
void UserAccessRecord::set_allocated_accesseduser(::Management::Interactive::Message::AccessedUser* accesseduser) {
  delete accesseduser_;
  accesseduser_ = accesseduser;
  if (accesseduser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.UserAccessRecord.accessedUser)
}

// string strCreateDate = 4;
void UserAccessRecord::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserAccessRecord::strcreatedate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.UserAccessRecord.strCreateDate)
  return strcreatedate_.GetNoArena();
}
void UserAccessRecord::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.UserAccessRecord.strCreateDate)
}
#if LANG_CXX11
void UserAccessRecord::set_strcreatedate(::std::string&& value) {
  
  strcreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.UserAccessRecord.strCreateDate)
}
#endif
void UserAccessRecord::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.UserAccessRecord.strCreateDate)
}
void UserAccessRecord::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.UserAccessRecord.strCreateDate)
}
::std::string* UserAccessRecord::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.UserAccessRecord.strCreateDate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserAccessRecord::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.UserAccessRecord.strCreateDate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserAccessRecord::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.UserAccessRecord.strCreateDate)
}

// uint32 uiStatus = 5;
void UserAccessRecord::clear_uistatus() {
  uistatus_ = 0u;
}
::google::protobuf::uint32 UserAccessRecord::uistatus() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.UserAccessRecord.uiStatus)
  return uistatus_;
}
void UserAccessRecord::set_uistatus(::google::protobuf::uint32 value) {
  
  uistatus_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.UserAccessRecord.uiStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddClusterReq::kClusterInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddClusterReq::AddClusterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.AddClusterReq)
}
AddClusterReq::AddClusterReq(const AddClusterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterinfo()) {
    clusterinfo_ = new ::Management::Interactive::Message::Cluster(*from.clusterinfo_);
  } else {
    clusterinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.AddClusterReq)
}

void AddClusterReq::SharedCtor() {
  clusterinfo_ = NULL;
  _cached_size_ = 0;
}

AddClusterReq::~AddClusterReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.AddClusterReq)
  SharedDtor();
}

void AddClusterReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete clusterinfo_;
  }
}

void AddClusterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddClusterReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[6].descriptor;
}

const AddClusterReq& AddClusterReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddClusterReq* AddClusterReq::New(::google::protobuf::Arena* arena) const {
  AddClusterReq* n = new AddClusterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddClusterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.AddClusterReq)
  if (GetArenaNoVirtual() == NULL && clusterinfo_ != NULL) {
    delete clusterinfo_;
  }
  clusterinfo_ = NULL;
}

bool AddClusterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.AddClusterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Management.Interactive.Message.Cluster clusterInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clusterinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.AddClusterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.AddClusterReq)
  return false;
#undef DO_
}

void AddClusterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.AddClusterReq)
  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->clusterinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.AddClusterReq)
}

::google::protobuf::uint8* AddClusterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.AddClusterReq)
  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->clusterinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.AddClusterReq)
  return target;
}

size_t AddClusterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.AddClusterReq)
  size_t total_size = 0;

  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clusterinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddClusterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.AddClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddClusterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddClusterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.AddClusterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.AddClusterReq)
    MergeFrom(*source);
  }
}

void AddClusterReq::MergeFrom(const AddClusterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.AddClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterinfo()) {
    mutable_clusterinfo()->::Management::Interactive::Message::Cluster::MergeFrom(from.clusterinfo());
  }
}

void AddClusterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.AddClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddClusterReq::CopyFrom(const AddClusterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.AddClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddClusterReq::IsInitialized() const {
  return true;
}

void AddClusterReq::Swap(AddClusterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddClusterReq::InternalSwap(AddClusterReq* other) {
  std::swap(clusterinfo_, other->clusterinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddClusterReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddClusterReq

// .Management.Interactive.Message.Cluster clusterInfo = 1;
bool AddClusterReq::has_clusterinfo() const {
  return this != internal_default_instance() && clusterinfo_ != NULL;
}
void AddClusterReq::clear_clusterinfo() {
  if (GetArenaNoVirtual() == NULL && clusterinfo_ != NULL) delete clusterinfo_;
  clusterinfo_ = NULL;
}
const ::Management::Interactive::Message::Cluster& AddClusterReq::clusterinfo() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AddClusterReq.clusterInfo)
  return clusterinfo_ != NULL ? *clusterinfo_
                         : *::Management::Interactive::Message::Cluster::internal_default_instance();
}
::Management::Interactive::Message::Cluster* AddClusterReq::mutable_clusterinfo() {
  
  if (clusterinfo_ == NULL) {
    clusterinfo_ = new ::Management::Interactive::Message::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AddClusterReq.clusterInfo)
  return clusterinfo_;
}
::Management::Interactive::Message::Cluster* AddClusterReq::release_clusterinfo() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AddClusterReq.clusterInfo)
  
  ::Management::Interactive::Message::Cluster* temp = clusterinfo_;
  clusterinfo_ = NULL;
  return temp;
}
void AddClusterReq::set_allocated_clusterinfo(::Management::Interactive::Message::Cluster* clusterinfo) {
  delete clusterinfo_;
  clusterinfo_ = clusterinfo;
  if (clusterinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AddClusterReq.clusterInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddClusterRsp::kStrClusterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddClusterRsp::AddClusterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.AddClusterRsp)
}
AddClusterRsp::AddClusterRsp(const AddClusterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.AddClusterRsp)
}

void AddClusterRsp::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddClusterRsp::~AddClusterRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.AddClusterRsp)
  SharedDtor();
}

void AddClusterRsp::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddClusterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddClusterRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[7].descriptor;
}

const AddClusterRsp& AddClusterRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddClusterRsp* AddClusterRsp::New(::google::protobuf::Arena* arena) const {
  AddClusterRsp* n = new AddClusterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddClusterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.AddClusterRsp)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddClusterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.AddClusterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.AddClusterRsp.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.AddClusterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.AddClusterRsp)
  return false;
#undef DO_
}

void AddClusterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.AddClusterRsp)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AddClusterRsp.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.AddClusterRsp)
}

::google::protobuf::uint8* AddClusterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.AddClusterRsp)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.AddClusterRsp.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.AddClusterRsp)
  return target;
}

size_t AddClusterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.AddClusterRsp)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddClusterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.AddClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddClusterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddClusterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.AddClusterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.AddClusterRsp)
    MergeFrom(*source);
  }
}

void AddClusterRsp::MergeFrom(const AddClusterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.AddClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
}

void AddClusterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.AddClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddClusterRsp::CopyFrom(const AddClusterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.AddClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddClusterRsp::IsInitialized() const {
  return true;
}

void AddClusterRsp::Swap(AddClusterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddClusterRsp::InternalSwap(AddClusterRsp* other) {
  strclusterid_.Swap(&other->strclusterid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddClusterRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddClusterRsp

// string strClusterID = 1;
void AddClusterRsp::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddClusterRsp::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.AddClusterRsp.strClusterID)
  return strclusterid_.GetNoArena();
}
void AddClusterRsp::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.AddClusterRsp.strClusterID)
}
#if LANG_CXX11
void AddClusterRsp::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.AddClusterRsp.strClusterID)
}
#endif
void AddClusterRsp::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.AddClusterRsp.strClusterID)
}
void AddClusterRsp::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.AddClusterRsp.strClusterID)
}
::std::string* AddClusterRsp::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.AddClusterRsp.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddClusterRsp::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.AddClusterRsp.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddClusterRsp::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.AddClusterRsp.strClusterID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterReq::kStrClusterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterReq::DeleteClusterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.DeleteClusterReq)
}
DeleteClusterReq::DeleteClusterReq(const DeleteClusterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.DeleteClusterReq)
}

void DeleteClusterReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteClusterReq::~DeleteClusterReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.DeleteClusterReq)
  SharedDtor();
}

void DeleteClusterReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteClusterReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[8].descriptor;
}

const DeleteClusterReq& DeleteClusterReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteClusterReq* DeleteClusterReq::New(::google::protobuf::Arena* arena) const {
  DeleteClusterReq* n = new DeleteClusterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteClusterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.DeleteClusterReq)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteClusterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.DeleteClusterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.DeleteClusterReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.DeleteClusterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.DeleteClusterReq)
  return false;
#undef DO_
}

void DeleteClusterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.DeleteClusterReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeleteClusterReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.DeleteClusterReq)
}

::google::protobuf::uint8* DeleteClusterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.DeleteClusterReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeleteClusterReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.DeleteClusterReq)
  return target;
}

size_t DeleteClusterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.DeleteClusterReq)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteClusterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.DeleteClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.DeleteClusterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.DeleteClusterReq)
    MergeFrom(*source);
  }
}

void DeleteClusterReq::MergeFrom(const DeleteClusterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.DeleteClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
}

void DeleteClusterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.DeleteClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterReq::CopyFrom(const DeleteClusterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.DeleteClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterReq::IsInitialized() const {
  return true;
}

void DeleteClusterReq::Swap(DeleteClusterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterReq::InternalSwap(DeleteClusterReq* other) {
  strclusterid_.Swap(&other->strclusterid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteClusterReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteClusterReq

// string strClusterID = 1;
void DeleteClusterReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteClusterReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeleteClusterReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void DeleteClusterReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.DeleteClusterReq.strClusterID)
}
#if LANG_CXX11
void DeleteClusterReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.DeleteClusterReq.strClusterID)
}
#endif
void DeleteClusterReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.DeleteClusterReq.strClusterID)
}
void DeleteClusterReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.DeleteClusterReq.strClusterID)
}
::std::string* DeleteClusterReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.DeleteClusterReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteClusterReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.DeleteClusterReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteClusterReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.DeleteClusterReq.strClusterID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRsp::DeleteClusterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.DeleteClusterRsp)
}
DeleteClusterRsp::DeleteClusterRsp(const DeleteClusterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.DeleteClusterRsp)
}

void DeleteClusterRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteClusterRsp::~DeleteClusterRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.DeleteClusterRsp)
  SharedDtor();
}

void DeleteClusterRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteClusterRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[9].descriptor;
}

const DeleteClusterRsp& DeleteClusterRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteClusterRsp* DeleteClusterRsp::New(::google::protobuf::Arena* arena) const {
  DeleteClusterRsp* n = new DeleteClusterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteClusterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.DeleteClusterRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteClusterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.DeleteClusterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.DeleteClusterRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.DeleteClusterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.DeleteClusterRsp)
  return false;
#undef DO_
}

void DeleteClusterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.DeleteClusterRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeleteClusterRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.DeleteClusterRsp)
}

::google::protobuf::uint8* DeleteClusterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.DeleteClusterRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.DeleteClusterRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.DeleteClusterRsp)
  return target;
}

size_t DeleteClusterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.DeleteClusterRsp)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteClusterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.DeleteClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.DeleteClusterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.DeleteClusterRsp)
    MergeFrom(*source);
  }
}

void DeleteClusterRsp::MergeFrom(const DeleteClusterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.DeleteClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void DeleteClusterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.DeleteClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRsp::CopyFrom(const DeleteClusterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.DeleteClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRsp::IsInitialized() const {
  return true;
}

void DeleteClusterRsp::Swap(DeleteClusterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRsp::InternalSwap(DeleteClusterRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteClusterRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteClusterRsp

// string strValue = 1;
void DeleteClusterRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteClusterRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.DeleteClusterRsp.strValue)
  return strvalue_.GetNoArena();
}
void DeleteClusterRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.DeleteClusterRsp.strValue)
}
#if LANG_CXX11
void DeleteClusterRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.DeleteClusterRsp.strValue)
}
#endif
void DeleteClusterRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.DeleteClusterRsp.strValue)
}
void DeleteClusterRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.DeleteClusterRsp.strValue)
}
::std::string* DeleteClusterRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.DeleteClusterRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteClusterRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.DeleteClusterRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteClusterRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.DeleteClusterRsp.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyClusterReq::kClusterInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyClusterReq::ModifyClusterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.ModifyClusterReq)
}
ModifyClusterReq::ModifyClusterReq(const ModifyClusterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterinfo()) {
    clusterinfo_ = new ::Management::Interactive::Message::Cluster(*from.clusterinfo_);
  } else {
    clusterinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.ModifyClusterReq)
}

void ModifyClusterReq::SharedCtor() {
  clusterinfo_ = NULL;
  _cached_size_ = 0;
}

ModifyClusterReq::~ModifyClusterReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.ModifyClusterReq)
  SharedDtor();
}

void ModifyClusterReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete clusterinfo_;
  }
}

void ModifyClusterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyClusterReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[10].descriptor;
}

const ModifyClusterReq& ModifyClusterReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyClusterReq* ModifyClusterReq::New(::google::protobuf::Arena* arena) const {
  ModifyClusterReq* n = new ModifyClusterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyClusterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.ModifyClusterReq)
  if (GetArenaNoVirtual() == NULL && clusterinfo_ != NULL) {
    delete clusterinfo_;
  }
  clusterinfo_ = NULL;
}

bool ModifyClusterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.ModifyClusterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Management.Interactive.Message.Cluster clusterInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clusterinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.ModifyClusterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.ModifyClusterReq)
  return false;
#undef DO_
}

void ModifyClusterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.ModifyClusterReq)
  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->clusterinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.ModifyClusterReq)
}

::google::protobuf::uint8* ModifyClusterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.ModifyClusterReq)
  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->clusterinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.ModifyClusterReq)
  return target;
}

size_t ModifyClusterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.ModifyClusterReq)
  size_t total_size = 0;

  // .Management.Interactive.Message.Cluster clusterInfo = 1;
  if (this->has_clusterinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clusterinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyClusterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.ModifyClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyClusterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyClusterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.ModifyClusterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.ModifyClusterReq)
    MergeFrom(*source);
  }
}

void ModifyClusterReq::MergeFrom(const ModifyClusterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.ModifyClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterinfo()) {
    mutable_clusterinfo()->::Management::Interactive::Message::Cluster::MergeFrom(from.clusterinfo());
  }
}

void ModifyClusterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.ModifyClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyClusterReq::CopyFrom(const ModifyClusterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.ModifyClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyClusterReq::IsInitialized() const {
  return true;
}

void ModifyClusterReq::Swap(ModifyClusterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyClusterReq::InternalSwap(ModifyClusterReq* other) {
  std::swap(clusterinfo_, other->clusterinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyClusterReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyClusterReq

// .Management.Interactive.Message.Cluster clusterInfo = 1;
bool ModifyClusterReq::has_clusterinfo() const {
  return this != internal_default_instance() && clusterinfo_ != NULL;
}
void ModifyClusterReq::clear_clusterinfo() {
  if (GetArenaNoVirtual() == NULL && clusterinfo_ != NULL) delete clusterinfo_;
  clusterinfo_ = NULL;
}
const ::Management::Interactive::Message::Cluster& ModifyClusterReq::clusterinfo() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ModifyClusterReq.clusterInfo)
  return clusterinfo_ != NULL ? *clusterinfo_
                         : *::Management::Interactive::Message::Cluster::internal_default_instance();
}
::Management::Interactive::Message::Cluster* ModifyClusterReq::mutable_clusterinfo() {
  
  if (clusterinfo_ == NULL) {
    clusterinfo_ = new ::Management::Interactive::Message::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ModifyClusterReq.clusterInfo)
  return clusterinfo_;
}
::Management::Interactive::Message::Cluster* ModifyClusterReq::release_clusterinfo() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ModifyClusterReq.clusterInfo)
  
  ::Management::Interactive::Message::Cluster* temp = clusterinfo_;
  clusterinfo_ = NULL;
  return temp;
}
void ModifyClusterReq::set_allocated_clusterinfo(::Management::Interactive::Message::Cluster* clusterinfo) {
  delete clusterinfo_;
  clusterinfo_ = clusterinfo;
  if (clusterinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ModifyClusterReq.clusterInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyClusterRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyClusterRsp::ModifyClusterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.ModifyClusterRsp)
}
ModifyClusterRsp::ModifyClusterRsp(const ModifyClusterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.ModifyClusterRsp)
}

void ModifyClusterRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyClusterRsp::~ModifyClusterRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.ModifyClusterRsp)
  SharedDtor();
}

void ModifyClusterRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyClusterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyClusterRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[11].descriptor;
}

const ModifyClusterRsp& ModifyClusterRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyClusterRsp* ModifyClusterRsp::New(::google::protobuf::Arena* arena) const {
  ModifyClusterRsp* n = new ModifyClusterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyClusterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.ModifyClusterRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyClusterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.ModifyClusterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.ModifyClusterRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.ModifyClusterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.ModifyClusterRsp)
  return false;
#undef DO_
}

void ModifyClusterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.ModifyClusterRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ModifyClusterRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.ModifyClusterRsp)
}

::google::protobuf::uint8* ModifyClusterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.ModifyClusterRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ModifyClusterRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.ModifyClusterRsp)
  return target;
}

size_t ModifyClusterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.ModifyClusterRsp)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyClusterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.ModifyClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyClusterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyClusterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.ModifyClusterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.ModifyClusterRsp)
    MergeFrom(*source);
  }
}

void ModifyClusterRsp::MergeFrom(const ModifyClusterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.ModifyClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ModifyClusterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.ModifyClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyClusterRsp::CopyFrom(const ModifyClusterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.ModifyClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyClusterRsp::IsInitialized() const {
  return true;
}

void ModifyClusterRsp::Swap(ModifyClusterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyClusterRsp::InternalSwap(ModifyClusterRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyClusterRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyClusterRsp

// string strValue = 1;
void ModifyClusterRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyClusterRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ModifyClusterRsp.strValue)
  return strvalue_.GetNoArena();
}
void ModifyClusterRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ModifyClusterRsp.strValue)
}
#if LANG_CXX11
void ModifyClusterRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.ModifyClusterRsp.strValue)
}
#endif
void ModifyClusterRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.ModifyClusterRsp.strValue)
}
void ModifyClusterRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.ModifyClusterRsp.strValue)
}
::std::string* ModifyClusterRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ModifyClusterRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyClusterRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ModifyClusterRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyClusterRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ModifyClusterRsp.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryClusterInfoReq::kStrClusterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryClusterInfoReq::QueryClusterInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryClusterInfoReq)
}
QueryClusterInfoReq::QueryClusterInfoReq(const QueryClusterInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryClusterInfoReq)
}

void QueryClusterInfoReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryClusterInfoReq::~QueryClusterInfoReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryClusterInfoReq)
  SharedDtor();
}

void QueryClusterInfoReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryClusterInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryClusterInfoReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[12].descriptor;
}

const QueryClusterInfoReq& QueryClusterInfoReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryClusterInfoReq* QueryClusterInfoReq::New(::google::protobuf::Arena* arena) const {
  QueryClusterInfoReq* n = new QueryClusterInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryClusterInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryClusterInfoReq)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryClusterInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryClusterInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterInfoReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryClusterInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryClusterInfoReq)
  return false;
#undef DO_
}

void QueryClusterInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryClusterInfoReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterInfoReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryClusterInfoReq)
}

::google::protobuf::uint8* QueryClusterInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryClusterInfoReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterInfoReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryClusterInfoReq)
  return target;
}

size_t QueryClusterInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryClusterInfoReq)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryClusterInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryClusterInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryClusterInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryClusterInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryClusterInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryClusterInfoReq)
    MergeFrom(*source);
  }
}

void QueryClusterInfoReq::MergeFrom(const QueryClusterInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryClusterInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
}

void QueryClusterInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryClusterInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryClusterInfoReq::CopyFrom(const QueryClusterInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryClusterInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClusterInfoReq::IsInitialized() const {
  return true;
}

void QueryClusterInfoReq::Swap(QueryClusterInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryClusterInfoReq::InternalSwap(QueryClusterInfoReq* other) {
  strclusterid_.Swap(&other->strclusterid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryClusterInfoReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryClusterInfoReq

// string strClusterID = 1;
void QueryClusterInfoReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterInfoReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void QueryClusterInfoReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
}
#if LANG_CXX11
void QueryClusterInfoReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
}
#endif
void QueryClusterInfoReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
}
void QueryClusterInfoReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
}
::std::string* QueryClusterInfoReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterInfoReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterInfoReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterInfoReq.strClusterID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryClusterInfoRsp::kClusterStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryClusterInfoRsp::QueryClusterInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryClusterInfoRsp)
}
QueryClusterInfoRsp::QueryClusterInfoRsp(const QueryClusterInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterstatus()) {
    clusterstatus_ = new ::Management::Interactive::Message::ClusterStatus(*from.clusterstatus_);
  } else {
    clusterstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryClusterInfoRsp)
}

void QueryClusterInfoRsp::SharedCtor() {
  clusterstatus_ = NULL;
  _cached_size_ = 0;
}

QueryClusterInfoRsp::~QueryClusterInfoRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryClusterInfoRsp)
  SharedDtor();
}

void QueryClusterInfoRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete clusterstatus_;
  }
}

void QueryClusterInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryClusterInfoRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[13].descriptor;
}

const QueryClusterInfoRsp& QueryClusterInfoRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryClusterInfoRsp* QueryClusterInfoRsp::New(::google::protobuf::Arena* arena) const {
  QueryClusterInfoRsp* n = new QueryClusterInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryClusterInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryClusterInfoRsp)
  if (GetArenaNoVirtual() == NULL && clusterstatus_ != NULL) {
    delete clusterstatus_;
  }
  clusterstatus_ = NULL;
}

bool QueryClusterInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryClusterInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clusterstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryClusterInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryClusterInfoRsp)
  return false;
#undef DO_
}

void QueryClusterInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryClusterInfoRsp)
  // .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
  if (this->has_clusterstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->clusterstatus_, output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryClusterInfoRsp)
}

::google::protobuf::uint8* QueryClusterInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryClusterInfoRsp)
  // .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
  if (this->has_clusterstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->clusterstatus_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryClusterInfoRsp)
  return target;
}

size_t QueryClusterInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryClusterInfoRsp)
  size_t total_size = 0;

  // .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
  if (this->has_clusterstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clusterstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryClusterInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryClusterInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryClusterInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryClusterInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryClusterInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryClusterInfoRsp)
    MergeFrom(*source);
  }
}

void QueryClusterInfoRsp::MergeFrom(const QueryClusterInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryClusterInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterstatus()) {
    mutable_clusterstatus()->::Management::Interactive::Message::ClusterStatus::MergeFrom(from.clusterstatus());
  }
}

void QueryClusterInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryClusterInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryClusterInfoRsp::CopyFrom(const QueryClusterInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryClusterInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClusterInfoRsp::IsInitialized() const {
  return true;
}

void QueryClusterInfoRsp::Swap(QueryClusterInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryClusterInfoRsp::InternalSwap(QueryClusterInfoRsp* other) {
  std::swap(clusterstatus_, other->clusterstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryClusterInfoRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryClusterInfoRsp

// .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
bool QueryClusterInfoRsp::has_clusterstatus() const {
  return this != internal_default_instance() && clusterstatus_ != NULL;
}
void QueryClusterInfoRsp::clear_clusterstatus() {
  if (GetArenaNoVirtual() == NULL && clusterstatus_ != NULL) delete clusterstatus_;
  clusterstatus_ = NULL;
}
const ::Management::Interactive::Message::ClusterStatus& QueryClusterInfoRsp::clusterstatus() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterInfoRsp.clusterStatus)
  return clusterstatus_ != NULL ? *clusterstatus_
                         : *::Management::Interactive::Message::ClusterStatus::internal_default_instance();
}
::Management::Interactive::Message::ClusterStatus* QueryClusterInfoRsp::mutable_clusterstatus() {
  
  if (clusterstatus_ == NULL) {
    clusterstatus_ = new ::Management::Interactive::Message::ClusterStatus;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterInfoRsp.clusterStatus)
  return clusterstatus_;
}
::Management::Interactive::Message::ClusterStatus* QueryClusterInfoRsp::release_clusterstatus() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterInfoRsp.clusterStatus)
  
  ::Management::Interactive::Message::ClusterStatus* temp = clusterstatus_;
  clusterstatus_ = NULL;
  return temp;
}
void QueryClusterInfoRsp::set_allocated_clusterstatus(::Management::Interactive::Message::ClusterStatus* clusterstatus) {
  delete clusterstatus_;
  clusterstatus_ = clusterstatus;
  if (clusterstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterInfoRsp.clusterStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandClusterReq::kStrClusterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandClusterReq::ShakehandClusterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.ShakehandClusterReq)
}
ShakehandClusterReq::ShakehandClusterReq(const ShakehandClusterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.ShakehandClusterReq)
}

void ShakehandClusterReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandClusterReq::~ShakehandClusterReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.ShakehandClusterReq)
  SharedDtor();
}

void ShakehandClusterReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandClusterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandClusterReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[14].descriptor;
}

const ShakehandClusterReq& ShakehandClusterReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandClusterReq* ShakehandClusterReq::New(::google::protobuf::Arena* arena) const {
  ShakehandClusterReq* n = new ShakehandClusterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandClusterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.ShakehandClusterReq)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandClusterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.ShakehandClusterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.ShakehandClusterReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.ShakehandClusterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.ShakehandClusterReq)
  return false;
#undef DO_
}

void ShakehandClusterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.ShakehandClusterReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ShakehandClusterReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.ShakehandClusterReq)
}

::google::protobuf::uint8* ShakehandClusterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.ShakehandClusterReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ShakehandClusterReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.ShakehandClusterReq)
  return target;
}

size_t ShakehandClusterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.ShakehandClusterReq)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandClusterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.ShakehandClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandClusterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandClusterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.ShakehandClusterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.ShakehandClusterReq)
    MergeFrom(*source);
  }
}

void ShakehandClusterReq::MergeFrom(const ShakehandClusterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.ShakehandClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
}

void ShakehandClusterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.ShakehandClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandClusterReq::CopyFrom(const ShakehandClusterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.ShakehandClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandClusterReq::IsInitialized() const {
  return true;
}

void ShakehandClusterReq::Swap(ShakehandClusterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandClusterReq::InternalSwap(ShakehandClusterReq* other) {
  strclusterid_.Swap(&other->strclusterid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandClusterReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandClusterReq

// string strClusterID = 1;
void ShakehandClusterReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandClusterReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void ShakehandClusterReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
}
#if LANG_CXX11
void ShakehandClusterReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
}
#endif
void ShakehandClusterReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
}
void ShakehandClusterReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
}
::std::string* ShakehandClusterReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandClusterReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandClusterReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ShakehandClusterReq.strClusterID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandClusterRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandClusterRsp::ShakehandClusterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.ShakehandClusterRsp)
}
ShakehandClusterRsp::ShakehandClusterRsp(const ShakehandClusterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.ShakehandClusterRsp)
}

void ShakehandClusterRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandClusterRsp::~ShakehandClusterRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.ShakehandClusterRsp)
  SharedDtor();
}

void ShakehandClusterRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandClusterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandClusterRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[15].descriptor;
}

const ShakehandClusterRsp& ShakehandClusterRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakehandClusterRsp* ShakehandClusterRsp::New(::google::protobuf::Arena* arena) const {
  ShakehandClusterRsp* n = new ShakehandClusterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandClusterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.ShakehandClusterRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandClusterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.ShakehandClusterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.ShakehandClusterRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.ShakehandClusterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.ShakehandClusterRsp)
  return false;
#undef DO_
}

void ShakehandClusterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.ShakehandClusterRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ShakehandClusterRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.ShakehandClusterRsp)
}

::google::protobuf::uint8* ShakehandClusterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.ShakehandClusterRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ShakehandClusterRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.ShakehandClusterRsp)
  return target;
}

size_t ShakehandClusterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.ShakehandClusterRsp)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandClusterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.ShakehandClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakehandClusterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandClusterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.ShakehandClusterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.ShakehandClusterRsp)
    MergeFrom(*source);
  }
}

void ShakehandClusterRsp::MergeFrom(const ShakehandClusterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.ShakehandClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandClusterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.ShakehandClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandClusterRsp::CopyFrom(const ShakehandClusterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.ShakehandClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakehandClusterRsp::IsInitialized() const {
  return true;
}

void ShakehandClusterRsp::Swap(ShakehandClusterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandClusterRsp::InternalSwap(ShakehandClusterRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandClusterRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandClusterRsp

// string strValue = 1;
void ShakehandClusterRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandClusterRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ShakehandClusterRsp.strValue)
  return strvalue_.GetNoArena();
}
void ShakehandClusterRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ShakehandClusterRsp.strValue)
}
#if LANG_CXX11
void ShakehandClusterRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.ShakehandClusterRsp.strValue)
}
#endif
void ShakehandClusterRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.ShakehandClusterRsp.strValue)
}
void ShakehandClusterRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.ShakehandClusterRsp.strValue)
}
::std::string* ShakehandClusterRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ShakehandClusterRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandClusterRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ShakehandClusterRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandClusterRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ShakehandClusterRsp.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAllClusterReq::kStrManagementAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAllClusterReq::QueryAllClusterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryAllClusterReq)
}
QueryAllClusterReq::QueryAllClusterReq(const QueryAllClusterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strmanagementaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strmanagementaddress().size() > 0) {
    strmanagementaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmanagementaddress_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryAllClusterReq)
}

void QueryAllClusterReq::SharedCtor() {
  strmanagementaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryAllClusterReq::~QueryAllClusterReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryAllClusterReq)
  SharedDtor();
}

void QueryAllClusterReq::SharedDtor() {
  strmanagementaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryAllClusterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllClusterReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[16].descriptor;
}

const QueryAllClusterReq& QueryAllClusterReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAllClusterReq* QueryAllClusterReq::New(::google::protobuf::Arena* arena) const {
  QueryAllClusterReq* n = new QueryAllClusterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAllClusterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryAllClusterReq)
  strmanagementaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryAllClusterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryAllClusterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strManagementAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmanagementaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strmanagementaddress().data(), this->strmanagementaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryAllClusterReq.strManagementAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryAllClusterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryAllClusterReq)
  return false;
#undef DO_
}

void QueryAllClusterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryAllClusterReq)
  // string strManagementAddress = 1;
  if (this->strmanagementaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmanagementaddress().data(), this->strmanagementaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryAllClusterReq.strManagementAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strmanagementaddress(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryAllClusterReq)
}

::google::protobuf::uint8* QueryAllClusterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryAllClusterReq)
  // string strManagementAddress = 1;
  if (this->strmanagementaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmanagementaddress().data(), this->strmanagementaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryAllClusterReq.strManagementAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strmanagementaddress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryAllClusterReq)
  return target;
}

size_t QueryAllClusterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryAllClusterReq)
  size_t total_size = 0;

  // string strManagementAddress = 1;
  if (this->strmanagementaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strmanagementaddress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllClusterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryAllClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAllClusterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAllClusterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryAllClusterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryAllClusterReq)
    MergeFrom(*source);
  }
}

void QueryAllClusterReq::MergeFrom(const QueryAllClusterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryAllClusterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strmanagementaddress().size() > 0) {

    strmanagementaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmanagementaddress_);
  }
}

void QueryAllClusterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryAllClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllClusterReq::CopyFrom(const QueryAllClusterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryAllClusterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllClusterReq::IsInitialized() const {
  return true;
}

void QueryAllClusterReq::Swap(QueryAllClusterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAllClusterReq::InternalSwap(QueryAllClusterReq* other) {
  strmanagementaddress_.Swap(&other->strmanagementaddress_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAllClusterReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAllClusterReq

// string strManagementAddress = 1;
void QueryAllClusterReq::clear_strmanagementaddress() {
  strmanagementaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryAllClusterReq::strmanagementaddress() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
  return strmanagementaddress_.GetNoArena();
}
void QueryAllClusterReq::set_strmanagementaddress(const ::std::string& value) {
  
  strmanagementaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
}
#if LANG_CXX11
void QueryAllClusterReq::set_strmanagementaddress(::std::string&& value) {
  
  strmanagementaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
}
#endif
void QueryAllClusterReq::set_strmanagementaddress(const char* value) {
  
  strmanagementaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
}
void QueryAllClusterReq::set_strmanagementaddress(const char* value, size_t size) {
  
  strmanagementaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
}
::std::string* QueryAllClusterReq::mutable_strmanagementaddress() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
  return strmanagementaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryAllClusterReq::release_strmanagementaddress() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
  
  return strmanagementaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryAllClusterReq::set_allocated_strmanagementaddress(::std::string* strmanagementaddress) {
  if (strmanagementaddress != NULL) {
    
  } else {
    
  }
  strmanagementaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmanagementaddress);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryAllClusterReq.strManagementAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryAllClusterRsp::kClusterStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryAllClusterRsp::QueryAllClusterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryAllClusterRsp)
}
QueryAllClusterRsp::QueryAllClusterRsp(const QueryAllClusterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusterstatus_(from.clusterstatus_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryAllClusterRsp)
}

void QueryAllClusterRsp::SharedCtor() {
  _cached_size_ = 0;
}

QueryAllClusterRsp::~QueryAllClusterRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryAllClusterRsp)
  SharedDtor();
}

void QueryAllClusterRsp::SharedDtor() {
}

void QueryAllClusterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllClusterRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[17].descriptor;
}

const QueryAllClusterRsp& QueryAllClusterRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryAllClusterRsp* QueryAllClusterRsp::New(::google::protobuf::Arena* arena) const {
  QueryAllClusterRsp* n = new QueryAllClusterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryAllClusterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryAllClusterRsp)
  clusterstatus_.Clear();
}

bool QueryAllClusterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryAllClusterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_clusterstatus()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryAllClusterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryAllClusterRsp)
  return false;
#undef DO_
}

void QueryAllClusterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryAllClusterRsp)
  // repeated .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
  for (unsigned int i = 0, n = this->clusterstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clusterstatus(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryAllClusterRsp)
}

::google::protobuf::uint8* QueryAllClusterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryAllClusterRsp)
  // repeated .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
  for (unsigned int i = 0, n = this->clusterstatus_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->clusterstatus(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryAllClusterRsp)
  return target;
}

size_t QueryAllClusterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryAllClusterRsp)
  size_t total_size = 0;

  // repeated .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
  {
    unsigned int count = this->clusterstatus_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clusterstatus(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllClusterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryAllClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryAllClusterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryAllClusterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryAllClusterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryAllClusterRsp)
    MergeFrom(*source);
  }
}

void QueryAllClusterRsp::MergeFrom(const QueryAllClusterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryAllClusterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clusterstatus_.MergeFrom(from.clusterstatus_);
}

void QueryAllClusterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryAllClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllClusterRsp::CopyFrom(const QueryAllClusterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryAllClusterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllClusterRsp::IsInitialized() const {
  return true;
}

void QueryAllClusterRsp::Swap(QueryAllClusterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryAllClusterRsp::InternalSwap(QueryAllClusterRsp* other) {
  clusterstatus_.UnsafeArenaSwap(&other->clusterstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryAllClusterRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryAllClusterRsp

// repeated .Management.Interactive.Message.ClusterStatus clusterStatus = 1;
int QueryAllClusterRsp::clusterstatus_size() const {
  return clusterstatus_.size();
}
void QueryAllClusterRsp::clear_clusterstatus() {
  clusterstatus_.Clear();
}
const ::Management::Interactive::Message::ClusterStatus& QueryAllClusterRsp::clusterstatus(int index) const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryAllClusterRsp.clusterStatus)
  return clusterstatus_.Get(index);
}
::Management::Interactive::Message::ClusterStatus* QueryAllClusterRsp::mutable_clusterstatus(int index) {
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryAllClusterRsp.clusterStatus)
  return clusterstatus_.Mutable(index);
}
::Management::Interactive::Message::ClusterStatus* QueryAllClusterRsp::add_clusterstatus() {
  // @@protoc_insertion_point(field_add:Management.Interactive.Message.QueryAllClusterRsp.clusterStatus)
  return clusterstatus_.Add();
}
::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::ClusterStatus >*
QueryAllClusterRsp::mutable_clusterstatus() {
  // @@protoc_insertion_point(field_mutable_list:Management.Interactive.Message.QueryAllClusterRsp.clusterStatus)
  return &clusterstatus_;
}
const ::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::ClusterStatus >&
QueryAllClusterRsp::clusterstatus() const {
  // @@protoc_insertion_point(field_list:Management.Interactive.Message.QueryAllClusterRsp.clusterStatus)
  return clusterstatus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryClusterDeviceReq::kStrClusterIDFieldNumber;
const int QueryClusterDeviceReq::kStrBegindateFieldNumber;
const int QueryClusterDeviceReq::kStrEnddateFieldNumber;
const int QueryClusterDeviceReq::kUiRecordTypeFieldNumber;
const int QueryClusterDeviceReq::kUiBeginIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryClusterDeviceReq::QueryClusterDeviceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryClusterDeviceReq)
}
QueryClusterDeviceReq::QueryClusterDeviceReq(const QueryClusterDeviceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  ::memcpy(&uirecordtype_, &from.uirecordtype_,
    reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uirecordtype_) + sizeof(uibeginindex_));
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryClusterDeviceReq)
}

void QueryClusterDeviceReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uirecordtype_, 0, reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uirecordtype_) + sizeof(uibeginindex_));
  _cached_size_ = 0;
}

QueryClusterDeviceReq::~QueryClusterDeviceReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryClusterDeviceReq)
  SharedDtor();
}

void QueryClusterDeviceReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryClusterDeviceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryClusterDeviceReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[18].descriptor;
}

const QueryClusterDeviceReq& QueryClusterDeviceReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryClusterDeviceReq* QueryClusterDeviceReq::New(::google::protobuf::Arena* arena) const {
  QueryClusterDeviceReq* n = new QueryClusterDeviceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryClusterDeviceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryClusterDeviceReq)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uirecordtype_, 0, reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uirecordtype_) + sizeof(uibeginindex_));
}

bool QueryClusterDeviceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryClusterDeviceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterDeviceReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBegindate = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterDeviceReq.strBegindate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEnddate = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterDeviceReq.strEnddate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiRecordType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uirecordtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryClusterDeviceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryClusterDeviceReq)
  return false;
#undef DO_
}

void QueryClusterDeviceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryClusterDeviceReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterDeviceReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // string strBegindate = 2;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterDeviceReq.strBegindate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strbegindate(), output);
  }

  // string strEnddate = 3;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterDeviceReq.strEnddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strenddate(), output);
  }

  // uint32 uiRecordType = 4;
  if (this->uirecordtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uirecordtype(), output);
  }

  // uint32 uiBeginIndex = 5;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uibeginindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryClusterDeviceReq)
}

::google::protobuf::uint8* QueryClusterDeviceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryClusterDeviceReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterDeviceReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // string strBegindate = 2;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterDeviceReq.strBegindate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbegindate(), target);
  }

  // string strEnddate = 3;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterDeviceReq.strEnddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strenddate(), target);
  }

  // uint32 uiRecordType = 4;
  if (this->uirecordtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uirecordtype(), target);
  }

  // uint32 uiBeginIndex = 5;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uibeginindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryClusterDeviceReq)
  return target;
}

size_t QueryClusterDeviceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryClusterDeviceReq)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strBegindate = 2;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEnddate = 3;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // uint32 uiRecordType = 4;
  if (this->uirecordtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uirecordtype());
  }

  // uint32 uiBeginIndex = 5;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryClusterDeviceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryClusterDeviceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryClusterDeviceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryClusterDeviceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryClusterDeviceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryClusterDeviceReq)
    MergeFrom(*source);
  }
}

void QueryClusterDeviceReq::MergeFrom(const QueryClusterDeviceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryClusterDeviceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.uirecordtype() != 0) {
    set_uirecordtype(from.uirecordtype());
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryClusterDeviceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryClusterDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryClusterDeviceReq::CopyFrom(const QueryClusterDeviceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryClusterDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClusterDeviceReq::IsInitialized() const {
  return true;
}

void QueryClusterDeviceReq::Swap(QueryClusterDeviceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryClusterDeviceReq::InternalSwap(QueryClusterDeviceReq* other) {
  strclusterid_.Swap(&other->strclusterid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  std::swap(uirecordtype_, other->uirecordtype_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryClusterDeviceReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryClusterDeviceReq

// string strClusterID = 1;
void QueryClusterDeviceReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterDeviceReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void QueryClusterDeviceReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
}
#if LANG_CXX11
void QueryClusterDeviceReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
}
#endif
void QueryClusterDeviceReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
}
void QueryClusterDeviceReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
}
::std::string* QueryClusterDeviceReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterDeviceReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterDeviceReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterDeviceReq.strClusterID)
}

// string strBegindate = 2;
void QueryClusterDeviceReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterDeviceReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
  return strbegindate_.GetNoArena();
}
void QueryClusterDeviceReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
}
#if LANG_CXX11
void QueryClusterDeviceReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
}
#endif
void QueryClusterDeviceReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
}
void QueryClusterDeviceReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
}
::std::string* QueryClusterDeviceReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterDeviceReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterDeviceReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterDeviceReq.strBegindate)
}

// string strEnddate = 3;
void QueryClusterDeviceReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterDeviceReq::strenddate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
  return strenddate_.GetNoArena();
}
void QueryClusterDeviceReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
}
#if LANG_CXX11
void QueryClusterDeviceReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
}
#endif
void QueryClusterDeviceReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
}
void QueryClusterDeviceReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
}
::std::string* QueryClusterDeviceReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterDeviceReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterDeviceReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterDeviceReq.strEnddate)
}

// uint32 uiRecordType = 4;
void QueryClusterDeviceReq::clear_uirecordtype() {
  uirecordtype_ = 0u;
}
::google::protobuf::uint32 QueryClusterDeviceReq::uirecordtype() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterDeviceReq.uiRecordType)
  return uirecordtype_;
}
void QueryClusterDeviceReq::set_uirecordtype(::google::protobuf::uint32 value) {
  
  uirecordtype_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterDeviceReq.uiRecordType)
}

// uint32 uiBeginIndex = 5;
void QueryClusterDeviceReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryClusterDeviceReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterDeviceReq.uiBeginIndex)
  return uibeginindex_;
}
void QueryClusterDeviceReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterDeviceReq.uiBeginIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryClusterDeviceRsp::kAccessedDeviceInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryClusterDeviceRsp::QueryClusterDeviceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryClusterDeviceRsp)
}
QueryClusterDeviceRsp::QueryClusterDeviceRsp(const QueryClusterDeviceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      accesseddeviceinfo_(from.accesseddeviceinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryClusterDeviceRsp)
}

void QueryClusterDeviceRsp::SharedCtor() {
  _cached_size_ = 0;
}

QueryClusterDeviceRsp::~QueryClusterDeviceRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryClusterDeviceRsp)
  SharedDtor();
}

void QueryClusterDeviceRsp::SharedDtor() {
}

void QueryClusterDeviceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryClusterDeviceRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[19].descriptor;
}

const QueryClusterDeviceRsp& QueryClusterDeviceRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryClusterDeviceRsp* QueryClusterDeviceRsp::New(::google::protobuf::Arena* arena) const {
  QueryClusterDeviceRsp* n = new QueryClusterDeviceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryClusterDeviceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  accesseddeviceinfo_.Clear();
}

bool QueryClusterDeviceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Management.Interactive.Message.AccessedDevice accessedDeviceInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_accesseddeviceinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryClusterDeviceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryClusterDeviceRsp)
  return false;
#undef DO_
}

void QueryClusterDeviceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  // repeated .Management.Interactive.Message.AccessedDevice accessedDeviceInfo = 1;
  for (unsigned int i = 0, n = this->accesseddeviceinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accesseddeviceinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryClusterDeviceRsp)
}

::google::protobuf::uint8* QueryClusterDeviceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  // repeated .Management.Interactive.Message.AccessedDevice accessedDeviceInfo = 1;
  for (unsigned int i = 0, n = this->accesseddeviceinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->accesseddeviceinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryClusterDeviceRsp)
  return target;
}

size_t QueryClusterDeviceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  size_t total_size = 0;

  // repeated .Management.Interactive.Message.AccessedDevice accessedDeviceInfo = 1;
  {
    unsigned int count = this->accesseddeviceinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accesseddeviceinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryClusterDeviceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryClusterDeviceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryClusterDeviceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryClusterDeviceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryClusterDeviceRsp)
    MergeFrom(*source);
  }
}

void QueryClusterDeviceRsp::MergeFrom(const QueryClusterDeviceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accesseddeviceinfo_.MergeFrom(from.accesseddeviceinfo_);
}

void QueryClusterDeviceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryClusterDeviceRsp::CopyFrom(const QueryClusterDeviceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryClusterDeviceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClusterDeviceRsp::IsInitialized() const {
  return true;
}

void QueryClusterDeviceRsp::Swap(QueryClusterDeviceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryClusterDeviceRsp::InternalSwap(QueryClusterDeviceRsp* other) {
  accesseddeviceinfo_.UnsafeArenaSwap(&other->accesseddeviceinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryClusterDeviceRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryClusterDeviceRsp

// repeated .Management.Interactive.Message.AccessedDevice accessedDeviceInfo = 1;
int QueryClusterDeviceRsp::accesseddeviceinfo_size() const {
  return accesseddeviceinfo_.size();
}
void QueryClusterDeviceRsp::clear_accesseddeviceinfo() {
  accesseddeviceinfo_.Clear();
}
const ::Management::Interactive::Message::AccessedDevice& QueryClusterDeviceRsp::accesseddeviceinfo(int index) const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterDeviceRsp.accessedDeviceInfo)
  return accesseddeviceinfo_.Get(index);
}
::Management::Interactive::Message::AccessedDevice* QueryClusterDeviceRsp::mutable_accesseddeviceinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterDeviceRsp.accessedDeviceInfo)
  return accesseddeviceinfo_.Mutable(index);
}
::Management::Interactive::Message::AccessedDevice* QueryClusterDeviceRsp::add_accesseddeviceinfo() {
  // @@protoc_insertion_point(field_add:Management.Interactive.Message.QueryClusterDeviceRsp.accessedDeviceInfo)
  return accesseddeviceinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::AccessedDevice >*
QueryClusterDeviceRsp::mutable_accesseddeviceinfo() {
  // @@protoc_insertion_point(field_mutable_list:Management.Interactive.Message.QueryClusterDeviceRsp.accessedDeviceInfo)
  return &accesseddeviceinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::AccessedDevice >&
QueryClusterDeviceRsp::accesseddeviceinfo() const {
  // @@protoc_insertion_point(field_list:Management.Interactive.Message.QueryClusterDeviceRsp.accessedDeviceInfo)
  return accesseddeviceinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryClusterUserReq::kStrClusterIDFieldNumber;
const int QueryClusterUserReq::kStrBegindateFieldNumber;
const int QueryClusterUserReq::kStrEnddateFieldNumber;
const int QueryClusterUserReq::kUiRecordTypeFieldNumber;
const int QueryClusterUserReq::kUiBeginIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryClusterUserReq::QueryClusterUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryClusterUserReq)
}
QueryClusterUserReq::QueryClusterUserReq(const QueryClusterUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbegindate().size() > 0) {
    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strenddate().size() > 0) {
    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  ::memcpy(&uirecordtype_, &from.uirecordtype_,
    reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uirecordtype_) + sizeof(uibeginindex_));
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryClusterUserReq)
}

void QueryClusterUserReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uirecordtype_, 0, reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uirecordtype_) + sizeof(uibeginindex_));
  _cached_size_ = 0;
}

QueryClusterUserReq::~QueryClusterUserReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryClusterUserReq)
  SharedDtor();
}

void QueryClusterUserReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryClusterUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryClusterUserReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[20].descriptor;
}

const QueryClusterUserReq& QueryClusterUserReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryClusterUserReq* QueryClusterUserReq::New(::google::protobuf::Arena* arena) const {
  QueryClusterUserReq* n = new QueryClusterUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryClusterUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryClusterUserReq)
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uirecordtype_, 0, reinterpret_cast<char*>(&uibeginindex_) -
    reinterpret_cast<char*>(&uirecordtype_) + sizeof(uibeginindex_));
}

bool QueryClusterUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryClusterUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterUserReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBegindate = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbegindate().data(), this->strbegindate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterUserReq.strBegindate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEnddate = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.QueryClusterUserReq.strEnddate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiRecordType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uirecordtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uiBeginIndex = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uibeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryClusterUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryClusterUserReq)
  return false;
#undef DO_
}

void QueryClusterUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryClusterUserReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterUserReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // string strBegindate = 2;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterUserReq.strBegindate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strbegindate(), output);
  }

  // string strEnddate = 3;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterUserReq.strEnddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strenddate(), output);
  }

  // uint32 uiRecordType = 4;
  if (this->uirecordtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uirecordtype(), output);
  }

  // uint32 uiBeginIndex = 5;
  if (this->uibeginindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uibeginindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryClusterUserReq)
}

::google::protobuf::uint8* QueryClusterUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryClusterUserReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterUserReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // string strBegindate = 2;
  if (this->strbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbegindate().data(), this->strbegindate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterUserReq.strBegindate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbegindate(), target);
  }

  // string strEnddate = 3;
  if (this->strenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.QueryClusterUserReq.strEnddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strenddate(), target);
  }

  // uint32 uiRecordType = 4;
  if (this->uirecordtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uirecordtype(), target);
  }

  // uint32 uiBeginIndex = 5;
  if (this->uibeginindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uibeginindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryClusterUserReq)
  return target;
}

size_t QueryClusterUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryClusterUserReq)
  size_t total_size = 0;

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  // string strBegindate = 2;
  if (this->strbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbegindate());
  }

  // string strEnddate = 3;
  if (this->strenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strenddate());
  }

  // uint32 uiRecordType = 4;
  if (this->uirecordtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uirecordtype());
  }

  // uint32 uiBeginIndex = 5;
  if (this->uibeginindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uibeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryClusterUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryClusterUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryClusterUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryClusterUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryClusterUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryClusterUserReq)
    MergeFrom(*source);
  }
}

void QueryClusterUserReq::MergeFrom(const QueryClusterUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryClusterUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  if (from.strbegindate().size() > 0) {

    strbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbegindate_);
  }
  if (from.strenddate().size() > 0) {

    strenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strenddate_);
  }
  if (from.uirecordtype() != 0) {
    set_uirecordtype(from.uirecordtype());
  }
  if (from.uibeginindex() != 0) {
    set_uibeginindex(from.uibeginindex());
  }
}

void QueryClusterUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryClusterUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryClusterUserReq::CopyFrom(const QueryClusterUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryClusterUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClusterUserReq::IsInitialized() const {
  return true;
}

void QueryClusterUserReq::Swap(QueryClusterUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryClusterUserReq::InternalSwap(QueryClusterUserReq* other) {
  strclusterid_.Swap(&other->strclusterid_);
  strbegindate_.Swap(&other->strbegindate_);
  strenddate_.Swap(&other->strenddate_);
  std::swap(uirecordtype_, other->uirecordtype_);
  std::swap(uibeginindex_, other->uibeginindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryClusterUserReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryClusterUserReq

// string strClusterID = 1;
void QueryClusterUserReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterUserReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void QueryClusterUserReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
}
#if LANG_CXX11
void QueryClusterUserReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
}
#endif
void QueryClusterUserReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
}
void QueryClusterUserReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
}
::std::string* QueryClusterUserReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterUserReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterUserReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterUserReq.strClusterID)
}

// string strBegindate = 2;
void QueryClusterUserReq::clear_strbegindate() {
  strbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterUserReq::strbegindate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
  return strbegindate_.GetNoArena();
}
void QueryClusterUserReq::set_strbegindate(const ::std::string& value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
}
#if LANG_CXX11
void QueryClusterUserReq::set_strbegindate(::std::string&& value) {
  
  strbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
}
#endif
void QueryClusterUserReq::set_strbegindate(const char* value) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
}
void QueryClusterUserReq::set_strbegindate(const char* value, size_t size) {
  
  strbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
}
::std::string* QueryClusterUserReq::mutable_strbegindate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
  return strbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterUserReq::release_strbegindate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
  
  return strbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterUserReq::set_allocated_strbegindate(::std::string* strbegindate) {
  if (strbegindate != NULL) {
    
  } else {
    
  }
  strbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbegindate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterUserReq.strBegindate)
}

// string strEnddate = 3;
void QueryClusterUserReq::clear_strenddate() {
  strenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryClusterUserReq::strenddate() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
  return strenddate_.GetNoArena();
}
void QueryClusterUserReq::set_strenddate(const ::std::string& value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
}
#if LANG_CXX11
void QueryClusterUserReq::set_strenddate(::std::string&& value) {
  
  strenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
}
#endif
void QueryClusterUserReq::set_strenddate(const char* value) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
}
void QueryClusterUserReq::set_strenddate(const char* value, size_t size) {
  
  strenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
}
::std::string* QueryClusterUserReq::mutable_strenddate() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
  return strenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryClusterUserReq::release_strenddate() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
  
  return strenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryClusterUserReq::set_allocated_strenddate(::std::string* strenddate) {
  if (strenddate != NULL) {
    
  } else {
    
  }
  strenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strenddate);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.QueryClusterUserReq.strEnddate)
}

// uint32 uiRecordType = 4;
void QueryClusterUserReq::clear_uirecordtype() {
  uirecordtype_ = 0u;
}
::google::protobuf::uint32 QueryClusterUserReq::uirecordtype() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterUserReq.uiRecordType)
  return uirecordtype_;
}
void QueryClusterUserReq::set_uirecordtype(::google::protobuf::uint32 value) {
  
  uirecordtype_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterUserReq.uiRecordType)
}

// uint32 uiBeginIndex = 5;
void QueryClusterUserReq::clear_uibeginindex() {
  uibeginindex_ = 0u;
}
::google::protobuf::uint32 QueryClusterUserReq::uibeginindex() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterUserReq.uiBeginIndex)
  return uibeginindex_;
}
void QueryClusterUserReq::set_uibeginindex(::google::protobuf::uint32 value) {
  
  uibeginindex_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.QueryClusterUserReq.uiBeginIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryClusterUserRsp::kAccessedUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryClusterUserRsp::QueryClusterUserRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.QueryClusterUserRsp)
}
QueryClusterUserRsp::QueryClusterUserRsp(const QueryClusterUserRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      accesseduserinfo_(from.accesseduserinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.QueryClusterUserRsp)
}

void QueryClusterUserRsp::SharedCtor() {
  _cached_size_ = 0;
}

QueryClusterUserRsp::~QueryClusterUserRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.QueryClusterUserRsp)
  SharedDtor();
}

void QueryClusterUserRsp::SharedDtor() {
}

void QueryClusterUserRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryClusterUserRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[21].descriptor;
}

const QueryClusterUserRsp& QueryClusterUserRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryClusterUserRsp* QueryClusterUserRsp::New(::google::protobuf::Arena* arena) const {
  QueryClusterUserRsp* n = new QueryClusterUserRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryClusterUserRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.QueryClusterUserRsp)
  accesseduserinfo_.Clear();
}

bool QueryClusterUserRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.QueryClusterUserRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Management.Interactive.Message.AccessedUser accessedUserInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_accesseduserinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.QueryClusterUserRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.QueryClusterUserRsp)
  return false;
#undef DO_
}

void QueryClusterUserRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.QueryClusterUserRsp)
  // repeated .Management.Interactive.Message.AccessedUser accessedUserInfo = 1;
  for (unsigned int i = 0, n = this->accesseduserinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accesseduserinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.QueryClusterUserRsp)
}

::google::protobuf::uint8* QueryClusterUserRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.QueryClusterUserRsp)
  // repeated .Management.Interactive.Message.AccessedUser accessedUserInfo = 1;
  for (unsigned int i = 0, n = this->accesseduserinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->accesseduserinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.QueryClusterUserRsp)
  return target;
}

size_t QueryClusterUserRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.QueryClusterUserRsp)
  size_t total_size = 0;

  // repeated .Management.Interactive.Message.AccessedUser accessedUserInfo = 1;
  {
    unsigned int count = this->accesseduserinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accesseduserinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryClusterUserRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.QueryClusterUserRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryClusterUserRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryClusterUserRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.QueryClusterUserRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.QueryClusterUserRsp)
    MergeFrom(*source);
  }
}

void QueryClusterUserRsp::MergeFrom(const QueryClusterUserRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.QueryClusterUserRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accesseduserinfo_.MergeFrom(from.accesseduserinfo_);
}

void QueryClusterUserRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.QueryClusterUserRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryClusterUserRsp::CopyFrom(const QueryClusterUserRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.QueryClusterUserRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClusterUserRsp::IsInitialized() const {
  return true;
}

void QueryClusterUserRsp::Swap(QueryClusterUserRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryClusterUserRsp::InternalSwap(QueryClusterUserRsp* other) {
  accesseduserinfo_.UnsafeArenaSwap(&other->accesseduserinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryClusterUserRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryClusterUserRsp

// repeated .Management.Interactive.Message.AccessedUser accessedUserInfo = 1;
int QueryClusterUserRsp::accesseduserinfo_size() const {
  return accesseduserinfo_.size();
}
void QueryClusterUserRsp::clear_accesseduserinfo() {
  accesseduserinfo_.Clear();
}
const ::Management::Interactive::Message::AccessedUser& QueryClusterUserRsp::accesseduserinfo(int index) const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.QueryClusterUserRsp.accessedUserInfo)
  return accesseduserinfo_.Get(index);
}
::Management::Interactive::Message::AccessedUser* QueryClusterUserRsp::mutable_accesseduserinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.QueryClusterUserRsp.accessedUserInfo)
  return accesseduserinfo_.Mutable(index);
}
::Management::Interactive::Message::AccessedUser* QueryClusterUserRsp::add_accesseduserinfo() {
  // @@protoc_insertion_point(field_add:Management.Interactive.Message.QueryClusterUserRsp.accessedUserInfo)
  return accesseduserinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::AccessedUser >*
QueryClusterUserRsp::mutable_accesseduserinfo() {
  // @@protoc_insertion_point(field_mutable_list:Management.Interactive.Message.QueryClusterUserRsp.accessedUserInfo)
  return &accesseduserinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::AccessedUser >&
QueryClusterUserRsp::accesseduserinfo() const {
  // @@protoc_insertion_point(field_list:Management.Interactive.Message.QueryClusterUserRsp.accessedUserInfo)
  return accesseduserinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushClusterDeviceReq::kStrClusterIDFieldNumber;
const int PushClusterDeviceReq::kDeviceAccessRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushClusterDeviceReq::PushClusterDeviceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.PushClusterDeviceReq)
}
PushClusterDeviceReq::PushClusterDeviceReq(const PushClusterDeviceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      deviceaccessrecord_(from.deviceaccessrecord_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.PushClusterDeviceReq)
}

void PushClusterDeviceReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PushClusterDeviceReq::~PushClusterDeviceReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.PushClusterDeviceReq)
  SharedDtor();
}

void PushClusterDeviceReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushClusterDeviceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushClusterDeviceReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[22].descriptor;
}

const PushClusterDeviceReq& PushClusterDeviceReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

PushClusterDeviceReq* PushClusterDeviceReq::New(::google::protobuf::Arena* arena) const {
  PushClusterDeviceReq* n = new PushClusterDeviceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushClusterDeviceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.PushClusterDeviceReq)
  deviceaccessrecord_.Clear();
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PushClusterDeviceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.PushClusterDeviceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.PushClusterDeviceReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Management.Interactive.Message.DeviceAccessRecord deviceAccessRecord = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deviceaccessrecord()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.PushClusterDeviceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.PushClusterDeviceReq)
  return false;
#undef DO_
}

void PushClusterDeviceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.PushClusterDeviceReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterDeviceReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // repeated .Management.Interactive.Message.DeviceAccessRecord deviceAccessRecord = 2;
  for (unsigned int i = 0, n = this->deviceaccessrecord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->deviceaccessrecord(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.PushClusterDeviceReq)
}

::google::protobuf::uint8* PushClusterDeviceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.PushClusterDeviceReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterDeviceReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // repeated .Management.Interactive.Message.DeviceAccessRecord deviceAccessRecord = 2;
  for (unsigned int i = 0, n = this->deviceaccessrecord_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->deviceaccessrecord(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.PushClusterDeviceReq)
  return target;
}

size_t PushClusterDeviceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.PushClusterDeviceReq)
  size_t total_size = 0;

  // repeated .Management.Interactive.Message.DeviceAccessRecord deviceAccessRecord = 2;
  {
    unsigned int count = this->deviceaccessrecord_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deviceaccessrecord(i));
    }
  }

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushClusterDeviceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.PushClusterDeviceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PushClusterDeviceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushClusterDeviceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.PushClusterDeviceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.PushClusterDeviceReq)
    MergeFrom(*source);
  }
}

void PushClusterDeviceReq::MergeFrom(const PushClusterDeviceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.PushClusterDeviceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceaccessrecord_.MergeFrom(from.deviceaccessrecord_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
}

void PushClusterDeviceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.PushClusterDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushClusterDeviceReq::CopyFrom(const PushClusterDeviceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.PushClusterDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushClusterDeviceReq::IsInitialized() const {
  return true;
}

void PushClusterDeviceReq::Swap(PushClusterDeviceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushClusterDeviceReq::InternalSwap(PushClusterDeviceReq* other) {
  deviceaccessrecord_.UnsafeArenaSwap(&other->deviceaccessrecord_);
  strclusterid_.Swap(&other->strclusterid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushClusterDeviceReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushClusterDeviceReq

// string strClusterID = 1;
void PushClusterDeviceReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PushClusterDeviceReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void PushClusterDeviceReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
}
#if LANG_CXX11
void PushClusterDeviceReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
}
#endif
void PushClusterDeviceReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
}
void PushClusterDeviceReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
}
::std::string* PushClusterDeviceReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushClusterDeviceReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushClusterDeviceReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.PushClusterDeviceReq.strClusterID)
}

// repeated .Management.Interactive.Message.DeviceAccessRecord deviceAccessRecord = 2;
int PushClusterDeviceReq::deviceaccessrecord_size() const {
  return deviceaccessrecord_.size();
}
void PushClusterDeviceReq::clear_deviceaccessrecord() {
  deviceaccessrecord_.Clear();
}
const ::Management::Interactive::Message::DeviceAccessRecord& PushClusterDeviceReq::deviceaccessrecord(int index) const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.PushClusterDeviceReq.deviceAccessRecord)
  return deviceaccessrecord_.Get(index);
}
::Management::Interactive::Message::DeviceAccessRecord* PushClusterDeviceReq::mutable_deviceaccessrecord(int index) {
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.PushClusterDeviceReq.deviceAccessRecord)
  return deviceaccessrecord_.Mutable(index);
}
::Management::Interactive::Message::DeviceAccessRecord* PushClusterDeviceReq::add_deviceaccessrecord() {
  // @@protoc_insertion_point(field_add:Management.Interactive.Message.PushClusterDeviceReq.deviceAccessRecord)
  return deviceaccessrecord_.Add();
}
::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::DeviceAccessRecord >*
PushClusterDeviceReq::mutable_deviceaccessrecord() {
  // @@protoc_insertion_point(field_mutable_list:Management.Interactive.Message.PushClusterDeviceReq.deviceAccessRecord)
  return &deviceaccessrecord_;
}
const ::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::DeviceAccessRecord >&
PushClusterDeviceReq::deviceaccessrecord() const {
  // @@protoc_insertion_point(field_list:Management.Interactive.Message.PushClusterDeviceReq.deviceAccessRecord)
  return deviceaccessrecord_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushClusterDeviceRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushClusterDeviceRsp::PushClusterDeviceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.PushClusterDeviceRsp)
}
PushClusterDeviceRsp::PushClusterDeviceRsp(const PushClusterDeviceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.PushClusterDeviceRsp)
}

void PushClusterDeviceRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PushClusterDeviceRsp::~PushClusterDeviceRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.PushClusterDeviceRsp)
  SharedDtor();
}

void PushClusterDeviceRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushClusterDeviceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushClusterDeviceRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[23].descriptor;
}

const PushClusterDeviceRsp& PushClusterDeviceRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

PushClusterDeviceRsp* PushClusterDeviceRsp::New(::google::protobuf::Arena* arena) const {
  PushClusterDeviceRsp* n = new PushClusterDeviceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushClusterDeviceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.PushClusterDeviceRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PushClusterDeviceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.PushClusterDeviceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.PushClusterDeviceRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.PushClusterDeviceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.PushClusterDeviceRsp)
  return false;
#undef DO_
}

void PushClusterDeviceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.PushClusterDeviceRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterDeviceRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.PushClusterDeviceRsp)
}

::google::protobuf::uint8* PushClusterDeviceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.PushClusterDeviceRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterDeviceRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.PushClusterDeviceRsp)
  return target;
}

size_t PushClusterDeviceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.PushClusterDeviceRsp)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushClusterDeviceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.PushClusterDeviceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PushClusterDeviceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushClusterDeviceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.PushClusterDeviceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.PushClusterDeviceRsp)
    MergeFrom(*source);
  }
}

void PushClusterDeviceRsp::MergeFrom(const PushClusterDeviceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.PushClusterDeviceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void PushClusterDeviceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.PushClusterDeviceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushClusterDeviceRsp::CopyFrom(const PushClusterDeviceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.PushClusterDeviceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushClusterDeviceRsp::IsInitialized() const {
  return true;
}

void PushClusterDeviceRsp::Swap(PushClusterDeviceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushClusterDeviceRsp::InternalSwap(PushClusterDeviceRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushClusterDeviceRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushClusterDeviceRsp

// string strValue = 1;
void PushClusterDeviceRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PushClusterDeviceRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
  return strvalue_.GetNoArena();
}
void PushClusterDeviceRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
}
#if LANG_CXX11
void PushClusterDeviceRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
}
#endif
void PushClusterDeviceRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
}
void PushClusterDeviceRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
}
::std::string* PushClusterDeviceRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushClusterDeviceRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushClusterDeviceRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.PushClusterDeviceRsp.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushClusterUserReq::kStrClusterIDFieldNumber;
const int PushClusterUserReq::kUserAccessRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushClusterUserReq::PushClusterUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.PushClusterUserReq)
}
PushClusterUserReq::PushClusterUserReq(const PushClusterUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      useraccessrecord_(from.useraccessrecord_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strclusterid().size() > 0) {
    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.PushClusterUserReq)
}

void PushClusterUserReq::SharedCtor() {
  strclusterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PushClusterUserReq::~PushClusterUserReq() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.PushClusterUserReq)
  SharedDtor();
}

void PushClusterUserReq::SharedDtor() {
  strclusterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushClusterUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushClusterUserReq::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[24].descriptor;
}

const PushClusterUserReq& PushClusterUserReq::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

PushClusterUserReq* PushClusterUserReq::New(::google::protobuf::Arena* arena) const {
  PushClusterUserReq* n = new PushClusterUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushClusterUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.PushClusterUserReq)
  useraccessrecord_.Clear();
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PushClusterUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.PushClusterUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strClusterID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclusterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strclusterid().data(), this->strclusterid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.PushClusterUserReq.strClusterID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Management.Interactive.Message.UserAccessRecord userAccessRecord = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_useraccessrecord()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.PushClusterUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.PushClusterUserReq)
  return false;
#undef DO_
}

void PushClusterUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.PushClusterUserReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterUserReq.strClusterID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strclusterid(), output);
  }

  // repeated .Management.Interactive.Message.UserAccessRecord userAccessRecord = 2;
  for (unsigned int i = 0, n = this->useraccessrecord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->useraccessrecord(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.PushClusterUserReq)
}

::google::protobuf::uint8* PushClusterUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.PushClusterUserReq)
  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strclusterid().data(), this->strclusterid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterUserReq.strClusterID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclusterid(), target);
  }

  // repeated .Management.Interactive.Message.UserAccessRecord userAccessRecord = 2;
  for (unsigned int i = 0, n = this->useraccessrecord_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->useraccessrecord(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.PushClusterUserReq)
  return target;
}

size_t PushClusterUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.PushClusterUserReq)
  size_t total_size = 0;

  // repeated .Management.Interactive.Message.UserAccessRecord userAccessRecord = 2;
  {
    unsigned int count = this->useraccessrecord_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->useraccessrecord(i));
    }
  }

  // string strClusterID = 1;
  if (this->strclusterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strclusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushClusterUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.PushClusterUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PushClusterUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushClusterUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.PushClusterUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.PushClusterUserReq)
    MergeFrom(*source);
  }
}

void PushClusterUserReq::MergeFrom(const PushClusterUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.PushClusterUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  useraccessrecord_.MergeFrom(from.useraccessrecord_);
  if (from.strclusterid().size() > 0) {

    strclusterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strclusterid_);
  }
}

void PushClusterUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.PushClusterUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushClusterUserReq::CopyFrom(const PushClusterUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.PushClusterUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushClusterUserReq::IsInitialized() const {
  return true;
}

void PushClusterUserReq::Swap(PushClusterUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushClusterUserReq::InternalSwap(PushClusterUserReq* other) {
  useraccessrecord_.UnsafeArenaSwap(&other->useraccessrecord_);
  strclusterid_.Swap(&other->strclusterid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushClusterUserReq::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushClusterUserReq

// string strClusterID = 1;
void PushClusterUserReq::clear_strclusterid() {
  strclusterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PushClusterUserReq::strclusterid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.PushClusterUserReq.strClusterID)
  return strclusterid_.GetNoArena();
}
void PushClusterUserReq::set_strclusterid(const ::std::string& value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.PushClusterUserReq.strClusterID)
}
#if LANG_CXX11
void PushClusterUserReq::set_strclusterid(::std::string&& value) {
  
  strclusterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.PushClusterUserReq.strClusterID)
}
#endif
void PushClusterUserReq::set_strclusterid(const char* value) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.PushClusterUserReq.strClusterID)
}
void PushClusterUserReq::set_strclusterid(const char* value, size_t size) {
  
  strclusterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.PushClusterUserReq.strClusterID)
}
::std::string* PushClusterUserReq::mutable_strclusterid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.PushClusterUserReq.strClusterID)
  return strclusterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushClusterUserReq::release_strclusterid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.PushClusterUserReq.strClusterID)
  
  return strclusterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushClusterUserReq::set_allocated_strclusterid(::std::string* strclusterid) {
  if (strclusterid != NULL) {
    
  } else {
    
  }
  strclusterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strclusterid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.PushClusterUserReq.strClusterID)
}

// repeated .Management.Interactive.Message.UserAccessRecord userAccessRecord = 2;
int PushClusterUserReq::useraccessrecord_size() const {
  return useraccessrecord_.size();
}
void PushClusterUserReq::clear_useraccessrecord() {
  useraccessrecord_.Clear();
}
const ::Management::Interactive::Message::UserAccessRecord& PushClusterUserReq::useraccessrecord(int index) const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.PushClusterUserReq.userAccessRecord)
  return useraccessrecord_.Get(index);
}
::Management::Interactive::Message::UserAccessRecord* PushClusterUserReq::mutable_useraccessrecord(int index) {
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.PushClusterUserReq.userAccessRecord)
  return useraccessrecord_.Mutable(index);
}
::Management::Interactive::Message::UserAccessRecord* PushClusterUserReq::add_useraccessrecord() {
  // @@protoc_insertion_point(field_add:Management.Interactive.Message.PushClusterUserReq.userAccessRecord)
  return useraccessrecord_.Add();
}
::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::UserAccessRecord >*
PushClusterUserReq::mutable_useraccessrecord() {
  // @@protoc_insertion_point(field_mutable_list:Management.Interactive.Message.PushClusterUserReq.userAccessRecord)
  return &useraccessrecord_;
}
const ::google::protobuf::RepeatedPtrField< ::Management::Interactive::Message::UserAccessRecord >&
PushClusterUserReq::useraccessrecord() const {
  // @@protoc_insertion_point(field_list:Management.Interactive.Message.PushClusterUserReq.userAccessRecord)
  return useraccessrecord_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushClusterUserRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushClusterUserRsp::PushClusterUserRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.PushClusterUserRsp)
}
PushClusterUserRsp::PushClusterUserRsp(const PushClusterUserRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.PushClusterUserRsp)
}

void PushClusterUserRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PushClusterUserRsp::~PushClusterUserRsp() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.PushClusterUserRsp)
  SharedDtor();
}

void PushClusterUserRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushClusterUserRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushClusterUserRsp::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[25].descriptor;
}

const PushClusterUserRsp& PushClusterUserRsp::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

PushClusterUserRsp* PushClusterUserRsp::New(::google::protobuf::Arena* arena) const {
  PushClusterUserRsp* n = new PushClusterUserRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushClusterUserRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.PushClusterUserRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PushClusterUserRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.PushClusterUserRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strValue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.PushClusterUserRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.PushClusterUserRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.PushClusterUserRsp)
  return false;
#undef DO_
}

void PushClusterUserRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.PushClusterUserRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterUserRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.PushClusterUserRsp)
}

::google::protobuf::uint8* PushClusterUserRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.PushClusterUserRsp)
  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.PushClusterUserRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.PushClusterUserRsp)
  return target;
}

size_t PushClusterUserRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.PushClusterUserRsp)
  size_t total_size = 0;

  // string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushClusterUserRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.PushClusterUserRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PushClusterUserRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushClusterUserRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.PushClusterUserRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.PushClusterUserRsp)
    MergeFrom(*source);
  }
}

void PushClusterUserRsp::MergeFrom(const PushClusterUserRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.PushClusterUserRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void PushClusterUserRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.PushClusterUserRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushClusterUserRsp::CopyFrom(const PushClusterUserRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.PushClusterUserRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushClusterUserRsp::IsInitialized() const {
  return true;
}

void PushClusterUserRsp::Swap(PushClusterUserRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushClusterUserRsp::InternalSwap(PushClusterUserRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushClusterUserRsp::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushClusterUserRsp

// string strValue = 1;
void PushClusterUserRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PushClusterUserRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.PushClusterUserRsp.strValue)
  return strvalue_.GetNoArena();
}
void PushClusterUserRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.PushClusterUserRsp.strValue)
}
#if LANG_CXX11
void PushClusterUserRsp::set_strvalue(::std::string&& value) {
  
  strvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.PushClusterUserRsp.strValue)
}
#endif
void PushClusterUserRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.PushClusterUserRsp.strValue)
}
void PushClusterUserRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.PushClusterUserRsp.strValue)
}
::std::string* PushClusterUserRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.PushClusterUserRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushClusterUserRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.PushClusterUserRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushClusterUserRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.PushClusterUserRsp.strValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kAddClusterReqValueFieldNumber;
const int Request::kDeleteClusterReqValueFieldNumber;
const int Request::kModifyClusterReqValueFieldNumber;
const int Request::kQueryClusterInfoReqValueFieldNumber;
const int Request::kShakehandClusterReqValueFieldNumber;
const int Request::kQueryAllClusterReqValueFieldNumber;
const int Request::kQueryClusterDeviceReqValueFieldNumber;
const int Request::kQueryClusterUserReqValueFieldNumber;
const int Request::kPushClusterDeviceReqValueFieldNumber;
const int Request::kPushClusterUserReqValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addclusterreq_value()) {
    addclusterreq_value_ = new ::Management::Interactive::Message::AddClusterReq(*from.addclusterreq_value_);
  } else {
    addclusterreq_value_ = NULL;
  }
  if (from.has_deleteclusterreq_value()) {
    deleteclusterreq_value_ = new ::Management::Interactive::Message::DeleteClusterReq(*from.deleteclusterreq_value_);
  } else {
    deleteclusterreq_value_ = NULL;
  }
  if (from.has_modifyclusterreq_value()) {
    modifyclusterreq_value_ = new ::Management::Interactive::Message::ModifyClusterReq(*from.modifyclusterreq_value_);
  } else {
    modifyclusterreq_value_ = NULL;
  }
  if (from.has_queryclusterinforeq_value()) {
    queryclusterinforeq_value_ = new ::Management::Interactive::Message::QueryClusterInfoReq(*from.queryclusterinforeq_value_);
  } else {
    queryclusterinforeq_value_ = NULL;
  }
  if (from.has_shakehandclusterreq_value()) {
    shakehandclusterreq_value_ = new ::Management::Interactive::Message::ShakehandClusterReq(*from.shakehandclusterreq_value_);
  } else {
    shakehandclusterreq_value_ = NULL;
  }
  if (from.has_queryallclusterreq_value()) {
    queryallclusterreq_value_ = new ::Management::Interactive::Message::QueryAllClusterReq(*from.queryallclusterreq_value_);
  } else {
    queryallclusterreq_value_ = NULL;
  }
  if (from.has_queryclusterdevicereq_value()) {
    queryclusterdevicereq_value_ = new ::Management::Interactive::Message::QueryClusterDeviceReq(*from.queryclusterdevicereq_value_);
  } else {
    queryclusterdevicereq_value_ = NULL;
  }
  if (from.has_queryclusteruserreq_value()) {
    queryclusteruserreq_value_ = new ::Management::Interactive::Message::QueryClusterUserReq(*from.queryclusteruserreq_value_);
  } else {
    queryclusteruserreq_value_ = NULL;
  }
  if (from.has_pushclusterdevicereq_value()) {
    pushclusterdevicereq_value_ = new ::Management::Interactive::Message::PushClusterDeviceReq(*from.pushclusterdevicereq_value_);
  } else {
    pushclusterdevicereq_value_ = NULL;
  }
  if (from.has_pushclusteruserreq_value()) {
    pushclusteruserreq_value_ = new ::Management::Interactive::Message::PushClusterUserReq(*from.pushclusteruserreq_value_);
  } else {
    pushclusteruserreq_value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.Request)
}

void Request::SharedCtor() {
  ::memset(&addclusterreq_value_, 0, reinterpret_cast<char*>(&pushclusteruserreq_value_) -
    reinterpret_cast<char*>(&addclusterreq_value_) + sizeof(pushclusteruserreq_value_));
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) {
    delete addclusterreq_value_;
  }
  if (this != internal_default_instance()) {
    delete deleteclusterreq_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyclusterreq_value_;
  }
  if (this != internal_default_instance()) {
    delete queryclusterinforeq_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandclusterreq_value_;
  }
  if (this != internal_default_instance()) {
    delete queryallclusterreq_value_;
  }
  if (this != internal_default_instance()) {
    delete queryclusterdevicereq_value_;
  }
  if (this != internal_default_instance()) {
    delete queryclusteruserreq_value_;
  }
  if (this != internal_default_instance()) {
    delete pushclusterdevicereq_value_;
  }
  if (this != internal_default_instance()) {
    delete pushclusteruserreq_value_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[26].descriptor;
}

const Request& Request::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.Request)
  if (GetArenaNoVirtual() == NULL && addclusterreq_value_ != NULL) {
    delete addclusterreq_value_;
  }
  addclusterreq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deleteclusterreq_value_ != NULL) {
    delete deleteclusterreq_value_;
  }
  deleteclusterreq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyclusterreq_value_ != NULL) {
    delete modifyclusterreq_value_;
  }
  modifyclusterreq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryclusterinforeq_value_ != NULL) {
    delete queryclusterinforeq_value_;
  }
  queryclusterinforeq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandclusterreq_value_ != NULL) {
    delete shakehandclusterreq_value_;
  }
  shakehandclusterreq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryallclusterreq_value_ != NULL) {
    delete queryallclusterreq_value_;
  }
  queryallclusterreq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryclusterdevicereq_value_ != NULL) {
    delete queryclusterdevicereq_value_;
  }
  queryclusterdevicereq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryclusteruserreq_value_ != NULL) {
    delete queryclusteruserreq_value_;
  }
  queryclusteruserreq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && pushclusterdevicereq_value_ != NULL) {
    delete pushclusterdevicereq_value_;
  }
  pushclusterdevicereq_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && pushclusteruserreq_value_ != NULL) {
    delete pushclusteruserreq_value_;
  }
  pushclusteruserreq_value_ = NULL;
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Management.Interactive.Message.AddClusterReq AddClusterReq_Value = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addclusterreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.DeleteClusterReq DeleteClusterReq_Value = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleteclusterreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.ModifyClusterReq ModifyClusterReq_Value = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyclusterreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryClusterInfoReq QueryClusterInfoReq_Value = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryclusterinforeq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.ShakehandClusterReq ShakehandClusterReq_Value = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandclusterreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryAllClusterReq QueryAllClusterReq_Value = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryallclusterreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryClusterDeviceReq QueryClusterDeviceReq_Value = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryclusterdevicereq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryClusterUserReq QueryClusterUserReq_Value = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryclusteruserreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.PushClusterDeviceReq PushClusterDeviceReq_Value = 270;
      case 270: {
        if (tag == 2162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pushclusterdevicereq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.PushClusterUserReq PushClusterUserReq_Value = 280;
      case 280: {
        if (tag == 2242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pushclusteruserreq_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.Request)
  // .Management.Interactive.Message.AddClusterReq AddClusterReq_Value = 10;
  if (this->has_addclusterreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->addclusterreq_value_, output);
  }

  // .Management.Interactive.Message.DeleteClusterReq DeleteClusterReq_Value = 20;
  if (this->has_deleteclusterreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->deleteclusterreq_value_, output);
  }

  // .Management.Interactive.Message.ModifyClusterReq ModifyClusterReq_Value = 30;
  if (this->has_modifyclusterreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->modifyclusterreq_value_, output);
  }

  // .Management.Interactive.Message.QueryClusterInfoReq QueryClusterInfoReq_Value = 40;
  if (this->has_queryclusterinforeq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->queryclusterinforeq_value_, output);
  }

  // .Management.Interactive.Message.ShakehandClusterReq ShakehandClusterReq_Value = 50;
  if (this->has_shakehandclusterreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->shakehandclusterreq_value_, output);
  }

  // .Management.Interactive.Message.QueryAllClusterReq QueryAllClusterReq_Value = 60;
  if (this->has_queryallclusterreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->queryallclusterreq_value_, output);
  }

  // .Management.Interactive.Message.QueryClusterDeviceReq QueryClusterDeviceReq_Value = 70;
  if (this->has_queryclusterdevicereq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->queryclusterdevicereq_value_, output);
  }

  // .Management.Interactive.Message.QueryClusterUserReq QueryClusterUserReq_Value = 80;
  if (this->has_queryclusteruserreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->queryclusteruserreq_value_, output);
  }

  // .Management.Interactive.Message.PushClusterDeviceReq PushClusterDeviceReq_Value = 270;
  if (this->has_pushclusterdevicereq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270, *this->pushclusterdevicereq_value_, output);
  }

  // .Management.Interactive.Message.PushClusterUserReq PushClusterUserReq_Value = 280;
  if (this->has_pushclusteruserreq_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      280, *this->pushclusteruserreq_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.Request)
  // .Management.Interactive.Message.AddClusterReq AddClusterReq_Value = 10;
  if (this->has_addclusterreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->addclusterreq_value_, false, target);
  }

  // .Management.Interactive.Message.DeleteClusterReq DeleteClusterReq_Value = 20;
  if (this->has_deleteclusterreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->deleteclusterreq_value_, false, target);
  }

  // .Management.Interactive.Message.ModifyClusterReq ModifyClusterReq_Value = 30;
  if (this->has_modifyclusterreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->modifyclusterreq_value_, false, target);
  }

  // .Management.Interactive.Message.QueryClusterInfoReq QueryClusterInfoReq_Value = 40;
  if (this->has_queryclusterinforeq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->queryclusterinforeq_value_, false, target);
  }

  // .Management.Interactive.Message.ShakehandClusterReq ShakehandClusterReq_Value = 50;
  if (this->has_shakehandclusterreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->shakehandclusterreq_value_, false, target);
  }

  // .Management.Interactive.Message.QueryAllClusterReq QueryAllClusterReq_Value = 60;
  if (this->has_queryallclusterreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->queryallclusterreq_value_, false, target);
  }

  // .Management.Interactive.Message.QueryClusterDeviceReq QueryClusterDeviceReq_Value = 70;
  if (this->has_queryclusterdevicereq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->queryclusterdevicereq_value_, false, target);
  }

  // .Management.Interactive.Message.QueryClusterUserReq QueryClusterUserReq_Value = 80;
  if (this->has_queryclusteruserreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->queryclusteruserreq_value_, false, target);
  }

  // .Management.Interactive.Message.PushClusterDeviceReq PushClusterDeviceReq_Value = 270;
  if (this->has_pushclusterdevicereq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        270, *this->pushclusterdevicereq_value_, false, target);
  }

  // .Management.Interactive.Message.PushClusterUserReq PushClusterUserReq_Value = 280;
  if (this->has_pushclusteruserreq_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        280, *this->pushclusteruserreq_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.Request)
  size_t total_size = 0;

  // .Management.Interactive.Message.AddClusterReq AddClusterReq_Value = 10;
  if (this->has_addclusterreq_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addclusterreq_value_);
  }

  // .Management.Interactive.Message.DeleteClusterReq DeleteClusterReq_Value = 20;
  if (this->has_deleteclusterreq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deleteclusterreq_value_);
  }

  // .Management.Interactive.Message.ModifyClusterReq ModifyClusterReq_Value = 30;
  if (this->has_modifyclusterreq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyclusterreq_value_);
  }

  // .Management.Interactive.Message.QueryClusterInfoReq QueryClusterInfoReq_Value = 40;
  if (this->has_queryclusterinforeq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryclusterinforeq_value_);
  }

  // .Management.Interactive.Message.ShakehandClusterReq ShakehandClusterReq_Value = 50;
  if (this->has_shakehandclusterreq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandclusterreq_value_);
  }

  // .Management.Interactive.Message.QueryAllClusterReq QueryAllClusterReq_Value = 60;
  if (this->has_queryallclusterreq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryallclusterreq_value_);
  }

  // .Management.Interactive.Message.QueryClusterDeviceReq QueryClusterDeviceReq_Value = 70;
  if (this->has_queryclusterdevicereq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryclusterdevicereq_value_);
  }

  // .Management.Interactive.Message.QueryClusterUserReq QueryClusterUserReq_Value = 80;
  if (this->has_queryclusteruserreq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryclusteruserreq_value_);
  }

  // .Management.Interactive.Message.PushClusterDeviceReq PushClusterDeviceReq_Value = 270;
  if (this->has_pushclusterdevicereq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pushclusterdevicereq_value_);
  }

  // .Management.Interactive.Message.PushClusterUserReq PushClusterUserReq_Value = 280;
  if (this->has_pushclusteruserreq_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pushclusteruserreq_value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addclusterreq_value()) {
    mutable_addclusterreq_value()->::Management::Interactive::Message::AddClusterReq::MergeFrom(from.addclusterreq_value());
  }
  if (from.has_deleteclusterreq_value()) {
    mutable_deleteclusterreq_value()->::Management::Interactive::Message::DeleteClusterReq::MergeFrom(from.deleteclusterreq_value());
  }
  if (from.has_modifyclusterreq_value()) {
    mutable_modifyclusterreq_value()->::Management::Interactive::Message::ModifyClusterReq::MergeFrom(from.modifyclusterreq_value());
  }
  if (from.has_queryclusterinforeq_value()) {
    mutable_queryclusterinforeq_value()->::Management::Interactive::Message::QueryClusterInfoReq::MergeFrom(from.queryclusterinforeq_value());
  }
  if (from.has_shakehandclusterreq_value()) {
    mutable_shakehandclusterreq_value()->::Management::Interactive::Message::ShakehandClusterReq::MergeFrom(from.shakehandclusterreq_value());
  }
  if (from.has_queryallclusterreq_value()) {
    mutable_queryallclusterreq_value()->::Management::Interactive::Message::QueryAllClusterReq::MergeFrom(from.queryallclusterreq_value());
  }
  if (from.has_queryclusterdevicereq_value()) {
    mutable_queryclusterdevicereq_value()->::Management::Interactive::Message::QueryClusterDeviceReq::MergeFrom(from.queryclusterdevicereq_value());
  }
  if (from.has_queryclusteruserreq_value()) {
    mutable_queryclusteruserreq_value()->::Management::Interactive::Message::QueryClusterUserReq::MergeFrom(from.queryclusteruserreq_value());
  }
  if (from.has_pushclusterdevicereq_value()) {
    mutable_pushclusterdevicereq_value()->::Management::Interactive::Message::PushClusterDeviceReq::MergeFrom(from.pushclusterdevicereq_value());
  }
  if (from.has_pushclusteruserreq_value()) {
    mutable_pushclusteruserreq_value()->::Management::Interactive::Message::PushClusterUserReq::MergeFrom(from.pushclusteruserreq_value());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(addclusterreq_value_, other->addclusterreq_value_);
  std::swap(deleteclusterreq_value_, other->deleteclusterreq_value_);
  std::swap(modifyclusterreq_value_, other->modifyclusterreq_value_);
  std::swap(queryclusterinforeq_value_, other->queryclusterinforeq_value_);
  std::swap(shakehandclusterreq_value_, other->shakehandclusterreq_value_);
  std::swap(queryallclusterreq_value_, other->queryallclusterreq_value_);
  std::swap(queryclusterdevicereq_value_, other->queryclusterdevicereq_value_);
  std::swap(queryclusteruserreq_value_, other->queryclusteruserreq_value_);
  std::swap(pushclusterdevicereq_value_, other->pushclusterdevicereq_value_);
  std::swap(pushclusteruserreq_value_, other->pushclusteruserreq_value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// .Management.Interactive.Message.AddClusterReq AddClusterReq_Value = 10;
bool Request::has_addclusterreq_value() const {
  return this != internal_default_instance() && addclusterreq_value_ != NULL;
}
void Request::clear_addclusterreq_value() {
  if (GetArenaNoVirtual() == NULL && addclusterreq_value_ != NULL) delete addclusterreq_value_;
  addclusterreq_value_ = NULL;
}
const ::Management::Interactive::Message::AddClusterReq& Request::addclusterreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.AddClusterReq_Value)
  return addclusterreq_value_ != NULL ? *addclusterreq_value_
                         : *::Management::Interactive::Message::AddClusterReq::internal_default_instance();
}
::Management::Interactive::Message::AddClusterReq* Request::mutable_addclusterreq_value() {
  
  if (addclusterreq_value_ == NULL) {
    addclusterreq_value_ = new ::Management::Interactive::Message::AddClusterReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.AddClusterReq_Value)
  return addclusterreq_value_;
}
::Management::Interactive::Message::AddClusterReq* Request::release_addclusterreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.AddClusterReq_Value)
  
  ::Management::Interactive::Message::AddClusterReq* temp = addclusterreq_value_;
  addclusterreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_addclusterreq_value(::Management::Interactive::Message::AddClusterReq* addclusterreq_value) {
  delete addclusterreq_value_;
  addclusterreq_value_ = addclusterreq_value;
  if (addclusterreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.AddClusterReq_Value)
}

// .Management.Interactive.Message.DeleteClusterReq DeleteClusterReq_Value = 20;
bool Request::has_deleteclusterreq_value() const {
  return this != internal_default_instance() && deleteclusterreq_value_ != NULL;
}
void Request::clear_deleteclusterreq_value() {
  if (GetArenaNoVirtual() == NULL && deleteclusterreq_value_ != NULL) delete deleteclusterreq_value_;
  deleteclusterreq_value_ = NULL;
}
const ::Management::Interactive::Message::DeleteClusterReq& Request::deleteclusterreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.DeleteClusterReq_Value)
  return deleteclusterreq_value_ != NULL ? *deleteclusterreq_value_
                         : *::Management::Interactive::Message::DeleteClusterReq::internal_default_instance();
}
::Management::Interactive::Message::DeleteClusterReq* Request::mutable_deleteclusterreq_value() {
  
  if (deleteclusterreq_value_ == NULL) {
    deleteclusterreq_value_ = new ::Management::Interactive::Message::DeleteClusterReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.DeleteClusterReq_Value)
  return deleteclusterreq_value_;
}
::Management::Interactive::Message::DeleteClusterReq* Request::release_deleteclusterreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.DeleteClusterReq_Value)
  
  ::Management::Interactive::Message::DeleteClusterReq* temp = deleteclusterreq_value_;
  deleteclusterreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_deleteclusterreq_value(::Management::Interactive::Message::DeleteClusterReq* deleteclusterreq_value) {
  delete deleteclusterreq_value_;
  deleteclusterreq_value_ = deleteclusterreq_value;
  if (deleteclusterreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.DeleteClusterReq_Value)
}

// .Management.Interactive.Message.ModifyClusterReq ModifyClusterReq_Value = 30;
bool Request::has_modifyclusterreq_value() const {
  return this != internal_default_instance() && modifyclusterreq_value_ != NULL;
}
void Request::clear_modifyclusterreq_value() {
  if (GetArenaNoVirtual() == NULL && modifyclusterreq_value_ != NULL) delete modifyclusterreq_value_;
  modifyclusterreq_value_ = NULL;
}
const ::Management::Interactive::Message::ModifyClusterReq& Request::modifyclusterreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.ModifyClusterReq_Value)
  return modifyclusterreq_value_ != NULL ? *modifyclusterreq_value_
                         : *::Management::Interactive::Message::ModifyClusterReq::internal_default_instance();
}
::Management::Interactive::Message::ModifyClusterReq* Request::mutable_modifyclusterreq_value() {
  
  if (modifyclusterreq_value_ == NULL) {
    modifyclusterreq_value_ = new ::Management::Interactive::Message::ModifyClusterReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.ModifyClusterReq_Value)
  return modifyclusterreq_value_;
}
::Management::Interactive::Message::ModifyClusterReq* Request::release_modifyclusterreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.ModifyClusterReq_Value)
  
  ::Management::Interactive::Message::ModifyClusterReq* temp = modifyclusterreq_value_;
  modifyclusterreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_modifyclusterreq_value(::Management::Interactive::Message::ModifyClusterReq* modifyclusterreq_value) {
  delete modifyclusterreq_value_;
  modifyclusterreq_value_ = modifyclusterreq_value;
  if (modifyclusterreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.ModifyClusterReq_Value)
}

// .Management.Interactive.Message.QueryClusterInfoReq QueryClusterInfoReq_Value = 40;
bool Request::has_queryclusterinforeq_value() const {
  return this != internal_default_instance() && queryclusterinforeq_value_ != NULL;
}
void Request::clear_queryclusterinforeq_value() {
  if (GetArenaNoVirtual() == NULL && queryclusterinforeq_value_ != NULL) delete queryclusterinforeq_value_;
  queryclusterinforeq_value_ = NULL;
}
const ::Management::Interactive::Message::QueryClusterInfoReq& Request::queryclusterinforeq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.QueryClusterInfoReq_Value)
  return queryclusterinforeq_value_ != NULL ? *queryclusterinforeq_value_
                         : *::Management::Interactive::Message::QueryClusterInfoReq::internal_default_instance();
}
::Management::Interactive::Message::QueryClusterInfoReq* Request::mutable_queryclusterinforeq_value() {
  
  if (queryclusterinforeq_value_ == NULL) {
    queryclusterinforeq_value_ = new ::Management::Interactive::Message::QueryClusterInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.QueryClusterInfoReq_Value)
  return queryclusterinforeq_value_;
}
::Management::Interactive::Message::QueryClusterInfoReq* Request::release_queryclusterinforeq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.QueryClusterInfoReq_Value)
  
  ::Management::Interactive::Message::QueryClusterInfoReq* temp = queryclusterinforeq_value_;
  queryclusterinforeq_value_ = NULL;
  return temp;
}
void Request::set_allocated_queryclusterinforeq_value(::Management::Interactive::Message::QueryClusterInfoReq* queryclusterinforeq_value) {
  delete queryclusterinforeq_value_;
  queryclusterinforeq_value_ = queryclusterinforeq_value;
  if (queryclusterinforeq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.QueryClusterInfoReq_Value)
}

// .Management.Interactive.Message.ShakehandClusterReq ShakehandClusterReq_Value = 50;
bool Request::has_shakehandclusterreq_value() const {
  return this != internal_default_instance() && shakehandclusterreq_value_ != NULL;
}
void Request::clear_shakehandclusterreq_value() {
  if (GetArenaNoVirtual() == NULL && shakehandclusterreq_value_ != NULL) delete shakehandclusterreq_value_;
  shakehandclusterreq_value_ = NULL;
}
const ::Management::Interactive::Message::ShakehandClusterReq& Request::shakehandclusterreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.ShakehandClusterReq_Value)
  return shakehandclusterreq_value_ != NULL ? *shakehandclusterreq_value_
                         : *::Management::Interactive::Message::ShakehandClusterReq::internal_default_instance();
}
::Management::Interactive::Message::ShakehandClusterReq* Request::mutable_shakehandclusterreq_value() {
  
  if (shakehandclusterreq_value_ == NULL) {
    shakehandclusterreq_value_ = new ::Management::Interactive::Message::ShakehandClusterReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.ShakehandClusterReq_Value)
  return shakehandclusterreq_value_;
}
::Management::Interactive::Message::ShakehandClusterReq* Request::release_shakehandclusterreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.ShakehandClusterReq_Value)
  
  ::Management::Interactive::Message::ShakehandClusterReq* temp = shakehandclusterreq_value_;
  shakehandclusterreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_shakehandclusterreq_value(::Management::Interactive::Message::ShakehandClusterReq* shakehandclusterreq_value) {
  delete shakehandclusterreq_value_;
  shakehandclusterreq_value_ = shakehandclusterreq_value;
  if (shakehandclusterreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.ShakehandClusterReq_Value)
}

// .Management.Interactive.Message.QueryAllClusterReq QueryAllClusterReq_Value = 60;
bool Request::has_queryallclusterreq_value() const {
  return this != internal_default_instance() && queryallclusterreq_value_ != NULL;
}
void Request::clear_queryallclusterreq_value() {
  if (GetArenaNoVirtual() == NULL && queryallclusterreq_value_ != NULL) delete queryallclusterreq_value_;
  queryallclusterreq_value_ = NULL;
}
const ::Management::Interactive::Message::QueryAllClusterReq& Request::queryallclusterreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.QueryAllClusterReq_Value)
  return queryallclusterreq_value_ != NULL ? *queryallclusterreq_value_
                         : *::Management::Interactive::Message::QueryAllClusterReq::internal_default_instance();
}
::Management::Interactive::Message::QueryAllClusterReq* Request::mutable_queryallclusterreq_value() {
  
  if (queryallclusterreq_value_ == NULL) {
    queryallclusterreq_value_ = new ::Management::Interactive::Message::QueryAllClusterReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.QueryAllClusterReq_Value)
  return queryallclusterreq_value_;
}
::Management::Interactive::Message::QueryAllClusterReq* Request::release_queryallclusterreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.QueryAllClusterReq_Value)
  
  ::Management::Interactive::Message::QueryAllClusterReq* temp = queryallclusterreq_value_;
  queryallclusterreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_queryallclusterreq_value(::Management::Interactive::Message::QueryAllClusterReq* queryallclusterreq_value) {
  delete queryallclusterreq_value_;
  queryallclusterreq_value_ = queryallclusterreq_value;
  if (queryallclusterreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.QueryAllClusterReq_Value)
}

// .Management.Interactive.Message.QueryClusterDeviceReq QueryClusterDeviceReq_Value = 70;
bool Request::has_queryclusterdevicereq_value() const {
  return this != internal_default_instance() && queryclusterdevicereq_value_ != NULL;
}
void Request::clear_queryclusterdevicereq_value() {
  if (GetArenaNoVirtual() == NULL && queryclusterdevicereq_value_ != NULL) delete queryclusterdevicereq_value_;
  queryclusterdevicereq_value_ = NULL;
}
const ::Management::Interactive::Message::QueryClusterDeviceReq& Request::queryclusterdevicereq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.QueryClusterDeviceReq_Value)
  return queryclusterdevicereq_value_ != NULL ? *queryclusterdevicereq_value_
                         : *::Management::Interactive::Message::QueryClusterDeviceReq::internal_default_instance();
}
::Management::Interactive::Message::QueryClusterDeviceReq* Request::mutable_queryclusterdevicereq_value() {
  
  if (queryclusterdevicereq_value_ == NULL) {
    queryclusterdevicereq_value_ = new ::Management::Interactive::Message::QueryClusterDeviceReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.QueryClusterDeviceReq_Value)
  return queryclusterdevicereq_value_;
}
::Management::Interactive::Message::QueryClusterDeviceReq* Request::release_queryclusterdevicereq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.QueryClusterDeviceReq_Value)
  
  ::Management::Interactive::Message::QueryClusterDeviceReq* temp = queryclusterdevicereq_value_;
  queryclusterdevicereq_value_ = NULL;
  return temp;
}
void Request::set_allocated_queryclusterdevicereq_value(::Management::Interactive::Message::QueryClusterDeviceReq* queryclusterdevicereq_value) {
  delete queryclusterdevicereq_value_;
  queryclusterdevicereq_value_ = queryclusterdevicereq_value;
  if (queryclusterdevicereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.QueryClusterDeviceReq_Value)
}

// .Management.Interactive.Message.QueryClusterUserReq QueryClusterUserReq_Value = 80;
bool Request::has_queryclusteruserreq_value() const {
  return this != internal_default_instance() && queryclusteruserreq_value_ != NULL;
}
void Request::clear_queryclusteruserreq_value() {
  if (GetArenaNoVirtual() == NULL && queryclusteruserreq_value_ != NULL) delete queryclusteruserreq_value_;
  queryclusteruserreq_value_ = NULL;
}
const ::Management::Interactive::Message::QueryClusterUserReq& Request::queryclusteruserreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.QueryClusterUserReq_Value)
  return queryclusteruserreq_value_ != NULL ? *queryclusteruserreq_value_
                         : *::Management::Interactive::Message::QueryClusterUserReq::internal_default_instance();
}
::Management::Interactive::Message::QueryClusterUserReq* Request::mutable_queryclusteruserreq_value() {
  
  if (queryclusteruserreq_value_ == NULL) {
    queryclusteruserreq_value_ = new ::Management::Interactive::Message::QueryClusterUserReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.QueryClusterUserReq_Value)
  return queryclusteruserreq_value_;
}
::Management::Interactive::Message::QueryClusterUserReq* Request::release_queryclusteruserreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.QueryClusterUserReq_Value)
  
  ::Management::Interactive::Message::QueryClusterUserReq* temp = queryclusteruserreq_value_;
  queryclusteruserreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_queryclusteruserreq_value(::Management::Interactive::Message::QueryClusterUserReq* queryclusteruserreq_value) {
  delete queryclusteruserreq_value_;
  queryclusteruserreq_value_ = queryclusteruserreq_value;
  if (queryclusteruserreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.QueryClusterUserReq_Value)
}

// .Management.Interactive.Message.PushClusterDeviceReq PushClusterDeviceReq_Value = 270;
bool Request::has_pushclusterdevicereq_value() const {
  return this != internal_default_instance() && pushclusterdevicereq_value_ != NULL;
}
void Request::clear_pushclusterdevicereq_value() {
  if (GetArenaNoVirtual() == NULL && pushclusterdevicereq_value_ != NULL) delete pushclusterdevicereq_value_;
  pushclusterdevicereq_value_ = NULL;
}
const ::Management::Interactive::Message::PushClusterDeviceReq& Request::pushclusterdevicereq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.PushClusterDeviceReq_Value)
  return pushclusterdevicereq_value_ != NULL ? *pushclusterdevicereq_value_
                         : *::Management::Interactive::Message::PushClusterDeviceReq::internal_default_instance();
}
::Management::Interactive::Message::PushClusterDeviceReq* Request::mutable_pushclusterdevicereq_value() {
  
  if (pushclusterdevicereq_value_ == NULL) {
    pushclusterdevicereq_value_ = new ::Management::Interactive::Message::PushClusterDeviceReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.PushClusterDeviceReq_Value)
  return pushclusterdevicereq_value_;
}
::Management::Interactive::Message::PushClusterDeviceReq* Request::release_pushclusterdevicereq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.PushClusterDeviceReq_Value)
  
  ::Management::Interactive::Message::PushClusterDeviceReq* temp = pushclusterdevicereq_value_;
  pushclusterdevicereq_value_ = NULL;
  return temp;
}
void Request::set_allocated_pushclusterdevicereq_value(::Management::Interactive::Message::PushClusterDeviceReq* pushclusterdevicereq_value) {
  delete pushclusterdevicereq_value_;
  pushclusterdevicereq_value_ = pushclusterdevicereq_value;
  if (pushclusterdevicereq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.PushClusterDeviceReq_Value)
}

// .Management.Interactive.Message.PushClusterUserReq PushClusterUserReq_Value = 280;
bool Request::has_pushclusteruserreq_value() const {
  return this != internal_default_instance() && pushclusteruserreq_value_ != NULL;
}
void Request::clear_pushclusteruserreq_value() {
  if (GetArenaNoVirtual() == NULL && pushclusteruserreq_value_ != NULL) delete pushclusteruserreq_value_;
  pushclusteruserreq_value_ = NULL;
}
const ::Management::Interactive::Message::PushClusterUserReq& Request::pushclusteruserreq_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Request.PushClusterUserReq_Value)
  return pushclusteruserreq_value_ != NULL ? *pushclusteruserreq_value_
                         : *::Management::Interactive::Message::PushClusterUserReq::internal_default_instance();
}
::Management::Interactive::Message::PushClusterUserReq* Request::mutable_pushclusteruserreq_value() {
  
  if (pushclusteruserreq_value_ == NULL) {
    pushclusteruserreq_value_ = new ::Management::Interactive::Message::PushClusterUserReq;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Request.PushClusterUserReq_Value)
  return pushclusteruserreq_value_;
}
::Management::Interactive::Message::PushClusterUserReq* Request::release_pushclusteruserreq_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Request.PushClusterUserReq_Value)
  
  ::Management::Interactive::Message::PushClusterUserReq* temp = pushclusteruserreq_value_;
  pushclusteruserreq_value_ = NULL;
  return temp;
}
void Request::set_allocated_pushclusteruserreq_value(::Management::Interactive::Message::PushClusterUserReq* pushclusteruserreq_value) {
  delete pushclusteruserreq_value_;
  pushclusteruserreq_value_ = pushclusteruserreq_value;
  if (pushclusteruserreq_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Request.PushClusterUserReq_Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kIRetcodeFieldNumber;
const int Response::kStrRetMsgFieldNumber;
const int Response::kAddClusterRspValueFieldNumber;
const int Response::kDeleteClusterRspValueFieldNumber;
const int Response::kModifyClusterRspValueFieldNumber;
const int Response::kQueryClusterInfoRspValueFieldNumber;
const int Response::kShakehandClusterRspValueFieldNumber;
const int Response::kQueryAllClusterRspValueFieldNumber;
const int Response::kQueryClusterDeviceRspValueFieldNumber;
const int Response::kQueryClusterUserRspValueFieldNumber;
const int Response::kPushClusterDeviceRspValueFieldNumber;
const int Response::kPushClusterUserRspValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strretmsg().size() > 0) {
    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_addclusterrsp_value()) {
    addclusterrsp_value_ = new ::Management::Interactive::Message::AddClusterRsp(*from.addclusterrsp_value_);
  } else {
    addclusterrsp_value_ = NULL;
  }
  if (from.has_deleteclusterrsp_value()) {
    deleteclusterrsp_value_ = new ::Management::Interactive::Message::DeleteClusterRsp(*from.deleteclusterrsp_value_);
  } else {
    deleteclusterrsp_value_ = NULL;
  }
  if (from.has_modifyclusterrsp_value()) {
    modifyclusterrsp_value_ = new ::Management::Interactive::Message::ModifyClusterRsp(*from.modifyclusterrsp_value_);
  } else {
    modifyclusterrsp_value_ = NULL;
  }
  if (from.has_queryclusterinforsp_value()) {
    queryclusterinforsp_value_ = new ::Management::Interactive::Message::QueryClusterInfoRsp(*from.queryclusterinforsp_value_);
  } else {
    queryclusterinforsp_value_ = NULL;
  }
  if (from.has_shakehandclusterrsp_value()) {
    shakehandclusterrsp_value_ = new ::Management::Interactive::Message::ShakehandClusterRsp(*from.shakehandclusterrsp_value_);
  } else {
    shakehandclusterrsp_value_ = NULL;
  }
  if (from.has_queryallclusterrsp_value()) {
    queryallclusterrsp_value_ = new ::Management::Interactive::Message::QueryAllClusterRsp(*from.queryallclusterrsp_value_);
  } else {
    queryallclusterrsp_value_ = NULL;
  }
  if (from.has_queryclusterdevicersp_value()) {
    queryclusterdevicersp_value_ = new ::Management::Interactive::Message::QueryClusterDeviceRsp(*from.queryclusterdevicersp_value_);
  } else {
    queryclusterdevicersp_value_ = NULL;
  }
  if (from.has_queryclusteruserrsp_value()) {
    queryclusteruserrsp_value_ = new ::Management::Interactive::Message::QueryClusterUserRsp(*from.queryclusteruserrsp_value_);
  } else {
    queryclusteruserrsp_value_ = NULL;
  }
  if (from.has_pushclusterdevicersp_value()) {
    pushclusterdevicersp_value_ = new ::Management::Interactive::Message::PushClusterDeviceRsp(*from.pushclusterdevicersp_value_);
  } else {
    pushclusterdevicersp_value_ = NULL;
  }
  if (from.has_pushclusteruserrsp_value()) {
    pushclusteruserrsp_value_ = new ::Management::Interactive::Message::PushClusterUserRsp(*from.pushclusteruserrsp_value_);
  } else {
    pushclusteruserrsp_value_ = NULL;
  }
  iretcode_ = from.iretcode_;
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.Response)
}

void Response::SharedCtor() {
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&addclusterrsp_value_, 0, reinterpret_cast<char*>(&iretcode_) -
    reinterpret_cast<char*>(&addclusterrsp_value_) + sizeof(iretcode_));
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  strretmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete addclusterrsp_value_;
  }
  if (this != internal_default_instance()) {
    delete deleteclusterrsp_value_;
  }
  if (this != internal_default_instance()) {
    delete modifyclusterrsp_value_;
  }
  if (this != internal_default_instance()) {
    delete queryclusterinforsp_value_;
  }
  if (this != internal_default_instance()) {
    delete shakehandclusterrsp_value_;
  }
  if (this != internal_default_instance()) {
    delete queryallclusterrsp_value_;
  }
  if (this != internal_default_instance()) {
    delete queryclusterdevicersp_value_;
  }
  if (this != internal_default_instance()) {
    delete queryclusteruserrsp_value_;
  }
  if (this != internal_default_instance()) {
    delete pushclusterdevicersp_value_;
  }
  if (this != internal_default_instance()) {
    delete pushclusteruserrsp_value_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[27].descriptor;
}

const Response& Response::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.Response)
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && addclusterrsp_value_ != NULL) {
    delete addclusterrsp_value_;
  }
  addclusterrsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && deleteclusterrsp_value_ != NULL) {
    delete deleteclusterrsp_value_;
  }
  deleteclusterrsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifyclusterrsp_value_ != NULL) {
    delete modifyclusterrsp_value_;
  }
  modifyclusterrsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryclusterinforsp_value_ != NULL) {
    delete queryclusterinforsp_value_;
  }
  queryclusterinforsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandclusterrsp_value_ != NULL) {
    delete shakehandclusterrsp_value_;
  }
  shakehandclusterrsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryallclusterrsp_value_ != NULL) {
    delete queryallclusterrsp_value_;
  }
  queryallclusterrsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryclusterdevicersp_value_ != NULL) {
    delete queryclusterdevicersp_value_;
  }
  queryclusterdevicersp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && queryclusteruserrsp_value_ != NULL) {
    delete queryclusteruserrsp_value_;
  }
  queryclusteruserrsp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && pushclusterdevicersp_value_ != NULL) {
    delete pushclusterdevicersp_value_;
  }
  pushclusterdevicersp_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && pushclusteruserrsp_value_ != NULL) {
    delete pushclusteruserrsp_value_;
  }
  pushclusteruserrsp_value_ = NULL;
  iretcode_ = 0;
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 iRetcode = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRetMsg = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strretmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strretmsg().data(), this->strretmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.Response.strRetMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.AddClusterRsp AddClusterRsp_Value = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addclusterrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.DeleteClusterRsp DeleteClusterRsp_Value = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleteclusterrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.ModifyClusterRsp ModifyClusterRsp_Value = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifyclusterrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryClusterInfoRsp QueryClusterInfoRsp_Value = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryclusterinforsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.ShakehandClusterRsp ShakehandClusterRsp_Value = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandclusterrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryAllClusterRsp QueryAllClusterRsp_Value = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryallclusterrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryClusterDeviceRsp QueryClusterDeviceRsp_Value = 90;
      case 90: {
        if (tag == 722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryclusterdevicersp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.QueryClusterUserRsp QueryClusterUserRsp_Value = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryclusteruserrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.PushClusterDeviceRsp PushClusterDeviceRsp_Value = 290;
      case 290: {
        if (tag == 2322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pushclusterdevicersp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.PushClusterUserRsp PushClusterUserRsp_Value = 300;
      case 300: {
        if (tag == 2402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pushclusteruserrsp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.Response)
  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->iretcode(), output);
  }

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Response.strRetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->strretmsg(), output);
  }

  // .Management.Interactive.Message.AddClusterRsp AddClusterRsp_Value = 30;
  if (this->has_addclusterrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->addclusterrsp_value_, output);
  }

  // .Management.Interactive.Message.DeleteClusterRsp DeleteClusterRsp_Value = 40;
  if (this->has_deleteclusterrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->deleteclusterrsp_value_, output);
  }

  // .Management.Interactive.Message.ModifyClusterRsp ModifyClusterRsp_Value = 50;
  if (this->has_modifyclusterrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->modifyclusterrsp_value_, output);
  }

  // .Management.Interactive.Message.QueryClusterInfoRsp QueryClusterInfoRsp_Value = 60;
  if (this->has_queryclusterinforsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->queryclusterinforsp_value_, output);
  }

  // .Management.Interactive.Message.ShakehandClusterRsp ShakehandClusterRsp_Value = 70;
  if (this->has_shakehandclusterrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->shakehandclusterrsp_value_, output);
  }

  // .Management.Interactive.Message.QueryAllClusterRsp QueryAllClusterRsp_Value = 80;
  if (this->has_queryallclusterrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->queryallclusterrsp_value_, output);
  }

  // .Management.Interactive.Message.QueryClusterDeviceRsp QueryClusterDeviceRsp_Value = 90;
  if (this->has_queryclusterdevicersp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->queryclusterdevicersp_value_, output);
  }

  // .Management.Interactive.Message.QueryClusterUserRsp QueryClusterUserRsp_Value = 100;
  if (this->has_queryclusteruserrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->queryclusteruserrsp_value_, output);
  }

  // .Management.Interactive.Message.PushClusterDeviceRsp PushClusterDeviceRsp_Value = 290;
  if (this->has_pushclusterdevicersp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290, *this->pushclusterdevicersp_value_, output);
  }

  // .Management.Interactive.Message.PushClusterUserRsp PushClusterUserRsp_Value = 300;
  if (this->has_pushclusteruserrsp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      300, *this->pushclusteruserrsp_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.Response)
  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->iretcode(), target);
  }

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.Response.strRetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strretmsg(), target);
  }

  // .Management.Interactive.Message.AddClusterRsp AddClusterRsp_Value = 30;
  if (this->has_addclusterrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->addclusterrsp_value_, false, target);
  }

  // .Management.Interactive.Message.DeleteClusterRsp DeleteClusterRsp_Value = 40;
  if (this->has_deleteclusterrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->deleteclusterrsp_value_, false, target);
  }

  // .Management.Interactive.Message.ModifyClusterRsp ModifyClusterRsp_Value = 50;
  if (this->has_modifyclusterrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->modifyclusterrsp_value_, false, target);
  }

  // .Management.Interactive.Message.QueryClusterInfoRsp QueryClusterInfoRsp_Value = 60;
  if (this->has_queryclusterinforsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->queryclusterinforsp_value_, false, target);
  }

  // .Management.Interactive.Message.ShakehandClusterRsp ShakehandClusterRsp_Value = 70;
  if (this->has_shakehandclusterrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->shakehandclusterrsp_value_, false, target);
  }

  // .Management.Interactive.Message.QueryAllClusterRsp QueryAllClusterRsp_Value = 80;
  if (this->has_queryallclusterrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->queryallclusterrsp_value_, false, target);
  }

  // .Management.Interactive.Message.QueryClusterDeviceRsp QueryClusterDeviceRsp_Value = 90;
  if (this->has_queryclusterdevicersp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->queryclusterdevicersp_value_, false, target);
  }

  // .Management.Interactive.Message.QueryClusterUserRsp QueryClusterUserRsp_Value = 100;
  if (this->has_queryclusteruserrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->queryclusteruserrsp_value_, false, target);
  }

  // .Management.Interactive.Message.PushClusterDeviceRsp PushClusterDeviceRsp_Value = 290;
  if (this->has_pushclusterdevicersp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        290, *this->pushclusterdevicersp_value_, false, target);
  }

  // .Management.Interactive.Message.PushClusterUserRsp PushClusterUserRsp_Value = 300;
  if (this->has_pushclusteruserrsp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        300, *this->pushclusteruserrsp_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.Response)
  size_t total_size = 0;

  // string strRetMsg = 20;
  if (this->strretmsg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strretmsg());
  }

  // .Management.Interactive.Message.AddClusterRsp AddClusterRsp_Value = 30;
  if (this->has_addclusterrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addclusterrsp_value_);
  }

  // .Management.Interactive.Message.DeleteClusterRsp DeleteClusterRsp_Value = 40;
  if (this->has_deleteclusterrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deleteclusterrsp_value_);
  }

  // .Management.Interactive.Message.ModifyClusterRsp ModifyClusterRsp_Value = 50;
  if (this->has_modifyclusterrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifyclusterrsp_value_);
  }

  // .Management.Interactive.Message.QueryClusterInfoRsp QueryClusterInfoRsp_Value = 60;
  if (this->has_queryclusterinforsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryclusterinforsp_value_);
  }

  // .Management.Interactive.Message.ShakehandClusterRsp ShakehandClusterRsp_Value = 70;
  if (this->has_shakehandclusterrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandclusterrsp_value_);
  }

  // .Management.Interactive.Message.QueryAllClusterRsp QueryAllClusterRsp_Value = 80;
  if (this->has_queryallclusterrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryallclusterrsp_value_);
  }

  // .Management.Interactive.Message.QueryClusterDeviceRsp QueryClusterDeviceRsp_Value = 90;
  if (this->has_queryclusterdevicersp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryclusterdevicersp_value_);
  }

  // .Management.Interactive.Message.QueryClusterUserRsp QueryClusterUserRsp_Value = 100;
  if (this->has_queryclusteruserrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->queryclusteruserrsp_value_);
  }

  // .Management.Interactive.Message.PushClusterDeviceRsp PushClusterDeviceRsp_Value = 290;
  if (this->has_pushclusterdevicersp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pushclusterdevicersp_value_);
  }

  // .Management.Interactive.Message.PushClusterUserRsp PushClusterUserRsp_Value = 300;
  if (this->has_pushclusteruserrsp_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pushclusteruserrsp_value_);
  }

  // int32 iRetcode = 10;
  if (this->iretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iretcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strretmsg().size() > 0) {

    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_addclusterrsp_value()) {
    mutable_addclusterrsp_value()->::Management::Interactive::Message::AddClusterRsp::MergeFrom(from.addclusterrsp_value());
  }
  if (from.has_deleteclusterrsp_value()) {
    mutable_deleteclusterrsp_value()->::Management::Interactive::Message::DeleteClusterRsp::MergeFrom(from.deleteclusterrsp_value());
  }
  if (from.has_modifyclusterrsp_value()) {
    mutable_modifyclusterrsp_value()->::Management::Interactive::Message::ModifyClusterRsp::MergeFrom(from.modifyclusterrsp_value());
  }
  if (from.has_queryclusterinforsp_value()) {
    mutable_queryclusterinforsp_value()->::Management::Interactive::Message::QueryClusterInfoRsp::MergeFrom(from.queryclusterinforsp_value());
  }
  if (from.has_shakehandclusterrsp_value()) {
    mutable_shakehandclusterrsp_value()->::Management::Interactive::Message::ShakehandClusterRsp::MergeFrom(from.shakehandclusterrsp_value());
  }
  if (from.has_queryallclusterrsp_value()) {
    mutable_queryallclusterrsp_value()->::Management::Interactive::Message::QueryAllClusterRsp::MergeFrom(from.queryallclusterrsp_value());
  }
  if (from.has_queryclusterdevicersp_value()) {
    mutable_queryclusterdevicersp_value()->::Management::Interactive::Message::QueryClusterDeviceRsp::MergeFrom(from.queryclusterdevicersp_value());
  }
  if (from.has_queryclusteruserrsp_value()) {
    mutable_queryclusteruserrsp_value()->::Management::Interactive::Message::QueryClusterUserRsp::MergeFrom(from.queryclusteruserrsp_value());
  }
  if (from.has_pushclusterdevicersp_value()) {
    mutable_pushclusterdevicersp_value()->::Management::Interactive::Message::PushClusterDeviceRsp::MergeFrom(from.pushclusterdevicersp_value());
  }
  if (from.has_pushclusteruserrsp_value()) {
    mutable_pushclusteruserrsp_value()->::Management::Interactive::Message::PushClusterUserRsp::MergeFrom(from.pushclusteruserrsp_value());
  }
  if (from.iretcode() != 0) {
    set_iretcode(from.iretcode());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  strretmsg_.Swap(&other->strretmsg_);
  std::swap(addclusterrsp_value_, other->addclusterrsp_value_);
  std::swap(deleteclusterrsp_value_, other->deleteclusterrsp_value_);
  std::swap(modifyclusterrsp_value_, other->modifyclusterrsp_value_);
  std::swap(queryclusterinforsp_value_, other->queryclusterinforsp_value_);
  std::swap(shakehandclusterrsp_value_, other->shakehandclusterrsp_value_);
  std::swap(queryallclusterrsp_value_, other->queryallclusterrsp_value_);
  std::swap(queryclusterdevicersp_value_, other->queryclusterdevicersp_value_);
  std::swap(queryclusteruserrsp_value_, other->queryclusteruserrsp_value_);
  std::swap(pushclusterdevicersp_value_, other->pushclusterdevicersp_value_);
  std::swap(pushclusteruserrsp_value_, other->pushclusteruserrsp_value_);
  std::swap(iretcode_, other->iretcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// int32 iRetcode = 10;
void Response::clear_iretcode() {
  iretcode_ = 0;
}
::google::protobuf::int32 Response::iretcode() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.iRetcode)
  return iretcode_;
}
void Response::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Response.iRetcode)
}

// string strRetMsg = 20;
void Response::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Response::strretmsg() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.strRetMsg)
  return strretmsg_.GetNoArena();
}
void Response::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.Response.strRetMsg)
}
#if LANG_CXX11
void Response::set_strretmsg(::std::string&& value) {
  
  strretmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.Response.strRetMsg)
}
#endif
void Response::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.Response.strRetMsg)
}
void Response::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.Response.strRetMsg)
}
::std::string* Response::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response::release_strretmsg() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.strRetMsg)
}

// .Management.Interactive.Message.AddClusterRsp AddClusterRsp_Value = 30;
bool Response::has_addclusterrsp_value() const {
  return this != internal_default_instance() && addclusterrsp_value_ != NULL;
}
void Response::clear_addclusterrsp_value() {
  if (GetArenaNoVirtual() == NULL && addclusterrsp_value_ != NULL) delete addclusterrsp_value_;
  addclusterrsp_value_ = NULL;
}
const ::Management::Interactive::Message::AddClusterRsp& Response::addclusterrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.AddClusterRsp_Value)
  return addclusterrsp_value_ != NULL ? *addclusterrsp_value_
                         : *::Management::Interactive::Message::AddClusterRsp::internal_default_instance();
}
::Management::Interactive::Message::AddClusterRsp* Response::mutable_addclusterrsp_value() {
  
  if (addclusterrsp_value_ == NULL) {
    addclusterrsp_value_ = new ::Management::Interactive::Message::AddClusterRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.AddClusterRsp_Value)
  return addclusterrsp_value_;
}
::Management::Interactive::Message::AddClusterRsp* Response::release_addclusterrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.AddClusterRsp_Value)
  
  ::Management::Interactive::Message::AddClusterRsp* temp = addclusterrsp_value_;
  addclusterrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_addclusterrsp_value(::Management::Interactive::Message::AddClusterRsp* addclusterrsp_value) {
  delete addclusterrsp_value_;
  addclusterrsp_value_ = addclusterrsp_value;
  if (addclusterrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.AddClusterRsp_Value)
}

// .Management.Interactive.Message.DeleteClusterRsp DeleteClusterRsp_Value = 40;
bool Response::has_deleteclusterrsp_value() const {
  return this != internal_default_instance() && deleteclusterrsp_value_ != NULL;
}
void Response::clear_deleteclusterrsp_value() {
  if (GetArenaNoVirtual() == NULL && deleteclusterrsp_value_ != NULL) delete deleteclusterrsp_value_;
  deleteclusterrsp_value_ = NULL;
}
const ::Management::Interactive::Message::DeleteClusterRsp& Response::deleteclusterrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.DeleteClusterRsp_Value)
  return deleteclusterrsp_value_ != NULL ? *deleteclusterrsp_value_
                         : *::Management::Interactive::Message::DeleteClusterRsp::internal_default_instance();
}
::Management::Interactive::Message::DeleteClusterRsp* Response::mutable_deleteclusterrsp_value() {
  
  if (deleteclusterrsp_value_ == NULL) {
    deleteclusterrsp_value_ = new ::Management::Interactive::Message::DeleteClusterRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.DeleteClusterRsp_Value)
  return deleteclusterrsp_value_;
}
::Management::Interactive::Message::DeleteClusterRsp* Response::release_deleteclusterrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.DeleteClusterRsp_Value)
  
  ::Management::Interactive::Message::DeleteClusterRsp* temp = deleteclusterrsp_value_;
  deleteclusterrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_deleteclusterrsp_value(::Management::Interactive::Message::DeleteClusterRsp* deleteclusterrsp_value) {
  delete deleteclusterrsp_value_;
  deleteclusterrsp_value_ = deleteclusterrsp_value;
  if (deleteclusterrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.DeleteClusterRsp_Value)
}

// .Management.Interactive.Message.ModifyClusterRsp ModifyClusterRsp_Value = 50;
bool Response::has_modifyclusterrsp_value() const {
  return this != internal_default_instance() && modifyclusterrsp_value_ != NULL;
}
void Response::clear_modifyclusterrsp_value() {
  if (GetArenaNoVirtual() == NULL && modifyclusterrsp_value_ != NULL) delete modifyclusterrsp_value_;
  modifyclusterrsp_value_ = NULL;
}
const ::Management::Interactive::Message::ModifyClusterRsp& Response::modifyclusterrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.ModifyClusterRsp_Value)
  return modifyclusterrsp_value_ != NULL ? *modifyclusterrsp_value_
                         : *::Management::Interactive::Message::ModifyClusterRsp::internal_default_instance();
}
::Management::Interactive::Message::ModifyClusterRsp* Response::mutable_modifyclusterrsp_value() {
  
  if (modifyclusterrsp_value_ == NULL) {
    modifyclusterrsp_value_ = new ::Management::Interactive::Message::ModifyClusterRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.ModifyClusterRsp_Value)
  return modifyclusterrsp_value_;
}
::Management::Interactive::Message::ModifyClusterRsp* Response::release_modifyclusterrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.ModifyClusterRsp_Value)
  
  ::Management::Interactive::Message::ModifyClusterRsp* temp = modifyclusterrsp_value_;
  modifyclusterrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_modifyclusterrsp_value(::Management::Interactive::Message::ModifyClusterRsp* modifyclusterrsp_value) {
  delete modifyclusterrsp_value_;
  modifyclusterrsp_value_ = modifyclusterrsp_value;
  if (modifyclusterrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.ModifyClusterRsp_Value)
}

// .Management.Interactive.Message.QueryClusterInfoRsp QueryClusterInfoRsp_Value = 60;
bool Response::has_queryclusterinforsp_value() const {
  return this != internal_default_instance() && queryclusterinforsp_value_ != NULL;
}
void Response::clear_queryclusterinforsp_value() {
  if (GetArenaNoVirtual() == NULL && queryclusterinforsp_value_ != NULL) delete queryclusterinforsp_value_;
  queryclusterinforsp_value_ = NULL;
}
const ::Management::Interactive::Message::QueryClusterInfoRsp& Response::queryclusterinforsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.QueryClusterInfoRsp_Value)
  return queryclusterinforsp_value_ != NULL ? *queryclusterinforsp_value_
                         : *::Management::Interactive::Message::QueryClusterInfoRsp::internal_default_instance();
}
::Management::Interactive::Message::QueryClusterInfoRsp* Response::mutable_queryclusterinforsp_value() {
  
  if (queryclusterinforsp_value_ == NULL) {
    queryclusterinforsp_value_ = new ::Management::Interactive::Message::QueryClusterInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.QueryClusterInfoRsp_Value)
  return queryclusterinforsp_value_;
}
::Management::Interactive::Message::QueryClusterInfoRsp* Response::release_queryclusterinforsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.QueryClusterInfoRsp_Value)
  
  ::Management::Interactive::Message::QueryClusterInfoRsp* temp = queryclusterinforsp_value_;
  queryclusterinforsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_queryclusterinforsp_value(::Management::Interactive::Message::QueryClusterInfoRsp* queryclusterinforsp_value) {
  delete queryclusterinforsp_value_;
  queryclusterinforsp_value_ = queryclusterinforsp_value;
  if (queryclusterinforsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.QueryClusterInfoRsp_Value)
}

// .Management.Interactive.Message.ShakehandClusterRsp ShakehandClusterRsp_Value = 70;
bool Response::has_shakehandclusterrsp_value() const {
  return this != internal_default_instance() && shakehandclusterrsp_value_ != NULL;
}
void Response::clear_shakehandclusterrsp_value() {
  if (GetArenaNoVirtual() == NULL && shakehandclusterrsp_value_ != NULL) delete shakehandclusterrsp_value_;
  shakehandclusterrsp_value_ = NULL;
}
const ::Management::Interactive::Message::ShakehandClusterRsp& Response::shakehandclusterrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.ShakehandClusterRsp_Value)
  return shakehandclusterrsp_value_ != NULL ? *shakehandclusterrsp_value_
                         : *::Management::Interactive::Message::ShakehandClusterRsp::internal_default_instance();
}
::Management::Interactive::Message::ShakehandClusterRsp* Response::mutable_shakehandclusterrsp_value() {
  
  if (shakehandclusterrsp_value_ == NULL) {
    shakehandclusterrsp_value_ = new ::Management::Interactive::Message::ShakehandClusterRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.ShakehandClusterRsp_Value)
  return shakehandclusterrsp_value_;
}
::Management::Interactive::Message::ShakehandClusterRsp* Response::release_shakehandclusterrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.ShakehandClusterRsp_Value)
  
  ::Management::Interactive::Message::ShakehandClusterRsp* temp = shakehandclusterrsp_value_;
  shakehandclusterrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_shakehandclusterrsp_value(::Management::Interactive::Message::ShakehandClusterRsp* shakehandclusterrsp_value) {
  delete shakehandclusterrsp_value_;
  shakehandclusterrsp_value_ = shakehandclusterrsp_value;
  if (shakehandclusterrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.ShakehandClusterRsp_Value)
}

// .Management.Interactive.Message.QueryAllClusterRsp QueryAllClusterRsp_Value = 80;
bool Response::has_queryallclusterrsp_value() const {
  return this != internal_default_instance() && queryallclusterrsp_value_ != NULL;
}
void Response::clear_queryallclusterrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryallclusterrsp_value_ != NULL) delete queryallclusterrsp_value_;
  queryallclusterrsp_value_ = NULL;
}
const ::Management::Interactive::Message::QueryAllClusterRsp& Response::queryallclusterrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.QueryAllClusterRsp_Value)
  return queryallclusterrsp_value_ != NULL ? *queryallclusterrsp_value_
                         : *::Management::Interactive::Message::QueryAllClusterRsp::internal_default_instance();
}
::Management::Interactive::Message::QueryAllClusterRsp* Response::mutable_queryallclusterrsp_value() {
  
  if (queryallclusterrsp_value_ == NULL) {
    queryallclusterrsp_value_ = new ::Management::Interactive::Message::QueryAllClusterRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.QueryAllClusterRsp_Value)
  return queryallclusterrsp_value_;
}
::Management::Interactive::Message::QueryAllClusterRsp* Response::release_queryallclusterrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.QueryAllClusterRsp_Value)
  
  ::Management::Interactive::Message::QueryAllClusterRsp* temp = queryallclusterrsp_value_;
  queryallclusterrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_queryallclusterrsp_value(::Management::Interactive::Message::QueryAllClusterRsp* queryallclusterrsp_value) {
  delete queryallclusterrsp_value_;
  queryallclusterrsp_value_ = queryallclusterrsp_value;
  if (queryallclusterrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.QueryAllClusterRsp_Value)
}

// .Management.Interactive.Message.QueryClusterDeviceRsp QueryClusterDeviceRsp_Value = 90;
bool Response::has_queryclusterdevicersp_value() const {
  return this != internal_default_instance() && queryclusterdevicersp_value_ != NULL;
}
void Response::clear_queryclusterdevicersp_value() {
  if (GetArenaNoVirtual() == NULL && queryclusterdevicersp_value_ != NULL) delete queryclusterdevicersp_value_;
  queryclusterdevicersp_value_ = NULL;
}
const ::Management::Interactive::Message::QueryClusterDeviceRsp& Response::queryclusterdevicersp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.QueryClusterDeviceRsp_Value)
  return queryclusterdevicersp_value_ != NULL ? *queryclusterdevicersp_value_
                         : *::Management::Interactive::Message::QueryClusterDeviceRsp::internal_default_instance();
}
::Management::Interactive::Message::QueryClusterDeviceRsp* Response::mutable_queryclusterdevicersp_value() {
  
  if (queryclusterdevicersp_value_ == NULL) {
    queryclusterdevicersp_value_ = new ::Management::Interactive::Message::QueryClusterDeviceRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.QueryClusterDeviceRsp_Value)
  return queryclusterdevicersp_value_;
}
::Management::Interactive::Message::QueryClusterDeviceRsp* Response::release_queryclusterdevicersp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.QueryClusterDeviceRsp_Value)
  
  ::Management::Interactive::Message::QueryClusterDeviceRsp* temp = queryclusterdevicersp_value_;
  queryclusterdevicersp_value_ = NULL;
  return temp;
}
void Response::set_allocated_queryclusterdevicersp_value(::Management::Interactive::Message::QueryClusterDeviceRsp* queryclusterdevicersp_value) {
  delete queryclusterdevicersp_value_;
  queryclusterdevicersp_value_ = queryclusterdevicersp_value;
  if (queryclusterdevicersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.QueryClusterDeviceRsp_Value)
}

// .Management.Interactive.Message.QueryClusterUserRsp QueryClusterUserRsp_Value = 100;
bool Response::has_queryclusteruserrsp_value() const {
  return this != internal_default_instance() && queryclusteruserrsp_value_ != NULL;
}
void Response::clear_queryclusteruserrsp_value() {
  if (GetArenaNoVirtual() == NULL && queryclusteruserrsp_value_ != NULL) delete queryclusteruserrsp_value_;
  queryclusteruserrsp_value_ = NULL;
}
const ::Management::Interactive::Message::QueryClusterUserRsp& Response::queryclusteruserrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.QueryClusterUserRsp_Value)
  return queryclusteruserrsp_value_ != NULL ? *queryclusteruserrsp_value_
                         : *::Management::Interactive::Message::QueryClusterUserRsp::internal_default_instance();
}
::Management::Interactive::Message::QueryClusterUserRsp* Response::mutable_queryclusteruserrsp_value() {
  
  if (queryclusteruserrsp_value_ == NULL) {
    queryclusteruserrsp_value_ = new ::Management::Interactive::Message::QueryClusterUserRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.QueryClusterUserRsp_Value)
  return queryclusteruserrsp_value_;
}
::Management::Interactive::Message::QueryClusterUserRsp* Response::release_queryclusteruserrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.QueryClusterUserRsp_Value)
  
  ::Management::Interactive::Message::QueryClusterUserRsp* temp = queryclusteruserrsp_value_;
  queryclusteruserrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_queryclusteruserrsp_value(::Management::Interactive::Message::QueryClusterUserRsp* queryclusteruserrsp_value) {
  delete queryclusteruserrsp_value_;
  queryclusteruserrsp_value_ = queryclusteruserrsp_value;
  if (queryclusteruserrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.QueryClusterUserRsp_Value)
}

// .Management.Interactive.Message.PushClusterDeviceRsp PushClusterDeviceRsp_Value = 290;
bool Response::has_pushclusterdevicersp_value() const {
  return this != internal_default_instance() && pushclusterdevicersp_value_ != NULL;
}
void Response::clear_pushclusterdevicersp_value() {
  if (GetArenaNoVirtual() == NULL && pushclusterdevicersp_value_ != NULL) delete pushclusterdevicersp_value_;
  pushclusterdevicersp_value_ = NULL;
}
const ::Management::Interactive::Message::PushClusterDeviceRsp& Response::pushclusterdevicersp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.PushClusterDeviceRsp_Value)
  return pushclusterdevicersp_value_ != NULL ? *pushclusterdevicersp_value_
                         : *::Management::Interactive::Message::PushClusterDeviceRsp::internal_default_instance();
}
::Management::Interactive::Message::PushClusterDeviceRsp* Response::mutable_pushclusterdevicersp_value() {
  
  if (pushclusterdevicersp_value_ == NULL) {
    pushclusterdevicersp_value_ = new ::Management::Interactive::Message::PushClusterDeviceRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.PushClusterDeviceRsp_Value)
  return pushclusterdevicersp_value_;
}
::Management::Interactive::Message::PushClusterDeviceRsp* Response::release_pushclusterdevicersp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.PushClusterDeviceRsp_Value)
  
  ::Management::Interactive::Message::PushClusterDeviceRsp* temp = pushclusterdevicersp_value_;
  pushclusterdevicersp_value_ = NULL;
  return temp;
}
void Response::set_allocated_pushclusterdevicersp_value(::Management::Interactive::Message::PushClusterDeviceRsp* pushclusterdevicersp_value) {
  delete pushclusterdevicersp_value_;
  pushclusterdevicersp_value_ = pushclusterdevicersp_value;
  if (pushclusterdevicersp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.PushClusterDeviceRsp_Value)
}

// .Management.Interactive.Message.PushClusterUserRsp PushClusterUserRsp_Value = 300;
bool Response::has_pushclusteruserrsp_value() const {
  return this != internal_default_instance() && pushclusteruserrsp_value_ != NULL;
}
void Response::clear_pushclusteruserrsp_value() {
  if (GetArenaNoVirtual() == NULL && pushclusteruserrsp_value_ != NULL) delete pushclusteruserrsp_value_;
  pushclusteruserrsp_value_ = NULL;
}
const ::Management::Interactive::Message::PushClusterUserRsp& Response::pushclusteruserrsp_value() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.Response.PushClusterUserRsp_Value)
  return pushclusteruserrsp_value_ != NULL ? *pushclusteruserrsp_value_
                         : *::Management::Interactive::Message::PushClusterUserRsp::internal_default_instance();
}
::Management::Interactive::Message::PushClusterUserRsp* Response::mutable_pushclusteruserrsp_value() {
  
  if (pushclusteruserrsp_value_ == NULL) {
    pushclusteruserrsp_value_ = new ::Management::Interactive::Message::PushClusterUserRsp;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.Response.PushClusterUserRsp_Value)
  return pushclusteruserrsp_value_;
}
::Management::Interactive::Message::PushClusterUserRsp* Response::release_pushclusteruserrsp_value() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.Response.PushClusterUserRsp_Value)
  
  ::Management::Interactive::Message::PushClusterUserRsp* temp = pushclusteruserrsp_value_;
  pushclusteruserrsp_value_ = NULL;
  return temp;
}
void Response::set_allocated_pushclusteruserrsp_value(::Management::Interactive::Message::PushClusterUserRsp* pushclusteruserrsp_value) {
  delete pushclusteruserrsp_value_;
  pushclusteruserrsp_value_ = pushclusteruserrsp_value;
  if (pushclusteruserrsp_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.Response.PushClusterUserRsp_Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManagementInteractiveMessage::kTypeFieldNumber;
const int ManagementInteractiveMessage::kUiMsgSeqFieldNumber;
const int ManagementInteractiveMessage::kStrSIDFieldNumber;
const int ManagementInteractiveMessage::kReqValueFieldNumber;
const int ManagementInteractiveMessage::kRspValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManagementInteractiveMessage::ManagementInteractiveMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Management.Interactive.Message.ManagementInteractiveMessage)
}
ManagementInteractiveMessage::ManagementInteractiveMessage(const ManagementInteractiveMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsid().size() > 0) {
    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    reqvalue_ = new ::Management::Interactive::Message::Request(*from.reqvalue_);
  } else {
    reqvalue_ = NULL;
  }
  if (from.has_rspvalue()) {
    rspvalue_ = new ::Management::Interactive::Message::Response(*from.rspvalue_);
  } else {
    rspvalue_ = NULL;
  }
  ::memcpy(&uimsgseq_, &from.uimsgseq_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Management.Interactive.Message.ManagementInteractiveMessage)
}

void ManagementInteractiveMessage::SharedCtor() {
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqvalue_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&reqvalue_) + sizeof(type_));
  _cached_size_ = 0;
}

ManagementInteractiveMessage::~ManagementInteractiveMessage() {
  // @@protoc_insertion_point(destructor:Management.Interactive.Message.ManagementInteractiveMessage)
  SharedDtor();
}

void ManagementInteractiveMessage::SharedDtor() {
  strsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqvalue_;
  }
  if (this != internal_default_instance()) {
    delete rspvalue_;
  }
}

void ManagementInteractiveMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManagementInteractiveMessage::descriptor() {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[28].descriptor;
}

const ManagementInteractiveMessage& ManagementInteractiveMessage::default_instance() {
  protobuf_InteractiveProtocolManagement_2eproto::InitDefaults();
  return *internal_default_instance();
}

ManagementInteractiveMessage* ManagementInteractiveMessage::New(::google::protobuf::Arena* arena) const {
  ManagementInteractiveMessage* n = new ManagementInteractiveMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ManagementInteractiveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Management.Interactive.Message.ManagementInteractiveMessage)
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) {
    delete reqvalue_;
  }
  reqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) {
    delete rspvalue_;
  }
  rspvalue_ = NULL;
  ::memset(&uimsgseq_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
}

bool ManagementInteractiveMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Management.Interactive.Message.ManagementInteractiveMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Management.Interactive.Message.ManagementMsgType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Management::Interactive::Message::ManagementMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uiMsgSeq = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uimsgseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsid().data(), this->strsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Management.Interactive.Message.ManagementInteractiveMessage.strSID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.Request reqValue = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Management.Interactive.Message.Response rspValue = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rspvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Management.Interactive.Message.ManagementInteractiveMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Management.Interactive.Message.ManagementInteractiveMessage)
  return false;
#undef DO_
}

void ManagementInteractiveMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Management.Interactive.Message.ManagementInteractiveMessage)
  // .Management.Interactive.Message.ManagementMsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uimsgseq(), output);
  }

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ManagementInteractiveMessage.strSID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strsid(), output);
  }

  // .Management.Interactive.Message.Request reqValue = 4;
  if (this->has_reqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reqvalue_, output);
  }

  // .Management.Interactive.Message.Response rspValue = 5;
  if (this->has_rspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rspvalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:Management.Interactive.Message.ManagementInteractiveMessage)
}

::google::protobuf::uint8* ManagementInteractiveMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Management.Interactive.Message.ManagementInteractiveMessage)
  // .Management.Interactive.Message.ManagementMsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uimsgseq(), target);
  }

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Management.Interactive.Message.ManagementInteractiveMessage.strSID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strsid(), target);
  }

  // .Management.Interactive.Message.Request reqValue = 4;
  if (this->has_reqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reqvalue_, false, target);
  }

  // .Management.Interactive.Message.Response rspValue = 5;
  if (this->has_rspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rspvalue_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Management.Interactive.Message.ManagementInteractiveMessage)
  return target;
}

size_t ManagementInteractiveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Management.Interactive.Message.ManagementInteractiveMessage)
  size_t total_size = 0;

  // string strSID = 3;
  if (this->strsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsid());
  }

  // .Management.Interactive.Message.Request reqValue = 4;
  if (this->has_reqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqvalue_);
  }

  // .Management.Interactive.Message.Response rspValue = 5;
  if (this->has_rspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rspvalue_);
  }

  // uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uimsgseq());
  }

  // .Management.Interactive.Message.ManagementMsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManagementInteractiveMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Management.Interactive.Message.ManagementInteractiveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagementInteractiveMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManagementInteractiveMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Management.Interactive.Message.ManagementInteractiveMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Management.Interactive.Message.ManagementInteractiveMessage)
    MergeFrom(*source);
  }
}

void ManagementInteractiveMessage::MergeFrom(const ManagementInteractiveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Management.Interactive.Message.ManagementInteractiveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strsid().size() > 0) {

    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    mutable_reqvalue()->::Management::Interactive::Message::Request::MergeFrom(from.reqvalue());
  }
  if (from.has_rspvalue()) {
    mutable_rspvalue()->::Management::Interactive::Message::Response::MergeFrom(from.rspvalue());
  }
  if (from.uimsgseq() != 0) {
    set_uimsgseq(from.uimsgseq());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ManagementInteractiveMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Management.Interactive.Message.ManagementInteractiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagementInteractiveMessage::CopyFrom(const ManagementInteractiveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Management.Interactive.Message.ManagementInteractiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagementInteractiveMessage::IsInitialized() const {
  return true;
}

void ManagementInteractiveMessage::Swap(ManagementInteractiveMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManagementInteractiveMessage::InternalSwap(ManagementInteractiveMessage* other) {
  strsid_.Swap(&other->strsid_);
  std::swap(reqvalue_, other->reqvalue_);
  std::swap(rspvalue_, other->rspvalue_);
  std::swap(uimsgseq_, other->uimsgseq_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ManagementInteractiveMessage::GetMetadata() const {
  protobuf_InteractiveProtocolManagement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_InteractiveProtocolManagement_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ManagementInteractiveMessage

// .Management.Interactive.Message.ManagementMsgType type = 1;
void ManagementInteractiveMessage::clear_type() {
  type_ = 0;
}
::Management::Interactive::Message::ManagementMsgType ManagementInteractiveMessage::type() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ManagementInteractiveMessage.type)
  return static_cast< ::Management::Interactive::Message::ManagementMsgType >(type_);
}
void ManagementInteractiveMessage::set_type(::Management::Interactive::Message::ManagementMsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ManagementInteractiveMessage.type)
}

// uint64 uiMsgSeq = 2;
void ManagementInteractiveMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ManagementInteractiveMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ManagementInteractiveMessage.uiMsgSeq)
  return uimsgseq_;
}
void ManagementInteractiveMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ManagementInteractiveMessage.uiMsgSeq)
}

// string strSID = 3;
void ManagementInteractiveMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ManagementInteractiveMessage::strsid() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
  return strsid_.GetNoArena();
}
void ManagementInteractiveMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
}
#if LANG_CXX11
void ManagementInteractiveMessage::set_strsid(::std::string&& value) {
  
  strsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
}
#endif
void ManagementInteractiveMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
}
void ManagementInteractiveMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
}
::std::string* ManagementInteractiveMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ManagementInteractiveMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ManagementInteractiveMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ManagementInteractiveMessage.strSID)
}

// .Management.Interactive.Message.Request reqValue = 4;
bool ManagementInteractiveMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
void ManagementInteractiveMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
const ::Management::Interactive::Message::Request& ManagementInteractiveMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ManagementInteractiveMessage.reqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::Management::Interactive::Message::Request::internal_default_instance();
}
::Management::Interactive::Message::Request* ManagementInteractiveMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::Management::Interactive::Message::Request;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ManagementInteractiveMessage.reqValue)
  return reqvalue_;
}
::Management::Interactive::Message::Request* ManagementInteractiveMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ManagementInteractiveMessage.reqValue)
  
  ::Management::Interactive::Message::Request* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
void ManagementInteractiveMessage::set_allocated_reqvalue(::Management::Interactive::Message::Request* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ManagementInteractiveMessage.reqValue)
}

// .Management.Interactive.Message.Response rspValue = 5;
bool ManagementInteractiveMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
void ManagementInteractiveMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
const ::Management::Interactive::Message::Response& ManagementInteractiveMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:Management.Interactive.Message.ManagementInteractiveMessage.rspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::Management::Interactive::Message::Response::internal_default_instance();
}
::Management::Interactive::Message::Response* ManagementInteractiveMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::Management::Interactive::Message::Response;
  }
  // @@protoc_insertion_point(field_mutable:Management.Interactive.Message.ManagementInteractiveMessage.rspValue)
  return rspvalue_;
}
::Management::Interactive::Message::Response* ManagementInteractiveMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:Management.Interactive.Message.ManagementInteractiveMessage.rspValue)
  
  ::Management::Interactive::Message::Response* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
void ManagementInteractiveMessage::set_allocated_rspvalue(::Management::Interactive::Message::Response* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Management.Interactive.Message.ManagementInteractiveMessage.rspValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Interactive
}  // namespace Management

// @@protoc_insertion_point(global_scope)
