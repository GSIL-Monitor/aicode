// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TDFS.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TDFS.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TDFS {
namespace MESSAGE {

namespace {

const ::google::protobuf::Descriptor* LoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginoutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginoutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginoutRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginoutRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShakehandReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShakehandReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShakehandRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShakehandRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Address_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Address_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Address_NodeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetSyncAddressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSyncAddressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSyncAddressRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSyncAddressRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncFileListPendingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncFileListPendingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncFileListPendingRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncFileListPendingRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFileInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFileInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFileInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFileInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlCMDReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlCMDReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlCMDRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlCMDRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FullSyncReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FullSyncReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FullSyncRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FullSyncRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FullSyncConform_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FullSyncConform_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveReportingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveReportingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveReportingRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveReportingRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* Rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SyncServiceStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_TDFS_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TDFS_2eproto() {
  protobuf_AddDesc_TDFS_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TDFS.proto");
  GOOGLE_CHECK(file != NULL);
  LoginReq_descriptor_ = file->message_type(0);
  static const int LoginReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, strsyncservicename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, strpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, strstorageip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, strstorageport_),
  };
  LoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginReq_descriptor_,
      LoginReq::internal_default_instance(),
      LoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_));
  LoginRsp_descriptor_ = file->message_type(1);
  static const int LoginRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, strsid_),
  };
  LoginRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRsp_descriptor_,
      LoginRsp::internal_default_instance(),
      LoginRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, _internal_metadata_));
  LoginoutReq_descriptor_ = file->message_type(2);
  static const int LoginoutReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginoutReq, strvalue_),
  };
  LoginoutReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginoutReq_descriptor_,
      LoginoutReq::internal_default_instance(),
      LoginoutReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginoutReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginoutReq, _internal_metadata_));
  LoginoutRsp_descriptor_ = file->message_type(3);
  static const int LoginoutRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginoutRsp, strvalue_),
  };
  LoginoutRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginoutRsp_descriptor_,
      LoginoutRsp::internal_default_instance(),
      LoginoutRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginoutRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginoutRsp, _internal_metadata_));
  ConfigInfoReq_descriptor_ = file->message_type(4);
  static const int ConfigInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq, strsyncservicename_),
  };
  ConfigInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigInfoReq_descriptor_,
      ConfigInfoReq::internal_default_instance(),
      ConfigInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoReq, _internal_metadata_));
  ConfigInfoRsp_descriptor_ = file->message_type(5);
  static const int ConfigInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp, strconfigjson_),
  };
  ConfigInfoRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigInfoRsp_descriptor_,
      ConfigInfoRsp::internal_default_instance(),
      ConfigInfoRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigInfoRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoRsp, _internal_metadata_));
  ShakehandReq_descriptor_ = file->message_type(6);
  static const int ShakehandReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq, strvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq, status_),
  };
  ShakehandReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShakehandReq_descriptor_,
      ShakehandReq::internal_default_instance(),
      ShakehandReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShakehandReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandReq, _internal_metadata_));
  ShakehandRsp_descriptor_ = file->message_type(7);
  static const int ShakehandRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp, strvalue_),
  };
  ShakehandRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShakehandRsp_descriptor_,
      ShakehandRsp::internal_default_instance(),
      ShakehandRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShakehandRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakehandRsp, _internal_metadata_));
  Address_descriptor_ = file->message_type(8);
  static const int Address_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, straddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, areaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, strstorageip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, strstorageport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, status_),
  };
  Address_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Address_descriptor_,
      Address::internal_default_instance(),
      Address_offsets_,
      -1,
      -1,
      -1,
      sizeof(Address),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _internal_metadata_));
  Address_NodeType_descriptor_ = Address_descriptor_->enum_type(0);
  GetSyncAddressReq_descriptor_ = file->message_type(9);
  static const int GetSyncAddressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSyncAddressReq, strvalue_),
  };
  GetSyncAddressReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSyncAddressReq_descriptor_,
      GetSyncAddressReq::internal_default_instance(),
      GetSyncAddressReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSyncAddressReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSyncAddressReq, _internal_metadata_));
  GetSyncAddressRsp_descriptor_ = file->message_type(10);
  static const int GetSyncAddressRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSyncAddressRsp, addressofsync_),
  };
  GetSyncAddressRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSyncAddressRsp_descriptor_,
      GetSyncAddressRsp::internal_default_instance(),
      GetSyncAddressRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSyncAddressRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSyncAddressRsp, _internal_metadata_));
  FileInfo_descriptor_ = file->message_type(11);
  static const int FileInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, strfileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, strfilename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, uifilesize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, strfilemd5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, strcreatedate_),
  };
  FileInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileInfo_descriptor_,
      FileInfo::internal_default_instance(),
      FileInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, _internal_metadata_));
  SyncFileListPendingReq_descriptor_ = file->message_type(12);
  static const int SyncFileListPendingReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncFileListPendingReq, fileinfolist_),
  };
  SyncFileListPendingReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncFileListPendingReq_descriptor_,
      SyncFileListPendingReq::internal_default_instance(),
      SyncFileListPendingReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SyncFileListPendingReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncFileListPendingReq, _internal_metadata_));
  SyncFileListPendingRsp_descriptor_ = file->message_type(13);
  static const int SyncFileListPendingRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncFileListPendingRsp, fileinfolist_),
  };
  SyncFileListPendingRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncFileListPendingRsp_descriptor_,
      SyncFileListPendingRsp::internal_default_instance(),
      SyncFileListPendingRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SyncFileListPendingRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncFileListPendingRsp, _internal_metadata_));
  GetFileInfoReq_descriptor_ = file->message_type(14);
  static const int GetFileInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoReq, strfileid_),
  };
  GetFileInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFileInfoReq_descriptor_,
      GetFileInfoReq::internal_default_instance(),
      GetFileInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetFileInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoReq, _internal_metadata_));
  GetFileInfoRsp_descriptor_ = file->message_type(15);
  static const int GetFileInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoRsp, fileinfo_),
  };
  GetFileInfoRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFileInfoRsp_descriptor_,
      GetFileInfoRsp::internal_default_instance(),
      GetFileInfoRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetFileInfoRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoRsp, _internal_metadata_));
  ControlCMDReq_descriptor_ = file->message_type(16);
  static const int ControlCMDReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDReq, uicmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDReq, strcmdmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDReq, blneedactivereporting_),
  };
  ControlCMDReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ControlCMDReq_descriptor_,
      ControlCMDReq::internal_default_instance(),
      ControlCMDReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ControlCMDReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDReq, _internal_metadata_));
  ControlCMDRsp_descriptor_ = file->message_type(17);
  static const int ControlCMDRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDRsp, uicmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDRsp, blneedactivereporting_),
  };
  ControlCMDRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ControlCMDRsp_descriptor_,
      ControlCMDRsp::internal_default_instance(),
      ControlCMDRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ControlCMDRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlCMDRsp, _internal_metadata_));
  FullSyncReq_descriptor_ = file->message_type(18);
  static const int FullSyncReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncReq, strvalue_),
  };
  FullSyncReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FullSyncReq_descriptor_,
      FullSyncReq::internal_default_instance(),
      FullSyncReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(FullSyncReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncReq, _internal_metadata_));
  FullSyncRsp_descriptor_ = file->message_type(19);
  static const int FullSyncRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncRsp, fileinfolist_),
  };
  FullSyncRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FullSyncRsp_descriptor_,
      FullSyncRsp::internal_default_instance(),
      FullSyncRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(FullSyncRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncRsp, _internal_metadata_));
  FullSyncConform_descriptor_ = file->message_type(20);
  static const int FullSyncConform_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncConform, uiflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncConform, fileinfolist_),
  };
  FullSyncConform_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FullSyncConform_descriptor_,
      FullSyncConform::internal_default_instance(),
      FullSyncConform_offsets_,
      -1,
      -1,
      -1,
      sizeof(FullSyncConform),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullSyncConform, _internal_metadata_));
  ActiveReportingReq_descriptor_ = file->message_type(21);
  static const int ActiveReportingReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveReportingReq, uitotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveReportingReq, uicurrentcompleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveReportingReq, currentcompletedfileinfo_),
  };
  ActiveReportingReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActiveReportingReq_descriptor_,
      ActiveReportingReq::internal_default_instance(),
      ActiveReportingReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActiveReportingReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveReportingReq, _internal_metadata_));
  ActiveReportingRsp_descriptor_ = file->message_type(22);
  static const int ActiveReportingRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveReportingRsp, strvalue_),
  };
  ActiveReportingRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActiveReportingRsp_descriptor_,
      ActiveReportingRsp::internal_default_instance(),
      ActiveReportingRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActiveReportingRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveReportingRsp, _internal_metadata_));
  Req_descriptor_ = file->message_type(23);
  static const int Req_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, loginreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, loginoutreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, configinforeqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, shakehandreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getsyncaddressreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, syncfilelistpendingreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, controlcmdreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, getfileinforeqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, fullsyncreqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, fullsyncconformvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, activereportingreqvalue_),
  };
  Req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Req_descriptor_,
      Req::internal_default_instance(),
      Req_offsets_,
      -1,
      -1,
      -1,
      sizeof(Req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Req, _internal_metadata_));
  Rsp_descriptor_ = file->message_type(24);
  static const int Rsp_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, iretcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, strretmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, loginrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, loginoutrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, configinforspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, shakehandrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getsyncaddressrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, syncfilelistpendingrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, controlcmdrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, getfileinforspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, fullsyncrspvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, activereportingrspvalue_),
  };
  Rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Rsp_descriptor_,
      Rsp::internal_default_instance(),
      Rsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(Rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rsp, _internal_metadata_));
  SyncMessage_descriptor_ = file->message_type(25);
  static const int SyncMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, uimsgseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, strsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, reqvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, rspvalue_),
  };
  SyncMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncMessage_descriptor_,
      SyncMessage::internal_default_instance(),
      SyncMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(SyncMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, _internal_metadata_));
  MsgType_descriptor_ = file->enum_type(0);
  SyncServiceStatus_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TDFS_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginReq_descriptor_, LoginReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRsp_descriptor_, LoginRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginoutReq_descriptor_, LoginoutReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginoutRsp_descriptor_, LoginoutRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigInfoReq_descriptor_, ConfigInfoReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigInfoRsp_descriptor_, ConfigInfoRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShakehandReq_descriptor_, ShakehandReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShakehandRsp_descriptor_, ShakehandRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Address_descriptor_, Address::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSyncAddressReq_descriptor_, GetSyncAddressReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSyncAddressRsp_descriptor_, GetSyncAddressRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileInfo_descriptor_, FileInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncFileListPendingReq_descriptor_, SyncFileListPendingReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncFileListPendingRsp_descriptor_, SyncFileListPendingRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFileInfoReq_descriptor_, GetFileInfoReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFileInfoRsp_descriptor_, GetFileInfoRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ControlCMDReq_descriptor_, ControlCMDReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ControlCMDRsp_descriptor_, ControlCMDRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FullSyncReq_descriptor_, FullSyncReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FullSyncRsp_descriptor_, FullSyncRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FullSyncConform_descriptor_, FullSyncConform::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActiveReportingReq_descriptor_, ActiveReportingReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActiveReportingRsp_descriptor_, ActiveReportingRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Req_descriptor_, Req::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Rsp_descriptor_, Rsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncMessage_descriptor_, SyncMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TDFS_2eproto() {
  LoginReq_default_instance_.Shutdown();
  delete LoginReq_reflection_;
  LoginRsp_default_instance_.Shutdown();
  delete LoginRsp_reflection_;
  LoginoutReq_default_instance_.Shutdown();
  delete LoginoutReq_reflection_;
  LoginoutRsp_default_instance_.Shutdown();
  delete LoginoutRsp_reflection_;
  ConfigInfoReq_default_instance_.Shutdown();
  delete ConfigInfoReq_reflection_;
  ConfigInfoRsp_default_instance_.Shutdown();
  delete ConfigInfoRsp_reflection_;
  ShakehandReq_default_instance_.Shutdown();
  delete ShakehandReq_reflection_;
  ShakehandRsp_default_instance_.Shutdown();
  delete ShakehandRsp_reflection_;
  Address_default_instance_.Shutdown();
  delete Address_reflection_;
  GetSyncAddressReq_default_instance_.Shutdown();
  delete GetSyncAddressReq_reflection_;
  GetSyncAddressRsp_default_instance_.Shutdown();
  delete GetSyncAddressRsp_reflection_;
  FileInfo_default_instance_.Shutdown();
  delete FileInfo_reflection_;
  SyncFileListPendingReq_default_instance_.Shutdown();
  delete SyncFileListPendingReq_reflection_;
  SyncFileListPendingRsp_default_instance_.Shutdown();
  delete SyncFileListPendingRsp_reflection_;
  GetFileInfoReq_default_instance_.Shutdown();
  delete GetFileInfoReq_reflection_;
  GetFileInfoRsp_default_instance_.Shutdown();
  delete GetFileInfoRsp_reflection_;
  ControlCMDReq_default_instance_.Shutdown();
  delete ControlCMDReq_reflection_;
  ControlCMDRsp_default_instance_.Shutdown();
  delete ControlCMDRsp_reflection_;
  FullSyncReq_default_instance_.Shutdown();
  delete FullSyncReq_reflection_;
  FullSyncRsp_default_instance_.Shutdown();
  delete FullSyncRsp_reflection_;
  FullSyncConform_default_instance_.Shutdown();
  delete FullSyncConform_reflection_;
  ActiveReportingReq_default_instance_.Shutdown();
  delete ActiveReportingReq_reflection_;
  ActiveReportingRsp_default_instance_.Shutdown();
  delete ActiveReportingRsp_reflection_;
  Req_default_instance_.Shutdown();
  delete Req_reflection_;
  Rsp_default_instance_.Shutdown();
  delete Rsp_reflection_;
  SyncMessage_default_instance_.Shutdown();
  delete SyncMessage_reflection_;
}

void protobuf_InitDefaults_TDFS_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  LoginReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginoutReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginoutRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ConfigInfoReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ConfigInfoRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ShakehandReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ShakehandRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Address_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetSyncAddressReq_default_instance_.DefaultConstruct();
  GetSyncAddressRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FileInfo_default_instance_.DefaultConstruct();
  SyncFileListPendingReq_default_instance_.DefaultConstruct();
  SyncFileListPendingRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetFileInfoReq_default_instance_.DefaultConstruct();
  GetFileInfoRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ControlCMDReq_default_instance_.DefaultConstruct();
  ControlCMDRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FullSyncReq_default_instance_.DefaultConstruct();
  FullSyncRsp_default_instance_.DefaultConstruct();
  FullSyncConform_default_instance_.DefaultConstruct();
  ActiveReportingReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ActiveReportingRsp_default_instance_.DefaultConstruct();
  Req_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Rsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SyncMessage_default_instance_.DefaultConstruct();
  LoginReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginoutReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginoutRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ConfigInfoReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ConfigInfoRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShakehandReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShakehandRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  Address_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetSyncAddressReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetSyncAddressRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  FileInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  SyncFileListPendingReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  SyncFileListPendingRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetFileInfoReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetFileInfoRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ControlCMDReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ControlCMDRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  FullSyncReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  FullSyncRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  FullSyncConform_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActiveReportingReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActiveReportingRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  Req_default_instance_.get_mutable()->InitAsDefaultInstance();
  Rsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  SyncMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_TDFS_2eproto_once_);
void protobuf_InitDefaults_TDFS_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_TDFS_2eproto_once_,
                 &protobuf_InitDefaults_TDFS_2eproto_impl);
}
void protobuf_AddDesc_TDFS_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_TDFS_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nTDFS.proto\022\014TDFS.MESSAGE\"i\n\010LoginReq\022\032"
    "\n\022strSyncServiceName\030\001 \001(\t\022\023\n\013strPasswor"
    "d\030\002 \001(\t\022\024\n\014strStorageIP\030\003 \001(\t\022\026\n\016strStor"
    "agePort\030\004 \001(\t\"\032\n\010LoginRsp\022\016\n\006strSID\030\003 \001("
    "\t\"\037\n\013LoginoutReq\022\020\n\010strValue\030\001 \001(\t\"\037\n\013Lo"
    "ginoutRsp\022\020\n\010strValue\030\001 \001(\t\"+\n\rConfigInf"
    "oReq\022\032\n\022strSyncServiceName\030\001 \001(\t\"&\n\rConf"
    "igInfoRsp\022\025\n\rstrConfigJson\030\001 \001(\t\"Q\n\014Shak"
    "ehandReq\022\020\n\010strValue\030\001 \001(\t\022/\n\006status\030\002 \001"
    "(\0162\037.TDFS.MESSAGE.SyncServiceStatus\" \n\014S"
    "hakehandRsp\022\020\n\010strValue\030\001 \001(\t\"\334\001\n\007Addres"
    "s\022\022\n\nstrAddress\030\001 \001(\t\022,\n\004type\030\002 \001(\0162\036.TD"
    "FS.MESSAGE.Address.NodeType\022\016\n\006AreaID\030\003 "
    "\001(\t\022\024\n\014strStorageIP\030\004 \001(\t\022\026\n\016strStorageP"
    "ort\030\005 \001(\t\022/\n\006status\030\006 \001(\0162\037.TDFS.MESSAGE"
    ".SyncServiceStatus\" \n\010NodeType\022\n\n\006Center"
    "\020\000\022\010\n\004Sync\020\001\"%\n\021GetSyncAddressReq\022\020\n\010str"
    "Value\030\001 \001(\t\"A\n\021GetSyncAddressRsp\022,\n\rAddr"
    "essOfSync\030\001 \003(\0132\025.TDFS.MESSAGE.Address\"q"
    "\n\010FileInfo\022\021\n\tstrFileID\030\001 \001(\t\022\023\n\013strFile"
    "Name\030\002 \001(\t\022\022\n\nuiFileSize\030\003 \001(\r\022\022\n\nstrFil"
    "eMD5\030\004 \001(\t\022\025\n\rstrCreatedate\030\005 \001(\t\"F\n\026Syn"
    "cFileListPendingReq\022,\n\014FileInfoList\030\001 \003("
    "\0132\026.TDFS.MESSAGE.FileInfo\"F\n\026SyncFileLis"
    "tPendingRsp\022,\n\014FileInfoList\030\001 \003(\0132\026.TDFS"
    ".MESSAGE.FileInfo\"#\n\016GetFileInfoReq\022\021\n\ts"
    "trFileID\030\001 \001(\t\":\n\016GetFileInfoRsp\022(\n\010file"
    "info\030\001 \001(\0132\026.TDFS.MESSAGE.FileInfo\"P\n\rCo"
    "ntrolCMDReq\022\r\n\005uiCMD\030\001 \001(\r\022\021\n\tstrCMDMsg\030"
    "\002 \001(\t\022\035\n\025blNeedActiveReporting\030\003 \001(\010\"=\n\r"
    "ControlCMDRsp\022\r\n\005uiCMD\030\001 \001(\r\022\035\n\025blNeedAc"
    "tiveReporting\030\002 \001(\010\"\037\n\013FullSyncReq\022\020\n\010st"
    "rValue\030\001 \001(\t\";\n\013FullSyncRsp\022,\n\014FileInfoL"
    "ist\030\001 \003(\0132\026.TDFS.MESSAGE.FileInfo\"O\n\017Ful"
    "lSyncConform\022\016\n\006uiFlag\030\001 \001(\r\022,\n\014FileInfo"
    "List\030\002 \003(\0132\026.TDFS.MESSAGE.FileInfo\"{\n\022Ac"
    "tiveReportingReq\022\017\n\007uiTotal\030\001 \001(\r\022\032\n\022uiC"
    "urrentCompleted\030\002 \001(\r\0228\n\030CurrentComplete"
    "dFileInfo\030\003 \001(\0132\026.TDFS.MESSAGE.FileInfo\""
    "&\n\022ActiveReportingRsp\022\020\n\010strValue\030\001 \001(\t\""
    "\216\005\n\003Req\022-\n\rLoginReqValue\030\001 \001(\0132\026.TDFS.ME"
    "SSAGE.LoginReq\0223\n\020LoginoutReqValue\030\002 \001(\013"
    "2\031.TDFS.MESSAGE.LoginoutReq\0227\n\022ConfigInf"
    "oReqValue\030\003 \001(\0132\033.TDFS.MESSAGE.ConfigInf"
    "oReq\0225\n\021ShakehandReqValue\030\004 \001(\0132\032.TDFS.M"
    "ESSAGE.ShakehandReq\022\?\n\026GetSyncAddressReq"
    "Value\030\005 \001(\0132\037.TDFS.MESSAGE.GetSyncAddres"
    "sReq\022I\n\033SyncFileListPendingReqValue\030\006 \001("
    "\0132$.TDFS.MESSAGE.SyncFileListPendingReq\022"
    "7\n\022ControlCMDReqValue\030\007 \001(\0132\033.TDFS.MESSA"
    "GE.ControlCMDReq\0229\n\023GetFileInfoReqValue\030"
    "\010 \001(\0132\034.TDFS.MESSAGE.GetFileInfoReq\0223\n\020F"
    "ullSyncReqValue\030\t \001(\0132\031.TDFS.MESSAGE.Ful"
    "lSyncReq\022;\n\024FullSyncConformValue\030\n \001(\0132\035"
    ".TDFS.MESSAGE.FullSyncConform\022A\n\027ActiveR"
    "eportingReqValue\030\013 \001(\0132 .TDFS.MESSAGE.Ac"
    "tiveReportingReq\"\366\004\n\003Rsp\022\020\n\010iRetcode\030\001 \001"
    "(\005\022\021\n\tstrRetMsg\030\002 \001(\t\022-\n\rLoginRspValue\030\003"
    " \001(\0132\026.TDFS.MESSAGE.LoginRsp\0223\n\020Loginout"
    "RspValue\030\004 \001(\0132\031.TDFS.MESSAGE.LoginoutRs"
    "p\0227\n\022ConfigInfoRspValue\030\005 \001(\0132\033.TDFS.MES"
    "SAGE.ConfigInfoRsp\0225\n\021ShakehandRspValue\030"
    "\006 \001(\0132\032.TDFS.MESSAGE.ShakehandRsp\022\?\n\026Get"
    "SyncAddressRspValue\030\007 \001(\0132\037.TDFS.MESSAGE"
    ".GetSyncAddressRsp\022I\n\033SyncFileListPendin"
    "gRspValue\030\010 \001(\0132$.TDFS.MESSAGE.SyncFileL"
    "istPendingRsp\0227\n\022ControlCMDRspValue\030\t \001("
    "\0132\033.TDFS.MESSAGE.ControlCMDRsp\0229\n\023GetFil"
    "eInfoRspValue\030\n \001(\0132\034.TDFS.MESSAGE.GetFi"
    "leInfoRsp\0223\n\020FullSyncRspValue\030\013 \001(\0132\031.TD"
    "FS.MESSAGE.FullSyncRsp\022A\n\027ActiveReportin"
    "gRspValue\030\014 \001(\0132 .TDFS.MESSAGE.ActiveRep"
    "ortingRsp\"\236\001\n\013SyncMessage\022#\n\004type\030\001 \001(\0162"
    "\025.TDFS.MESSAGE.MsgType\022\020\n\010uiMsgSeq\030\002 \001(\004"
    "\022\016\n\006strSID\030\003 \001(\t\022#\n\010ReqValue\030\004 \001(\0132\021.TDF"
    "S.MESSAGE.Req\022#\n\010RspValue\030\005 \001(\0132\021.TDFS.M"
    "ESSAGE.Rsp*\367\003\n\007MsgType\022\n\n\006Init_T\020\000\022\017\n\nLo"
    "ginReq_T\020\220N\022\017\n\nLoginRsp_T\020\232N\022\022\n\rLoginout"
    "Req_T\020\244N\022\022\n\rLoginoutRsp_T\020\256N\022\024\n\017ConfigIn"
    "foReq_T\020\270N\022\024\n\017ConfigInfoRsp_T\020\302N\022\023\n\016Shak"
    "ehandReq_T\020\314N\022\023\n\016ShakehandRsp_T\020\326N\022\030\n\023Ge"
    "tSyncAddressReq_T\020\340N\022\030\n\023GetSyncAddressRs"
    "p_T\020\352N\022\035\n\030SyncFileListPendingReq_T\020\364N\022\035\n"
    "\030SyncFileListPendingRsp_T\020\376N\022\024\n\017ControlC"
    "MDReq_T\020\210O\022\024\n\017ControlCMDRsp_T\020\222O\022\025\n\020GetF"
    "ileInfoReq_T\020\234O\022\025\n\020GetFileInfoRsp_T\020\246O\022\022"
    "\n\rFullSyncReq_T\020\260O\022\022\n\rFullSyncRsp_T\020\272O\022\026"
    "\n\021FullSyncConform_T\020\304O\022\031\n\024ActiveReportin"
    "gReq_T\020\316O\022\031\n\024ActiveReportingRsp_T\020\330O*3\n\021"
    "SyncServiceStatus\022\010\n\004IDLE\020\000\022\t\n\005BUSSY\020\001\022\t"
    "\n\005FAULT\020\002b\006proto3", 3617);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TDFS.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TDFS_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_TDFS_2eproto_once_);
void protobuf_AddDesc_TDFS_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_TDFS_2eproto_once_,
                 &protobuf_AddDesc_TDFS_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TDFS_2eproto {
  StaticDescriptorInitializer_TDFS_2eproto() {
    protobuf_AddDesc_TDFS_2eproto();
  }
} static_descriptor_initializer_TDFS_2eproto_;
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgType_descriptor_;
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10010:
    case 10020:
    case 10030:
    case 10040:
    case 10050:
    case 10060:
    case 10070:
    case 10080:
    case 10090:
    case 10100:
    case 10110:
    case 10120:
    case 10130:
    case 10140:
    case 10150:
    case 10160:
    case 10170:
    case 10180:
    case 10190:
    case 10200:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SyncServiceStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncServiceStatus_descriptor_;
}
bool SyncServiceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kStrSyncServiceNameFieldNumber;
const int LoginReq::kStrPasswordFieldNumber;
const int LoginReq::kStrStorageIPFieldNumber;
const int LoginReq::kStrStoragePortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.LoginReq)
}

void LoginReq::InitAsDefaultInstance() {
}

LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.LoginReq)
}

void LoginReq::SharedCtor() {
  strsyncservicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  strsyncservicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginReq_descriptor_;
}

const LoginReq& LoginReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginReq> LoginReq_default_instance_;

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.LoginReq)
  strsyncservicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strSyncServiceName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsyncservicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsyncservicename().data(), this->strsyncservicename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginReq.strSyncServiceName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strPassword;
        break;
      }

      // optional string strPassword = 2;
      case 2: {
        if (tag == 18) {
         parse_strPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpassword().data(), this->strpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginReq.strPassword"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_strStorageIP;
        break;
      }

      // optional string strStorageIP = 3;
      case 3: {
        if (tag == 26) {
         parse_strStorageIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstorageip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strstorageip().data(), this->strstorageip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginReq.strStorageIP"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_strStoragePort;
        break;
      }

      // optional string strStoragePort = 4;
      case 4: {
        if (tag == 34) {
         parse_strStoragePort:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstorageport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strstorageport().data(), this->strstorageport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginReq.strStoragePort"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.LoginReq)
  // optional string strSyncServiceName = 1;
  if (this->strsyncservicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsyncservicename().data(), this->strsyncservicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strSyncServiceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strsyncservicename(), output);
  }

  // optional string strPassword = 2;
  if (this->strpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strpassword(), output);
  }

  // optional string strStorageIP = 3;
  if (this->strstorageip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageip().data(), this->strstorageip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strStorageIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strstorageip(), output);
  }

  // optional string strStoragePort = 4;
  if (this->strstorageport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageport().data(), this->strstorageport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strStoragePort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strstorageport(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.LoginReq)
  // optional string strSyncServiceName = 1;
  if (this->strsyncservicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsyncservicename().data(), this->strsyncservicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strSyncServiceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strsyncservicename(), target);
  }

  // optional string strPassword = 2;
  if (this->strpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strpassword(), target);
  }

  // optional string strStorageIP = 3;
  if (this->strstorageip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageip().data(), this->strstorageip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strStorageIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strstorageip(), target);
  }

  // optional string strStoragePort = 4;
  if (this->strstorageport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageport().data(), this->strstorageport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginReq.strStoragePort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strstorageport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.LoginReq)
  size_t total_size = 0;

  // optional string strSyncServiceName = 1;
  if (this->strsyncservicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsyncservicename());
  }

  // optional string strPassword = 2;
  if (this->strpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpassword());
  }

  // optional string strStorageIP = 3;
  if (this->strstorageip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strstorageip());
  }

  // optional string strStoragePort = 4;
  if (this->strstorageport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strstorageport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.LoginReq)
    UnsafeMergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.LoginReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginReq::UnsafeMergeFrom(const LoginReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strsyncservicename().size() > 0) {

    strsyncservicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsyncservicename_);
  }
  if (from.strpassword().size() > 0) {

    strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
  }
  if (from.strstorageip().size() > 0) {

    strstorageip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstorageip_);
  }
  if (from.strstorageport().size() > 0) {

    strstorageport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstorageport_);
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.LoginReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginReq::IsInitialized() const {

  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  strsyncservicename_.Swap(&other->strsyncservicename_);
  strpassword_.Swap(&other->strpassword_);
  strstorageip_.Swap(&other->strstorageip_);
  strstorageport_.Swap(&other->strstorageport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginReq_descriptor_;
  metadata.reflection = LoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// optional string strSyncServiceName = 1;
void LoginReq::clear_strsyncservicename() {
  strsyncservicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::strsyncservicename() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strSyncServiceName)
  return strsyncservicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_strsyncservicename(const ::std::string& value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}
void LoginReq::set_strsyncservicename(const char* value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}
void LoginReq::set_strsyncservicename(const char* value, size_t size) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}
::std::string* LoginReq::mutable_strsyncservicename() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strSyncServiceName)
  return strsyncservicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_strsyncservicename() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strSyncServiceName)
  
  return strsyncservicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_strsyncservicename(::std::string* strsyncservicename) {
  if (strsyncservicename != NULL) {
    
  } else {
    
  }
  strsyncservicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsyncservicename);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strSyncServiceName)
}

// optional string strPassword = 2;
void LoginReq::clear_strpassword() {
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::strpassword() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strPassword)
  return strpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_strpassword(const ::std::string& value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strPassword)
}
void LoginReq::set_strpassword(const char* value) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strPassword)
}
void LoginReq::set_strpassword(const char* value, size_t size) {
  
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strPassword)
}
::std::string* LoginReq::mutable_strpassword() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strPassword)
  return strpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_strpassword() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strPassword)
  
  return strpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_strpassword(::std::string* strpassword) {
  if (strpassword != NULL) {
    
  } else {
    
  }
  strpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpassword);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strPassword)
}

// optional string strStorageIP = 3;
void LoginReq::clear_strstorageip() {
  strstorageip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::strstorageip() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strStorageIP)
  return strstorageip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_strstorageip(const ::std::string& value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strStorageIP)
}
void LoginReq::set_strstorageip(const char* value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strStorageIP)
}
void LoginReq::set_strstorageip(const char* value, size_t size) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strStorageIP)
}
::std::string* LoginReq::mutable_strstorageip() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strStorageIP)
  return strstorageip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_strstorageip() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strStorageIP)
  
  return strstorageip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_strstorageip(::std::string* strstorageip) {
  if (strstorageip != NULL) {
    
  } else {
    
  }
  strstorageip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageip);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strStorageIP)
}

// optional string strStoragePort = 4;
void LoginReq::clear_strstorageport() {
  strstorageport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::strstorageport() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginReq.strStoragePort)
  return strstorageport_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_strstorageport(const ::std::string& value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginReq.strStoragePort)
}
void LoginReq::set_strstorageport(const char* value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginReq.strStoragePort)
}
void LoginReq::set_strstorageport(const char* value, size_t size) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginReq.strStoragePort)
}
::std::string* LoginReq::mutable_strstorageport() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginReq.strStoragePort)
  return strstorageport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_strstorageport() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginReq.strStoragePort)
  
  return strstorageport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_strstorageport(::std::string* strstorageport) {
  if (strstorageport != NULL) {
    
  } else {
    
  }
  strstorageport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageport);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginReq.strStoragePort)
}

inline const LoginReq* LoginReq::internal_default_instance() {
  return &LoginReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp::kStrSIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp::LoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.LoginRsp)
}

void LoginRsp::InitAsDefaultInstance() {
}

LoginRsp::LoginRsp(const LoginRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.LoginRsp)
}

void LoginRsp::SharedCtor() {
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRsp::~LoginRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.LoginRsp)
  SharedDtor();
}

void LoginRsp::SharedDtor() {
  strsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRsp_descriptor_;
}

const LoginRsp& LoginRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRsp> LoginRsp_default_instance_;

LoginRsp* LoginRsp::New(::google::protobuf::Arena* arena) const {
  LoginRsp* n = new LoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.LoginRsp)
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.LoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strSID = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsid().data(), this->strsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginRsp.strSID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.LoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.LoginRsp)
  return false;
#undef DO_
}

void LoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.LoginRsp)
  // optional string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginRsp.strSID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strsid(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.LoginRsp)
}

::google::protobuf::uint8* LoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.LoginRsp)
  // optional string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginRsp.strSID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strsid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.LoginRsp)
  return target;
}

size_t LoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.LoginRsp)
  size_t total_size = 0;

  // optional string strSID = 3;
  if (this->strsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.LoginRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.LoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.LoginRsp)
    UnsafeMergeFrom(*source);
  }
}

void LoginRsp::MergeFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.LoginRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRsp::UnsafeMergeFrom(const LoginRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strsid().size() > 0) {

    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
}

void LoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp::CopyFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.LoginRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRsp::IsInitialized() const {

  return true;
}

void LoginRsp::Swap(LoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp::InternalSwap(LoginRsp* other) {
  strsid_.Swap(&other->strsid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRsp_descriptor_;
  metadata.reflection = LoginRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp

// optional string strSID = 3;
void LoginRsp::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp::strsid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginRsp.strSID)
  return strsid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginRsp.strSID)
}
void LoginRsp::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginRsp.strSID)
}
void LoginRsp::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginRsp.strSID)
}
::std::string* LoginRsp::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginRsp.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp::release_strsid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginRsp.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginRsp.strSID)
}

inline const LoginRsp* LoginRsp::internal_default_instance() {
  return &LoginRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginoutReq::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginoutReq::LoginoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.LoginoutReq)
}

void LoginoutReq::InitAsDefaultInstance() {
}

LoginoutReq::LoginoutReq(const LoginoutReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.LoginoutReq)
}

void LoginoutReq::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginoutReq::~LoginoutReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.LoginoutReq)
  SharedDtor();
}

void LoginoutReq::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginoutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginoutReq_descriptor_;
}

const LoginoutReq& LoginoutReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginoutReq> LoginoutReq_default_instance_;

LoginoutReq* LoginoutReq::New(::google::protobuf::Arena* arena) const {
  LoginoutReq* n = new LoginoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.LoginoutReq)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.LoginoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginoutReq.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.LoginoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.LoginoutReq)
  return false;
#undef DO_
}

void LoginoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.LoginoutReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginoutReq.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.LoginoutReq)
}

::google::protobuf::uint8* LoginoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.LoginoutReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginoutReq.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.LoginoutReq)
  return target;
}

size_t LoginoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.LoginoutReq)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.LoginoutReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.LoginoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.LoginoutReq)
    UnsafeMergeFrom(*source);
  }
}

void LoginoutReq::MergeFrom(const LoginoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.LoginoutReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginoutReq::UnsafeMergeFrom(const LoginoutReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.LoginoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginoutReq::CopyFrom(const LoginoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.LoginoutReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginoutReq::IsInitialized() const {

  return true;
}

void LoginoutReq::Swap(LoginoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginoutReq::InternalSwap(LoginoutReq* other) {
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginoutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginoutReq_descriptor_;
  metadata.reflection = LoginoutReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginoutReq

// optional string strValue = 1;
void LoginoutReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginoutReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginoutReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginoutReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginoutReq.strValue)
}
void LoginoutReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginoutReq.strValue)
}
void LoginoutReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginoutReq.strValue)
}
::std::string* LoginoutReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginoutReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginoutReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginoutReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginoutReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginoutReq.strValue)
}

inline const LoginoutReq* LoginoutReq::internal_default_instance() {
  return &LoginoutReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginoutRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginoutRsp::LoginoutRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.LoginoutRsp)
}

void LoginoutRsp::InitAsDefaultInstance() {
}

LoginoutRsp::LoginoutRsp(const LoginoutRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.LoginoutRsp)
}

void LoginoutRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginoutRsp::~LoginoutRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.LoginoutRsp)
  SharedDtor();
}

void LoginoutRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginoutRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginoutRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginoutRsp_descriptor_;
}

const LoginoutRsp& LoginoutRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginoutRsp> LoginoutRsp_default_instance_;

LoginoutRsp* LoginoutRsp::New(::google::protobuf::Arena* arena) const {
  LoginoutRsp* n = new LoginoutRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginoutRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.LoginoutRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginoutRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.LoginoutRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.LoginoutRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.LoginoutRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.LoginoutRsp)
  return false;
#undef DO_
}

void LoginoutRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.LoginoutRsp)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginoutRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.LoginoutRsp)
}

::google::protobuf::uint8* LoginoutRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.LoginoutRsp)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.LoginoutRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.LoginoutRsp)
  return target;
}

size_t LoginoutRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.LoginoutRsp)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginoutRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.LoginoutRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginoutRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginoutRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.LoginoutRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.LoginoutRsp)
    UnsafeMergeFrom(*source);
  }
}

void LoginoutRsp::MergeFrom(const LoginoutRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.LoginoutRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginoutRsp::UnsafeMergeFrom(const LoginoutRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void LoginoutRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.LoginoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginoutRsp::CopyFrom(const LoginoutRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.LoginoutRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginoutRsp::IsInitialized() const {

  return true;
}

void LoginoutRsp::Swap(LoginoutRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginoutRsp::InternalSwap(LoginoutRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginoutRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginoutRsp_descriptor_;
  metadata.reflection = LoginoutRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginoutRsp

// optional string strValue = 1;
void LoginoutRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginoutRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.LoginoutRsp.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginoutRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.LoginoutRsp.strValue)
}
void LoginoutRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.LoginoutRsp.strValue)
}
void LoginoutRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.LoginoutRsp.strValue)
}
::std::string* LoginoutRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.LoginoutRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginoutRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.LoginoutRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginoutRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.LoginoutRsp.strValue)
}

inline const LoginoutRsp* LoginoutRsp::internal_default_instance() {
  return &LoginoutRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoReq::kStrSyncServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoReq::ConfigInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ConfigInfoReq)
}

void ConfigInfoReq::InitAsDefaultInstance() {
}

ConfigInfoReq::ConfigInfoReq(const ConfigInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ConfigInfoReq)
}

void ConfigInfoReq::SharedCtor() {
  strsyncservicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoReq::~ConfigInfoReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ConfigInfoReq)
  SharedDtor();
}

void ConfigInfoReq::SharedDtor() {
  strsyncservicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigInfoReq_descriptor_;
}

const ConfigInfoReq& ConfigInfoReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoReq> ConfigInfoReq_default_instance_;

ConfigInfoReq* ConfigInfoReq::New(::google::protobuf::Arena* arena) const {
  ConfigInfoReq* n = new ConfigInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ConfigInfoReq)
  strsyncservicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ConfigInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strSyncServiceName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsyncservicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsyncservicename().data(), this->strsyncservicename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ConfigInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ConfigInfoReq)
  return false;
#undef DO_
}

void ConfigInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ConfigInfoReq)
  // optional string strSyncServiceName = 1;
  if (this->strsyncservicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsyncservicename().data(), this->strsyncservicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strsyncservicename(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ConfigInfoReq)
}

::google::protobuf::uint8* ConfigInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ConfigInfoReq)
  // optional string strSyncServiceName = 1;
  if (this->strsyncservicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsyncservicename().data(), this->strsyncservicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strsyncservicename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ConfigInfoReq)
  return target;
}

size_t ConfigInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ConfigInfoReq)
  size_t total_size = 0;

  // optional string strSyncServiceName = 1;
  if (this->strsyncservicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsyncservicename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ConfigInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ConfigInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ConfigInfoReq)
    UnsafeMergeFrom(*source);
  }
}

void ConfigInfoReq::MergeFrom(const ConfigInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ConfigInfoReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConfigInfoReq::UnsafeMergeFrom(const ConfigInfoReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strsyncservicename().size() > 0) {

    strsyncservicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsyncservicename_);
  }
}

void ConfigInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ConfigInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoReq::CopyFrom(const ConfigInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ConfigInfoReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConfigInfoReq::IsInitialized() const {

  return true;
}

void ConfigInfoReq::Swap(ConfigInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoReq::InternalSwap(ConfigInfoReq* other) {
  strsyncservicename_.Swap(&other->strsyncservicename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigInfoReq_descriptor_;
  metadata.reflection = ConfigInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoReq

// optional string strSyncServiceName = 1;
void ConfigInfoReq::clear_strsyncservicename() {
  strsyncservicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoReq::strsyncservicename() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
  return strsyncservicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq::set_strsyncservicename(const ::std::string& value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}
void ConfigInfoReq::set_strsyncservicename(const char* value) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}
void ConfigInfoReq::set_strsyncservicename(const char* value, size_t size) {
  
  strsyncservicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}
::std::string* ConfigInfoReq::mutable_strsyncservicename() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
  return strsyncservicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoReq::release_strsyncservicename() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
  
  return strsyncservicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoReq::set_allocated_strsyncservicename(::std::string* strsyncservicename) {
  if (strsyncservicename != NULL) {
    
  } else {
    
  }
  strsyncservicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsyncservicename);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ConfigInfoReq.strSyncServiceName)
}

inline const ConfigInfoReq* ConfigInfoReq::internal_default_instance() {
  return &ConfigInfoReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoRsp::kStrConfigJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoRsp::ConfigInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ConfigInfoRsp)
}

void ConfigInfoRsp::InitAsDefaultInstance() {
}

ConfigInfoRsp::ConfigInfoRsp(const ConfigInfoRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ConfigInfoRsp)
}

void ConfigInfoRsp::SharedCtor() {
  strconfigjson_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigInfoRsp::~ConfigInfoRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ConfigInfoRsp)
  SharedDtor();
}

void ConfigInfoRsp::SharedDtor() {
  strconfigjson_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigInfoRsp_descriptor_;
}

const ConfigInfoRsp& ConfigInfoRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConfigInfoRsp> ConfigInfoRsp_default_instance_;

ConfigInfoRsp* ConfigInfoRsp::New(::google::protobuf::Arena* arena) const {
  ConfigInfoRsp* n = new ConfigInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ConfigInfoRsp)
  strconfigjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ConfigInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strConfigJson = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strconfigjson()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strconfigjson().data(), this->strconfigjson().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.ConfigInfoRsp.strConfigJson"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ConfigInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ConfigInfoRsp)
  return false;
#undef DO_
}

void ConfigInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ConfigInfoRsp)
  // optional string strConfigJson = 1;
  if (this->strconfigjson().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strconfigjson().data(), this->strconfigjson().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ConfigInfoRsp.strConfigJson");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strconfigjson(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ConfigInfoRsp)
}

::google::protobuf::uint8* ConfigInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ConfigInfoRsp)
  // optional string strConfigJson = 1;
  if (this->strconfigjson().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strconfigjson().data(), this->strconfigjson().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ConfigInfoRsp.strConfigJson");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strconfigjson(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ConfigInfoRsp)
  return target;
}

size_t ConfigInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ConfigInfoRsp)
  size_t total_size = 0;

  // optional string strConfigJson = 1;
  if (this->strconfigjson().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strconfigjson());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ConfigInfoRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ConfigInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ConfigInfoRsp)
    UnsafeMergeFrom(*source);
  }
}

void ConfigInfoRsp::MergeFrom(const ConfigInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ConfigInfoRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConfigInfoRsp::UnsafeMergeFrom(const ConfigInfoRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strconfigjson().size() > 0) {

    strconfigjson_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strconfigjson_);
  }
}

void ConfigInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ConfigInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoRsp::CopyFrom(const ConfigInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ConfigInfoRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConfigInfoRsp::IsInitialized() const {

  return true;
}

void ConfigInfoRsp::Swap(ConfigInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoRsp::InternalSwap(ConfigInfoRsp* other) {
  strconfigjson_.Swap(&other->strconfigjson_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigInfoRsp_descriptor_;
  metadata.reflection = ConfigInfoRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoRsp

// optional string strConfigJson = 1;
void ConfigInfoRsp::clear_strconfigjson() {
  strconfigjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigInfoRsp::strconfigjson() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
  return strconfigjson_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp::set_strconfigjson(const ::std::string& value) {
  
  strconfigjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}
void ConfigInfoRsp::set_strconfigjson(const char* value) {
  
  strconfigjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}
void ConfigInfoRsp::set_strconfigjson(const char* value, size_t size) {
  
  strconfigjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}
::std::string* ConfigInfoRsp::mutable_strconfigjson() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
  return strconfigjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigInfoRsp::release_strconfigjson() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
  
  return strconfigjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigInfoRsp::set_allocated_strconfigjson(::std::string* strconfigjson) {
  if (strconfigjson != NULL) {
    
  } else {
    
  }
  strconfigjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strconfigjson);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ConfigInfoRsp.strConfigJson)
}

inline const ConfigInfoRsp* ConfigInfoRsp::internal_default_instance() {
  return &ConfigInfoRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandReq::kStrValueFieldNumber;
const int ShakehandReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandReq::ShakehandReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ShakehandReq)
}

void ShakehandReq::InitAsDefaultInstance() {
}

ShakehandReq::ShakehandReq(const ShakehandReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ShakehandReq)
}

void ShakehandReq::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _cached_size_ = 0;
}

ShakehandReq::~ShakehandReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ShakehandReq)
  SharedDtor();
}

void ShakehandReq::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShakehandReq_descriptor_;
}

const ShakehandReq& ShakehandReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShakehandReq> ShakehandReq_default_instance_;

ShakehandReq* ShakehandReq::New(::google::protobuf::Arena* arena) const {
  ShakehandReq* n = new ShakehandReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ShakehandReq)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

bool ShakehandReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ShakehandReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.ShakehandReq.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TDFS::MESSAGE::SyncServiceStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ShakehandReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ShakehandReq)
  return false;
#undef DO_
}

void ShakehandReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ShakehandReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ShakehandReq.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ShakehandReq)
}

::google::protobuf::uint8* ShakehandReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ShakehandReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ShakehandReq.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ShakehandReq)
  return target;
}

size_t ShakehandReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ShakehandReq)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ShakehandReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShakehandReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ShakehandReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ShakehandReq)
    UnsafeMergeFrom(*source);
  }
}

void ShakehandReq::MergeFrom(const ShakehandReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ShakehandReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShakehandReq::UnsafeMergeFrom(const ShakehandReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ShakehandReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ShakehandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandReq::CopyFrom(const ShakehandReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ShakehandReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShakehandReq::IsInitialized() const {

  return true;
}

void ShakehandReq::Swap(ShakehandReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandReq::InternalSwap(ShakehandReq* other) {
  strvalue_.Swap(&other->strvalue_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShakehandReq_descriptor_;
  metadata.reflection = ShakehandReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandReq

// optional string strValue = 1;
void ShakehandReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ShakehandReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ShakehandReq.strValue)
}
void ShakehandReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ShakehandReq.strValue)
}
void ShakehandReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ShakehandReq.strValue)
}
::std::string* ShakehandReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ShakehandReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ShakehandReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ShakehandReq.strValue)
}

// optional .TDFS.MESSAGE.SyncServiceStatus status = 2;
void ShakehandReq::clear_status() {
  status_ = 0;
}
::TDFS::MESSAGE::SyncServiceStatus ShakehandReq::status() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ShakehandReq.status)
  return static_cast< ::TDFS::MESSAGE::SyncServiceStatus >(status_);
}
void ShakehandReq::set_status(::TDFS::MESSAGE::SyncServiceStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ShakehandReq.status)
}

inline const ShakehandReq* ShakehandReq::internal_default_instance() {
  return &ShakehandReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakehandRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakehandRsp::ShakehandRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ShakehandRsp)
}

void ShakehandRsp::InitAsDefaultInstance() {
}

ShakehandRsp::ShakehandRsp(const ShakehandRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ShakehandRsp)
}

void ShakehandRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShakehandRsp::~ShakehandRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ShakehandRsp)
  SharedDtor();
}

void ShakehandRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShakehandRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakehandRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShakehandRsp_descriptor_;
}

const ShakehandRsp& ShakehandRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShakehandRsp> ShakehandRsp_default_instance_;

ShakehandRsp* ShakehandRsp::New(::google::protobuf::Arena* arena) const {
  ShakehandRsp* n = new ShakehandRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakehandRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ShakehandRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShakehandRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ShakehandRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.ShakehandRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ShakehandRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ShakehandRsp)
  return false;
#undef DO_
}

void ShakehandRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ShakehandRsp)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ShakehandRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ShakehandRsp)
}

::google::protobuf::uint8* ShakehandRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ShakehandRsp)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ShakehandRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ShakehandRsp)
  return target;
}

size_t ShakehandRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ShakehandRsp)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakehandRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ShakehandRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShakehandRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakehandRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ShakehandRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ShakehandRsp)
    UnsafeMergeFrom(*source);
  }
}

void ShakehandRsp::MergeFrom(const ShakehandRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ShakehandRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShakehandRsp::UnsafeMergeFrom(const ShakehandRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ShakehandRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ShakehandRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakehandRsp::CopyFrom(const ShakehandRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ShakehandRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShakehandRsp::IsInitialized() const {

  return true;
}

void ShakehandRsp::Swap(ShakehandRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakehandRsp::InternalSwap(ShakehandRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakehandRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShakehandRsp_descriptor_;
  metadata.reflection = ShakehandRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakehandRsp

// optional string strValue = 1;
void ShakehandRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShakehandRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ShakehandRsp.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ShakehandRsp.strValue)
}
void ShakehandRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ShakehandRsp.strValue)
}
void ShakehandRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ShakehandRsp.strValue)
}
::std::string* ShakehandRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ShakehandRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakehandRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ShakehandRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakehandRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ShakehandRsp.strValue)
}

inline const ShakehandRsp* ShakehandRsp::internal_default_instance() {
  return &ShakehandRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Address_NodeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Address_NodeType_descriptor_;
}
bool Address_NodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Address_NodeType Address::Center;
const Address_NodeType Address::Sync;
const Address_NodeType Address::NodeType_MIN;
const Address_NodeType Address::NodeType_MAX;
const int Address::NodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kStrAddressFieldNumber;
const int Address::kTypeFieldNumber;
const int Address::kAreaIDFieldNumber;
const int Address::kStrStorageIPFieldNumber;
const int Address::kStrStoragePortFieldNumber;
const int Address::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.Address)
}

void Address::InitAsDefaultInstance() {
}

Address::Address(const Address& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.Address)
}

void Address::SharedCtor() {
  straddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&type_) + sizeof(status_));
  _cached_size_ = 0;
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  straddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Address_descriptor_;
}

const Address& Address::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Address> Address_default_instance_;

Address* Address::New(::google::protobuf::Arena* arena) const {
  Address* n = new Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.Address)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Address, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Address*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, status_);
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strstorageport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strAddress = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.Address.strAddress"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .TDFS.MESSAGE.Address.NodeType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TDFS::MESSAGE::Address_NodeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AreaID;
        break;
      }

      // optional string AreaID = 3;
      case 3: {
        if (tag == 26) {
         parse_AreaID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_areaid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->areaid().data(), this->areaid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.Address.AreaID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_strStorageIP;
        break;
      }

      // optional string strStorageIP = 4;
      case 4: {
        if (tag == 34) {
         parse_strStorageIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstorageip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strstorageip().data(), this->strstorageip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.Address.strStorageIP"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_strStoragePort;
        break;
      }

      // optional string strStoragePort = 5;
      case 5: {
        if (tag == 42) {
         parse_strStoragePort:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstorageport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strstorageport().data(), this->strstorageport().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.Address.strStoragePort"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
      case 6: {
        if (tag == 48) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TDFS::MESSAGE::SyncServiceStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.Address)
  // optional string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.strAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->straddress(), output);
  }

  // optional .TDFS.MESSAGE.Address.NodeType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string AreaID = 3;
  if (this->areaid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->areaid().data(), this->areaid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.AreaID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->areaid(), output);
  }

  // optional string strStorageIP = 4;
  if (this->strstorageip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageip().data(), this->strstorageip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.strStorageIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strstorageip(), output);
  }

  // optional string strStoragePort = 5;
  if (this->strstorageport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageport().data(), this->strstorageport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.strStoragePort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strstorageport(), output);
  }

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.Address)
  // optional string strAddress = 1;
  if (this->straddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.strAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->straddress(), target);
  }

  // optional .TDFS.MESSAGE.Address.NodeType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string AreaID = 3;
  if (this->areaid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->areaid().data(), this->areaid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.AreaID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->areaid(), target);
  }

  // optional string strStorageIP = 4;
  if (this->strstorageip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageip().data(), this->strstorageip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.strStorageIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strstorageip(), target);
  }

  // optional string strStoragePort = 5;
  if (this->strstorageport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strstorageport().data(), this->strstorageport().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Address.strStoragePort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strstorageport(), target);
  }

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.Address)
  size_t total_size = 0;

  // optional string strAddress = 1;
  if (this->straddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->straddress());
  }

  // optional .TDFS.MESSAGE.Address.NodeType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string AreaID = 3;
  if (this->areaid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->areaid());
  }

  // optional string strStorageIP = 4;
  if (this->strstorageip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strstorageip());
  }

  // optional string strStoragePort = 5;
  if (this->strstorageport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strstorageport());
  }

  // optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.Address)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.Address)
    UnsafeMergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.Address)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Address::UnsafeMergeFrom(const Address& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.straddress().size() > 0) {

    straddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.straddress_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.areaid().size() > 0) {

    areaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.areaid_);
  }
  if (from.strstorageip().size() > 0) {

    strstorageip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstorageip_);
  }
  if (from.strstorageport().size() > 0) {

    strstorageport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strstorageport_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.Address)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Address::IsInitialized() const {

  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  straddress_.Swap(&other->straddress_);
  std::swap(type_, other->type_);
  areaid_.Swap(&other->areaid_);
  strstorageip_.Swap(&other->strstorageip_);
  strstorageport_.Swap(&other->strstorageport_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Address_descriptor_;
  metadata.reflection = Address_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Address

// optional string strAddress = 1;
void Address::clear_straddress() {
  straddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Address::straddress() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.strAddress)
  return straddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_straddress(const ::std::string& value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.strAddress)
}
void Address::set_straddress(const char* value) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.strAddress)
}
void Address::set_straddress(const char* value, size_t size) {
  
  straddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.strAddress)
}
::std::string* Address::mutable_straddress() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.strAddress)
  return straddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_straddress() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.strAddress)
  
  return straddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_straddress(::std::string* straddress) {
  if (straddress != NULL) {
    
  } else {
    
  }
  straddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddress);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.strAddress)
}

// optional .TDFS.MESSAGE.Address.NodeType type = 2;
void Address::clear_type() {
  type_ = 0;
}
::TDFS::MESSAGE::Address_NodeType Address::type() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.type)
  return static_cast< ::TDFS::MESSAGE::Address_NodeType >(type_);
}
void Address::set_type(::TDFS::MESSAGE::Address_NodeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.type)
}

// optional string AreaID = 3;
void Address::clear_areaid() {
  areaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Address::areaid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.AreaID)
  return areaid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_areaid(const ::std::string& value) {
  
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.AreaID)
}
void Address::set_areaid(const char* value) {
  
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.AreaID)
}
void Address::set_areaid(const char* value, size_t size) {
  
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.AreaID)
}
::std::string* Address::mutable_areaid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.AreaID)
  return areaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_areaid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.AreaID)
  
  return areaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_areaid(::std::string* areaid) {
  if (areaid != NULL) {
    
  } else {
    
  }
  areaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), areaid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.AreaID)
}

// optional string strStorageIP = 4;
void Address::clear_strstorageip() {
  strstorageip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Address::strstorageip() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.strStorageIP)
  return strstorageip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_strstorageip(const ::std::string& value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.strStorageIP)
}
void Address::set_strstorageip(const char* value) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.strStorageIP)
}
void Address::set_strstorageip(const char* value, size_t size) {
  
  strstorageip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.strStorageIP)
}
::std::string* Address::mutable_strstorageip() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.strStorageIP)
  return strstorageip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_strstorageip() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.strStorageIP)
  
  return strstorageip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_strstorageip(::std::string* strstorageip) {
  if (strstorageip != NULL) {
    
  } else {
    
  }
  strstorageip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageip);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.strStorageIP)
}

// optional string strStoragePort = 5;
void Address::clear_strstorageport() {
  strstorageport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Address::strstorageport() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.strStoragePort)
  return strstorageport_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_strstorageport(const ::std::string& value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.strStoragePort)
}
void Address::set_strstorageport(const char* value) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Address.strStoragePort)
}
void Address::set_strstorageport(const char* value, size_t size) {
  
  strstorageport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Address.strStoragePort)
}
::std::string* Address::mutable_strstorageport() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Address.strStoragePort)
  return strstorageport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_strstorageport() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Address.strStoragePort)
  
  return strstorageport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_strstorageport(::std::string* strstorageport) {
  if (strstorageport != NULL) {
    
  } else {
    
  }
  strstorageport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstorageport);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Address.strStoragePort)
}

// optional .TDFS.MESSAGE.SyncServiceStatus status = 6;
void Address::clear_status() {
  status_ = 0;
}
::TDFS::MESSAGE::SyncServiceStatus Address::status() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Address.status)
  return static_cast< ::TDFS::MESSAGE::SyncServiceStatus >(status_);
}
void Address::set_status(::TDFS::MESSAGE::SyncServiceStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Address.status)
}

inline const Address* Address::internal_default_instance() {
  return &Address_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSyncAddressReq::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSyncAddressReq::GetSyncAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.GetSyncAddressReq)
}

void GetSyncAddressReq::InitAsDefaultInstance() {
}

GetSyncAddressReq::GetSyncAddressReq(const GetSyncAddressReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.GetSyncAddressReq)
}

void GetSyncAddressReq::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSyncAddressReq::~GetSyncAddressReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.GetSyncAddressReq)
  SharedDtor();
}

void GetSyncAddressReq::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSyncAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSyncAddressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSyncAddressReq_descriptor_;
}

const GetSyncAddressReq& GetSyncAddressReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetSyncAddressReq> GetSyncAddressReq_default_instance_;

GetSyncAddressReq* GetSyncAddressReq::New(::google::protobuf::Arena* arena) const {
  GetSyncAddressReq* n = new GetSyncAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSyncAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.GetSyncAddressReq)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetSyncAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.GetSyncAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.GetSyncAddressReq.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.GetSyncAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.GetSyncAddressReq)
  return false;
#undef DO_
}

void GetSyncAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.GetSyncAddressReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.GetSyncAddressReq.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.GetSyncAddressReq)
}

::google::protobuf::uint8* GetSyncAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.GetSyncAddressReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.GetSyncAddressReq.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.GetSyncAddressReq)
  return target;
}

size_t GetSyncAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.GetSyncAddressReq)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSyncAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.GetSyncAddressReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetSyncAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSyncAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.GetSyncAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.GetSyncAddressReq)
    UnsafeMergeFrom(*source);
  }
}

void GetSyncAddressReq::MergeFrom(const GetSyncAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.GetSyncAddressReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetSyncAddressReq::UnsafeMergeFrom(const GetSyncAddressReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void GetSyncAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.GetSyncAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSyncAddressReq::CopyFrom(const GetSyncAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.GetSyncAddressReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetSyncAddressReq::IsInitialized() const {

  return true;
}

void GetSyncAddressReq::Swap(GetSyncAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSyncAddressReq::InternalSwap(GetSyncAddressReq* other) {
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSyncAddressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSyncAddressReq_descriptor_;
  metadata.reflection = GetSyncAddressReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSyncAddressReq

// optional string strValue = 1;
void GetSyncAddressReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetSyncAddressReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetSyncAddressReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSyncAddressReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}
void GetSyncAddressReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}
void GetSyncAddressReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}
::std::string* GetSyncAddressReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetSyncAddressReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSyncAddressReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.GetSyncAddressReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSyncAddressReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.GetSyncAddressReq.strValue)
}

inline const GetSyncAddressReq* GetSyncAddressReq::internal_default_instance() {
  return &GetSyncAddressReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSyncAddressRsp::kAddressOfSyncFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSyncAddressRsp::GetSyncAddressRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.GetSyncAddressRsp)
}

void GetSyncAddressRsp::InitAsDefaultInstance() {
}

GetSyncAddressRsp::GetSyncAddressRsp(const GetSyncAddressRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.GetSyncAddressRsp)
}

void GetSyncAddressRsp::SharedCtor() {
  _cached_size_ = 0;
}

GetSyncAddressRsp::~GetSyncAddressRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.GetSyncAddressRsp)
  SharedDtor();
}

void GetSyncAddressRsp::SharedDtor() {
}

void GetSyncAddressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSyncAddressRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSyncAddressRsp_descriptor_;
}

const GetSyncAddressRsp& GetSyncAddressRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetSyncAddressRsp> GetSyncAddressRsp_default_instance_;

GetSyncAddressRsp* GetSyncAddressRsp::New(::google::protobuf::Arena* arena) const {
  GetSyncAddressRsp* n = new GetSyncAddressRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSyncAddressRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.GetSyncAddressRsp)
  addressofsync_.Clear();
}

bool GetSyncAddressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.GetSyncAddressRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_AddressOfSync:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_addressofsync()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_AddressOfSync;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.GetSyncAddressRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.GetSyncAddressRsp)
  return false;
#undef DO_
}

void GetSyncAddressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.GetSyncAddressRsp)
  // repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
  for (unsigned int i = 0, n = this->addressofsync_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->addressofsync(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.GetSyncAddressRsp)
}

::google::protobuf::uint8* GetSyncAddressRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.GetSyncAddressRsp)
  // repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
  for (unsigned int i = 0, n = this->addressofsync_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->addressofsync(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.GetSyncAddressRsp)
  return target;
}

size_t GetSyncAddressRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.GetSyncAddressRsp)
  size_t total_size = 0;

  // repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
  {
    unsigned int count = this->addressofsync_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addressofsync(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSyncAddressRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.GetSyncAddressRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetSyncAddressRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSyncAddressRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.GetSyncAddressRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.GetSyncAddressRsp)
    UnsafeMergeFrom(*source);
  }
}

void GetSyncAddressRsp::MergeFrom(const GetSyncAddressRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.GetSyncAddressRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetSyncAddressRsp::UnsafeMergeFrom(const GetSyncAddressRsp& from) {
  GOOGLE_DCHECK(&from != this);
  addressofsync_.MergeFrom(from.addressofsync_);
}

void GetSyncAddressRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.GetSyncAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSyncAddressRsp::CopyFrom(const GetSyncAddressRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.GetSyncAddressRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetSyncAddressRsp::IsInitialized() const {

  return true;
}

void GetSyncAddressRsp::Swap(GetSyncAddressRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSyncAddressRsp::InternalSwap(GetSyncAddressRsp* other) {
  addressofsync_.UnsafeArenaSwap(&other->addressofsync_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSyncAddressRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSyncAddressRsp_descriptor_;
  metadata.reflection = GetSyncAddressRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSyncAddressRsp

// repeated .TDFS.MESSAGE.Address AddressOfSync = 1;
int GetSyncAddressRsp::addressofsync_size() const {
  return addressofsync_.size();
}
void GetSyncAddressRsp::clear_addressofsync() {
  addressofsync_.Clear();
}
const ::TDFS::MESSAGE::Address& GetSyncAddressRsp::addressofsync(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_.Get(index);
}
::TDFS::MESSAGE::Address* GetSyncAddressRsp::mutable_addressofsync(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_.Mutable(index);
}
::TDFS::MESSAGE::Address* GetSyncAddressRsp::add_addressofsync() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_.Add();
}
::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address >*
GetSyncAddressRsp::mutable_addressofsync() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return &addressofsync_;
}
const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::Address >&
GetSyncAddressRsp::addressofsync() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.GetSyncAddressRsp.AddressOfSync)
  return addressofsync_;
}

inline const GetSyncAddressRsp* GetSyncAddressRsp::internal_default_instance() {
  return &GetSyncAddressRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfo::kStrFileIDFieldNumber;
const int FileInfo::kStrFileNameFieldNumber;
const int FileInfo::kUiFileSizeFieldNumber;
const int FileInfo::kStrFileMD5FieldNumber;
const int FileInfo::kStrCreatedateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfo::FileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.FileInfo)
}

void FileInfo::InitAsDefaultInstance() {
}

FileInfo::FileInfo(const FileInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.FileInfo)
}

void FileInfo::SharedCtor() {
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uifilesize_ = 0u;
  _cached_size_ = 0;
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.FileInfo)
  SharedDtor();
}

void FileInfo::SharedDtor() {
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilemd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileInfo_descriptor_;
}

const FileInfo& FileInfo::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FileInfo> FileInfo_default_instance_;

FileInfo* FileInfo::New(::google::protobuf::Arena* arena) const {
  FileInfo* n = new FileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.FileInfo)
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uifilesize_ = 0u;
  strfilemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.FileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strFileID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.FileInfo.strFileID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strFileName;
        break;
      }

      // optional string strFileName = 2;
      case 2: {
        if (tag == 18) {
         parse_strFileName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilename().data(), this->strfilename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.FileInfo.strFileName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uiFileSize;
        break;
      }

      // optional uint32 uiFileSize = 3;
      case 3: {
        if (tag == 24) {
         parse_uiFileSize:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uifilesize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_strFileMD5;
        break;
      }

      // optional string strFileMD5 = 4;
      case 4: {
        if (tag == 34) {
         parse_strFileMD5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilemd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfilemd5().data(), this->strfilemd5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.FileInfo.strFileMD5"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_strCreatedate;
        break;
      }

      // optional string strCreatedate = 5;
      case 5: {
        if (tag == 42) {
         parse_strCreatedate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcreatedate().data(), this->strcreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.FileInfo.strCreatedate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.FileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.FileInfo)
  return false;
#undef DO_
}

void FileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.FileInfo)
  // optional string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strfileid(), output);
  }

  // optional string strFileName = 2;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strfilename(), output);
  }

  // optional uint32 uiFileSize = 3;
  if (this->uifilesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uifilesize(), output);
  }

  // optional string strFileMD5 = 4;
  if (this->strfilemd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilemd5().data(), this->strfilemd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strFileMD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strfilemd5(), output);
  }

  // optional string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strCreatedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strcreatedate(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.FileInfo)
}

::google::protobuf::uint8* FileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.FileInfo)
  // optional string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strfileid(), target);
  }

  // optional string strFileName = 2;
  if (this->strfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilename().data(), this->strfilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strfilename(), target);
  }

  // optional uint32 uiFileSize = 3;
  if (this->uifilesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uifilesize(), target);
  }

  // optional string strFileMD5 = 4;
  if (this->strfilemd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfilemd5().data(), this->strfilemd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strFileMD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strfilemd5(), target);
  }

  // optional string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcreatedate().data(), this->strcreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FileInfo.strCreatedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcreatedate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.FileInfo)
  size_t total_size = 0;

  // optional string strFileID = 1;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  // optional string strFileName = 2;
  if (this->strfilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilename());
  }

  // optional uint32 uiFileSize = 3;
  if (this->uifilesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uifilesize());
  }

  // optional string strFileMD5 = 4;
  if (this->strfilemd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfilemd5());
  }

  // optional string strCreatedate = 5;
  if (this->strcreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcreatedate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.FileInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.FileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.FileInfo)
    UnsafeMergeFrom(*source);
  }
}

void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.FileInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FileInfo::UnsafeMergeFrom(const FileInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
  if (from.strfilename().size() > 0) {

    strfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilename_);
  }
  if (from.uifilesize() != 0) {
    set_uifilesize(from.uifilesize());
  }
  if (from.strfilemd5().size() > 0) {

    strfilemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfilemd5_);
  }
  if (from.strcreatedate().size() > 0) {

    strcreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcreatedate_);
  }
}

void FileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.FileInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FileInfo::IsInitialized() const {

  return true;
}

void FileInfo::Swap(FileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfo::InternalSwap(FileInfo* other) {
  strfileid_.Swap(&other->strfileid_);
  strfilename_.Swap(&other->strfilename_);
  std::swap(uifilesize_, other->uifilesize_);
  strfilemd5_.Swap(&other->strfilemd5_);
  strcreatedate_.Swap(&other->strcreatedate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileInfo_descriptor_;
  metadata.reflection = FileInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfo

// optional string strFileID = 1;
void FileInfo::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::strfileid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strFileID)
  return strfileid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strFileID)
}
void FileInfo::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strFileID)
}
void FileInfo::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strFileID)
}
::std::string* FileInfo::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_strfileid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strFileID)
}

// optional string strFileName = 2;
void FileInfo::clear_strfilename() {
  strfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::strfilename() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strFileName)
  return strfilename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_strfilename(const ::std::string& value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strFileName)
}
void FileInfo::set_strfilename(const char* value) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strFileName)
}
void FileInfo::set_strfilename(const char* value, size_t size) {
  
  strfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strFileName)
}
::std::string* FileInfo::mutable_strfilename() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strFileName)
  return strfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_strfilename() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strFileName)
  
  return strfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_strfilename(::std::string* strfilename) {
  if (strfilename != NULL) {
    
  } else {
    
  }
  strfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilename);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strFileName)
}

// optional uint32 uiFileSize = 3;
void FileInfo::clear_uifilesize() {
  uifilesize_ = 0u;
}
::google::protobuf::uint32 FileInfo::uifilesize() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.uiFileSize)
  return uifilesize_;
}
void FileInfo::set_uifilesize(::google::protobuf::uint32 value) {
  
  uifilesize_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.uiFileSize)
}

// optional string strFileMD5 = 4;
void FileInfo::clear_strfilemd5() {
  strfilemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::strfilemd5() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strFileMD5)
  return strfilemd5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_strfilemd5(const ::std::string& value) {
  
  strfilemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strFileMD5)
}
void FileInfo::set_strfilemd5(const char* value) {
  
  strfilemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strFileMD5)
}
void FileInfo::set_strfilemd5(const char* value, size_t size) {
  
  strfilemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strFileMD5)
}
::std::string* FileInfo::mutable_strfilemd5() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strFileMD5)
  return strfilemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_strfilemd5() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strFileMD5)
  
  return strfilemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_strfilemd5(::std::string* strfilemd5) {
  if (strfilemd5 != NULL) {
    
  } else {
    
  }
  strfilemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfilemd5);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strFileMD5)
}

// optional string strCreatedate = 5;
void FileInfo::clear_strcreatedate() {
  strcreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::strcreatedate() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FileInfo.strCreatedate)
  return strcreatedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_strcreatedate(const ::std::string& value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FileInfo.strCreatedate)
}
void FileInfo::set_strcreatedate(const char* value) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FileInfo.strCreatedate)
}
void FileInfo::set_strcreatedate(const char* value, size_t size) {
  
  strcreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FileInfo.strCreatedate)
}
::std::string* FileInfo::mutable_strcreatedate() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FileInfo.strCreatedate)
  return strcreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_strcreatedate() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FileInfo.strCreatedate)
  
  return strcreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_strcreatedate(::std::string* strcreatedate) {
  if (strcreatedate != NULL) {
    
  } else {
    
  }
  strcreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcreatedate);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FileInfo.strCreatedate)
}

inline const FileInfo* FileInfo::internal_default_instance() {
  return &FileInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncFileListPendingReq::kFileInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncFileListPendingReq::SyncFileListPendingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.SyncFileListPendingReq)
}

void SyncFileListPendingReq::InitAsDefaultInstance() {
}

SyncFileListPendingReq::SyncFileListPendingReq(const SyncFileListPendingReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.SyncFileListPendingReq)
}

void SyncFileListPendingReq::SharedCtor() {
  _cached_size_ = 0;
}

SyncFileListPendingReq::~SyncFileListPendingReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.SyncFileListPendingReq)
  SharedDtor();
}

void SyncFileListPendingReq::SharedDtor() {
}

void SyncFileListPendingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncFileListPendingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncFileListPendingReq_descriptor_;
}

const SyncFileListPendingReq& SyncFileListPendingReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SyncFileListPendingReq> SyncFileListPendingReq_default_instance_;

SyncFileListPendingReq* SyncFileListPendingReq::New(::google::protobuf::Arena* arena) const {
  SyncFileListPendingReq* n = new SyncFileListPendingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncFileListPendingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.SyncFileListPendingReq)
  fileinfolist_.Clear();
}

bool SyncFileListPendingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.SyncFileListPendingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FileInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FileInfoList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.SyncFileListPendingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.SyncFileListPendingReq)
  return false;
#undef DO_
}

void SyncFileListPendingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.SyncFileListPendingReq)
  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fileinfolist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.SyncFileListPendingReq)
}

::google::protobuf::uint8* SyncFileListPendingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.SyncFileListPendingReq)
  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->fileinfolist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.SyncFileListPendingReq)
  return target;
}

size_t SyncFileListPendingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.SyncFileListPendingReq)
  size_t total_size = 0;

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  {
    unsigned int count = this->fileinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncFileListPendingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.SyncFileListPendingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SyncFileListPendingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncFileListPendingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.SyncFileListPendingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.SyncFileListPendingReq)
    UnsafeMergeFrom(*source);
  }
}

void SyncFileListPendingReq::MergeFrom(const SyncFileListPendingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.SyncFileListPendingReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SyncFileListPendingReq::UnsafeMergeFrom(const SyncFileListPendingReq& from) {
  GOOGLE_DCHECK(&from != this);
  fileinfolist_.MergeFrom(from.fileinfolist_);
}

void SyncFileListPendingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.SyncFileListPendingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncFileListPendingReq::CopyFrom(const SyncFileListPendingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.SyncFileListPendingReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SyncFileListPendingReq::IsInitialized() const {

  return true;
}

void SyncFileListPendingReq::Swap(SyncFileListPendingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncFileListPendingReq::InternalSwap(SyncFileListPendingReq* other) {
  fileinfolist_.UnsafeArenaSwap(&other->fileinfolist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncFileListPendingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncFileListPendingReq_descriptor_;
  metadata.reflection = SyncFileListPendingReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncFileListPendingReq

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
int SyncFileListPendingReq::fileinfolist_size() const {
  return fileinfolist_.size();
}
void SyncFileListPendingReq::clear_fileinfolist() {
  fileinfolist_.Clear();
}
const ::TDFS::MESSAGE::FileInfo& SyncFileListPendingReq::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_.Get(index);
}
::TDFS::MESSAGE::FileInfo* SyncFileListPendingReq::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_.Mutable(index);
}
::TDFS::MESSAGE::FileInfo* SyncFileListPendingReq::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
SyncFileListPendingReq::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return &fileinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
SyncFileListPendingReq::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.SyncFileListPendingReq.FileInfoList)
  return fileinfolist_;
}

inline const SyncFileListPendingReq* SyncFileListPendingReq::internal_default_instance() {
  return &SyncFileListPendingReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncFileListPendingRsp::kFileInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncFileListPendingRsp::SyncFileListPendingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.SyncFileListPendingRsp)
}

void SyncFileListPendingRsp::InitAsDefaultInstance() {
}

SyncFileListPendingRsp::SyncFileListPendingRsp(const SyncFileListPendingRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.SyncFileListPendingRsp)
}

void SyncFileListPendingRsp::SharedCtor() {
  _cached_size_ = 0;
}

SyncFileListPendingRsp::~SyncFileListPendingRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.SyncFileListPendingRsp)
  SharedDtor();
}

void SyncFileListPendingRsp::SharedDtor() {
}

void SyncFileListPendingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncFileListPendingRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncFileListPendingRsp_descriptor_;
}

const SyncFileListPendingRsp& SyncFileListPendingRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SyncFileListPendingRsp> SyncFileListPendingRsp_default_instance_;

SyncFileListPendingRsp* SyncFileListPendingRsp::New(::google::protobuf::Arena* arena) const {
  SyncFileListPendingRsp* n = new SyncFileListPendingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncFileListPendingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  fileinfolist_.Clear();
}

bool SyncFileListPendingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FileInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FileInfoList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.SyncFileListPendingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.SyncFileListPendingRsp)
  return false;
#undef DO_
}

void SyncFileListPendingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fileinfolist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.SyncFileListPendingRsp)
}

::google::protobuf::uint8* SyncFileListPendingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->fileinfolist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.SyncFileListPendingRsp)
  return target;
}

size_t SyncFileListPendingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  size_t total_size = 0;

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  {
    unsigned int count = this->fileinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncFileListPendingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SyncFileListPendingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncFileListPendingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.SyncFileListPendingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.SyncFileListPendingRsp)
    UnsafeMergeFrom(*source);
  }
}

void SyncFileListPendingRsp::MergeFrom(const SyncFileListPendingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SyncFileListPendingRsp::UnsafeMergeFrom(const SyncFileListPendingRsp& from) {
  GOOGLE_DCHECK(&from != this);
  fileinfolist_.MergeFrom(from.fileinfolist_);
}

void SyncFileListPendingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncFileListPendingRsp::CopyFrom(const SyncFileListPendingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.SyncFileListPendingRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SyncFileListPendingRsp::IsInitialized() const {

  return true;
}

void SyncFileListPendingRsp::Swap(SyncFileListPendingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncFileListPendingRsp::InternalSwap(SyncFileListPendingRsp* other) {
  fileinfolist_.UnsafeArenaSwap(&other->fileinfolist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncFileListPendingRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncFileListPendingRsp_descriptor_;
  metadata.reflection = SyncFileListPendingRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncFileListPendingRsp

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
int SyncFileListPendingRsp::fileinfolist_size() const {
  return fileinfolist_.size();
}
void SyncFileListPendingRsp::clear_fileinfolist() {
  fileinfolist_.Clear();
}
const ::TDFS::MESSAGE::FileInfo& SyncFileListPendingRsp::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_.Get(index);
}
::TDFS::MESSAGE::FileInfo* SyncFileListPendingRsp::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_.Mutable(index);
}
::TDFS::MESSAGE::FileInfo* SyncFileListPendingRsp::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
SyncFileListPendingRsp::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return &fileinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
SyncFileListPendingRsp::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.SyncFileListPendingRsp.FileInfoList)
  return fileinfolist_;
}

inline const SyncFileListPendingRsp* SyncFileListPendingRsp::internal_default_instance() {
  return &SyncFileListPendingRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileInfoReq::kStrFileIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileInfoReq::GetFileInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.GetFileInfoReq)
}

void GetFileInfoReq::InitAsDefaultInstance() {
}

GetFileInfoReq::GetFileInfoReq(const GetFileInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.GetFileInfoReq)
}

void GetFileInfoReq::SharedCtor() {
  strfileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFileInfoReq::~GetFileInfoReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.GetFileInfoReq)
  SharedDtor();
}

void GetFileInfoReq::SharedDtor() {
  strfileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFileInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFileInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFileInfoReq_descriptor_;
}

const GetFileInfoReq& GetFileInfoReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetFileInfoReq> GetFileInfoReq_default_instance_;

GetFileInfoReq* GetFileInfoReq::New(::google::protobuf::Arena* arena) const {
  GetFileInfoReq* n = new GetFileInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFileInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.GetFileInfoReq)
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetFileInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.GetFileInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strFileID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.GetFileInfoReq.strFileID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.GetFileInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.GetFileInfoReq)
  return false;
#undef DO_
}

void GetFileInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.GetFileInfoReq)
  // optional string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.GetFileInfoReq.strFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strfileid(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.GetFileInfoReq)
}

::google::protobuf::uint8* GetFileInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.GetFileInfoReq)
  // optional string strFileID = 1;
  if (this->strfileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.GetFileInfoReq.strFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strfileid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.GetFileInfoReq)
  return target;
}

size_t GetFileInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.GetFileInfoReq)
  size_t total_size = 0;

  // optional string strFileID = 1;
  if (this->strfileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfileid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFileInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.GetFileInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetFileInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFileInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.GetFileInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.GetFileInfoReq)
    UnsafeMergeFrom(*source);
  }
}

void GetFileInfoReq::MergeFrom(const GetFileInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.GetFileInfoReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetFileInfoReq::UnsafeMergeFrom(const GetFileInfoReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strfileid().size() > 0) {

    strfileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfileid_);
  }
}

void GetFileInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.GetFileInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileInfoReq::CopyFrom(const GetFileInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.GetFileInfoReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetFileInfoReq::IsInitialized() const {

  return true;
}

void GetFileInfoReq::Swap(GetFileInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileInfoReq::InternalSwap(GetFileInfoReq* other) {
  strfileid_.Swap(&other->strfileid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFileInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFileInfoReq_descriptor_;
  metadata.reflection = GetFileInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFileInfoReq

// optional string strFileID = 1;
void GetFileInfoReq::clear_strfileid() {
  strfileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetFileInfoReq::strfileid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetFileInfoReq.strFileID)
  return strfileid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetFileInfoReq::set_strfileid(const ::std::string& value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}
void GetFileInfoReq::set_strfileid(const char* value) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}
void GetFileInfoReq::set_strfileid(const char* value, size_t size) {
  
  strfileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}
::std::string* GetFileInfoReq::mutable_strfileid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetFileInfoReq.strFileID)
  return strfileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetFileInfoReq::release_strfileid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.GetFileInfoReq.strFileID)
  
  return strfileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetFileInfoReq::set_allocated_strfileid(::std::string* strfileid) {
  if (strfileid != NULL) {
    
  } else {
    
  }
  strfileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfileid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.GetFileInfoReq.strFileID)
}

inline const GetFileInfoReq* GetFileInfoReq::internal_default_instance() {
  return &GetFileInfoReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileInfoRsp::kFileinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileInfoRsp::GetFileInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.GetFileInfoRsp)
}

void GetFileInfoRsp::InitAsDefaultInstance() {
  fileinfo_ = const_cast< ::TDFS::MESSAGE::FileInfo*>(
      ::TDFS::MESSAGE::FileInfo::internal_default_instance());
}

GetFileInfoRsp::GetFileInfoRsp(const GetFileInfoRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.GetFileInfoRsp)
}

void GetFileInfoRsp::SharedCtor() {
  fileinfo_ = NULL;
  _cached_size_ = 0;
}

GetFileInfoRsp::~GetFileInfoRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.GetFileInfoRsp)
  SharedDtor();
}

void GetFileInfoRsp::SharedDtor() {
  if (this != &GetFileInfoRsp_default_instance_.get()) {
    delete fileinfo_;
  }
}

void GetFileInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFileInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFileInfoRsp_descriptor_;
}

const GetFileInfoRsp& GetFileInfoRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetFileInfoRsp> GetFileInfoRsp_default_instance_;

GetFileInfoRsp* GetFileInfoRsp::New(::google::protobuf::Arena* arena) const {
  GetFileInfoRsp* n = new GetFileInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFileInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.GetFileInfoRsp)
  if (GetArenaNoVirtual() == NULL && fileinfo_ != NULL) delete fileinfo_;
  fileinfo_ = NULL;
}

bool GetFileInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.GetFileInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fileinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.GetFileInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.GetFileInfoRsp)
  return false;
#undef DO_
}

void GetFileInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.GetFileInfoRsp)
  // optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
  if (this->has_fileinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fileinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.GetFileInfoRsp)
}

::google::protobuf::uint8* GetFileInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.GetFileInfoRsp)
  // optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
  if (this->has_fileinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fileinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.GetFileInfoRsp)
  return target;
}

size_t GetFileInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.GetFileInfoRsp)
  size_t total_size = 0;

  // optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
  if (this->has_fileinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fileinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFileInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.GetFileInfoRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetFileInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFileInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.GetFileInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.GetFileInfoRsp)
    UnsafeMergeFrom(*source);
  }
}

void GetFileInfoRsp::MergeFrom(const GetFileInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.GetFileInfoRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetFileInfoRsp::UnsafeMergeFrom(const GetFileInfoRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_fileinfo()) {
    mutable_fileinfo()->::TDFS::MESSAGE::FileInfo::MergeFrom(from.fileinfo());
  }
}

void GetFileInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.GetFileInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileInfoRsp::CopyFrom(const GetFileInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.GetFileInfoRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetFileInfoRsp::IsInitialized() const {

  return true;
}

void GetFileInfoRsp::Swap(GetFileInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileInfoRsp::InternalSwap(GetFileInfoRsp* other) {
  std::swap(fileinfo_, other->fileinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFileInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFileInfoRsp_descriptor_;
  metadata.reflection = GetFileInfoRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFileInfoRsp

// optional .TDFS.MESSAGE.FileInfo fileinfo = 1;
bool GetFileInfoRsp::has_fileinfo() const {
  return this != internal_default_instance() && fileinfo_ != NULL;
}
void GetFileInfoRsp::clear_fileinfo() {
  if (GetArenaNoVirtual() == NULL && fileinfo_ != NULL) delete fileinfo_;
  fileinfo_ = NULL;
}
const ::TDFS::MESSAGE::FileInfo& GetFileInfoRsp::fileinfo() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
  return fileinfo_ != NULL ? *fileinfo_
                         : *::TDFS::MESSAGE::FileInfo::internal_default_instance();
}
::TDFS::MESSAGE::FileInfo* GetFileInfoRsp::mutable_fileinfo() {
  
  if (fileinfo_ == NULL) {
    fileinfo_ = new ::TDFS::MESSAGE::FileInfo;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
  return fileinfo_;
}
::TDFS::MESSAGE::FileInfo* GetFileInfoRsp::release_fileinfo() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
  
  ::TDFS::MESSAGE::FileInfo* temp = fileinfo_;
  fileinfo_ = NULL;
  return temp;
}
void GetFileInfoRsp::set_allocated_fileinfo(::TDFS::MESSAGE::FileInfo* fileinfo) {
  delete fileinfo_;
  fileinfo_ = fileinfo;
  if (fileinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.GetFileInfoRsp.fileinfo)
}

inline const GetFileInfoRsp* GetFileInfoRsp::internal_default_instance() {
  return &GetFileInfoRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlCMDReq::kUiCMDFieldNumber;
const int ControlCMDReq::kStrCMDMsgFieldNumber;
const int ControlCMDReq::kBlNeedActiveReportingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlCMDReq::ControlCMDReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ControlCMDReq)
}

void ControlCMDReq::InitAsDefaultInstance() {
}

ControlCMDReq::ControlCMDReq(const ControlCMDReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ControlCMDReq)
}

void ControlCMDReq::SharedCtor() {
  strcmdmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uicmd_, 0, reinterpret_cast<char*>(&blneedactivereporting_) -
    reinterpret_cast<char*>(&uicmd_) + sizeof(blneedactivereporting_));
  _cached_size_ = 0;
}

ControlCMDReq::~ControlCMDReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ControlCMDReq)
  SharedDtor();
}

void ControlCMDReq::SharedDtor() {
  strcmdmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ControlCMDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlCMDReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlCMDReq_descriptor_;
}

const ControlCMDReq& ControlCMDReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ControlCMDReq> ControlCMDReq_default_instance_;

ControlCMDReq* ControlCMDReq::New(::google::protobuf::Arena* arena) const {
  ControlCMDReq* n = new ControlCMDReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControlCMDReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ControlCMDReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ControlCMDReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ControlCMDReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uicmd_, blneedactivereporting_);
  strcmdmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ControlCMDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ControlCMDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uiCMD = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uicmd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strCMDMsg;
        break;
      }

      // optional string strCMDMsg = 2;
      case 2: {
        if (tag == 18) {
         parse_strCMDMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcmdmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcmdmsg().data(), this->strcmdmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.ControlCMDReq.strCMDMsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_blNeedActiveReporting;
        break;
      }

      // optional bool blNeedActiveReporting = 3;
      case 3: {
        if (tag == 24) {
         parse_blNeedActiveReporting:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blneedactivereporting_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ControlCMDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ControlCMDReq)
  return false;
#undef DO_
}

void ControlCMDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ControlCMDReq)
  // optional uint32 uiCMD = 1;
  if (this->uicmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uicmd(), output);
  }

  // optional string strCMDMsg = 2;
  if (this->strcmdmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmdmsg().data(), this->strcmdmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ControlCMDReq.strCMDMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcmdmsg(), output);
  }

  // optional bool blNeedActiveReporting = 3;
  if (this->blneedactivereporting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->blneedactivereporting(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ControlCMDReq)
}

::google::protobuf::uint8* ControlCMDReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ControlCMDReq)
  // optional uint32 uiCMD = 1;
  if (this->uicmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uicmd(), target);
  }

  // optional string strCMDMsg = 2;
  if (this->strcmdmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcmdmsg().data(), this->strcmdmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ControlCMDReq.strCMDMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcmdmsg(), target);
  }

  // optional bool blNeedActiveReporting = 3;
  if (this->blneedactivereporting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->blneedactivereporting(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ControlCMDReq)
  return target;
}

size_t ControlCMDReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ControlCMDReq)
  size_t total_size = 0;

  // optional uint32 uiCMD = 1;
  if (this->uicmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uicmd());
  }

  // optional string strCMDMsg = 2;
  if (this->strcmdmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcmdmsg());
  }

  // optional bool blNeedActiveReporting = 3;
  if (this->blneedactivereporting() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlCMDReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ControlCMDReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ControlCMDReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlCMDReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ControlCMDReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ControlCMDReq)
    UnsafeMergeFrom(*source);
  }
}

void ControlCMDReq::MergeFrom(const ControlCMDReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ControlCMDReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ControlCMDReq::UnsafeMergeFrom(const ControlCMDReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uicmd() != 0) {
    set_uicmd(from.uicmd());
  }
  if (from.strcmdmsg().size() > 0) {

    strcmdmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcmdmsg_);
  }
  if (from.blneedactivereporting() != 0) {
    set_blneedactivereporting(from.blneedactivereporting());
  }
}

void ControlCMDReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ControlCMDReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlCMDReq::CopyFrom(const ControlCMDReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ControlCMDReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ControlCMDReq::IsInitialized() const {

  return true;
}

void ControlCMDReq::Swap(ControlCMDReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlCMDReq::InternalSwap(ControlCMDReq* other) {
  std::swap(uicmd_, other->uicmd_);
  strcmdmsg_.Swap(&other->strcmdmsg_);
  std::swap(blneedactivereporting_, other->blneedactivereporting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlCMDReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlCMDReq_descriptor_;
  metadata.reflection = ControlCMDReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ControlCMDReq

// optional uint32 uiCMD = 1;
void ControlCMDReq::clear_uicmd() {
  uicmd_ = 0u;
}
::google::protobuf::uint32 ControlCMDReq::uicmd() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDReq.uiCMD)
  return uicmd_;
}
void ControlCMDReq::set_uicmd(::google::protobuf::uint32 value) {
  
  uicmd_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDReq.uiCMD)
}

// optional string strCMDMsg = 2;
void ControlCMDReq::clear_strcmdmsg() {
  strcmdmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ControlCMDReq::strcmdmsg() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
  return strcmdmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ControlCMDReq::set_strcmdmsg(const ::std::string& value) {
  
  strcmdmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}
void ControlCMDReq::set_strcmdmsg(const char* value) {
  
  strcmdmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}
void ControlCMDReq::set_strcmdmsg(const char* value, size_t size) {
  
  strcmdmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}
::std::string* ControlCMDReq::mutable_strcmdmsg() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
  return strcmdmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ControlCMDReq::release_strcmdmsg() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
  
  return strcmdmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ControlCMDReq::set_allocated_strcmdmsg(::std::string* strcmdmsg) {
  if (strcmdmsg != NULL) {
    
  } else {
    
  }
  strcmdmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcmdmsg);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ControlCMDReq.strCMDMsg)
}

// optional bool blNeedActiveReporting = 3;
void ControlCMDReq::clear_blneedactivereporting() {
  blneedactivereporting_ = false;
}
bool ControlCMDReq::blneedactivereporting() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDReq.blNeedActiveReporting)
  return blneedactivereporting_;
}
void ControlCMDReq::set_blneedactivereporting(bool value) {
  
  blneedactivereporting_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDReq.blNeedActiveReporting)
}

inline const ControlCMDReq* ControlCMDReq::internal_default_instance() {
  return &ControlCMDReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlCMDRsp::kUiCMDFieldNumber;
const int ControlCMDRsp::kBlNeedActiveReportingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlCMDRsp::ControlCMDRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ControlCMDRsp)
}

void ControlCMDRsp::InitAsDefaultInstance() {
}

ControlCMDRsp::ControlCMDRsp(const ControlCMDRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ControlCMDRsp)
}

void ControlCMDRsp::SharedCtor() {
  ::memset(&uicmd_, 0, reinterpret_cast<char*>(&blneedactivereporting_) -
    reinterpret_cast<char*>(&uicmd_) + sizeof(blneedactivereporting_));
  _cached_size_ = 0;
}

ControlCMDRsp::~ControlCMDRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ControlCMDRsp)
  SharedDtor();
}

void ControlCMDRsp::SharedDtor() {
}

void ControlCMDRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlCMDRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlCMDRsp_descriptor_;
}

const ControlCMDRsp& ControlCMDRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ControlCMDRsp> ControlCMDRsp_default_instance_;

ControlCMDRsp* ControlCMDRsp::New(::google::protobuf::Arena* arena) const {
  ControlCMDRsp* n = new ControlCMDRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControlCMDRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ControlCMDRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ControlCMDRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ControlCMDRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uicmd_, blneedactivereporting_);

#undef ZR_HELPER_
#undef ZR_

}

bool ControlCMDRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ControlCMDRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uiCMD = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uicmd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_blNeedActiveReporting;
        break;
      }

      // optional bool blNeedActiveReporting = 2;
      case 2: {
        if (tag == 16) {
         parse_blNeedActiveReporting:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blneedactivereporting_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ControlCMDRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ControlCMDRsp)
  return false;
#undef DO_
}

void ControlCMDRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ControlCMDRsp)
  // optional uint32 uiCMD = 1;
  if (this->uicmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uicmd(), output);
  }

  // optional bool blNeedActiveReporting = 2;
  if (this->blneedactivereporting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->blneedactivereporting(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ControlCMDRsp)
}

::google::protobuf::uint8* ControlCMDRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ControlCMDRsp)
  // optional uint32 uiCMD = 1;
  if (this->uicmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uicmd(), target);
  }

  // optional bool blNeedActiveReporting = 2;
  if (this->blneedactivereporting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->blneedactivereporting(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ControlCMDRsp)
  return target;
}

size_t ControlCMDRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ControlCMDRsp)
  size_t total_size = 0;

  // optional uint32 uiCMD = 1;
  if (this->uicmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uicmd());
  }

  // optional bool blNeedActiveReporting = 2;
  if (this->blneedactivereporting() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlCMDRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ControlCMDRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ControlCMDRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlCMDRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ControlCMDRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ControlCMDRsp)
    UnsafeMergeFrom(*source);
  }
}

void ControlCMDRsp::MergeFrom(const ControlCMDRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ControlCMDRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ControlCMDRsp::UnsafeMergeFrom(const ControlCMDRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uicmd() != 0) {
    set_uicmd(from.uicmd());
  }
  if (from.blneedactivereporting() != 0) {
    set_blneedactivereporting(from.blneedactivereporting());
  }
}

void ControlCMDRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ControlCMDRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlCMDRsp::CopyFrom(const ControlCMDRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ControlCMDRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ControlCMDRsp::IsInitialized() const {

  return true;
}

void ControlCMDRsp::Swap(ControlCMDRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlCMDRsp::InternalSwap(ControlCMDRsp* other) {
  std::swap(uicmd_, other->uicmd_);
  std::swap(blneedactivereporting_, other->blneedactivereporting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlCMDRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlCMDRsp_descriptor_;
  metadata.reflection = ControlCMDRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ControlCMDRsp

// optional uint32 uiCMD = 1;
void ControlCMDRsp::clear_uicmd() {
  uicmd_ = 0u;
}
::google::protobuf::uint32 ControlCMDRsp::uicmd() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDRsp.uiCMD)
  return uicmd_;
}
void ControlCMDRsp::set_uicmd(::google::protobuf::uint32 value) {
  
  uicmd_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDRsp.uiCMD)
}

// optional bool blNeedActiveReporting = 2;
void ControlCMDRsp::clear_blneedactivereporting() {
  blneedactivereporting_ = false;
}
bool ControlCMDRsp::blneedactivereporting() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ControlCMDRsp.blNeedActiveReporting)
  return blneedactivereporting_;
}
void ControlCMDRsp::set_blneedactivereporting(bool value) {
  
  blneedactivereporting_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ControlCMDRsp.blNeedActiveReporting)
}

inline const ControlCMDRsp* ControlCMDRsp::internal_default_instance() {
  return &ControlCMDRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FullSyncReq::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FullSyncReq::FullSyncReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.FullSyncReq)
}

void FullSyncReq::InitAsDefaultInstance() {
}

FullSyncReq::FullSyncReq(const FullSyncReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.FullSyncReq)
}

void FullSyncReq::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FullSyncReq::~FullSyncReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.FullSyncReq)
  SharedDtor();
}

void FullSyncReq::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FullSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FullSyncReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FullSyncReq_descriptor_;
}

const FullSyncReq& FullSyncReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FullSyncReq> FullSyncReq_default_instance_;

FullSyncReq* FullSyncReq::New(::google::protobuf::Arena* arena) const {
  FullSyncReq* n = new FullSyncReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FullSyncReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.FullSyncReq)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FullSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.FullSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.FullSyncReq.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.FullSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.FullSyncReq)
  return false;
#undef DO_
}

void FullSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.FullSyncReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FullSyncReq.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.FullSyncReq)
}

::google::protobuf::uint8* FullSyncReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.FullSyncReq)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.FullSyncReq.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.FullSyncReq)
  return target;
}

size_t FullSyncReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.FullSyncReq)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FullSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.FullSyncReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FullSyncReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FullSyncReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.FullSyncReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.FullSyncReq)
    UnsafeMergeFrom(*source);
  }
}

void FullSyncReq::MergeFrom(const FullSyncReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.FullSyncReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FullSyncReq::UnsafeMergeFrom(const FullSyncReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void FullSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.FullSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FullSyncReq::CopyFrom(const FullSyncReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.FullSyncReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FullSyncReq::IsInitialized() const {

  return true;
}

void FullSyncReq::Swap(FullSyncReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FullSyncReq::InternalSwap(FullSyncReq* other) {
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FullSyncReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FullSyncReq_descriptor_;
  metadata.reflection = FullSyncReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FullSyncReq

// optional string strValue = 1;
void FullSyncReq::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FullSyncReq::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncReq.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FullSyncReq::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FullSyncReq.strValue)
}
void FullSyncReq::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.FullSyncReq.strValue)
}
void FullSyncReq::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.FullSyncReq.strValue)
}
::std::string* FullSyncReq::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FullSyncReq.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FullSyncReq::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.FullSyncReq.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FullSyncReq::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.FullSyncReq.strValue)
}

inline const FullSyncReq* FullSyncReq::internal_default_instance() {
  return &FullSyncReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FullSyncRsp::kFileInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FullSyncRsp::FullSyncRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.FullSyncRsp)
}

void FullSyncRsp::InitAsDefaultInstance() {
}

FullSyncRsp::FullSyncRsp(const FullSyncRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.FullSyncRsp)
}

void FullSyncRsp::SharedCtor() {
  _cached_size_ = 0;
}

FullSyncRsp::~FullSyncRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.FullSyncRsp)
  SharedDtor();
}

void FullSyncRsp::SharedDtor() {
}

void FullSyncRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FullSyncRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FullSyncRsp_descriptor_;
}

const FullSyncRsp& FullSyncRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FullSyncRsp> FullSyncRsp_default_instance_;

FullSyncRsp* FullSyncRsp::New(::google::protobuf::Arena* arena) const {
  FullSyncRsp* n = new FullSyncRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FullSyncRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.FullSyncRsp)
  fileinfolist_.Clear();
}

bool FullSyncRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.FullSyncRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FileInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FileInfoList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.FullSyncRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.FullSyncRsp)
  return false;
#undef DO_
}

void FullSyncRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.FullSyncRsp)
  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fileinfolist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.FullSyncRsp)
}

::google::protobuf::uint8* FullSyncRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.FullSyncRsp)
  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->fileinfolist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.FullSyncRsp)
  return target;
}

size_t FullSyncRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.FullSyncRsp)
  size_t total_size = 0;

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
  {
    unsigned int count = this->fileinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FullSyncRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.FullSyncRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FullSyncRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FullSyncRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.FullSyncRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.FullSyncRsp)
    UnsafeMergeFrom(*source);
  }
}

void FullSyncRsp::MergeFrom(const FullSyncRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.FullSyncRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FullSyncRsp::UnsafeMergeFrom(const FullSyncRsp& from) {
  GOOGLE_DCHECK(&from != this);
  fileinfolist_.MergeFrom(from.fileinfolist_);
}

void FullSyncRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.FullSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FullSyncRsp::CopyFrom(const FullSyncRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.FullSyncRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FullSyncRsp::IsInitialized() const {

  return true;
}

void FullSyncRsp::Swap(FullSyncRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FullSyncRsp::InternalSwap(FullSyncRsp* other) {
  fileinfolist_.UnsafeArenaSwap(&other->fileinfolist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FullSyncRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FullSyncRsp_descriptor_;
  metadata.reflection = FullSyncRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FullSyncRsp

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 1;
int FullSyncRsp::fileinfolist_size() const {
  return fileinfolist_.size();
}
void FullSyncRsp::clear_fileinfolist() {
  fileinfolist_.Clear();
}
const ::TDFS::MESSAGE::FileInfo& FullSyncRsp::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_.Get(index);
}
::TDFS::MESSAGE::FileInfo* FullSyncRsp::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_.Mutable(index);
}
::TDFS::MESSAGE::FileInfo* FullSyncRsp::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
FullSyncRsp::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return &fileinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
FullSyncRsp::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.FullSyncRsp.FileInfoList)
  return fileinfolist_;
}

inline const FullSyncRsp* FullSyncRsp::internal_default_instance() {
  return &FullSyncRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FullSyncConform::kUiFlagFieldNumber;
const int FullSyncConform::kFileInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FullSyncConform::FullSyncConform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.FullSyncConform)
}

void FullSyncConform::InitAsDefaultInstance() {
}

FullSyncConform::FullSyncConform(const FullSyncConform& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.FullSyncConform)
}

void FullSyncConform::SharedCtor() {
  uiflag_ = 0u;
  _cached_size_ = 0;
}

FullSyncConform::~FullSyncConform() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.FullSyncConform)
  SharedDtor();
}

void FullSyncConform::SharedDtor() {
}

void FullSyncConform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FullSyncConform::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FullSyncConform_descriptor_;
}

const FullSyncConform& FullSyncConform::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FullSyncConform> FullSyncConform_default_instance_;

FullSyncConform* FullSyncConform::New(::google::protobuf::Arena* arena) const {
  FullSyncConform* n = new FullSyncConform;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FullSyncConform::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.FullSyncConform)
  uiflag_ = 0u;
  fileinfolist_.Clear();
}

bool FullSyncConform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.FullSyncConform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uiFlag = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiflag_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FileInfoList;
        break;
      }

      // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
      case 2: {
        if (tag == 18) {
         parse_FileInfoList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_FileInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fileinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_FileInfoList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.FullSyncConform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.FullSyncConform)
  return false;
#undef DO_
}

void FullSyncConform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.FullSyncConform)
  // optional uint32 uiFlag = 1;
  if (this->uiflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiflag(), output);
  }

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fileinfolist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.FullSyncConform)
}

::google::protobuf::uint8* FullSyncConform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.FullSyncConform)
  // optional uint32 uiFlag = 1;
  if (this->uiflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiflag(), target);
  }

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
  for (unsigned int i = 0, n = this->fileinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fileinfolist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.FullSyncConform)
  return target;
}

size_t FullSyncConform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.FullSyncConform)
  size_t total_size = 0;

  // optional uint32 uiFlag = 1;
  if (this->uiflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiflag());
  }

  // repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
  {
    unsigned int count = this->fileinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fileinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FullSyncConform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.FullSyncConform)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FullSyncConform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FullSyncConform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.FullSyncConform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.FullSyncConform)
    UnsafeMergeFrom(*source);
  }
}

void FullSyncConform::MergeFrom(const FullSyncConform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.FullSyncConform)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FullSyncConform::UnsafeMergeFrom(const FullSyncConform& from) {
  GOOGLE_DCHECK(&from != this);
  fileinfolist_.MergeFrom(from.fileinfolist_);
  if (from.uiflag() != 0) {
    set_uiflag(from.uiflag());
  }
}

void FullSyncConform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.FullSyncConform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FullSyncConform::CopyFrom(const FullSyncConform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.FullSyncConform)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FullSyncConform::IsInitialized() const {

  return true;
}

void FullSyncConform::Swap(FullSyncConform* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FullSyncConform::InternalSwap(FullSyncConform* other) {
  std::swap(uiflag_, other->uiflag_);
  fileinfolist_.UnsafeArenaSwap(&other->fileinfolist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FullSyncConform::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FullSyncConform_descriptor_;
  metadata.reflection = FullSyncConform_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FullSyncConform

// optional uint32 uiFlag = 1;
void FullSyncConform::clear_uiflag() {
  uiflag_ = 0u;
}
::google::protobuf::uint32 FullSyncConform::uiflag() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncConform.uiFlag)
  return uiflag_;
}
void FullSyncConform::set_uiflag(::google::protobuf::uint32 value) {
  
  uiflag_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.FullSyncConform.uiFlag)
}

// repeated .TDFS.MESSAGE.FileInfo FileInfoList = 2;
int FullSyncConform::fileinfolist_size() const {
  return fileinfolist_.size();
}
void FullSyncConform::clear_fileinfolist() {
  fileinfolist_.Clear();
}
const ::TDFS::MESSAGE::FileInfo& FullSyncConform::fileinfolist(int index) const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_.Get(index);
}
::TDFS::MESSAGE::FileInfo* FullSyncConform::mutable_fileinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_.Mutable(index);
}
::TDFS::MESSAGE::FileInfo* FullSyncConform::add_fileinfolist() {
  // @@protoc_insertion_point(field_add:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >*
FullSyncConform::mutable_fileinfolist() {
  // @@protoc_insertion_point(field_mutable_list:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return &fileinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::TDFS::MESSAGE::FileInfo >&
FullSyncConform::fileinfolist() const {
  // @@protoc_insertion_point(field_list:TDFS.MESSAGE.FullSyncConform.FileInfoList)
  return fileinfolist_;
}

inline const FullSyncConform* FullSyncConform::internal_default_instance() {
  return &FullSyncConform_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActiveReportingReq::kUiTotalFieldNumber;
const int ActiveReportingReq::kUiCurrentCompletedFieldNumber;
const int ActiveReportingReq::kCurrentCompletedFileInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActiveReportingReq::ActiveReportingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ActiveReportingReq)
}

void ActiveReportingReq::InitAsDefaultInstance() {
  currentcompletedfileinfo_ = const_cast< ::TDFS::MESSAGE::FileInfo*>(
      ::TDFS::MESSAGE::FileInfo::internal_default_instance());
}

ActiveReportingReq::ActiveReportingReq(const ActiveReportingReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ActiveReportingReq)
}

void ActiveReportingReq::SharedCtor() {
  currentcompletedfileinfo_ = NULL;
  ::memset(&uitotal_, 0, reinterpret_cast<char*>(&uicurrentcompleted_) -
    reinterpret_cast<char*>(&uitotal_) + sizeof(uicurrentcompleted_));
  _cached_size_ = 0;
}

ActiveReportingReq::~ActiveReportingReq() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ActiveReportingReq)
  SharedDtor();
}

void ActiveReportingReq::SharedDtor() {
  if (this != &ActiveReportingReq_default_instance_.get()) {
    delete currentcompletedfileinfo_;
  }
}

void ActiveReportingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveReportingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveReportingReq_descriptor_;
}

const ActiveReportingReq& ActiveReportingReq::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActiveReportingReq> ActiveReportingReq_default_instance_;

ActiveReportingReq* ActiveReportingReq::New(::google::protobuf::Arena* arena) const {
  ActiveReportingReq* n = new ActiveReportingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActiveReportingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ActiveReportingReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActiveReportingReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActiveReportingReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uitotal_, uicurrentcompleted_);
  if (GetArenaNoVirtual() == NULL && currentcompletedfileinfo_ != NULL) delete currentcompletedfileinfo_;
  currentcompletedfileinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ActiveReportingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ActiveReportingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uiTotal = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uitotal_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uiCurrentCompleted;
        break;
      }

      // optional uint32 uiCurrentCompleted = 2;
      case 2: {
        if (tag == 16) {
         parse_uiCurrentCompleted:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uicurrentcompleted_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CurrentCompletedFileInfo;
        break;
      }

      // optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_CurrentCompletedFileInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_currentcompletedfileinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ActiveReportingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ActiveReportingReq)
  return false;
#undef DO_
}

void ActiveReportingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ActiveReportingReq)
  // optional uint32 uiTotal = 1;
  if (this->uitotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uitotal(), output);
  }

  // optional uint32 uiCurrentCompleted = 2;
  if (this->uicurrentcompleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uicurrentcompleted(), output);
  }

  // optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
  if (this->has_currentcompletedfileinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->currentcompletedfileinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ActiveReportingReq)
}

::google::protobuf::uint8* ActiveReportingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ActiveReportingReq)
  // optional uint32 uiTotal = 1;
  if (this->uitotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uitotal(), target);
  }

  // optional uint32 uiCurrentCompleted = 2;
  if (this->uicurrentcompleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uicurrentcompleted(), target);
  }

  // optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
  if (this->has_currentcompletedfileinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->currentcompletedfileinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ActiveReportingReq)
  return target;
}

size_t ActiveReportingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ActiveReportingReq)
  size_t total_size = 0;

  // optional uint32 uiTotal = 1;
  if (this->uitotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uitotal());
  }

  // optional uint32 uiCurrentCompleted = 2;
  if (this->uicurrentcompleted() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uicurrentcompleted());
  }

  // optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
  if (this->has_currentcompletedfileinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->currentcompletedfileinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveReportingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ActiveReportingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActiveReportingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActiveReportingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ActiveReportingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ActiveReportingReq)
    UnsafeMergeFrom(*source);
  }
}

void ActiveReportingReq::MergeFrom(const ActiveReportingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ActiveReportingReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActiveReportingReq::UnsafeMergeFrom(const ActiveReportingReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uitotal() != 0) {
    set_uitotal(from.uitotal());
  }
  if (from.uicurrentcompleted() != 0) {
    set_uicurrentcompleted(from.uicurrentcompleted());
  }
  if (from.has_currentcompletedfileinfo()) {
    mutable_currentcompletedfileinfo()->::TDFS::MESSAGE::FileInfo::MergeFrom(from.currentcompletedfileinfo());
  }
}

void ActiveReportingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ActiveReportingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveReportingReq::CopyFrom(const ActiveReportingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ActiveReportingReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActiveReportingReq::IsInitialized() const {

  return true;
}

void ActiveReportingReq::Swap(ActiveReportingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActiveReportingReq::InternalSwap(ActiveReportingReq* other) {
  std::swap(uitotal_, other->uitotal_);
  std::swap(uicurrentcompleted_, other->uicurrentcompleted_);
  std::swap(currentcompletedfileinfo_, other->currentcompletedfileinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActiveReportingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveReportingReq_descriptor_;
  metadata.reflection = ActiveReportingReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActiveReportingReq

// optional uint32 uiTotal = 1;
void ActiveReportingReq::clear_uitotal() {
  uitotal_ = 0u;
}
::google::protobuf::uint32 ActiveReportingReq::uitotal() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingReq.uiTotal)
  return uitotal_;
}
void ActiveReportingReq::set_uitotal(::google::protobuf::uint32 value) {
  
  uitotal_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ActiveReportingReq.uiTotal)
}

// optional uint32 uiCurrentCompleted = 2;
void ActiveReportingReq::clear_uicurrentcompleted() {
  uicurrentcompleted_ = 0u;
}
::google::protobuf::uint32 ActiveReportingReq::uicurrentcompleted() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingReq.uiCurrentCompleted)
  return uicurrentcompleted_;
}
void ActiveReportingReq::set_uicurrentcompleted(::google::protobuf::uint32 value) {
  
  uicurrentcompleted_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ActiveReportingReq.uiCurrentCompleted)
}

// optional .TDFS.MESSAGE.FileInfo CurrentCompletedFileInfo = 3;
bool ActiveReportingReq::has_currentcompletedfileinfo() const {
  return this != internal_default_instance() && currentcompletedfileinfo_ != NULL;
}
void ActiveReportingReq::clear_currentcompletedfileinfo() {
  if (GetArenaNoVirtual() == NULL && currentcompletedfileinfo_ != NULL) delete currentcompletedfileinfo_;
  currentcompletedfileinfo_ = NULL;
}
const ::TDFS::MESSAGE::FileInfo& ActiveReportingReq::currentcompletedfileinfo() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
  return currentcompletedfileinfo_ != NULL ? *currentcompletedfileinfo_
                         : *::TDFS::MESSAGE::FileInfo::internal_default_instance();
}
::TDFS::MESSAGE::FileInfo* ActiveReportingReq::mutable_currentcompletedfileinfo() {
  
  if (currentcompletedfileinfo_ == NULL) {
    currentcompletedfileinfo_ = new ::TDFS::MESSAGE::FileInfo;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
  return currentcompletedfileinfo_;
}
::TDFS::MESSAGE::FileInfo* ActiveReportingReq::release_currentcompletedfileinfo() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
  
  ::TDFS::MESSAGE::FileInfo* temp = currentcompletedfileinfo_;
  currentcompletedfileinfo_ = NULL;
  return temp;
}
void ActiveReportingReq::set_allocated_currentcompletedfileinfo(::TDFS::MESSAGE::FileInfo* currentcompletedfileinfo) {
  delete currentcompletedfileinfo_;
  currentcompletedfileinfo_ = currentcompletedfileinfo;
  if (currentcompletedfileinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ActiveReportingReq.CurrentCompletedFileInfo)
}

inline const ActiveReportingReq* ActiveReportingReq::internal_default_instance() {
  return &ActiveReportingReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActiveReportingRsp::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActiveReportingRsp::ActiveReportingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.ActiveReportingRsp)
}

void ActiveReportingRsp::InitAsDefaultInstance() {
}

ActiveReportingRsp::ActiveReportingRsp(const ActiveReportingRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.ActiveReportingRsp)
}

void ActiveReportingRsp::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ActiveReportingRsp::~ActiveReportingRsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.ActiveReportingRsp)
  SharedDtor();
}

void ActiveReportingRsp::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActiveReportingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveReportingRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveReportingRsp_descriptor_;
}

const ActiveReportingRsp& ActiveReportingRsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActiveReportingRsp> ActiveReportingRsp_default_instance_;

ActiveReportingRsp* ActiveReportingRsp::New(::google::protobuf::Arena* arena) const {
  ActiveReportingRsp* n = new ActiveReportingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActiveReportingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.ActiveReportingRsp)
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ActiveReportingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.ActiveReportingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.ActiveReportingRsp.strValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.ActiveReportingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.ActiveReportingRsp)
  return false;
#undef DO_
}

void ActiveReportingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.ActiveReportingRsp)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ActiveReportingRsp.strValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.ActiveReportingRsp)
}

::google::protobuf::uint8* ActiveReportingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.ActiveReportingRsp)
  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.ActiveReportingRsp.strValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.ActiveReportingRsp)
  return target;
}

size_t ActiveReportingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.ActiveReportingRsp)
  size_t total_size = 0;

  // optional string strValue = 1;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveReportingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.ActiveReportingRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActiveReportingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActiveReportingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.ActiveReportingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.ActiveReportingRsp)
    UnsafeMergeFrom(*source);
  }
}

void ActiveReportingRsp::MergeFrom(const ActiveReportingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.ActiveReportingRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActiveReportingRsp::UnsafeMergeFrom(const ActiveReportingRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ActiveReportingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.ActiveReportingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveReportingRsp::CopyFrom(const ActiveReportingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.ActiveReportingRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActiveReportingRsp::IsInitialized() const {

  return true;
}

void ActiveReportingRsp::Swap(ActiveReportingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActiveReportingRsp::InternalSwap(ActiveReportingRsp* other) {
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActiveReportingRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveReportingRsp_descriptor_;
  metadata.reflection = ActiveReportingRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActiveReportingRsp

// optional string strValue = 1;
void ActiveReportingRsp::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ActiveReportingRsp::strvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.ActiveReportingRsp.strValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActiveReportingRsp::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}
void ActiveReportingRsp::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}
void ActiveReportingRsp::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}
::std::string* ActiveReportingRsp::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.ActiveReportingRsp.strValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActiveReportingRsp::release_strvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.ActiveReportingRsp.strValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActiveReportingRsp::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.ActiveReportingRsp.strValue)
}

inline const ActiveReportingRsp* ActiveReportingRsp::internal_default_instance() {
  return &ActiveReportingRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req::kLoginReqValueFieldNumber;
const int Req::kLoginoutReqValueFieldNumber;
const int Req::kConfigInfoReqValueFieldNumber;
const int Req::kShakehandReqValueFieldNumber;
const int Req::kGetSyncAddressReqValueFieldNumber;
const int Req::kSyncFileListPendingReqValueFieldNumber;
const int Req::kControlCMDReqValueFieldNumber;
const int Req::kGetFileInfoReqValueFieldNumber;
const int Req::kFullSyncReqValueFieldNumber;
const int Req::kFullSyncConformValueFieldNumber;
const int Req::kActiveReportingReqValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req::Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.Req)
}

void Req::InitAsDefaultInstance() {
  loginreqvalue_ = const_cast< ::TDFS::MESSAGE::LoginReq*>(
      ::TDFS::MESSAGE::LoginReq::internal_default_instance());
  loginoutreqvalue_ = const_cast< ::TDFS::MESSAGE::LoginoutReq*>(
      ::TDFS::MESSAGE::LoginoutReq::internal_default_instance());
  configinforeqvalue_ = const_cast< ::TDFS::MESSAGE::ConfigInfoReq*>(
      ::TDFS::MESSAGE::ConfigInfoReq::internal_default_instance());
  shakehandreqvalue_ = const_cast< ::TDFS::MESSAGE::ShakehandReq*>(
      ::TDFS::MESSAGE::ShakehandReq::internal_default_instance());
  getsyncaddressreqvalue_ = const_cast< ::TDFS::MESSAGE::GetSyncAddressReq*>(
      ::TDFS::MESSAGE::GetSyncAddressReq::internal_default_instance());
  syncfilelistpendingreqvalue_ = const_cast< ::TDFS::MESSAGE::SyncFileListPendingReq*>(
      ::TDFS::MESSAGE::SyncFileListPendingReq::internal_default_instance());
  controlcmdreqvalue_ = const_cast< ::TDFS::MESSAGE::ControlCMDReq*>(
      ::TDFS::MESSAGE::ControlCMDReq::internal_default_instance());
  getfileinforeqvalue_ = const_cast< ::TDFS::MESSAGE::GetFileInfoReq*>(
      ::TDFS::MESSAGE::GetFileInfoReq::internal_default_instance());
  fullsyncreqvalue_ = const_cast< ::TDFS::MESSAGE::FullSyncReq*>(
      ::TDFS::MESSAGE::FullSyncReq::internal_default_instance());
  fullsyncconformvalue_ = const_cast< ::TDFS::MESSAGE::FullSyncConform*>(
      ::TDFS::MESSAGE::FullSyncConform::internal_default_instance());
  activereportingreqvalue_ = const_cast< ::TDFS::MESSAGE::ActiveReportingReq*>(
      ::TDFS::MESSAGE::ActiveReportingReq::internal_default_instance());
}

Req::Req(const Req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.Req)
}

void Req::SharedCtor() {
  loginreqvalue_ = NULL;
  loginoutreqvalue_ = NULL;
  configinforeqvalue_ = NULL;
  shakehandreqvalue_ = NULL;
  getsyncaddressreqvalue_ = NULL;
  syncfilelistpendingreqvalue_ = NULL;
  controlcmdreqvalue_ = NULL;
  getfileinforeqvalue_ = NULL;
  fullsyncreqvalue_ = NULL;
  fullsyncconformvalue_ = NULL;
  activereportingreqvalue_ = NULL;
  _cached_size_ = 0;
}

Req::~Req() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.Req)
  SharedDtor();
}

void Req::SharedDtor() {
  if (this != &Req_default_instance_.get()) {
    delete loginreqvalue_;
    delete loginoutreqvalue_;
    delete configinforeqvalue_;
    delete shakehandreqvalue_;
    delete getsyncaddressreqvalue_;
    delete syncfilelistpendingreqvalue_;
    delete controlcmdreqvalue_;
    delete getfileinforeqvalue_;
    delete fullsyncreqvalue_;
    delete fullsyncconformvalue_;
    delete activereportingreqvalue_;
  }
}

void Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Req_descriptor_;
}

const Req& Req::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Req> Req_default_instance_;

Req* Req::New(::google::protobuf::Arena* arena) const {
  Req* n = new Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Req::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.Req)
  if (GetArenaNoVirtual() == NULL && loginreqvalue_ != NULL) delete loginreqvalue_;
  loginreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginoutreqvalue_ != NULL) delete loginoutreqvalue_;
  loginoutreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforeqvalue_ != NULL) delete configinforeqvalue_;
  configinforeqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandreqvalue_ != NULL) delete shakehandreqvalue_;
  shakehandreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && getsyncaddressreqvalue_ != NULL) delete getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && syncfilelistpendingreqvalue_ != NULL) delete syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && controlcmdreqvalue_ != NULL) delete controlcmdreqvalue_;
  controlcmdreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && getfileinforeqvalue_ != NULL) delete getfileinforeqvalue_;
  getfileinforeqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && fullsyncreqvalue_ != NULL) delete fullsyncreqvalue_;
  fullsyncreqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && fullsyncconformvalue_ != NULL) delete fullsyncconformvalue_;
  fullsyncconformvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && activereportingreqvalue_ != NULL) delete activereportingreqvalue_;
  activereportingreqvalue_ = NULL;
}

bool Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LoginoutReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
      case 2: {
        if (tag == 18) {
         parse_LoginoutReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginoutreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ConfigInfoReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
      case 3: {
        if (tag == 26) {
         parse_ConfigInfoReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforeqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ShakehandReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
      case 4: {
        if (tag == 34) {
         parse_ShakehandReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_GetSyncAddressReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
      case 5: {
        if (tag == 42) {
         parse_GetSyncAddressReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsyncaddressreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_SyncFileListPendingReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
      case 6: {
        if (tag == 50) {
         parse_SyncFileListPendingReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syncfilelistpendingreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ControlCMDReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
      case 7: {
        if (tag == 58) {
         parse_ControlCMDReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controlcmdreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_GetFileInfoReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
      case 8: {
        if (tag == 66) {
         parse_GetFileInfoReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfileinforeqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_FullSyncReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
      case 9: {
        if (tag == 74) {
         parse_FullSyncReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fullsyncreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_FullSyncConformValue;
        break;
      }

      // optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
      case 10: {
        if (tag == 82) {
         parse_FullSyncConformValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fullsyncconformvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_ActiveReportingReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
      case 11: {
        if (tag == 90) {
         parse_ActiveReportingReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activereportingreqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.Req)
  return false;
#undef DO_
}

void Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.Req)
  // optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
  if (this->has_loginreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->loginreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
  if (this->has_loginoutreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->loginoutreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
  if (this->has_configinforeqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->configinforeqvalue_, output);
  }

  // optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
  if (this->has_shakehandreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->shakehandreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
  if (this->has_getsyncaddressreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->getsyncaddressreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
  if (this->has_syncfilelistpendingreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->syncfilelistpendingreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
  if (this->has_controlcmdreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->controlcmdreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
  if (this->has_getfileinforeqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->getfileinforeqvalue_, output);
  }

  // optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
  if (this->has_fullsyncreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->fullsyncreqvalue_, output);
  }

  // optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
  if (this->has_fullsyncconformvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->fullsyncconformvalue_, output);
  }

  // optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
  if (this->has_activereportingreqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->activereportingreqvalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.Req)
}

::google::protobuf::uint8* Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.Req)
  // optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
  if (this->has_loginreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->loginreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
  if (this->has_loginoutreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->loginoutreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
  if (this->has_configinforeqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->configinforeqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
  if (this->has_shakehandreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->shakehandreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
  if (this->has_getsyncaddressreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->getsyncaddressreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
  if (this->has_syncfilelistpendingreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->syncfilelistpendingreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
  if (this->has_controlcmdreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->controlcmdreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
  if (this->has_getfileinforeqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->getfileinforeqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
  if (this->has_fullsyncreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->fullsyncreqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
  if (this->has_fullsyncconformvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->fullsyncconformvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
  if (this->has_activereportingreqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->activereportingreqvalue_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.Req)
  return target;
}

size_t Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.Req)
  size_t total_size = 0;

  // optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
  if (this->has_loginreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginreqvalue_);
  }

  // optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
  if (this->has_loginoutreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginoutreqvalue_);
  }

  // optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
  if (this->has_configinforeqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforeqvalue_);
  }

  // optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
  if (this->has_shakehandreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandreqvalue_);
  }

  // optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
  if (this->has_getsyncaddressreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getsyncaddressreqvalue_);
  }

  // optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
  if (this->has_syncfilelistpendingreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->syncfilelistpendingreqvalue_);
  }

  // optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
  if (this->has_controlcmdreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->controlcmdreqvalue_);
  }

  // optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
  if (this->has_getfileinforeqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getfileinforeqvalue_);
  }

  // optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
  if (this->has_fullsyncreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fullsyncreqvalue_);
  }

  // optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
  if (this->has_fullsyncconformvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fullsyncconformvalue_);
  }

  // optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
  if (this->has_activereportingreqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->activereportingreqvalue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.Req)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.Req)
    UnsafeMergeFrom(*source);
  }
}

void Req::MergeFrom(const Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.Req)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Req::UnsafeMergeFrom(const Req& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_loginreqvalue()) {
    mutable_loginreqvalue()->::TDFS::MESSAGE::LoginReq::MergeFrom(from.loginreqvalue());
  }
  if (from.has_loginoutreqvalue()) {
    mutable_loginoutreqvalue()->::TDFS::MESSAGE::LoginoutReq::MergeFrom(from.loginoutreqvalue());
  }
  if (from.has_configinforeqvalue()) {
    mutable_configinforeqvalue()->::TDFS::MESSAGE::ConfigInfoReq::MergeFrom(from.configinforeqvalue());
  }
  if (from.has_shakehandreqvalue()) {
    mutable_shakehandreqvalue()->::TDFS::MESSAGE::ShakehandReq::MergeFrom(from.shakehandreqvalue());
  }
  if (from.has_getsyncaddressreqvalue()) {
    mutable_getsyncaddressreqvalue()->::TDFS::MESSAGE::GetSyncAddressReq::MergeFrom(from.getsyncaddressreqvalue());
  }
  if (from.has_syncfilelistpendingreqvalue()) {
    mutable_syncfilelistpendingreqvalue()->::TDFS::MESSAGE::SyncFileListPendingReq::MergeFrom(from.syncfilelistpendingreqvalue());
  }
  if (from.has_controlcmdreqvalue()) {
    mutable_controlcmdreqvalue()->::TDFS::MESSAGE::ControlCMDReq::MergeFrom(from.controlcmdreqvalue());
  }
  if (from.has_getfileinforeqvalue()) {
    mutable_getfileinforeqvalue()->::TDFS::MESSAGE::GetFileInfoReq::MergeFrom(from.getfileinforeqvalue());
  }
  if (from.has_fullsyncreqvalue()) {
    mutable_fullsyncreqvalue()->::TDFS::MESSAGE::FullSyncReq::MergeFrom(from.fullsyncreqvalue());
  }
  if (from.has_fullsyncconformvalue()) {
    mutable_fullsyncconformvalue()->::TDFS::MESSAGE::FullSyncConform::MergeFrom(from.fullsyncconformvalue());
  }
  if (from.has_activereportingreqvalue()) {
    mutable_activereportingreqvalue()->::TDFS::MESSAGE::ActiveReportingReq::MergeFrom(from.activereportingreqvalue());
  }
}

void Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req::CopyFrom(const Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.Req)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Req::IsInitialized() const {

  return true;
}

void Req::Swap(Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req::InternalSwap(Req* other) {
  std::swap(loginreqvalue_, other->loginreqvalue_);
  std::swap(loginoutreqvalue_, other->loginoutreqvalue_);
  std::swap(configinforeqvalue_, other->configinforeqvalue_);
  std::swap(shakehandreqvalue_, other->shakehandreqvalue_);
  std::swap(getsyncaddressreqvalue_, other->getsyncaddressreqvalue_);
  std::swap(syncfilelistpendingreqvalue_, other->syncfilelistpendingreqvalue_);
  std::swap(controlcmdreqvalue_, other->controlcmdreqvalue_);
  std::swap(getfileinforeqvalue_, other->getfileinforeqvalue_);
  std::swap(fullsyncreqvalue_, other->fullsyncreqvalue_);
  std::swap(fullsyncconformvalue_, other->fullsyncconformvalue_);
  std::swap(activereportingreqvalue_, other->activereportingreqvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Req_descriptor_;
  metadata.reflection = Req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Req

// optional .TDFS.MESSAGE.LoginReq LoginReqValue = 1;
bool Req::has_loginreqvalue() const {
  return this != internal_default_instance() && loginreqvalue_ != NULL;
}
void Req::clear_loginreqvalue() {
  if (GetArenaNoVirtual() == NULL && loginreqvalue_ != NULL) delete loginreqvalue_;
  loginreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::LoginReq& Req::loginreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.LoginReqValue)
  return loginreqvalue_ != NULL ? *loginreqvalue_
                         : *::TDFS::MESSAGE::LoginReq::internal_default_instance();
}
::TDFS::MESSAGE::LoginReq* Req::mutable_loginreqvalue() {
  
  if (loginreqvalue_ == NULL) {
    loginreqvalue_ = new ::TDFS::MESSAGE::LoginReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.LoginReqValue)
  return loginreqvalue_;
}
::TDFS::MESSAGE::LoginReq* Req::release_loginreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.LoginReqValue)
  
  ::TDFS::MESSAGE::LoginReq* temp = loginreqvalue_;
  loginreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_loginreqvalue(::TDFS::MESSAGE::LoginReq* loginreqvalue) {
  delete loginreqvalue_;
  loginreqvalue_ = loginreqvalue;
  if (loginreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.LoginReqValue)
}

// optional .TDFS.MESSAGE.LoginoutReq LoginoutReqValue = 2;
bool Req::has_loginoutreqvalue() const {
  return this != internal_default_instance() && loginoutreqvalue_ != NULL;
}
void Req::clear_loginoutreqvalue() {
  if (GetArenaNoVirtual() == NULL && loginoutreqvalue_ != NULL) delete loginoutreqvalue_;
  loginoutreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::LoginoutReq& Req::loginoutreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.LoginoutReqValue)
  return loginoutreqvalue_ != NULL ? *loginoutreqvalue_
                         : *::TDFS::MESSAGE::LoginoutReq::internal_default_instance();
}
::TDFS::MESSAGE::LoginoutReq* Req::mutable_loginoutreqvalue() {
  
  if (loginoutreqvalue_ == NULL) {
    loginoutreqvalue_ = new ::TDFS::MESSAGE::LoginoutReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.LoginoutReqValue)
  return loginoutreqvalue_;
}
::TDFS::MESSAGE::LoginoutReq* Req::release_loginoutreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.LoginoutReqValue)
  
  ::TDFS::MESSAGE::LoginoutReq* temp = loginoutreqvalue_;
  loginoutreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_loginoutreqvalue(::TDFS::MESSAGE::LoginoutReq* loginoutreqvalue) {
  delete loginoutreqvalue_;
  loginoutreqvalue_ = loginoutreqvalue;
  if (loginoutreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.LoginoutReqValue)
}

// optional .TDFS.MESSAGE.ConfigInfoReq ConfigInfoReqValue = 3;
bool Req::has_configinforeqvalue() const {
  return this != internal_default_instance() && configinforeqvalue_ != NULL;
}
void Req::clear_configinforeqvalue() {
  if (GetArenaNoVirtual() == NULL && configinforeqvalue_ != NULL) delete configinforeqvalue_;
  configinforeqvalue_ = NULL;
}
const ::TDFS::MESSAGE::ConfigInfoReq& Req::configinforeqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ConfigInfoReqValue)
  return configinforeqvalue_ != NULL ? *configinforeqvalue_
                         : *::TDFS::MESSAGE::ConfigInfoReq::internal_default_instance();
}
::TDFS::MESSAGE::ConfigInfoReq* Req::mutable_configinforeqvalue() {
  
  if (configinforeqvalue_ == NULL) {
    configinforeqvalue_ = new ::TDFS::MESSAGE::ConfigInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ConfigInfoReqValue)
  return configinforeqvalue_;
}
::TDFS::MESSAGE::ConfigInfoReq* Req::release_configinforeqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ConfigInfoReqValue)
  
  ::TDFS::MESSAGE::ConfigInfoReq* temp = configinforeqvalue_;
  configinforeqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_configinforeqvalue(::TDFS::MESSAGE::ConfigInfoReq* configinforeqvalue) {
  delete configinforeqvalue_;
  configinforeqvalue_ = configinforeqvalue;
  if (configinforeqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ConfigInfoReqValue)
}

// optional .TDFS.MESSAGE.ShakehandReq ShakehandReqValue = 4;
bool Req::has_shakehandreqvalue() const {
  return this != internal_default_instance() && shakehandreqvalue_ != NULL;
}
void Req::clear_shakehandreqvalue() {
  if (GetArenaNoVirtual() == NULL && shakehandreqvalue_ != NULL) delete shakehandreqvalue_;
  shakehandreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::ShakehandReq& Req::shakehandreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ShakehandReqValue)
  return shakehandreqvalue_ != NULL ? *shakehandreqvalue_
                         : *::TDFS::MESSAGE::ShakehandReq::internal_default_instance();
}
::TDFS::MESSAGE::ShakehandReq* Req::mutable_shakehandreqvalue() {
  
  if (shakehandreqvalue_ == NULL) {
    shakehandreqvalue_ = new ::TDFS::MESSAGE::ShakehandReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ShakehandReqValue)
  return shakehandreqvalue_;
}
::TDFS::MESSAGE::ShakehandReq* Req::release_shakehandreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ShakehandReqValue)
  
  ::TDFS::MESSAGE::ShakehandReq* temp = shakehandreqvalue_;
  shakehandreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_shakehandreqvalue(::TDFS::MESSAGE::ShakehandReq* shakehandreqvalue) {
  delete shakehandreqvalue_;
  shakehandreqvalue_ = shakehandreqvalue;
  if (shakehandreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ShakehandReqValue)
}

// optional .TDFS.MESSAGE.GetSyncAddressReq GetSyncAddressReqValue = 5;
bool Req::has_getsyncaddressreqvalue() const {
  return this != internal_default_instance() && getsyncaddressreqvalue_ != NULL;
}
void Req::clear_getsyncaddressreqvalue() {
  if (GetArenaNoVirtual() == NULL && getsyncaddressreqvalue_ != NULL) delete getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::GetSyncAddressReq& Req::getsyncaddressreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
  return getsyncaddressreqvalue_ != NULL ? *getsyncaddressreqvalue_
                         : *::TDFS::MESSAGE::GetSyncAddressReq::internal_default_instance();
}
::TDFS::MESSAGE::GetSyncAddressReq* Req::mutable_getsyncaddressreqvalue() {
  
  if (getsyncaddressreqvalue_ == NULL) {
    getsyncaddressreqvalue_ = new ::TDFS::MESSAGE::GetSyncAddressReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
  return getsyncaddressreqvalue_;
}
::TDFS::MESSAGE::GetSyncAddressReq* Req::release_getsyncaddressreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
  
  ::TDFS::MESSAGE::GetSyncAddressReq* temp = getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_getsyncaddressreqvalue(::TDFS::MESSAGE::GetSyncAddressReq* getsyncaddressreqvalue) {
  delete getsyncaddressreqvalue_;
  getsyncaddressreqvalue_ = getsyncaddressreqvalue;
  if (getsyncaddressreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.GetSyncAddressReqValue)
}

// optional .TDFS.MESSAGE.SyncFileListPendingReq SyncFileListPendingReqValue = 6;
bool Req::has_syncfilelistpendingreqvalue() const {
  return this != internal_default_instance() && syncfilelistpendingreqvalue_ != NULL;
}
void Req::clear_syncfilelistpendingreqvalue() {
  if (GetArenaNoVirtual() == NULL && syncfilelistpendingreqvalue_ != NULL) delete syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::SyncFileListPendingReq& Req::syncfilelistpendingreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
  return syncfilelistpendingreqvalue_ != NULL ? *syncfilelistpendingreqvalue_
                         : *::TDFS::MESSAGE::SyncFileListPendingReq::internal_default_instance();
}
::TDFS::MESSAGE::SyncFileListPendingReq* Req::mutable_syncfilelistpendingreqvalue() {
  
  if (syncfilelistpendingreqvalue_ == NULL) {
    syncfilelistpendingreqvalue_ = new ::TDFS::MESSAGE::SyncFileListPendingReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
  return syncfilelistpendingreqvalue_;
}
::TDFS::MESSAGE::SyncFileListPendingReq* Req::release_syncfilelistpendingreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
  
  ::TDFS::MESSAGE::SyncFileListPendingReq* temp = syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_syncfilelistpendingreqvalue(::TDFS::MESSAGE::SyncFileListPendingReq* syncfilelistpendingreqvalue) {
  delete syncfilelistpendingreqvalue_;
  syncfilelistpendingreqvalue_ = syncfilelistpendingreqvalue;
  if (syncfilelistpendingreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.SyncFileListPendingReqValue)
}

// optional .TDFS.MESSAGE.ControlCMDReq ControlCMDReqValue = 7;
bool Req::has_controlcmdreqvalue() const {
  return this != internal_default_instance() && controlcmdreqvalue_ != NULL;
}
void Req::clear_controlcmdreqvalue() {
  if (GetArenaNoVirtual() == NULL && controlcmdreqvalue_ != NULL) delete controlcmdreqvalue_;
  controlcmdreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::ControlCMDReq& Req::controlcmdreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ControlCMDReqValue)
  return controlcmdreqvalue_ != NULL ? *controlcmdreqvalue_
                         : *::TDFS::MESSAGE::ControlCMDReq::internal_default_instance();
}
::TDFS::MESSAGE::ControlCMDReq* Req::mutable_controlcmdreqvalue() {
  
  if (controlcmdreqvalue_ == NULL) {
    controlcmdreqvalue_ = new ::TDFS::MESSAGE::ControlCMDReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ControlCMDReqValue)
  return controlcmdreqvalue_;
}
::TDFS::MESSAGE::ControlCMDReq* Req::release_controlcmdreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ControlCMDReqValue)
  
  ::TDFS::MESSAGE::ControlCMDReq* temp = controlcmdreqvalue_;
  controlcmdreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_controlcmdreqvalue(::TDFS::MESSAGE::ControlCMDReq* controlcmdreqvalue) {
  delete controlcmdreqvalue_;
  controlcmdreqvalue_ = controlcmdreqvalue;
  if (controlcmdreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ControlCMDReqValue)
}

// optional .TDFS.MESSAGE.GetFileInfoReq GetFileInfoReqValue = 8;
bool Req::has_getfileinforeqvalue() const {
  return this != internal_default_instance() && getfileinforeqvalue_ != NULL;
}
void Req::clear_getfileinforeqvalue() {
  if (GetArenaNoVirtual() == NULL && getfileinforeqvalue_ != NULL) delete getfileinforeqvalue_;
  getfileinforeqvalue_ = NULL;
}
const ::TDFS::MESSAGE::GetFileInfoReq& Req::getfileinforeqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.GetFileInfoReqValue)
  return getfileinforeqvalue_ != NULL ? *getfileinforeqvalue_
                         : *::TDFS::MESSAGE::GetFileInfoReq::internal_default_instance();
}
::TDFS::MESSAGE::GetFileInfoReq* Req::mutable_getfileinforeqvalue() {
  
  if (getfileinforeqvalue_ == NULL) {
    getfileinforeqvalue_ = new ::TDFS::MESSAGE::GetFileInfoReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.GetFileInfoReqValue)
  return getfileinforeqvalue_;
}
::TDFS::MESSAGE::GetFileInfoReq* Req::release_getfileinforeqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.GetFileInfoReqValue)
  
  ::TDFS::MESSAGE::GetFileInfoReq* temp = getfileinforeqvalue_;
  getfileinforeqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_getfileinforeqvalue(::TDFS::MESSAGE::GetFileInfoReq* getfileinforeqvalue) {
  delete getfileinforeqvalue_;
  getfileinforeqvalue_ = getfileinforeqvalue;
  if (getfileinforeqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.GetFileInfoReqValue)
}

// optional .TDFS.MESSAGE.FullSyncReq FullSyncReqValue = 9;
bool Req::has_fullsyncreqvalue() const {
  return this != internal_default_instance() && fullsyncreqvalue_ != NULL;
}
void Req::clear_fullsyncreqvalue() {
  if (GetArenaNoVirtual() == NULL && fullsyncreqvalue_ != NULL) delete fullsyncreqvalue_;
  fullsyncreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::FullSyncReq& Req::fullsyncreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.FullSyncReqValue)
  return fullsyncreqvalue_ != NULL ? *fullsyncreqvalue_
                         : *::TDFS::MESSAGE::FullSyncReq::internal_default_instance();
}
::TDFS::MESSAGE::FullSyncReq* Req::mutable_fullsyncreqvalue() {
  
  if (fullsyncreqvalue_ == NULL) {
    fullsyncreqvalue_ = new ::TDFS::MESSAGE::FullSyncReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.FullSyncReqValue)
  return fullsyncreqvalue_;
}
::TDFS::MESSAGE::FullSyncReq* Req::release_fullsyncreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.FullSyncReqValue)
  
  ::TDFS::MESSAGE::FullSyncReq* temp = fullsyncreqvalue_;
  fullsyncreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_fullsyncreqvalue(::TDFS::MESSAGE::FullSyncReq* fullsyncreqvalue) {
  delete fullsyncreqvalue_;
  fullsyncreqvalue_ = fullsyncreqvalue;
  if (fullsyncreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.FullSyncReqValue)
}

// optional .TDFS.MESSAGE.FullSyncConform FullSyncConformValue = 10;
bool Req::has_fullsyncconformvalue() const {
  return this != internal_default_instance() && fullsyncconformvalue_ != NULL;
}
void Req::clear_fullsyncconformvalue() {
  if (GetArenaNoVirtual() == NULL && fullsyncconformvalue_ != NULL) delete fullsyncconformvalue_;
  fullsyncconformvalue_ = NULL;
}
const ::TDFS::MESSAGE::FullSyncConform& Req::fullsyncconformvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.FullSyncConformValue)
  return fullsyncconformvalue_ != NULL ? *fullsyncconformvalue_
                         : *::TDFS::MESSAGE::FullSyncConform::internal_default_instance();
}
::TDFS::MESSAGE::FullSyncConform* Req::mutable_fullsyncconformvalue() {
  
  if (fullsyncconformvalue_ == NULL) {
    fullsyncconformvalue_ = new ::TDFS::MESSAGE::FullSyncConform;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.FullSyncConformValue)
  return fullsyncconformvalue_;
}
::TDFS::MESSAGE::FullSyncConform* Req::release_fullsyncconformvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.FullSyncConformValue)
  
  ::TDFS::MESSAGE::FullSyncConform* temp = fullsyncconformvalue_;
  fullsyncconformvalue_ = NULL;
  return temp;
}
void Req::set_allocated_fullsyncconformvalue(::TDFS::MESSAGE::FullSyncConform* fullsyncconformvalue) {
  delete fullsyncconformvalue_;
  fullsyncconformvalue_ = fullsyncconformvalue;
  if (fullsyncconformvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.FullSyncConformValue)
}

// optional .TDFS.MESSAGE.ActiveReportingReq ActiveReportingReqValue = 11;
bool Req::has_activereportingreqvalue() const {
  return this != internal_default_instance() && activereportingreqvalue_ != NULL;
}
void Req::clear_activereportingreqvalue() {
  if (GetArenaNoVirtual() == NULL && activereportingreqvalue_ != NULL) delete activereportingreqvalue_;
  activereportingreqvalue_ = NULL;
}
const ::TDFS::MESSAGE::ActiveReportingReq& Req::activereportingreqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Req.ActiveReportingReqValue)
  return activereportingreqvalue_ != NULL ? *activereportingreqvalue_
                         : *::TDFS::MESSAGE::ActiveReportingReq::internal_default_instance();
}
::TDFS::MESSAGE::ActiveReportingReq* Req::mutable_activereportingreqvalue() {
  
  if (activereportingreqvalue_ == NULL) {
    activereportingreqvalue_ = new ::TDFS::MESSAGE::ActiveReportingReq;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Req.ActiveReportingReqValue)
  return activereportingreqvalue_;
}
::TDFS::MESSAGE::ActiveReportingReq* Req::release_activereportingreqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Req.ActiveReportingReqValue)
  
  ::TDFS::MESSAGE::ActiveReportingReq* temp = activereportingreqvalue_;
  activereportingreqvalue_ = NULL;
  return temp;
}
void Req::set_allocated_activereportingreqvalue(::TDFS::MESSAGE::ActiveReportingReq* activereportingreqvalue) {
  delete activereportingreqvalue_;
  activereportingreqvalue_ = activereportingreqvalue;
  if (activereportingreqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Req.ActiveReportingReqValue)
}

inline const Req* Req::internal_default_instance() {
  return &Req_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp::kIRetcodeFieldNumber;
const int Rsp::kStrRetMsgFieldNumber;
const int Rsp::kLoginRspValueFieldNumber;
const int Rsp::kLoginoutRspValueFieldNumber;
const int Rsp::kConfigInfoRspValueFieldNumber;
const int Rsp::kShakehandRspValueFieldNumber;
const int Rsp::kGetSyncAddressRspValueFieldNumber;
const int Rsp::kSyncFileListPendingRspValueFieldNumber;
const int Rsp::kControlCMDRspValueFieldNumber;
const int Rsp::kGetFileInfoRspValueFieldNumber;
const int Rsp::kFullSyncRspValueFieldNumber;
const int Rsp::kActiveReportingRspValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp::Rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.Rsp)
}

void Rsp::InitAsDefaultInstance() {
  loginrspvalue_ = const_cast< ::TDFS::MESSAGE::LoginRsp*>(
      ::TDFS::MESSAGE::LoginRsp::internal_default_instance());
  loginoutrspvalue_ = const_cast< ::TDFS::MESSAGE::LoginoutRsp*>(
      ::TDFS::MESSAGE::LoginoutRsp::internal_default_instance());
  configinforspvalue_ = const_cast< ::TDFS::MESSAGE::ConfigInfoRsp*>(
      ::TDFS::MESSAGE::ConfigInfoRsp::internal_default_instance());
  shakehandrspvalue_ = const_cast< ::TDFS::MESSAGE::ShakehandRsp*>(
      ::TDFS::MESSAGE::ShakehandRsp::internal_default_instance());
  getsyncaddressrspvalue_ = const_cast< ::TDFS::MESSAGE::GetSyncAddressRsp*>(
      ::TDFS::MESSAGE::GetSyncAddressRsp::internal_default_instance());
  syncfilelistpendingrspvalue_ = const_cast< ::TDFS::MESSAGE::SyncFileListPendingRsp*>(
      ::TDFS::MESSAGE::SyncFileListPendingRsp::internal_default_instance());
  controlcmdrspvalue_ = const_cast< ::TDFS::MESSAGE::ControlCMDRsp*>(
      ::TDFS::MESSAGE::ControlCMDRsp::internal_default_instance());
  getfileinforspvalue_ = const_cast< ::TDFS::MESSAGE::GetFileInfoRsp*>(
      ::TDFS::MESSAGE::GetFileInfoRsp::internal_default_instance());
  fullsyncrspvalue_ = const_cast< ::TDFS::MESSAGE::FullSyncRsp*>(
      ::TDFS::MESSAGE::FullSyncRsp::internal_default_instance());
  activereportingrspvalue_ = const_cast< ::TDFS::MESSAGE::ActiveReportingRsp*>(
      ::TDFS::MESSAGE::ActiveReportingRsp::internal_default_instance());
}

Rsp::Rsp(const Rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.Rsp)
}

void Rsp::SharedCtor() {
  strretmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginrspvalue_ = NULL;
  loginoutrspvalue_ = NULL;
  configinforspvalue_ = NULL;
  shakehandrspvalue_ = NULL;
  getsyncaddressrspvalue_ = NULL;
  syncfilelistpendingrspvalue_ = NULL;
  controlcmdrspvalue_ = NULL;
  getfileinforspvalue_ = NULL;
  fullsyncrspvalue_ = NULL;
  activereportingrspvalue_ = NULL;
  iretcode_ = 0;
  _cached_size_ = 0;
}

Rsp::~Rsp() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.Rsp)
  SharedDtor();
}

void Rsp::SharedDtor() {
  strretmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Rsp_default_instance_.get()) {
    delete loginrspvalue_;
    delete loginoutrspvalue_;
    delete configinforspvalue_;
    delete shakehandrspvalue_;
    delete getsyncaddressrspvalue_;
    delete syncfilelistpendingrspvalue_;
    delete controlcmdrspvalue_;
    delete getfileinforspvalue_;
    delete fullsyncrspvalue_;
    delete activereportingrspvalue_;
  }
}

void Rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rsp_descriptor_;
}

const Rsp& Rsp::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Rsp> Rsp_default_instance_;

Rsp* Rsp::New(::google::protobuf::Arena* arena) const {
  Rsp* n = new Rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.Rsp)
  iretcode_ = 0;
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && loginrspvalue_ != NULL) delete loginrspvalue_;
  loginrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginoutrspvalue_ != NULL) delete loginoutrspvalue_;
  loginoutrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && configinforspvalue_ != NULL) delete configinforspvalue_;
  configinforspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && shakehandrspvalue_ != NULL) delete shakehandrspvalue_;
  shakehandrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && getsyncaddressrspvalue_ != NULL) delete getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && syncfilelistpendingrspvalue_ != NULL) delete syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && controlcmdrspvalue_ != NULL) delete controlcmdrspvalue_;
  controlcmdrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && getfileinforspvalue_ != NULL) delete getfileinforspvalue_;
  getfileinforspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && fullsyncrspvalue_ != NULL) delete fullsyncrspvalue_;
  fullsyncrspvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && activereportingrspvalue_ != NULL) delete activereportingrspvalue_;
  activereportingrspvalue_ = NULL;
}

bool Rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.Rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 iRetcode = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iretcode_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strRetMsg;
        break;
      }

      // optional string strRetMsg = 2;
      case 2: {
        if (tag == 18) {
         parse_strRetMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strretmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strretmsg().data(), this->strretmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.Rsp.strRetMsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_LoginRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
      case 3: {
        if (tag == 26) {
         parse_LoginRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_LoginoutRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
      case 4: {
        if (tag == 34) {
         parse_LoginoutRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginoutrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ConfigInfoRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
      case 5: {
        if (tag == 42) {
         parse_ConfigInfoRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configinforspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ShakehandRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
      case 6: {
        if (tag == 50) {
         parse_ShakehandRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shakehandrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_GetSyncAddressRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
      case 7: {
        if (tag == 58) {
         parse_GetSyncAddressRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsyncaddressrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SyncFileListPendingRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
      case 8: {
        if (tag == 66) {
         parse_SyncFileListPendingRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syncfilelistpendingrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ControlCMDRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
      case 9: {
        if (tag == 74) {
         parse_ControlCMDRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controlcmdrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_GetFileInfoRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
      case 10: {
        if (tag == 82) {
         parse_GetFileInfoRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfileinforspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_FullSyncRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
      case 11: {
        if (tag == 90) {
         parse_FullSyncRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fullsyncrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_ActiveReportingRspValue;
        break;
      }

      // optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
      case 12: {
        if (tag == 98) {
         parse_ActiveReportingRspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activereportingrspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.Rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.Rsp)
  return false;
#undef DO_
}

void Rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.Rsp)
  // optional int32 iRetcode = 1;
  if (this->iretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->iretcode(), output);
  }

  // optional string strRetMsg = 2;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Rsp.strRetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strretmsg(), output);
  }

  // optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
  if (this->has_loginrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->loginrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
  if (this->has_loginoutrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->loginoutrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
  if (this->has_configinforspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->configinforspvalue_, output);
  }

  // optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
  if (this->has_shakehandrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->shakehandrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
  if (this->has_getsyncaddressrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->getsyncaddressrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
  if (this->has_syncfilelistpendingrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->syncfilelistpendingrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
  if (this->has_controlcmdrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->controlcmdrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
  if (this->has_getfileinforspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->getfileinforspvalue_, output);
  }

  // optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
  if (this->has_fullsyncrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->fullsyncrspvalue_, output);
  }

  // optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
  if (this->has_activereportingrspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->activereportingrspvalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.Rsp)
}

::google::protobuf::uint8* Rsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.Rsp)
  // optional int32 iRetcode = 1;
  if (this->iretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->iretcode(), target);
  }

  // optional string strRetMsg = 2;
  if (this->strretmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strretmsg().data(), this->strretmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.Rsp.strRetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strretmsg(), target);
  }

  // optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
  if (this->has_loginrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->loginrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
  if (this->has_loginoutrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->loginoutrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
  if (this->has_configinforspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->configinforspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
  if (this->has_shakehandrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->shakehandrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
  if (this->has_getsyncaddressrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->getsyncaddressrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
  if (this->has_syncfilelistpendingrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->syncfilelistpendingrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
  if (this->has_controlcmdrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->controlcmdrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
  if (this->has_getfileinforspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->getfileinforspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
  if (this->has_fullsyncrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->fullsyncrspvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
  if (this->has_activereportingrspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->activereportingrspvalue_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.Rsp)
  return target;
}

size_t Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.Rsp)
  size_t total_size = 0;

  // optional int32 iRetcode = 1;
  if (this->iretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iretcode());
  }

  // optional string strRetMsg = 2;
  if (this->strretmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strretmsg());
  }

  // optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
  if (this->has_loginrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginrspvalue_);
  }

  // optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
  if (this->has_loginoutrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginoutrspvalue_);
  }

  // optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
  if (this->has_configinforspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->configinforspvalue_);
  }

  // optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
  if (this->has_shakehandrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shakehandrspvalue_);
  }

  // optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
  if (this->has_getsyncaddressrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getsyncaddressrspvalue_);
  }

  // optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
  if (this->has_syncfilelistpendingrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->syncfilelistpendingrspvalue_);
  }

  // optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
  if (this->has_controlcmdrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->controlcmdrspvalue_);
  }

  // optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
  if (this->has_getfileinforspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getfileinforspvalue_);
  }

  // optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
  if (this->has_fullsyncrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fullsyncrspvalue_);
  }

  // optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
  if (this->has_activereportingrspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->activereportingrspvalue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.Rsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Rsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.Rsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.Rsp)
    UnsafeMergeFrom(*source);
  }
}

void Rsp::MergeFrom(const Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.Rsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Rsp::UnsafeMergeFrom(const Rsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.iretcode() != 0) {
    set_iretcode(from.iretcode());
  }
  if (from.strretmsg().size() > 0) {

    strretmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strretmsg_);
  }
  if (from.has_loginrspvalue()) {
    mutable_loginrspvalue()->::TDFS::MESSAGE::LoginRsp::MergeFrom(from.loginrspvalue());
  }
  if (from.has_loginoutrspvalue()) {
    mutable_loginoutrspvalue()->::TDFS::MESSAGE::LoginoutRsp::MergeFrom(from.loginoutrspvalue());
  }
  if (from.has_configinforspvalue()) {
    mutable_configinforspvalue()->::TDFS::MESSAGE::ConfigInfoRsp::MergeFrom(from.configinforspvalue());
  }
  if (from.has_shakehandrspvalue()) {
    mutable_shakehandrspvalue()->::TDFS::MESSAGE::ShakehandRsp::MergeFrom(from.shakehandrspvalue());
  }
  if (from.has_getsyncaddressrspvalue()) {
    mutable_getsyncaddressrspvalue()->::TDFS::MESSAGE::GetSyncAddressRsp::MergeFrom(from.getsyncaddressrspvalue());
  }
  if (from.has_syncfilelistpendingrspvalue()) {
    mutable_syncfilelistpendingrspvalue()->::TDFS::MESSAGE::SyncFileListPendingRsp::MergeFrom(from.syncfilelistpendingrspvalue());
  }
  if (from.has_controlcmdrspvalue()) {
    mutable_controlcmdrspvalue()->::TDFS::MESSAGE::ControlCMDRsp::MergeFrom(from.controlcmdrspvalue());
  }
  if (from.has_getfileinforspvalue()) {
    mutable_getfileinforspvalue()->::TDFS::MESSAGE::GetFileInfoRsp::MergeFrom(from.getfileinforspvalue());
  }
  if (from.has_fullsyncrspvalue()) {
    mutable_fullsyncrspvalue()->::TDFS::MESSAGE::FullSyncRsp::MergeFrom(from.fullsyncrspvalue());
  }
  if (from.has_activereportingrspvalue()) {
    mutable_activereportingrspvalue()->::TDFS::MESSAGE::ActiveReportingRsp::MergeFrom(from.activereportingrspvalue());
  }
}

void Rsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp::CopyFrom(const Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.Rsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Rsp::IsInitialized() const {

  return true;
}

void Rsp::Swap(Rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp::InternalSwap(Rsp* other) {
  std::swap(iretcode_, other->iretcode_);
  strretmsg_.Swap(&other->strretmsg_);
  std::swap(loginrspvalue_, other->loginrspvalue_);
  std::swap(loginoutrspvalue_, other->loginoutrspvalue_);
  std::swap(configinforspvalue_, other->configinforspvalue_);
  std::swap(shakehandrspvalue_, other->shakehandrspvalue_);
  std::swap(getsyncaddressrspvalue_, other->getsyncaddressrspvalue_);
  std::swap(syncfilelistpendingrspvalue_, other->syncfilelistpendingrspvalue_);
  std::swap(controlcmdrspvalue_, other->controlcmdrspvalue_);
  std::swap(getfileinforspvalue_, other->getfileinforspvalue_);
  std::swap(fullsyncrspvalue_, other->fullsyncrspvalue_);
  std::swap(activereportingrspvalue_, other->activereportingrspvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Rsp_descriptor_;
  metadata.reflection = Rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rsp

// optional int32 iRetcode = 1;
void Rsp::clear_iretcode() {
  iretcode_ = 0;
}
::google::protobuf::int32 Rsp::iretcode() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.iRetcode)
  return iretcode_;
}
void Rsp::set_iretcode(::google::protobuf::int32 value) {
  
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Rsp.iRetcode)
}

// optional string strRetMsg = 2;
void Rsp::clear_strretmsg() {
  strretmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Rsp::strretmsg() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.strRetMsg)
  return strretmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Rsp::set_strretmsg(const ::std::string& value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.Rsp.strRetMsg)
}
void Rsp::set_strretmsg(const char* value) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.Rsp.strRetMsg)
}
void Rsp::set_strretmsg(const char* value, size_t size) {
  
  strretmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.Rsp.strRetMsg)
}
::std::string* Rsp::mutable_strretmsg() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.strRetMsg)
  return strretmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Rsp::release_strretmsg() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.strRetMsg)
  
  return strretmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Rsp::set_allocated_strretmsg(::std::string* strretmsg) {
  if (strretmsg != NULL) {
    
  } else {
    
  }
  strretmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strretmsg);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.strRetMsg)
}

// optional .TDFS.MESSAGE.LoginRsp LoginRspValue = 3;
bool Rsp::has_loginrspvalue() const {
  return this != internal_default_instance() && loginrspvalue_ != NULL;
}
void Rsp::clear_loginrspvalue() {
  if (GetArenaNoVirtual() == NULL && loginrspvalue_ != NULL) delete loginrspvalue_;
  loginrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::LoginRsp& Rsp::loginrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.LoginRspValue)
  return loginrspvalue_ != NULL ? *loginrspvalue_
                         : *::TDFS::MESSAGE::LoginRsp::internal_default_instance();
}
::TDFS::MESSAGE::LoginRsp* Rsp::mutable_loginrspvalue() {
  
  if (loginrspvalue_ == NULL) {
    loginrspvalue_ = new ::TDFS::MESSAGE::LoginRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.LoginRspValue)
  return loginrspvalue_;
}
::TDFS::MESSAGE::LoginRsp* Rsp::release_loginrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.LoginRspValue)
  
  ::TDFS::MESSAGE::LoginRsp* temp = loginrspvalue_;
  loginrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_loginrspvalue(::TDFS::MESSAGE::LoginRsp* loginrspvalue) {
  delete loginrspvalue_;
  loginrspvalue_ = loginrspvalue;
  if (loginrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.LoginRspValue)
}

// optional .TDFS.MESSAGE.LoginoutRsp LoginoutRspValue = 4;
bool Rsp::has_loginoutrspvalue() const {
  return this != internal_default_instance() && loginoutrspvalue_ != NULL;
}
void Rsp::clear_loginoutrspvalue() {
  if (GetArenaNoVirtual() == NULL && loginoutrspvalue_ != NULL) delete loginoutrspvalue_;
  loginoutrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::LoginoutRsp& Rsp::loginoutrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.LoginoutRspValue)
  return loginoutrspvalue_ != NULL ? *loginoutrspvalue_
                         : *::TDFS::MESSAGE::LoginoutRsp::internal_default_instance();
}
::TDFS::MESSAGE::LoginoutRsp* Rsp::mutable_loginoutrspvalue() {
  
  if (loginoutrspvalue_ == NULL) {
    loginoutrspvalue_ = new ::TDFS::MESSAGE::LoginoutRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.LoginoutRspValue)
  return loginoutrspvalue_;
}
::TDFS::MESSAGE::LoginoutRsp* Rsp::release_loginoutrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.LoginoutRspValue)
  
  ::TDFS::MESSAGE::LoginoutRsp* temp = loginoutrspvalue_;
  loginoutrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_loginoutrspvalue(::TDFS::MESSAGE::LoginoutRsp* loginoutrspvalue) {
  delete loginoutrspvalue_;
  loginoutrspvalue_ = loginoutrspvalue;
  if (loginoutrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.LoginoutRspValue)
}

// optional .TDFS.MESSAGE.ConfigInfoRsp ConfigInfoRspValue = 5;
bool Rsp::has_configinforspvalue() const {
  return this != internal_default_instance() && configinforspvalue_ != NULL;
}
void Rsp::clear_configinforspvalue() {
  if (GetArenaNoVirtual() == NULL && configinforspvalue_ != NULL) delete configinforspvalue_;
  configinforspvalue_ = NULL;
}
const ::TDFS::MESSAGE::ConfigInfoRsp& Rsp::configinforspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
  return configinforspvalue_ != NULL ? *configinforspvalue_
                         : *::TDFS::MESSAGE::ConfigInfoRsp::internal_default_instance();
}
::TDFS::MESSAGE::ConfigInfoRsp* Rsp::mutable_configinforspvalue() {
  
  if (configinforspvalue_ == NULL) {
    configinforspvalue_ = new ::TDFS::MESSAGE::ConfigInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
  return configinforspvalue_;
}
::TDFS::MESSAGE::ConfigInfoRsp* Rsp::release_configinforspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
  
  ::TDFS::MESSAGE::ConfigInfoRsp* temp = configinforspvalue_;
  configinforspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_configinforspvalue(::TDFS::MESSAGE::ConfigInfoRsp* configinforspvalue) {
  delete configinforspvalue_;
  configinforspvalue_ = configinforspvalue;
  if (configinforspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ConfigInfoRspValue)
}

// optional .TDFS.MESSAGE.ShakehandRsp ShakehandRspValue = 6;
bool Rsp::has_shakehandrspvalue() const {
  return this != internal_default_instance() && shakehandrspvalue_ != NULL;
}
void Rsp::clear_shakehandrspvalue() {
  if (GetArenaNoVirtual() == NULL && shakehandrspvalue_ != NULL) delete shakehandrspvalue_;
  shakehandrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::ShakehandRsp& Rsp::shakehandrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ShakehandRspValue)
  return shakehandrspvalue_ != NULL ? *shakehandrspvalue_
                         : *::TDFS::MESSAGE::ShakehandRsp::internal_default_instance();
}
::TDFS::MESSAGE::ShakehandRsp* Rsp::mutable_shakehandrspvalue() {
  
  if (shakehandrspvalue_ == NULL) {
    shakehandrspvalue_ = new ::TDFS::MESSAGE::ShakehandRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ShakehandRspValue)
  return shakehandrspvalue_;
}
::TDFS::MESSAGE::ShakehandRsp* Rsp::release_shakehandrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ShakehandRspValue)
  
  ::TDFS::MESSAGE::ShakehandRsp* temp = shakehandrspvalue_;
  shakehandrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_shakehandrspvalue(::TDFS::MESSAGE::ShakehandRsp* shakehandrspvalue) {
  delete shakehandrspvalue_;
  shakehandrspvalue_ = shakehandrspvalue;
  if (shakehandrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ShakehandRspValue)
}

// optional .TDFS.MESSAGE.GetSyncAddressRsp GetSyncAddressRspValue = 7;
bool Rsp::has_getsyncaddressrspvalue() const {
  return this != internal_default_instance() && getsyncaddressrspvalue_ != NULL;
}
void Rsp::clear_getsyncaddressrspvalue() {
  if (GetArenaNoVirtual() == NULL && getsyncaddressrspvalue_ != NULL) delete getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::GetSyncAddressRsp& Rsp::getsyncaddressrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
  return getsyncaddressrspvalue_ != NULL ? *getsyncaddressrspvalue_
                         : *::TDFS::MESSAGE::GetSyncAddressRsp::internal_default_instance();
}
::TDFS::MESSAGE::GetSyncAddressRsp* Rsp::mutable_getsyncaddressrspvalue() {
  
  if (getsyncaddressrspvalue_ == NULL) {
    getsyncaddressrspvalue_ = new ::TDFS::MESSAGE::GetSyncAddressRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
  return getsyncaddressrspvalue_;
}
::TDFS::MESSAGE::GetSyncAddressRsp* Rsp::release_getsyncaddressrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
  
  ::TDFS::MESSAGE::GetSyncAddressRsp* temp = getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_getsyncaddressrspvalue(::TDFS::MESSAGE::GetSyncAddressRsp* getsyncaddressrspvalue) {
  delete getsyncaddressrspvalue_;
  getsyncaddressrspvalue_ = getsyncaddressrspvalue;
  if (getsyncaddressrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.GetSyncAddressRspValue)
}

// optional .TDFS.MESSAGE.SyncFileListPendingRsp SyncFileListPendingRspValue = 8;
bool Rsp::has_syncfilelistpendingrspvalue() const {
  return this != internal_default_instance() && syncfilelistpendingrspvalue_ != NULL;
}
void Rsp::clear_syncfilelistpendingrspvalue() {
  if (GetArenaNoVirtual() == NULL && syncfilelistpendingrspvalue_ != NULL) delete syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::SyncFileListPendingRsp& Rsp::syncfilelistpendingrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
  return syncfilelistpendingrspvalue_ != NULL ? *syncfilelistpendingrspvalue_
                         : *::TDFS::MESSAGE::SyncFileListPendingRsp::internal_default_instance();
}
::TDFS::MESSAGE::SyncFileListPendingRsp* Rsp::mutable_syncfilelistpendingrspvalue() {
  
  if (syncfilelistpendingrspvalue_ == NULL) {
    syncfilelistpendingrspvalue_ = new ::TDFS::MESSAGE::SyncFileListPendingRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
  return syncfilelistpendingrspvalue_;
}
::TDFS::MESSAGE::SyncFileListPendingRsp* Rsp::release_syncfilelistpendingrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
  
  ::TDFS::MESSAGE::SyncFileListPendingRsp* temp = syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_syncfilelistpendingrspvalue(::TDFS::MESSAGE::SyncFileListPendingRsp* syncfilelistpendingrspvalue) {
  delete syncfilelistpendingrspvalue_;
  syncfilelistpendingrspvalue_ = syncfilelistpendingrspvalue;
  if (syncfilelistpendingrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.SyncFileListPendingRspValue)
}

// optional .TDFS.MESSAGE.ControlCMDRsp ControlCMDRspValue = 9;
bool Rsp::has_controlcmdrspvalue() const {
  return this != internal_default_instance() && controlcmdrspvalue_ != NULL;
}
void Rsp::clear_controlcmdrspvalue() {
  if (GetArenaNoVirtual() == NULL && controlcmdrspvalue_ != NULL) delete controlcmdrspvalue_;
  controlcmdrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::ControlCMDRsp& Rsp::controlcmdrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
  return controlcmdrspvalue_ != NULL ? *controlcmdrspvalue_
                         : *::TDFS::MESSAGE::ControlCMDRsp::internal_default_instance();
}
::TDFS::MESSAGE::ControlCMDRsp* Rsp::mutable_controlcmdrspvalue() {
  
  if (controlcmdrspvalue_ == NULL) {
    controlcmdrspvalue_ = new ::TDFS::MESSAGE::ControlCMDRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
  return controlcmdrspvalue_;
}
::TDFS::MESSAGE::ControlCMDRsp* Rsp::release_controlcmdrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
  
  ::TDFS::MESSAGE::ControlCMDRsp* temp = controlcmdrspvalue_;
  controlcmdrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_controlcmdrspvalue(::TDFS::MESSAGE::ControlCMDRsp* controlcmdrspvalue) {
  delete controlcmdrspvalue_;
  controlcmdrspvalue_ = controlcmdrspvalue;
  if (controlcmdrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ControlCMDRspValue)
}

// optional .TDFS.MESSAGE.GetFileInfoRsp GetFileInfoRspValue = 10;
bool Rsp::has_getfileinforspvalue() const {
  return this != internal_default_instance() && getfileinforspvalue_ != NULL;
}
void Rsp::clear_getfileinforspvalue() {
  if (GetArenaNoVirtual() == NULL && getfileinforspvalue_ != NULL) delete getfileinforspvalue_;
  getfileinforspvalue_ = NULL;
}
const ::TDFS::MESSAGE::GetFileInfoRsp& Rsp::getfileinforspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
  return getfileinforspvalue_ != NULL ? *getfileinforspvalue_
                         : *::TDFS::MESSAGE::GetFileInfoRsp::internal_default_instance();
}
::TDFS::MESSAGE::GetFileInfoRsp* Rsp::mutable_getfileinforspvalue() {
  
  if (getfileinforspvalue_ == NULL) {
    getfileinforspvalue_ = new ::TDFS::MESSAGE::GetFileInfoRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
  return getfileinforspvalue_;
}
::TDFS::MESSAGE::GetFileInfoRsp* Rsp::release_getfileinforspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
  
  ::TDFS::MESSAGE::GetFileInfoRsp* temp = getfileinforspvalue_;
  getfileinforspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_getfileinforspvalue(::TDFS::MESSAGE::GetFileInfoRsp* getfileinforspvalue) {
  delete getfileinforspvalue_;
  getfileinforspvalue_ = getfileinforspvalue;
  if (getfileinforspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.GetFileInfoRspValue)
}

// optional .TDFS.MESSAGE.FullSyncRsp FullSyncRspValue = 11;
bool Rsp::has_fullsyncrspvalue() const {
  return this != internal_default_instance() && fullsyncrspvalue_ != NULL;
}
void Rsp::clear_fullsyncrspvalue() {
  if (GetArenaNoVirtual() == NULL && fullsyncrspvalue_ != NULL) delete fullsyncrspvalue_;
  fullsyncrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::FullSyncRsp& Rsp::fullsyncrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.FullSyncRspValue)
  return fullsyncrspvalue_ != NULL ? *fullsyncrspvalue_
                         : *::TDFS::MESSAGE::FullSyncRsp::internal_default_instance();
}
::TDFS::MESSAGE::FullSyncRsp* Rsp::mutable_fullsyncrspvalue() {
  
  if (fullsyncrspvalue_ == NULL) {
    fullsyncrspvalue_ = new ::TDFS::MESSAGE::FullSyncRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.FullSyncRspValue)
  return fullsyncrspvalue_;
}
::TDFS::MESSAGE::FullSyncRsp* Rsp::release_fullsyncrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.FullSyncRspValue)
  
  ::TDFS::MESSAGE::FullSyncRsp* temp = fullsyncrspvalue_;
  fullsyncrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_fullsyncrspvalue(::TDFS::MESSAGE::FullSyncRsp* fullsyncrspvalue) {
  delete fullsyncrspvalue_;
  fullsyncrspvalue_ = fullsyncrspvalue;
  if (fullsyncrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.FullSyncRspValue)
}

// optional .TDFS.MESSAGE.ActiveReportingRsp ActiveReportingRspValue = 12;
bool Rsp::has_activereportingrspvalue() const {
  return this != internal_default_instance() && activereportingrspvalue_ != NULL;
}
void Rsp::clear_activereportingrspvalue() {
  if (GetArenaNoVirtual() == NULL && activereportingrspvalue_ != NULL) delete activereportingrspvalue_;
  activereportingrspvalue_ = NULL;
}
const ::TDFS::MESSAGE::ActiveReportingRsp& Rsp::activereportingrspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
  return activereportingrspvalue_ != NULL ? *activereportingrspvalue_
                         : *::TDFS::MESSAGE::ActiveReportingRsp::internal_default_instance();
}
::TDFS::MESSAGE::ActiveReportingRsp* Rsp::mutable_activereportingrspvalue() {
  
  if (activereportingrspvalue_ == NULL) {
    activereportingrspvalue_ = new ::TDFS::MESSAGE::ActiveReportingRsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
  return activereportingrspvalue_;
}
::TDFS::MESSAGE::ActiveReportingRsp* Rsp::release_activereportingrspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
  
  ::TDFS::MESSAGE::ActiveReportingRsp* temp = activereportingrspvalue_;
  activereportingrspvalue_ = NULL;
  return temp;
}
void Rsp::set_allocated_activereportingrspvalue(::TDFS::MESSAGE::ActiveReportingRsp* activereportingrspvalue) {
  delete activereportingrspvalue_;
  activereportingrspvalue_ = activereportingrspvalue;
  if (activereportingrspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.Rsp.ActiveReportingRspValue)
}

inline const Rsp* Rsp::internal_default_instance() {
  return &Rsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncMessage::kTypeFieldNumber;
const int SyncMessage::kUiMsgSeqFieldNumber;
const int SyncMessage::kStrSIDFieldNumber;
const int SyncMessage::kReqValueFieldNumber;
const int SyncMessage::kRspValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncMessage::SyncMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TDFS_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TDFS.MESSAGE.SyncMessage)
}

void SyncMessage::InitAsDefaultInstance() {
  reqvalue_ = const_cast< ::TDFS::MESSAGE::Req*>(
      ::TDFS::MESSAGE::Req::internal_default_instance());
  rspvalue_ = const_cast< ::TDFS::MESSAGE::Rsp*>(
      ::TDFS::MESSAGE::Rsp::internal_default_instance());
}

SyncMessage::SyncMessage(const SyncMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TDFS.MESSAGE.SyncMessage)
}

void SyncMessage::SharedCtor() {
  strsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqvalue_ = NULL;
  rspvalue_ = NULL;
  ::memset(&uimsgseq_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uimsgseq_) + sizeof(type_));
  _cached_size_ = 0;
}

SyncMessage::~SyncMessage() {
  // @@protoc_insertion_point(destructor:TDFS.MESSAGE.SyncMessage)
  SharedDtor();
}

void SyncMessage::SharedDtor() {
  strsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SyncMessage_default_instance_.get()) {
    delete reqvalue_;
    delete rspvalue_;
  }
}

void SyncMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncMessage_descriptor_;
}

const SyncMessage& SyncMessage::default_instance() {
  protobuf_InitDefaults_TDFS_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SyncMessage> SyncMessage_default_instance_;

SyncMessage* SyncMessage::New(::google::protobuf::Arena* arena) const {
  SyncMessage* n = new SyncMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:TDFS.MESSAGE.SyncMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SyncMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SyncMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uimsgseq_, type_);
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool SyncMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TDFS.MESSAGE.SyncMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TDFS.MESSAGE.MsgType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TDFS::MESSAGE::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uiMsgSeq;
        break;
      }

      // optional uint64 uiMsgSeq = 2;
      case 2: {
        if (tag == 16) {
         parse_uiMsgSeq:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uimsgseq_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_strSID;
        break;
      }

      // optional string strSID = 3;
      case 3: {
        if (tag == 26) {
         parse_strSID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsid().data(), this->strsid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TDFS.MESSAGE.SyncMessage.strSID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ReqValue;
        break;
      }

      // optional .TDFS.MESSAGE.Req ReqValue = 4;
      case 4: {
        if (tag == 34) {
         parse_ReqValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_RspValue;
        break;
      }

      // optional .TDFS.MESSAGE.Rsp RspValue = 5;
      case 5: {
        if (tag == 42) {
         parse_RspValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rspvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TDFS.MESSAGE.SyncMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TDFS.MESSAGE.SyncMessage)
  return false;
#undef DO_
}

void SyncMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TDFS.MESSAGE.SyncMessage)
  // optional .TDFS.MESSAGE.MsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uimsgseq(), output);
  }

  // optional string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.SyncMessage.strSID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strsid(), output);
  }

  // optional .TDFS.MESSAGE.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reqvalue_, output);
  }

  // optional .TDFS.MESSAGE.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rspvalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:TDFS.MESSAGE.SyncMessage)
}

::google::protobuf::uint8* SyncMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TDFS.MESSAGE.SyncMessage)
  // optional .TDFS.MESSAGE.MsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uimsgseq(), target);
  }

  // optional string strSID = 3;
  if (this->strsid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsid().data(), this->strsid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TDFS.MESSAGE.SyncMessage.strSID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strsid(), target);
  }

  // optional .TDFS.MESSAGE.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reqvalue_, false, target);
  }

  // optional .TDFS.MESSAGE.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rspvalue_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TDFS.MESSAGE.SyncMessage)
  return target;
}

size_t SyncMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TDFS.MESSAGE.SyncMessage)
  size_t total_size = 0;

  // optional .TDFS.MESSAGE.MsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint64 uiMsgSeq = 2;
  if (this->uimsgseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uimsgseq());
  }

  // optional string strSID = 3;
  if (this->strsid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsid());
  }

  // optional .TDFS.MESSAGE.Req ReqValue = 4;
  if (this->has_reqvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqvalue_);
  }

  // optional .TDFS.MESSAGE.Rsp RspValue = 5;
  if (this->has_rspvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rspvalue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TDFS.MESSAGE.SyncMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SyncMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TDFS.MESSAGE.SyncMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TDFS.MESSAGE.SyncMessage)
    UnsafeMergeFrom(*source);
  }
}

void SyncMessage::MergeFrom(const SyncMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TDFS.MESSAGE.SyncMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SyncMessage::UnsafeMergeFrom(const SyncMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.uimsgseq() != 0) {
    set_uimsgseq(from.uimsgseq());
  }
  if (from.strsid().size() > 0) {

    strsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsid_);
  }
  if (from.has_reqvalue()) {
    mutable_reqvalue()->::TDFS::MESSAGE::Req::MergeFrom(from.reqvalue());
  }
  if (from.has_rspvalue()) {
    mutable_rspvalue()->::TDFS::MESSAGE::Rsp::MergeFrom(from.rspvalue());
  }
}

void SyncMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TDFS.MESSAGE.SyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncMessage::CopyFrom(const SyncMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TDFS.MESSAGE.SyncMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SyncMessage::IsInitialized() const {

  return true;
}

void SyncMessage::Swap(SyncMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncMessage::InternalSwap(SyncMessage* other) {
  std::swap(type_, other->type_);
  std::swap(uimsgseq_, other->uimsgseq_);
  strsid_.Swap(&other->strsid_);
  std::swap(reqvalue_, other->reqvalue_);
  std::swap(rspvalue_, other->rspvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncMessage_descriptor_;
  metadata.reflection = SyncMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncMessage

// optional .TDFS.MESSAGE.MsgType type = 1;
void SyncMessage::clear_type() {
  type_ = 0;
}
::TDFS::MESSAGE::MsgType SyncMessage::type() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.type)
  return static_cast< ::TDFS::MESSAGE::MsgType >(type_);
}
void SyncMessage::set_type(::TDFS::MESSAGE::MsgType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.SyncMessage.type)
}

// optional uint64 uiMsgSeq = 2;
void SyncMessage::clear_uimsgseq() {
  uimsgseq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SyncMessage::uimsgseq() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.uiMsgSeq)
  return uimsgseq_;
}
void SyncMessage::set_uimsgseq(::google::protobuf::uint64 value) {
  
  uimsgseq_ = value;
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.SyncMessage.uiMsgSeq)
}

// optional string strSID = 3;
void SyncMessage::clear_strsid() {
  strsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SyncMessage::strsid() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.strSID)
  return strsid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SyncMessage::set_strsid(const ::std::string& value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TDFS.MESSAGE.SyncMessage.strSID)
}
void SyncMessage::set_strsid(const char* value) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TDFS.MESSAGE.SyncMessage.strSID)
}
void SyncMessage::set_strsid(const char* value, size_t size) {
  
  strsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TDFS.MESSAGE.SyncMessage.strSID)
}
::std::string* SyncMessage::mutable_strsid() {
  
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncMessage.strSID)
  return strsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SyncMessage::release_strsid() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.SyncMessage.strSID)
  
  return strsid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SyncMessage::set_allocated_strsid(::std::string* strsid) {
  if (strsid != NULL) {
    
  } else {
    
  }
  strsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsid);
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.SyncMessage.strSID)
}

// optional .TDFS.MESSAGE.Req ReqValue = 4;
bool SyncMessage::has_reqvalue() const {
  return this != internal_default_instance() && reqvalue_ != NULL;
}
void SyncMessage::clear_reqvalue() {
  if (GetArenaNoVirtual() == NULL && reqvalue_ != NULL) delete reqvalue_;
  reqvalue_ = NULL;
}
const ::TDFS::MESSAGE::Req& SyncMessage::reqvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.ReqValue)
  return reqvalue_ != NULL ? *reqvalue_
                         : *::TDFS::MESSAGE::Req::internal_default_instance();
}
::TDFS::MESSAGE::Req* SyncMessage::mutable_reqvalue() {
  
  if (reqvalue_ == NULL) {
    reqvalue_ = new ::TDFS::MESSAGE::Req;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncMessage.ReqValue)
  return reqvalue_;
}
::TDFS::MESSAGE::Req* SyncMessage::release_reqvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.SyncMessage.ReqValue)
  
  ::TDFS::MESSAGE::Req* temp = reqvalue_;
  reqvalue_ = NULL;
  return temp;
}
void SyncMessage::set_allocated_reqvalue(::TDFS::MESSAGE::Req* reqvalue) {
  delete reqvalue_;
  reqvalue_ = reqvalue;
  if (reqvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.SyncMessage.ReqValue)
}

// optional .TDFS.MESSAGE.Rsp RspValue = 5;
bool SyncMessage::has_rspvalue() const {
  return this != internal_default_instance() && rspvalue_ != NULL;
}
void SyncMessage::clear_rspvalue() {
  if (GetArenaNoVirtual() == NULL && rspvalue_ != NULL) delete rspvalue_;
  rspvalue_ = NULL;
}
const ::TDFS::MESSAGE::Rsp& SyncMessage::rspvalue() const {
  // @@protoc_insertion_point(field_get:TDFS.MESSAGE.SyncMessage.RspValue)
  return rspvalue_ != NULL ? *rspvalue_
                         : *::TDFS::MESSAGE::Rsp::internal_default_instance();
}
::TDFS::MESSAGE::Rsp* SyncMessage::mutable_rspvalue() {
  
  if (rspvalue_ == NULL) {
    rspvalue_ = new ::TDFS::MESSAGE::Rsp;
  }
  // @@protoc_insertion_point(field_mutable:TDFS.MESSAGE.SyncMessage.RspValue)
  return rspvalue_;
}
::TDFS::MESSAGE::Rsp* SyncMessage::release_rspvalue() {
  // @@protoc_insertion_point(field_release:TDFS.MESSAGE.SyncMessage.RspValue)
  
  ::TDFS::MESSAGE::Rsp* temp = rspvalue_;
  rspvalue_ = NULL;
  return temp;
}
void SyncMessage::set_allocated_rspvalue(::TDFS::MESSAGE::Rsp* rspvalue) {
  delete rspvalue_;
  rspvalue_ = rspvalue;
  if (rspvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TDFS.MESSAGE.SyncMessage.RspValue)
}

inline const SyncMessage* SyncMessage::internal_default_instance() {
  return &SyncMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MESSAGE
}  // namespace TDFS

// @@protoc_insertion_point(global_scope)
